{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0","program":"C:\\Users\\milla\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","naga","--edition=2018","C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codespan-reporting\"","--cfg","feature=\"default\"","--cfg","feature=\"hexf-parse\"","--cfg","feature=\"hlsl-out\"","--cfg","feature=\"span\"","--cfg","feature=\"spirv\"","--cfg","feature=\"spv-out\"","--cfg","feature=\"unicode-xid\"","--cfg","feature=\"validate\"","--cfg","feature=\"wgsl-in\"","-C","metadata=015d9e59891e2639","-C","extra-filename=-015d9e59891e2639","--out-dir","c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps","--extern","bit_set=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libbit_set-570fb9f29456036d.rmeta","--extern","bitflags=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libbitflags-76ea738380d1bede.rmeta","--extern","codespan_reporting=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libcodespan_reporting-0bf401927d69af1e.rmeta","--extern","hexf_parse=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libhexf_parse-854955cdba2d0cb2.rmeta","--extern","indexmap=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libindexmap-d08364dd2edd3419.rmeta","--extern","log=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\liblog-b13d406e2675f718.rmeta","--extern","num_traits=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libnum_traits-38693de2eacc0864.rmeta","--extern","rustc_hash=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\librustc_hash-b07a466b7da984e1.rmeta","--extern","spirv=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libspirv-a77c5d191d46b119.rmeta","--extern","termcolor=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libtermcolor-950affca317075da.rmeta","--extern","thiserror=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libthiserror-ae3c7f882d6d9e31.rmeta","--extern","unicode_xid=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libunicode_xid-d3508bc9c5b8f25f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\milla\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libnaga-015d9e59891e2639.rmeta"},"prelude":{"crate_id":{"name":"naga","disambiguator":[1495914536949233777,0]},"crate_root":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src","external_crates":[{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","num":14,"id":{"name":"indexmap","disambiguator":[2633777168858862677,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","num":15,"id":{"name":"hashbrown","disambiguator":[1777076437515527078,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","num":16,"id":{"name":"thiserror","disambiguator":[9794464102802447438,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","num":17,"id":{"name":"thiserror_impl","disambiguator":[5220654746792140983,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\block.rs","num":18,"id":{"name":"spirv","disambiguator":[4360305446741600677,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","num":19,"id":{"name":"bitflags","disambiguator":[906870646478561945,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\block.rs","num":20,"id":{"name":"num_traits","disambiguator":[15441111099474508518,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","num":21,"id":{"name":"codespan_reporting","disambiguator":[16297561660827841575,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","num":22,"id":{"name":"termcolor","disambiguator":[12611209373169458971,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","num":23,"id":{"name":"winapi_util","disambiguator":[13143596211423852197,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","num":24,"id":{"name":"winapi","disambiguator":[16188252046568888056,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","num":25,"id":{"name":"unicode_width","disambiguator":[14335795978369859358,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","num":26,"id":{"name":"bit_set","disambiguator":[5524467543376510683,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","num":27,"id":{"name":"bit_vec","disambiguator":[2850230538344163425,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\writer.rs","num":28,"id":{"name":"log","disambiguator":[2429338322379649461,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\writer.rs","num":29,"id":{"name":"cfg_if","disambiguator":[10169579803109374085,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\lexer.rs","num":30,"id":{"name":"unicode_xid","disambiguator":[11210335675342950074,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","num":31,"id":{"name":"hexf_parse","disambiguator":[3199287205578793340,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","num":32,"id":{"name":"rustc_hash","disambiguator":[17283282650889832168,0]}}],"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":0,"byte_end":61198,"line_start":1,"line_end":1697,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":3196},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":290983,"byte_end":290993,"line_start":17,"line_end":17,"column_start":16,"column_end":26},"alias_span":null,"name":"Capability","value":"","parent":{"krate":0,"index":588}},{"kind":"Use","ref_id":{"krate":0,"index":4386},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862165,"byte_end":862184,"line_start":13,"line_end":13,"column_start":17,"column_end":36},"alias_span":null,"name":"BoundsCheckPolicies","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":4365},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862186,"byte_end":862203,"line_start":13,"line_end":13,"column_start":38,"column_end":55},"alias_span":null,"name":"BoundsCheckPolicy","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":4438},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862205,"byte_end":862220,"line_start":13,"line_end":13,"column_start":57,"column_end":72},"alias_span":null,"name":"IndexableLength","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":4420},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862222,"byte_end":862242,"line_start":13,"line_end":13,"column_start":74,"column_end":94},"alias_span":null,"name":"IndexableLengthError","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":4446},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862264,"byte_end":862273,"line_start":14,"line_end":14,"column_start":20,"column_end":29},"alias_span":null,"name":"Alignment","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":4546},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862275,"byte_end":862286,"line_start":14,"line_end":14,"column_start":31,"column_end":42},"alias_span":null,"name":"LayoutError","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":4489},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862288,"byte_end":862304,"line_start":14,"line_end":14,"column_start":44,"column_end":60},"alias_span":null,"name":"LayoutErrorInner","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":4483},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862306,"byte_end":862314,"line_start":14,"line_end":14,"column_start":62,"column_end":70},"alias_span":null,"name":"Layouter","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":4468},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862316,"byte_end":862326,"line_start":14,"line_end":14,"column_start":72,"column_end":82},"alias_span":null,"name":"TypeLayout","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":2308},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862345,"byte_end":862360,"line_start":15,"line_end":15,"column_start":17,"column_end":32},"alias_span":null,"name":"EntryPointIndex","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":4549},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862362,"byte_end":862369,"line_start":15,"line_end":15,"column_start":34,"column_end":41},"alias_span":null,"name":"NameKey","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":4597},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862371,"byte_end":862376,"line_start":15,"line_end":15,"column_start":43,"column_end":48},"alias_span":null,"name":"Namer","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":2331},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862399,"byte_end":862419,"line_start":16,"line_end":16,"column_start":21,"column_end":41},"alias_span":null,"name":"ensure_block_returns","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":2363},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862440,"byte_end":862454,"line_start":17,"line_end":17,"column_start":20,"column_end":34},"alias_span":null,"name":"ResolveContext","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":4616},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862456,"byte_end":862468,"line_start":17,"line_end":17,"column_start":36,"column_end":48},"alias_span":null,"name":"ResolveError","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":4603},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862470,"byte_end":862484,"line_start":17,"line_end":17,"column_start":50,"column_end":64},"alias_span":null,"name":"TypeResolution","value":"","parent":{"krate":0,"index":2201}},{"kind":"Use","ref_id":{"krate":0,"index":5029},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":969812,"byte_end":969826,"line_start":27,"line_end":27,"column_start":20,"column_end":34},"alias_span":null,"name":"ExpressionInfo","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":5077},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":969828,"byte_end":969840,"line_start":27,"line_end":27,"column_start":36,"column_end":48},"alias_span":null,"name":"FunctionInfo","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4915},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":969842,"byte_end":969851,"line_start":27,"line_end":27,"column_start":50,"column_end":59},"alias_span":null,"name":"GlobalUse","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4816},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":969853,"byte_end":969863,"line_start":27,"line_end":27,"column_start":61,"column_end":71},"alias_span":null,"name":"Uniformity","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":4719},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":969865,"byte_end":969887,"line_start":27,"line_end":27,"column_start":73,"column_end":95},"alias_span":null,"name":"UniformityRequirements","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":5104},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":969907,"byte_end":969919,"line_start":28,"line_end":28,"column_start":18,"column_end":30},"alias_span":null,"name":"ComposeError","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":5136},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":969941,"byte_end":969956,"line_start":29,"line_end":29,"column_start":21,"column_end":36},"alias_span":null,"name":"ExpressionError","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":5314},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":969977,"byte_end":969986,"line_start":30,"line_end":30,"column_start":20,"column_end":29},"alias_span":null,"name":"CallError","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":5392},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":969988,"byte_end":970001,"line_start":30,"line_end":30,"column_start":31,"column_end":44},"alias_span":null,"name":"FunctionError","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":5379},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":970003,"byte_end":970021,"line_start":30,"line_end":30,"column_start":46,"column_end":64},"alias_span":null,"name":"LocalVariableError","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":5663},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":970044,"byte_end":970059,"line_start":31,"line_end":31,"column_start":21,"column_end":36},"alias_span":null,"name":"EntryPointError","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":5583},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":970061,"byte_end":970080,"line_start":31,"line_end":31,"column_start":38,"column_end":57},"alias_span":null,"name":"GlobalVariableError","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":5619},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":970082,"byte_end":970094,"line_start":31,"line_end":31,"column_start":59,"column_end":71},"alias_span":null,"name":"VaryingError","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":5832},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":970114,"byte_end":970126,"line_start":32,"line_end":32,"column_start":18,"column_end":30},"alias_span":null,"name":"Disalignment","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":5866},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":970128,"byte_end":970137,"line_start":32,"line_end":32,"column_start":32,"column_end":41},"alias_span":null,"name":"TypeError","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":5715},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":970139,"byte_end":970148,"line_start":32,"line_end":32,"column_start":43,"column_end":52},"alias_span":null,"name":"TypeFlags","value":"","parent":{"krate":0,"index":2603}},{"kind":"Use","ref_id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9391,"byte_end":9396,"line_start":212,"line_end":212,"column_start":24,"column_end":29},"alias_span":null,"name":"Arena","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9398,"byte_end":9404,"line_start":212,"line_end":212,"column_start":31,"column_end":37},"alias_span":null,"name":"Handle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9406,"byte_end":9411,"line_start":212,"line_end":212,"column_start":39,"column_end":44},"alias_span":null,"name":"Range","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9413,"byte_end":9424,"line_start":212,"line_end":212,"column_start":46,"column_end":57},"alias_span":null,"name":"UniqueArena","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4692},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9450,"byte_end":9464,"line_start":214,"line_end":214,"column_start":23,"column_end":37},"alias_span":null,"name":"SourceLocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4678},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9466,"byte_end":9470,"line_start":214,"line_end":214,"column_start":39,"column_end":43},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2534},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9472,"byte_end":9483,"line_start":214,"line_end":214,"column_start":45,"column_end":56},"alias_span":null,"name":"SpanContext","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4709},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9485,"byte_end":9493,"line_start":214,"line_end":214,"column_start":58,"column_end":66},"alias_span":null,"name":"WithSpan","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3960},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":48038,"byte_end":48043,"line_start":1368,"line_end":1368,"column_start":16,"column_end":21},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":0,"byte_end":61198,"line_start":1,"line_end":1697,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":158},{"krate":0,"index":1452},{"krate":0,"index":1500},{"krate":0,"index":2198},{"krate":0,"index":2201},{"krate":0,"index":2501},{"krate":0,"index":2603},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3150},{"krate":0,"index":3153},{"krate":0,"index":3156},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3163},{"krate":0,"index":3166},{"krate":0,"index":3169},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3176},{"krate":0,"index":3178},{"krate":0,"index":6368},{"krate":0,"index":6370},{"krate":0,"index":6372},{"krate":0,"index":6373},{"krate":0,"index":6375},{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6381},{"krate":0,"index":6383},{"krate":0,"index":6384},{"krate":0,"index":6387},{"krate":0,"index":6389},{"krate":0,"index":6396},{"krate":0,"index":6398},{"krate":0,"index":6399},{"krate":0,"index":6401},{"krate":0,"index":6404},{"krate":0,"index":6405},{"krate":0,"index":6407},{"krate":0,"index":6409},{"krate":0,"index":6410},{"krate":0,"index":6412},{"krate":0,"index":6414},{"krate":0,"index":6421},{"krate":0,"index":6423},{"krate":0,"index":6424},{"krate":0,"index":6426},{"krate":0,"index":6429},{"krate":0,"index":6430},{"krate":0,"index":6432},{"krate":0,"index":6434},{"krate":0,"index":6435},{"krate":0,"index":6437},{"krate":0,"index":6439},{"krate":0,"index":6454},{"krate":0,"index":6456},{"krate":0,"index":6457},{"krate":0,"index":6459},{"krate":0,"index":6462},{"krate":0,"index":6463},{"krate":0,"index":6465},{"krate":0,"index":6467},{"krate":0,"index":6468},{"krate":0,"index":6471},{"krate":0,"index":6473},{"krate":0,"index":6514},{"krate":0,"index":6516},{"krate":0,"index":6517},{"krate":0,"index":6519},{"krate":0,"index":6522},{"krate":0,"index":6523},{"krate":0,"index":6525},{"krate":0,"index":6527},{"krate":0,"index":6528},{"krate":0,"index":6531},{"krate":0,"index":3179},{"krate":0,"index":6533},{"krate":0,"index":6543},{"krate":0,"index":6545},{"krate":0,"index":6546},{"krate":0,"index":6548},{"krate":0,"index":6551},{"krate":0,"index":6552},{"krate":0,"index":6554},{"krate":0,"index":6556},{"krate":0,"index":6557},{"krate":0,"index":6559},{"krate":0,"index":6561},{"krate":0,"index":6570},{"krate":0,"index":6572},{"krate":0,"index":6573},{"krate":0,"index":6575},{"krate":0,"index":6578},{"krate":0,"index":6579},{"krate":0,"index":6581},{"krate":0,"index":6583},{"krate":0,"index":6584},{"krate":0,"index":6586},{"krate":0,"index":6588},{"krate":0,"index":6594},{"krate":0,"index":6596},{"krate":0,"index":6597},{"krate":0,"index":6599},{"krate":0,"index":6602},{"krate":0,"index":6603},{"krate":0,"index":6605},{"krate":0,"index":6607},{"krate":0,"index":6608},{"krate":0,"index":6611},{"krate":0,"index":6613},{"krate":0,"index":6620},{"krate":0,"index":6622},{"krate":0,"index":6623},{"krate":0,"index":6625},{"krate":0,"index":6628},{"krate":0,"index":6629},{"krate":0,"index":6631},{"krate":0,"index":6633},{"krate":0,"index":6634},{"krate":0,"index":6636},{"krate":0,"index":6638},{"krate":0,"index":6645},{"krate":0,"index":6647},{"krate":0,"index":6648},{"krate":0,"index":6650},{"krate":0,"index":6653},{"krate":0,"index":6654},{"krate":0,"index":6656},{"krate":0,"index":6658},{"krate":0,"index":6659},{"krate":0,"index":6661},{"krate":0,"index":6663},{"krate":0,"index":6668},{"krate":0,"index":6670},{"krate":0,"index":6672},{"krate":0,"index":6673},{"krate":0,"index":6675},{"krate":0,"index":6678},{"krate":0,"index":6679},{"krate":0,"index":6682},{"krate":0,"index":6691},{"krate":0,"index":6693},{"krate":0,"index":6694},{"krate":0,"index":6696},{"krate":0,"index":6699},{"krate":0,"index":6700},{"krate":0,"index":6702},{"krate":0,"index":6704},{"krate":0,"index":6705},{"krate":0,"index":6707},{"krate":0,"index":6711},{"krate":0,"index":6713},{"krate":0,"index":6714},{"krate":0,"index":6715},{"krate":0,"index":6718},{"krate":0,"index":6719},{"krate":0,"index":6721},{"krate":0,"index":6723},{"krate":0,"index":6725},{"krate":0,"index":6727},{"krate":0,"index":6709},{"krate":0,"index":6730},{"krate":0,"index":6736},{"krate":0,"index":6738},{"krate":0,"index":6740},{"krate":0,"index":6742},{"krate":0,"index":6744},{"krate":0,"index":6766},{"krate":0,"index":6769},{"krate":0,"index":6771},{"krate":0,"index":6774},{"krate":0,"index":6776},{"krate":0,"index":6779},{"krate":0,"index":6781},{"krate":0,"index":6784},{"krate":0,"index":6786},{"krate":0,"index":6789},{"krate":0,"index":6792},{"krate":0,"index":6803},{"krate":0,"index":6868},{"krate":0,"index":6870},{"krate":0,"index":6871},{"krate":0,"index":6873},{"krate":0,"index":6876},{"krate":0,"index":6877},{"krate":0,"index":6879},{"krate":0,"index":6881},{"krate":0,"index":6882},{"krate":0,"index":6884},{"krate":0,"index":6886},{"krate":0,"index":6895},{"krate":0,"index":6897},{"krate":0,"index":6898},{"krate":0,"index":6900},{"krate":0,"index":6903},{"krate":0,"index":6904},{"krate":0,"index":6906},{"krate":0,"index":6908},{"krate":0,"index":6909},{"krate":0,"index":6912},{"krate":0,"index":6914},{"krate":0,"index":6917},{"krate":0,"index":6919},{"krate":0,"index":6920},{"krate":0,"index":6922},{"krate":0,"index":6925},{"krate":0,"index":6926},{"krate":0,"index":6929},{"krate":0,"index":6968},{"krate":0,"index":6970},{"krate":0,"index":6971},{"krate":0,"index":6973},{"krate":0,"index":6976},{"krate":0,"index":6977},{"krate":0,"index":6980},{"krate":0,"index":6984},{"krate":0,"index":6986},{"krate":0,"index":6987},{"krate":0,"index":6990},{"krate":0,"index":7003},{"krate":0,"index":7005},{"krate":0,"index":7007},{"krate":0,"index":7008},{"krate":0,"index":7010},{"krate":0,"index":7017},{"krate":0,"index":7019},{"krate":0,"index":7021},{"krate":0,"index":7022},{"krate":0,"index":7025},{"krate":0,"index":7033},{"krate":0,"index":7035},{"krate":0,"index":7037},{"krate":0,"index":7038},{"krate":0,"index":7040},{"krate":0,"index":7041},{"krate":0,"index":7044},{"krate":0,"index":7047},{"krate":0,"index":7050},{"krate":0,"index":7052},{"krate":0,"index":7054},{"krate":0,"index":7055},{"krate":0,"index":7057},{"krate":0,"index":7060},{"krate":0,"index":7062},{"krate":0,"index":7063},{"krate":0,"index":7066},{"krate":0,"index":7068},{"krate":0,"index":7074},{"krate":0,"index":7076},{"krate":0,"index":7078},{"krate":0,"index":7079},{"krate":0,"index":7082},{"krate":0,"index":7086},{"krate":0,"index":7088},{"krate":0,"index":7090},{"krate":0,"index":7095},{"krate":0,"index":7097},{"krate":0,"index":7098},{"krate":0,"index":7100},{"krate":0,"index":7103},{"krate":0,"index":7104},{"krate":0,"index":7106},{"krate":0,"index":7108},{"krate":0,"index":7109},{"krate":0,"index":7111},{"krate":0,"index":7113},{"krate":0,"index":7150},{"krate":0,"index":7152},{"krate":0,"index":7153},{"krate":0,"index":7155},{"krate":0,"index":7158},{"krate":0,"index":7159},{"krate":0,"index":7161},{"krate":0,"index":7163},{"krate":0,"index":7164},{"krate":0,"index":7166},{"krate":0,"index":7168},{"krate":0,"index":7185},{"krate":0,"index":7187},{"krate":0,"index":7188},{"krate":0,"index":7190},{"krate":0,"index":7193},{"krate":0,"index":7194},{"krate":0,"index":7196},{"krate":0,"index":7198},{"krate":0,"index":7199},{"krate":0,"index":7202},{"krate":0,"index":7204},{"krate":0,"index":7211},{"krate":0,"index":7213},{"krate":0,"index":7214},{"krate":0,"index":7216},{"krate":0,"index":7219},{"krate":0,"index":7220},{"krate":0,"index":7222},{"krate":0,"index":7224},{"krate":0,"index":7225},{"krate":0,"index":7227},{"krate":0,"index":7229},{"krate":0,"index":7242},{"krate":0,"index":7244},{"krate":0,"index":7245},{"krate":0,"index":7247},{"krate":0,"index":7250},{"krate":0,"index":7251},{"krate":0,"index":7253},{"krate":0,"index":7255},{"krate":0,"index":7256},{"krate":0,"index":7258},{"krate":0,"index":7260},{"krate":0,"index":7395},{"krate":0,"index":7397},{"krate":0,"index":7398},{"krate":0,"index":7400},{"krate":0,"index":7403},{"krate":0,"index":7404},{"krate":0,"index":7406},{"krate":0,"index":7408},{"krate":0,"index":7409},{"krate":0,"index":7411},{"krate":0,"index":7413},{"krate":0,"index":7427},{"krate":0,"index":7429},{"krate":0,"index":7430},{"krate":0,"index":7432},{"krate":0,"index":7433},{"krate":0,"index":7436},{"krate":0,"index":7445},{"krate":0,"index":7447},{"krate":0,"index":7448},{"krate":0,"index":7450},{"krate":0,"index":7451},{"krate":0,"index":7454},{"krate":0,"index":7467},{"krate":0,"index":7469},{"krate":0,"index":7470},{"krate":0,"index":7472},{"krate":0,"index":7473},{"krate":0,"index":7475},{"krate":0,"index":7479},{"krate":0,"index":7481},{"krate":0,"index":7482},{"krate":0,"index":7483},{"krate":0,"index":7486},{"krate":0,"index":7487},{"krate":0,"index":7489},{"krate":0,"index":7491},{"krate":0,"index":7493},{"krate":0,"index":7495},{"krate":0,"index":7477},{"krate":0,"index":7498},{"krate":0,"index":7504},{"krate":0,"index":7506},{"krate":0,"index":7508},{"krate":0,"index":7510},{"krate":0,"index":7512},{"krate":0,"index":7534},{"krate":0,"index":7537},{"krate":0,"index":7539},{"krate":0,"index":7542},{"krate":0,"index":7544},{"krate":0,"index":7547},{"krate":0,"index":7549},{"krate":0,"index":7552},{"krate":0,"index":7554},{"krate":0,"index":7557},{"krate":0,"index":7560},{"krate":0,"index":7571},{"krate":0,"index":7658},{"krate":0,"index":7660},{"krate":0,"index":3180},{"krate":0,"index":7662},{"krate":0,"index":7668},{"krate":0,"index":7670},{"krate":0,"index":7672},{"krate":0,"index":7676},{"krate":0,"index":7678},{"krate":0,"index":7680},{"krate":0,"index":7726},{"krate":0,"index":7728},{"krate":0,"index":7730},{"krate":0,"index":7734},{"krate":0,"index":7736},{"krate":0,"index":7738},{"krate":0,"index":7741},{"krate":0,"index":7743},{"krate":0,"index":7745},{"krate":0,"index":7753},{"krate":0,"index":7755},{"krate":0,"index":7757},{"krate":0,"index":7764},{"krate":0,"index":7766},{"krate":0,"index":7772},{"krate":0,"index":7774}],"decl_id":null,"docs":" Universal shader translator.","sig":null,"attributes":[{"value":"* Universal shader translator.\n\nThe central structure of the crate is [`Module`]. A `Module` contains:\n\n- [`Function`]s, which have arguments, a return type, local variables, and a body,\n\n- [`EntryPoint`]s, which are specialized functions that can serve as the entry\n  point for pipeline stages like vertex shading or fragment shading,\n\n- [`Constant`]s and [`GlobalVariable`]s used by `EntryPoint`s and `Function`s, and\n\n- [`Type`]s used by the above.\n\nThe body of an `EntryPoint` or `Function` is represented using two types:\n\n- An [`Expression`] produces a value, but has no side effects or control flow.\n  `Expressions` include variable references, unary and binary operators, and so\n  on.\n\n- A [`Statement`] can have side effects and structured control flow.\n  `Statement`s do not produce a value, other than by storing one in some\n  designated place. `Statements` include blocks, conditionals, and loops, but also\n  operations that have side effects, like stores and function calls.\n\n`Statement`s form a tree, with pointers into the DAG of `Expression`s.\n\nRestricting side effects to statements simplifies analysis and code generation.\nA Naga backend can generate code to evaluate an `Expression` however and\nwhenever it pleases, as long as it is certain to observe the side effects of all\npreviously executed `Statement`s.\n\nMany `Statement` variants use the [`Block`] type, which is `Vec<Statement>`,\nwith optional span info, representing a series of statements executed in order. The body of an\n`EntryPoint`s or `Function` is a `Block`, and `Statement` has a\n[`Block`][Statement::Block] variant.\n\n## Arenas\n\nTo improve translator performance and reduce memory usage, most structures are\nstored in an [`Arena`]. An `Arena<T>` stores a series of `T` values, indexed by\n[`Handle<T>`](Handle) values, which are just wrappers around integer indexes.\nFor example, a `Function`'s expressions are stored in an `Arena<Expression>`,\nand compound expressions refer to their sub-expressions via `Handle<Expression>`\nvalues. (When examining the serialized form of a `Module`, note that the first\nelement of an `Arena` has an index of 1, not 0.)\n\nA [`UniqueArena`] is just like an `Arena`, except that it stores only a single\ninstance of each value. The value type must implement `Eq` and `Hash`. Like an\n`Arena`, inserting a value into a `UniqueArena` returns a `Handle` which can be\nused to efficiently access the value, without a hash lookup. Inserting a value\nmultiple times returns the same `Handle`.\n\nIf the `span` feature is enabled, both `Arena` and `UniqueArena` can associate a\nsource code span with each element.\n\n## Function Calls\n\nNaga's representation of function calls is unusual. Most languages treat\nfunction calls as expressions, but because calls may have side effects, Naga\nrepresents them as a kind of statement, [`Statement::Call`]. If the function\nreturns a value, a call statement designates a particular [`Expression::CallResult`]\nexpression to represent its return value, for use by subsequent statements and\nexpressions.\n\n## `Expression` evaluation time\n\nIt is essential to know when an [`Expression`] should be evaluated, because its\nvalue may depend on previous [`Statement`]s' effects. But whereas the order of\nexecution for a tree of `Statement`s is apparent from its structure, it is not\nso clear for `Expressions`, since an expression may be referred to by any number\nof `Statement`s and other `Expression`s.\n\nNaga's rules for when `Expression`s are evaluated are as follows:\n\n-   [`Constant`](Expression::Constant) expressions are considered to be\n    implicitly evaluated before execution begins.\n\n-   [`FunctionArgument`] and [`LocalVariable`] expressions are considered\n    implicitly evaluated upon entry to the function to which they belong.\n    Function arguments cannot be assigned to, and `LocalVariable` expressions\n    produce a *pointer to* the variable's value (for use with [`Load`] and\n    [`Store`]). Neither varies while the function executes, so it suffices to\n    consider these expressions evaluated once on entry.\n\n-   Similarly, [`GlobalVariable`] expressions are considered implicitly\n    evaluated before execution begins, since their value does not change while\n    code executes, for one of two reasons:\n\n    -   Most `GlobalVariable` expressions produce a pointer to the variable's\n        value, for use with [`Load`] and [`Store`], as `LocalVariable`\n        expressions do. Although the variable's value may change, its address\n        does not.\n\n    -   A `GlobalVariable` expression referring to a global in the\n        [`AddressSpace::Handle`] address space produces the value directly, not\n        a pointer. Such global variables hold opaque types like shaders or\n        images, and cannot be assigned to.\n\n-   A [`CallResult`] expression that is the `result` of a [`Statement::Call`],\n    representing the call's return value, is evaluated when the `Call` statement\n    is executed.\n\n-   Similarly, an [`AtomicResult`] expression that is the `result` of an\n    [`Atomic`] statement, representing the result of the atomic operation, is\n    evaluated when the `Atomic` statement is executed.\n\n-   All other expressions are evaluated when the (unique) [`Statement::Emit`]\n    statement that covers them is executed. The [`Expression::needs_pre_emit`]\n    method returns `true` if the given expression is one of those variants that\n    does *not* need to be covered by an `Emit` statement.\n\nNow, strictly speaking, not all `Expression` variants actually care when they're\nevaluated. For example, you can evaluate a [`BinaryOperator::Add`] expression\nany time you like, as long as you give it the right operands. It's really only a\nvery small set of expressions that are affected by timing:\n\n-   [`Load`], [`ImageSample`], and [`ImageLoad`] expressions are influenced by\n    stores to the variables or images they access, and must execute at the\n    proper time relative to them.\n\n-   [`Derivative`] expressions are sensitive to control flow uniformity: they\n    must not be moved out of an area of uniform control flow into a non-uniform\n    area.\n\n-   More generally, any expression that's used by more than one other expression\n    or statement should probably be evaluated only once, and then stored in a\n    variable to be cited at each point of use.\n\nNaga tries to help back ends handle all these cases correctly in a somewhat\ncircuitous way. The [`ModuleInfo`] structure returned by [`Validator::validate`]\nprovides a reference count for each expression in each function in the module.\nNaturally, any expression with a reference count of two or more deserves to be\nevaluated and stored in a temporary variable at the point that the `Emit`\nstatement covering it is executed. But if we selectively lower the reference\ncount threshold to _one_ for the sensitive expression types listed above, so\nthat we _always_ generate a temporary variable and save their value, then the\nsame code that manages multiply referenced expressions will take care of\nintroducing temporaries for time-sensitive expressions as well. The\n`Expression::bake_ref_count` method (private to the back ends) is meant to help\nwith this.\n\n## `Expression` scope\n\nEach `Expression` has a *scope*, which is the region of the function within\nwhich it can be used by `Statement`s and other `Expression`s. It is a validation\nerror to use an `Expression` outside its scope.\n\nAn expression's scope is defined as follows:\n\n-   The scope of a [`Constant`], [`GlobalVariable`], [`FunctionArgument`] or\n    [`LocalVariable`] expression covers the entire `Function` in which it\n    occurs.\n\n-   The scope of an expression evaluated by an [`Emit`] statement covers the\n    subsequent expressions in that `Emit`, the subsequent statements in the `Block`\n    to which that `Emit` belongs (if any) and their sub-statements (if any).\n\n-   The `result` expression of a [`Call`] or [`Atomic`] statement has a scope\n    covering the subsequent statements in the `Block` in which the statement\n    occurs (if any) and their sub-statements (if any).\n\nFor example, this implies that an expression evaluated by some statement in a\nnested `Block` is not available in the `Block`'s parents. Such a value would\nneed to be stored in a local variable to be carried upwards in the statement\ntree.\n\n[`AtomicResult`]: Expression::AtomicResult\n[`CallResult`]: Expression::CallResult\n[`Constant`]: Expression::Constant\n[`Derivative`]: Expression::Derivative\n[`FunctionArgument`]: Expression::FunctionArgument\n[`GlobalVariable`]: Expression::GlobalVariable\n[`ImageLoad`]: Expression::ImageLoad\n[`ImageSample`]: Expression::ImageSample\n[`Load`]: Expression::Load\n[`LocalVariable`]: Expression::LocalVariable\n\n[`Atomic`]: Statement::Atomic\n[`Call`]: Statement::Call\n[`Emit`]: Statement::Emit\n[`Store`]: Statement::Store\n\n[`Validator::validate`]: valid::Validator::validate\n[`ModuleInfo`]: valid::ModuleInfo\n*/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":0,"byte_end":8903,"line_start":1,"line_end":185,"column_start":1,"column_end":3}},{"value":"allow(clippy :: new_without_default, clippy :: unneeded_field_pattern,\nclippy :: match_like_matches_macro, clippy :: if_same_then_else)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":8905,"byte_end":9054,"line_start":187,"line_end":192,"column_start":1,"column_end":3}},{"value":"warn(trivial_casts, trivial_numeric_casts, unused_extern_crates,\nunused_qualifications, clippy :: pattern_type_mismatch, clippy ::\nmissing_const_for_fn)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9055,"byte_end":9233,"line_start":193,"line_end":200,"column_start":1,"column_end":3}},{"value":"deny(clippy :: panic)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9234,"byte_end":9257,"line_start":201,"line_end":201,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3202},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":61685,"byte_end":61694,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"BadHandle","qualname":"::arena::BadHandle","value":"BadHandle { kind, index }","parent":null,"children":[{"krate":0,"index":3203},{"krate":0,"index":3204}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Handle {index} of {kind} is either not present, or inaccessible yet\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":61594,"byte_end":61673,"line_start":12,"line_end":12,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":3203},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":61705,"byte_end":61709,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"kind","qualname":"::arena::BadHandle::kind","value":"&'static str","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3204},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":61733,"byte_end":61738,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"name":"index","qualname":"::arena::BadHandle::index","value":"usize","parent":{"krate":0,"index":3202},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62183,"byte_end":62189,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"Handle","qualname":"::arena::Handle","value":"Handle {  }","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33}],"decl_id":null,"docs":" A strongly typed reference to an arena item.","sig":null,"attributes":[{"value":"/ A strongly typed reference to an arena item.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":61750,"byte_end":61798,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":61799,"byte_end":61802,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ A `Handle` value can be used as an index into an [`Arena`] or [`UniqueArena`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":61803,"byte_end":61885,"line_start":20,"line_end":20,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":63604,"byte_end":63609,"line_start":92,"line_end":92,"column_start":18,"column_end":23},"name":"index","qualname":"<Handle<T>>::index","value":"pub const fn index(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the zero-based index of this handle.\n","sig":null,"attributes":[{"value":"/ Returns the zero-based index of this handle.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":63538,"byte_end":63586,"line_start":91,"line_end":91,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":64590,"byte_end":64595,"line_start":122,"line_end":122,"column_start":12,"column_end":17},"name":"Range","qualname":"::arena::Range","value":"Range {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"decl_id":null,"docs":" A strongly typed range of handles.\n","sig":null,"attributes":[{"value":"/ A strongly typed range of handles.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":64254,"byte_end":64292,"line_start":114,"line_end":114,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":65997,"byte_end":66002,"line_start":168,"line_end":168,"column_start":12,"column_end":17},"name":"Arena","qualname":"::arena::Arena","value":"Arena {  }","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83}],"decl_id":null,"docs":" An arena holding some kind of component (e.g., type, constant,\n instruction, etc.) that can be referenced.","sig":null,"attributes":[{"value":"/ An arena holding some kind of component (e.g., type, constant,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":65480,"byte_end":65546,"line_start":158,"line_end":158,"column_start":1,"column_end":67}},{"value":"/ instruction, etc.) that can be referenced.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":65547,"byte_end":65593,"line_start":159,"line_end":159,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":65594,"byte_end":65597,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ Adding new items to the arena produces a strongly-typed [`Handle`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":65598,"byte_end":65669,"line_start":161,"line_end":161,"column_start":1,"column_end":72}},{"value":"/ The arena can be indexed using the given handle to obtain","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":65670,"byte_end":65731,"line_start":162,"line_end":162,"column_start":1,"column_end":62}},{"value":"/ a reference to the stored item.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":65732,"byte_end":65767,"line_start":163,"line_end":163,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":66518,"byte_end":66521,"line_start":190,"line_end":190,"column_start":18,"column_end":21},"name":"new","qualname":"<Arena<T>>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new arena with no initial capacity allocated.\n","sig":null,"attributes":[{"value":"/ Create a new arena with no initial capacity allocated.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":66442,"byte_end":66500,"line_start":189,"line_end":189,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":66828,"byte_end":66838,"line_start":200,"line_end":200,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Arena<T>>::into_inner","value":"pub fn into_inner(Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the inner vector.\n","sig":null,"attributes":[{"value":"/ Extracts the inner vector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":66673,"byte_end":66703,"line_start":198,"line_end":198,"column_start":5,"column_end":35}},{"value":"allow(clippy :: missing_const_for_fn)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":66708,"byte_end":66746,"line_start":199,"line_end":199,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":66959,"byte_end":66962,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"len","qualname":"<Arena<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of items stored in this arena.\n","sig":null,"attributes":[{"value":"/ Returns the current number of items stored in this arena.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":66886,"byte_end":66947,"line_start":204,"line_end":204,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":67081,"byte_end":67089,"line_start":210,"line_end":210,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Arena<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the arena contains no elements.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the arena contains no elements.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":67016,"byte_end":67069,"line_start":209,"line_end":209,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":67283,"byte_end":67287,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"iter","qualname":"<Arena<T>>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the items stored in this arena, returning both\n the item's handle and a reference to it.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the items stored in this arena, returning both","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":67147,"byte_end":67222,"line_start":214,"line_end":214,"column_start":5,"column_end":80}},{"value":"/ the item's handle and a reference to it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":67227,"byte_end":67271,"line_start":215,"line_end":215,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":67641,"byte_end":67649,"line_start":225,"line_end":225,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Arena<T>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a iterator over the items stored in this arena,\n returning both the item's handle and a mutable reference to it.\n","sig":null,"attributes":[{"value":"/ Returns a iterator over the items stored in this arena,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":67498,"byte_end":67557,"line_start":223,"line_end":223,"column_start":5,"column_end":64}},{"value":"/ returning both the item's handle and a mutable reference to it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":67562,"byte_end":67629,"line_start":224,"line_end":224,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":67944,"byte_end":67950,"line_start":233,"line_end":233,"column_start":12,"column_end":18},"name":"append","qualname":"<Arena<T>>::append","value":"pub fn append(&mut Self, T, Span) -> Handle<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a new value to the arena, returning a typed handle.\n","sig":null,"attributes":[{"value":"/ Adds a new value to the arena, returning a typed handle.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":67872,"byte_end":67932,"line_start":232,"line_end":232,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":68291,"byte_end":68299,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"fetch_if","qualname":"<Arena<T>>::fetch_if","value":"pub fn fetch_if<F: Fn(&T) -> bool>(&Self, F) -> Option<Handle<T>>","parent":null,"children":[],"decl_id":null,"docs":" Fetch a handle to an existing type.\n","sig":null,"attributes":[{"value":"/ Fetch a handle to an existing type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":68240,"byte_end":68279,"line_start":243,"line_end":243,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":68699,"byte_end":68717,"line_start":255,"line_end":255,"column_start":12,"column_end":30},"name":"fetch_if_or_append","qualname":"<Arena<T>>::fetch_if_or_append","value":"pub fn fetch_if_or_append<F: Fn(&T, &T) -> bool>(&mut Self, T, Span, F)\n-> Handle<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value with a custom check for uniqueness:\n returns a handle pointing to\n an existing element if the check succeeds, or adds a new\n element otherwise.\n","sig":null,"attributes":[{"value":"/ Adds a value with a custom check for uniqueness:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":68506,"byte_end":68558,"line_start":251,"line_end":251,"column_start":5,"column_end":57}},{"value":"/ returns a handle pointing to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":68563,"byte_end":68595,"line_start":252,"line_end":252,"column_start":5,"column_end":37}},{"value":"/ an existing element if the check succeeds, or adds a new","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":68600,"byte_end":68660,"line_start":253,"line_end":253,"column_start":5,"column_end":65}},{"value":"/ element otherwise.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":68665,"byte_end":68687,"line_start":254,"line_end":254,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":69141,"byte_end":69156,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"fetch_or_append","qualname":"<Arena<T>>::fetch_or_append","value":"pub fn fetch_or_append(&mut Self, T, Span) -> Handle<T> where T: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Adds a value with a check for uniqueness, where the check is plain comparison.\n","sig":null,"attributes":[{"value":"/ Adds a value with a check for uniqueness, where the check is plain comparison.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":69047,"byte_end":69129,"line_start":268,"line_end":268,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":69311,"byte_end":69318,"line_start":276,"line_end":276,"column_start":12,"column_end":19},"name":"try_get","qualname":"<Arena<T>>::try_get","value":"pub fn try_get(&Self, Handle<T>) -> Result<&T, BadHandle>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":69606,"byte_end":69613,"line_start":284,"line_end":284,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Arena<T>>::get_mut","value":"pub fn get_mut(&mut Self, Handle<T>) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to an element in the arena.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to an element in the arena.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":69539,"byte_end":69594,"line_start":283,"line_end":283,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":69807,"byte_end":69817,"line_start":289,"line_end":289,"column_start":12,"column_end":22},"name":"range_from","qualname":"<Arena<T>>::range_from","value":"pub fn range_from(&Self, usize) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":" Get the range of handles from a particular number of elements to the end.\n","sig":null,"attributes":[{"value":"/ Get the range of handles from a particular number of elements to the end.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":69718,"byte_end":69795,"line_start":288,"line_end":288,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":70046,"byte_end":70051,"line_start":297,"line_end":297,"column_start":12,"column_end":17},"name":"clear","qualname":"<Arena<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the arena keeping all allocations\n","sig":null,"attributes":[{"value":"/ Clears the arena keeping all allocations","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":69990,"byte_end":70034,"line_start":296,"line_end":296,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":70109,"byte_end":70117,"line_start":301,"line_end":301,"column_start":12,"column_end":20},"name":"get_span","qualname":"<Arena<T>>::get_span","value":"pub fn get_span(&Self, Handle<T>) -> Span","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":73394,"byte_end":73405,"line_start":415,"line_end":415,"column_start":12,"column_end":23},"name":"UniqueArena","qualname":"::arena::UniqueArena","value":"UniqueArena {  }","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130}],"decl_id":null,"docs":" An arena whose elements are guaranteed to be unique.","sig":null,"attributes":[{"value":"/ An arena whose elements are guaranteed to be unique.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":72703,"byte_end":72759,"line_start":401,"line_end":401,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":72760,"byte_end":72763,"line_start":402,"line_end":402,"column_start":1,"column_end":4}},{"value":"/ A `UniqueArena` holds a set of unique values of type `T`, each with an","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":72764,"byte_end":72838,"line_start":403,"line_end":403,"column_start":1,"column_end":75}},{"value":"/ associated [`Span`]. Inserting a value returns a `Handle<T>`, which can be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":72839,"byte_end":72917,"line_start":404,"line_end":404,"column_start":1,"column_end":79}},{"value":"/ used to index the `UniqueArena` and obtain shared access to the `T` element.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":72918,"byte_end":72998,"line_start":405,"line_end":405,"column_start":1,"column_end":81}},{"value":"/ Access via a `Handle` is an array lookup - no hash lookup is necessary.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":72999,"byte_end":73074,"line_start":406,"line_end":406,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":73075,"byte_end":73078,"line_start":407,"line_end":407,"column_start":1,"column_end":4}},{"value":"/ The element type must implement `Eq` and `Hash`. Insertions of equivalent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":73079,"byte_end":73156,"line_start":408,"line_end":408,"column_start":1,"column_end":78}},{"value":"/ elements, according to `Eq`, all return the same `Handle`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":73157,"byte_end":73219,"line_start":409,"line_end":409,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":73220,"byte_end":73223,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ Once inserted, elements may not be mutated.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":73224,"byte_end":73271,"line_start":411,"line_end":411,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":73272,"byte_end":73275,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ `UniqueArena` is similar to [`Arena`]: If `Arena` is vector-like,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":73276,"byte_end":73345,"line_start":413,"line_end":413,"column_start":1,"column_end":70}},{"value":"/ `UniqueArena` is `HashSet`-like.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":73346,"byte_end":73382,"line_start":414,"line_end":414,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":73937,"byte_end":73940,"line_start":430,"line_end":430,"column_start":12,"column_end":15},"name":"new","qualname":"<UniqueArena<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new arena with no initial capacity allocated.\n","sig":null,"attributes":[{"value":"/ Create a new arena with no initial capacity allocated.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":73867,"byte_end":73925,"line_start":429,"line_end":429,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":74174,"byte_end":74177,"line_start":439,"line_end":439,"column_start":12,"column_end":15},"name":"len","qualname":"<UniqueArena<T>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the current number of items stored in this arena.\n","sig":null,"attributes":[{"value":"/ Return the current number of items stored in this arena.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":74102,"byte_end":74162,"line_start":438,"line_end":438,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":74294,"byte_end":74302,"line_start":444,"line_end":444,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<UniqueArena<T>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if the arena contains no elements.\n","sig":null,"attributes":[{"value":"/ Return `true` if the arena contains no elements.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":74230,"byte_end":74282,"line_start":443,"line_end":443,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":74417,"byte_end":74422,"line_start":449,"line_end":449,"column_start":12,"column_end":17},"name":"clear","qualname":"<UniqueArena<T>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the arena, keeping all allocations.\n","sig":null,"attributes":[{"value":"/ Clears the arena, keeping all allocations.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":74359,"byte_end":74405,"line_start":448,"line_end":448,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":74869,"byte_end":74877,"line_start":462,"line_end":462,"column_start":12,"column_end":20},"name":"get_span","qualname":"<UniqueArena<T>>::get_span","value":"pub fn get_span(&Self, Handle<T>) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Return the span associated with `handle`.","sig":null,"attributes":[{"value":"/ Return the span associated with `handle`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":74538,"byte_end":74583,"line_start":455,"line_end":455,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":74588,"byte_end":74591,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ If a value has been inserted multiple times, the span returned is the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":74596,"byte_end":74669,"line_start":457,"line_end":457,"column_start":5,"column_end":78}},{"value":"/ one provided with the first insertion.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":74674,"byte_end":74716,"line_start":458,"line_end":458,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":74721,"byte_end":74724,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ If the `span` feature is not enabled, always return `Span::default`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":74729,"byte_end":74801,"line_start":460,"line_end":460,"column_start":5,"column_end":77}},{"value":"/ This can be detected with [`Span::is_defined`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":74806,"byte_end":74857,"line_start":461,"line_end":461,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":75399,"byte_end":75403,"line_start":481,"line_end":481,"column_start":12,"column_end":16},"name":"iter","qualname":"<UniqueArena<T>>::iter","value":"pub fn iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the items stored in this arena, returning both\n the item's handle and a reference to it.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the items stored in this arena, returning both","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":75263,"byte_end":75338,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"/ the item's handle and a reference to it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":75343,"byte_end":75387,"line_start":480,"line_end":480,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":76292,"byte_end":76298,"line_start":503,"line_end":503,"column_start":12,"column_end":18},"name":"insert","qualname":"<UniqueArena<T>>::insert","value":"pub fn insert(&mut Self, T, Span) -> Handle<T>","parent":null,"children":[],"decl_id":null,"docs":" Insert a new value into the arena.","sig":null,"attributes":[{"value":"/ Insert a new value into the arena.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":75682,"byte_end":75720,"line_start":489,"line_end":489,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":75725,"byte_end":75728,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ Return a [`Handle<T>`], which can be used to index this arena to get a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":75733,"byte_end":75807,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ shared reference to the element.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":75812,"byte_end":75848,"line_start":492,"line_end":492,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":75853,"byte_end":75856,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ If this arena already contains an element that is `Eq` to `value`,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":75861,"byte_end":75931,"line_start":494,"line_end":494,"column_start":5,"column_end":75}},{"value":"/ return a `Handle` to the existing element, and drop `value`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":75936,"byte_end":76000,"line_start":495,"line_end":495,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":76005,"byte_end":76008,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ When the `span` feature is enabled, if `value` is inserted into the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":76013,"byte_end":76084,"line_start":497,"line_end":497,"column_start":5,"column_end":76}},{"value":"/ arena, associate `span` with it. An element's span can be retrieved with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":76089,"byte_end":76165,"line_start":498,"line_end":498,"column_start":5,"column_end":81}},{"value":"/ the [`get_span`] method.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":76170,"byte_end":76198,"line_start":499,"line_end":499,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":76203,"byte_end":76206,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ [`Handle<T>`]: Handle","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":76211,"byte_end":76236,"line_start":501,"line_end":501,"column_start":5,"column_end":30}},{"value":"/ [`get_span`]: UniqueArena::get_span","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":76241,"byte_end":76280,"line_start":502,"line_end":502,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":76981,"byte_end":76984,"line_start":526,"line_end":526,"column_start":12,"column_end":15},"name":"get","qualname":"<UniqueArena<T>>::get","value":"pub fn get(&Self, &T) -> Option<Handle<T>>","parent":null,"children":[],"decl_id":null,"docs":" Return this arena's handle for `value`, if present.","sig":null,"attributes":[{"value":"/ Return this arena's handle for `value`, if present.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":76785,"byte_end":76840,"line_start":522,"line_end":522,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":76845,"byte_end":76848,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ If this arena already contains an element equal to `value`,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":76853,"byte_end":76916,"line_start":524,"line_end":524,"column_start":5,"column_end":68}},{"value":"/ return its handle. Otherwise, return `None`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":76921,"byte_end":76969,"line_start":525,"line_end":525,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":77241,"byte_end":77251,"line_start":533,"line_end":533,"column_start":12,"column_end":22},"name":"get_handle","qualname":"<UniqueArena<T>>::get_handle","value":"pub fn get_handle(&Self, Handle<T>) -> Result<&T, BadHandle>","parent":null,"children":[],"decl_id":null,"docs":" Return this arena's value at `handle`, if that is a valid handle.\n","sig":null,"attributes":[{"value":"/ Return this arena's value at `handle`, if that is a valid handle.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":77160,"byte_end":77229,"line_start":532,"line_end":532,"column_start":5,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"back","qualname":"::back","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","parent":null,"children":[{"krate":0,"index":159},{"krate":0,"index":588},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":3954},{"krate":0,"index":3957},{"krate":0,"index":3959},{"krate":0,"index":1419},{"krate":0,"index":1421},{"krate":0,"index":1424},{"krate":0,"index":1431},{"krate":0,"index":1437},{"krate":0,"index":1441},{"krate":0,"index":1443},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1450}],"decl_id":null,"docs":"Backend functions that export shader [`Module`](super::Module)s into binary and text formats.\n","sig":null,"attributes":[{"value":"*\nBackend functions that export shader [`Module`](super::Module)s into binary and text formats.\n*/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":79845,"byte_end":79945,"line_start":1,"line_end":3,"column_start":1,"column_end":3}},{"value":"allow(dead_code)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":79946,"byte_end":79966,"line_start":4,"line_end":4,"column_start":1,"column_end":21}}]},{"kind":"Mod","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hlsl","qualname":"::back::hlsl","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":188},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":359},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":3385},{"krate":0,"index":3389},{"krate":0,"index":3391},{"krate":0,"index":3393},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3402},{"krate":0,"index":563},{"krate":0,"index":3405},{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3415},{"krate":0,"index":3417},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3426},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":3428},{"krate":0,"index":3429},{"krate":0,"index":3431},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3443},{"krate":0,"index":3448},{"krate":0,"index":3450},{"krate":0,"index":3452},{"krate":0,"index":3455},{"krate":0,"index":3456},{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":3462},{"krate":0,"index":3464},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3472},{"krate":0,"index":3481},{"krate":0,"index":3483},{"krate":0,"index":3498},{"krate":0,"index":3504},{"krate":0,"index":575},{"krate":0,"index":577}],"decl_id":null,"docs":"Backend for [HLSL][hlsl] (High-Level Shading Language).","sig":null,"attributes":[{"value":"cfg(feature = \"hlsl-out\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":80107,"byte_end":80135,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"*\nBackend for [HLSL][hlsl] (High-Level Shading Language).\n\n# Supported shader model versions:\n- 5.0\n- 5.1\n- 6.0\n\n# Layout of values in `uniform` buffers\n\nWGSL's [\"Internal Layout of Values\"][ilov] rules specify how each WGSL\ntype should be stored in `uniform` and `storage` buffers. The HLSL we\ngenerate must access values in that form, even when it is not what\nHLSL would use normally.\n\nThe rules described here only apply to WGSL `uniform` variables. WGSL\n`storage` buffers are translated as HLSL `ByteAddressBuffers`, for\nwhich we generate `Load` and `Store` method calls with explicit byte\noffsets. WGSL pipeline inputs must be scalars or vectors; they cannot\nbe matrices, which is where the interesting problems arise.\n\n## Row- and column-major ordering for matrices\n\nWGSL specifies that matrices in uniform buffers are stored in\ncolumn-major order. This matches HLSL's default, so one might expect\nthings to be straightforward. Unfortunately, WGSL and HLSL disagree on\nwhat indexing a matrix means: in WGSL, `m[i]` retrieves the `i`'th\n*column* of `m`, whereas in HLSL it retrieves the `i`'th *row*. We\nwant to avoid translating `m[i]` into some complicated reassembly of a\nvector from individually fetched components, so this is a problem.\n\nHowever, with a bit of trickery, it is possible to use HLSL's `m[i]`\nas the translation of WGSL's `m[i]`:\n\n- We declare all matrices in uniform buffers in HLSL with the\n  `row_major` qualifier, and transpose the row and column counts: a\n  WGSL `mat3x4<f32>`, say, becomes an HLSL `row_major float3x4`. (Note\n  that WGSL and HLSL type names put the row and column in reverse\n  order.) Since the HLSL type is the transpose of how WebGPU directs\n  the user to store the data, HLSL will load all matrices transposed.\n\n- Since matrices are transposed, an HLSL indexing expression retrieves\n  the \"columns\" of the intended WGSL value, as desired.\n\n- For vector-matrix multiplication, since `mul(transpose(m), v)` is\n  equivalent to `mul(v, m)` (note the reversal of the arguments), and\n  `mul(v, transpose(m))` is equivalent to `mul(m, v)`, we can\n  translate WGSL `m * v` and `v * m` to HLSL by simply reversing the\n  arguments to `mul`.\n\n## Padding in two-row matrices\n\nAn HLSL `row_major floatKx2` matrix has padding between its rows that\nthe WGSL `matKx2<f32>` matrix it represents does not. HLSL stores all\nmatrix rows [aligned on 16-byte boundaries][16bb], whereas WGSL says\nthat the columns of a `matKx2<f32>` need only be [aligned as required\nfor `vec2<f32>`][ilov], which is [eight-byte alignment][8bb].\n\nTo compensate for this, any time a `matKx2<f32>` appears in a WGSL\n`uniform` variable, whether directly as the variable's type or as part\nof a struct/array, we actually emit `K` separate `float2` members, and\nassemble/disassemble the matrix from its columns (in WGSL; rows in\nHLSL) upon load and store.\n\nFor example, the following WGSL struct type:\n\n```ignore\nstruct Baz {\n        m: mat3x2<f32>,\n}\n```\n\nis rendered as the HLSL struct type:\n\n```ignore\nstruct Baz {\n    float2 m_0; float2 m_1; float2 m_2;\n};\n```\n\nThe `wrapped_struct_matrix` functions in `help.rs` generate HLSL\nhelper functions to access such members, converting between the stored\nform and the HLSL matrix types appropriately. For example, for reading\nthe member `m` of the `Baz` struct above, we emit:\n\n```ignore\nfloat3x2 GetMatmOnBaz(Baz obj) {\n    return float3x2(obj.m_0, obj.m_1, obj.m_2);\n}\n```\n\nWe also emit an analogous `Set` function, as well as functions for\naccessing individual columns by dynamic index.\n\n[hlsl]: https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl\n[ilov]: https://gpuweb.github.io/gpuweb/wgsl/#internal-value-layout\n[16bb]: https://github.com/microsoft/DirectXShaderCompiler/wiki/Buffer-Packing#constant-buffer-packing\n[8bb]: https://gpuweb.github.io/gpuweb/wgsl/#alignment-and-size\n*/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":87393,"byte_end":91258,"line_start":1,"line_end":99,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\writer.rs","byte_start":171892,"byte_end":171895,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<super::Writer>::new","value":"pub fn new(W, &'a Options) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\writer.rs","byte_start":172589,"byte_end":172594,"line_start":98,"line_end":98,"column_start":12,"column_end":17},"name":"write","qualname":"<super::Writer>::write","value":"pub fn write(&mut Self, &Module, &valid::ModuleInfo)\n-> Result<super::ReflectionInfo, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3385},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":91585,"byte_end":91595,"line_start":115,"line_end":115,"column_start":12,"column_end":22},"name":"BindTarget","qualname":"::back::hlsl::BindTarget","value":"BindTarget { space, register, binding_array_size }","parent":null,"children":[{"krate":0,"index":3386},{"krate":0,"index":3387},{"krate":0,"index":3388}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3386},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":91606,"byte_end":91611,"line_start":116,"line_end":116,"column_start":9,"column_end":14},"name":"space","qualname":"::back::hlsl::BindTarget::space","value":"u8","parent":{"krate":0,"index":3385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3387},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":91625,"byte_end":91633,"line_start":117,"line_end":117,"column_start":9,"column_end":17},"name":"register","qualname":"::back::hlsl::BindTarget::register","value":"u32","parent":{"krate":0,"index":3385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3388},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":91725,"byte_end":91743,"line_start":119,"line_end":119,"column_start":9,"column_end":27},"name":"binding_array_size","qualname":"::back::hlsl::BindTarget::binding_array_size","value":"std::option::Option<u32>","parent":{"krate":0,"index":3385},"children":[],"decl_id":null,"docs":" If the binding is an unsized binding array, this overrides the size.\n","sig":null,"attributes":[{"value":"/ If the binding is an unsized binding array, this overrides the size.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":91644,"byte_end":91716,"line_start":118,"line_end":118,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":91839,"byte_end":91849,"line_start":123,"line_end":123,"column_start":10,"column_end":20},"name":"BindingMap","qualname":"::back::hlsl::BindingMap","value":"std::collections::BTreeMap<crate::ResourceBinding, BindTarget>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3406},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":92213,"byte_end":92217,"line_start":131,"line_end":131,"column_start":5,"column_end":9},"name":"V5_0","qualname":"::back::hlsl::ShaderModel::V5_0","value":"ShaderModel::V5_0","parent":{"krate":0,"index":3405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3408},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":92223,"byte_end":92227,"line_start":132,"line_end":132,"column_start":5,"column_end":9},"name":"V5_1","qualname":"::back::hlsl::ShaderModel::V5_1","value":"ShaderModel::V5_1","parent":{"krate":0,"index":3405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":92233,"byte_end":92237,"line_start":133,"line_end":133,"column_start":5,"column_end":9},"name":"V6_0","qualname":"::back::hlsl::ShaderModel::V6_0","value":"ShaderModel::V6_0","parent":{"krate":0,"index":3405},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3405},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":92195,"byte_end":92206,"line_start":130,"line_end":130,"column_start":10,"column_end":21},"name":"ShaderModel","qualname":"::back::hlsl::ShaderModel","value":"pub enum ShaderModel { V5_0, V5_1, V6_0, }","parent":null,"children":[{"krate":0,"index":3406},{"krate":0,"index":3408},{"krate":0,"index":3410}],"decl_id":null,"docs":" A HLSL shader model version.\n","sig":null,"attributes":[{"value":"/ A HLSL shader model version.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":91917,"byte_end":91949,"line_start":125,"line_end":125,"column_start":1,"column_end":33}},{"value":"allow(non_snake_case, non_camel_case_types)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":91950,"byte_end":91996,"line_start":126,"line_end":126,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":92278,"byte_end":92284,"line_start":137,"line_end":137,"column_start":18,"column_end":24},"name":"to_str","qualname":"<ShaderModel>::to_str","value":"pub const fn to_str(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":92491,"byte_end":92502,"line_start":147,"line_end":147,"column_start":18,"column_end":29},"name":"to_hlsl_str","qualname":"<crate::ShaderStage>::to_hlsl_str","value":"pub const fn to_hlsl_str(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3440},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":93261,"byte_end":93275,"line_start":175,"line_end":175,"column_start":5,"column_end":19},"name":"MissingBinding","qualname":"::back::hlsl::EntryPointError::MissingBinding","value":"EntryPointError::MissingBinding(crate::ResourceBinding)","parent":{"krate":0,"index":3428},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"mapping of {0:?} is missing\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":93217,"byte_end":93256,"line_start":174,"line_end":174,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":3428},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":93195,"byte_end":93210,"line_start":173,"line_end":173,"column_start":10,"column_end":25},"name":"EntryPointError","qualname":"::back::hlsl::EntryPointError","value":"pub enum EntryPointError { MissingBinding(crate::ResourceBinding), }","parent":null,"children":[{"krate":0,"index":3440}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":93528,"byte_end":93535,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"Options","qualname":"::back::hlsl::Options","value":"Options { shader_model, binding_map, fake_missing_bindings, special_constants_binding }","parent":null,"children":[{"krate":0,"index":3444},{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3447}],"decl_id":null,"docs":" Configuration used in the [`Writer`].\n","sig":null,"attributes":[{"value":"/ Configuration used in the [`Writer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":93304,"byte_end":93345,"line_start":178,"line_end":178,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3444},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":93587,"byte_end":93599,"line_start":184,"line_end":184,"column_start":9,"column_end":21},"name":"shader_model","qualname":"::back::hlsl::Options::shader_model","value":"back::hlsl::ShaderModel","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" The hlsl shader model to be used\n","sig":null,"attributes":[{"value":"/ The hlsl shader model to be used","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":93542,"byte_end":93578,"line_start":183,"line_end":183,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":93681,"byte_end":93692,"line_start":186,"line_end":186,"column_start":9,"column_end":20},"name":"binding_map","qualname":"::back::hlsl::Options::binding_map","value":"std::collections::BTreeMap<ResourceBinding, back::hlsl::BindTarget>","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" Map of resources association to binding locations.\n","sig":null,"attributes":[{"value":"/ Map of resources association to binding locations.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":93618,"byte_end":93672,"line_start":185,"line_end":185,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3446},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":93782,"byte_end":93803,"line_start":188,"line_end":188,"column_start":9,"column_end":30},"name":"fake_missing_bindings","qualname":"::back::hlsl::Options::fake_missing_bindings","value":"bool","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" Don't panic on missing bindings, instead generate any HLSL.\n","sig":null,"attributes":[{"value":"/ Don't panic on missing bindings, instead generate any HLSL.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":93710,"byte_end":93773,"line_start":187,"line_end":187,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":3447},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":93964,"byte_end":93989,"line_start":191,"line_end":191,"column_start":9,"column_end":34},"name":"special_constants_binding","qualname":"::back::hlsl::Options::special_constants_binding","value":"std::option::Option<back::hlsl::BindTarget>","parent":{"krate":0,"index":3443},"children":[],"decl_id":null,"docs":" Add special constants to `SV_VertexIndex` and `SV_InstanceIndex`,\n to make them work like in Vulkan/Metal, with help of the host.\n","sig":null,"attributes":[{"value":"/ Add special constants to `SV_VertexIndex` and `SV_InstanceIndex`,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":93815,"byte_end":93884,"line_start":189,"line_end":189,"column_start":5,"column_end":74}},{"value":"/ to make them work like in Vulkan/Metal, with help of the host.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":93889,"byte_end":93955,"line_start":190,"line_end":190,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":3462},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":94928,"byte_end":94942,"line_start":224,"line_end":224,"column_start":12,"column_end":26},"name":"ReflectionInfo","qualname":"::back::hlsl::ReflectionInfo","value":"ReflectionInfo { entry_point_names }","parent":null,"children":[{"krate":0,"index":3463}],"decl_id":null,"docs":" Reflection info for entry point names.\n","sig":null,"attributes":[{"value":"/ Reflection info for entry point names.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":94855,"byte_end":94897,"line_start":222,"line_end":222,"column_start":1,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":95251,"byte_end":95268,"line_start":231,"line_end":231,"column_start":9,"column_end":26},"name":"entry_point_names","qualname":"::back::hlsl::ReflectionInfo::entry_point_names","value":"std::vec::Vec<std::result::Result<std::string::String, back::hlsl::EntryPointError>>","parent":{"krate":0,"index":3462},"children":[],"decl_id":null,"docs":" Mapping of the entry point names.","sig":null,"attributes":[{"value":"/ Mapping of the entry point names.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":94949,"byte_end":94986,"line_start":225,"line_end":225,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":94991,"byte_end":94994,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Each item in the array corresponds to an entry point index. The real entry point name may be different if one of the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":94999,"byte_end":95119,"line_start":227,"line_end":227,"column_start":5,"column_end":125}},{"value":"/ reserved words are used.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":95124,"byte_end":95152,"line_start":228,"line_end":228,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":95157,"byte_end":95160,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note: Some entry points may fail translation because of missing bindings.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":95165,"byte_end":95242,"line_start":230,"line_end":230,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3485},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":95382,"byte_end":95389,"line_start":237,"line_end":237,"column_start":5,"column_end":12},"name":"IoError","qualname":"::back::hlsl::Error::IoError","value":"Error::IoError(FmtError)","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":95356,"byte_end":95377,"line_start":236,"line_end":236,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3488},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":95491,"byte_end":95508,"line_start":239,"line_end":239,"column_start":5,"column_end":22},"name":"UnsupportedScalar","qualname":"::back::hlsl::Error::UnsupportedScalar","value":"Error::UnsupportedScalar(crate::ScalarKind, crate::Bytes)","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"A scalar with an unsupported width was requested: {0:?} {1:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":95413,"byte_end":95486,"line_start":238,"line_end":238,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3492},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":95567,"byte_end":95580,"line_start":241,"line_end":241,"column_start":5,"column_end":18},"name":"Unimplemented","qualname":"::back::hlsl::Error::Unimplemented","value":"Error::Unimplemented(String)","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"{0}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":95547,"byte_end":95562,"line_start":240,"line_end":240,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3495},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":95658,"byte_end":95664,"line_start":243,"line_end":243,"column_start":5,"column_end":11},"name":"Custom","qualname":"::back::hlsl::Error::Custom","value":"Error::Custom(String)","parent":{"krate":0,"index":3466},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"{0}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":95638,"byte_end":95653,"line_start":242,"line_end":242,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":3466},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":95344,"byte_end":95349,"line_start":235,"line_end":235,"column_start":10,"column_end":15},"name":"Error","qualname":"::back::hlsl::Error","value":"pub enum Error {\n    IoError(FmtError),\n    UnsupportedScalar(crate::ScalarKind, crate::Bytes),\n    Unimplemented(String),\n    Custom(String),\n}","parent":null,"children":[{"krate":0,"index":3485},{"krate":0,"index":3488},{"krate":0,"index":3492},{"krate":0,"index":3495}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":96285,"byte_end":96291,"line_start":265,"line_end":265,"column_start":12,"column_end":18},"name":"Writer","qualname":"::back::hlsl::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":588},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spv","qualname":"::back::spv","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":708},{"krate":0,"index":729},{"krate":0,"index":832},{"krate":0,"index":895},{"krate":0,"index":1003},{"krate":0,"index":1048},{"krate":0,"index":1067},{"krate":0,"index":1102},{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":3507},{"krate":0,"index":3513},{"krate":0,"index":3515},{"krate":0,"index":3527},{"krate":0,"index":1322},{"krate":0,"index":1328},{"krate":0,"index":3529},{"krate":0,"index":3530},{"krate":0,"index":3532},{"krate":0,"index":3534},{"krate":0,"index":3535},{"krate":0,"index":3560},{"krate":0,"index":3563},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1342},{"krate":0,"index":1346},{"krate":0,"index":3565},{"krate":0,"index":3571},{"krate":0,"index":1349},{"krate":0,"index":3573},{"krate":0,"index":3578},{"krate":0,"index":3580},{"krate":0,"index":3581},{"krate":0,"index":3584},{"krate":0,"index":3587},{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3591},{"krate":0,"index":3593},{"krate":0,"index":3595},{"krate":0,"index":3596},{"krate":0,"index":3597},{"krate":0,"index":3600},{"krate":0,"index":3601},{"krate":0,"index":3603},{"krate":0,"index":3605},{"krate":0,"index":3607},{"krate":0,"index":3609},{"krate":0,"index":3612},{"krate":0,"index":3620},{"krate":0,"index":3622},{"krate":0,"index":3624},{"krate":0,"index":3626},{"krate":0,"index":3628},{"krate":0,"index":3652},{"krate":0,"index":3655},{"krate":0,"index":3657},{"krate":0,"index":3660},{"krate":0,"index":3662},{"krate":0,"index":3665},{"krate":0,"index":3667},{"krate":0,"index":3670},{"krate":0,"index":3672},{"krate":0,"index":3675},{"krate":0,"index":3678},{"krate":0,"index":1352},{"krate":0,"index":3695},{"krate":0,"index":3721},{"krate":0,"index":3723},{"krate":0,"index":3724},{"krate":0,"index":3727},{"krate":0,"index":3730},{"krate":0,"index":3731},{"krate":0,"index":3733},{"krate":0,"index":3734},{"krate":0,"index":3736},{"krate":0,"index":3743},{"krate":0,"index":3745},{"krate":0,"index":3746},{"krate":0,"index":3749},{"krate":0,"index":3752},{"krate":0,"index":3753},{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":1355},{"krate":0,"index":3758},{"krate":0,"index":3761},{"krate":0,"index":3763},{"krate":0,"index":3764},{"krate":0,"index":3767},{"krate":0,"index":3769},{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":1357},{"krate":0,"index":3775},{"krate":0,"index":3782},{"krate":0,"index":3784},{"krate":0,"index":3786},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1363},{"krate":0,"index":1365},{"krate":0,"index":3788},{"krate":0,"index":3792},{"krate":0,"index":1367},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1383},{"krate":0,"index":3794},{"krate":0,"index":3797},{"krate":0,"index":3799},{"krate":0,"index":3800},{"krate":0,"index":1389},{"krate":0,"index":3802},{"krate":0,"index":3804},{"krate":0,"index":3805},{"krate":0,"index":3806},{"krate":0,"index":3809},{"krate":0,"index":3810},{"krate":0,"index":3812},{"krate":0,"index":3814},{"krate":0,"index":3816},{"krate":0,"index":3818},{"krate":0,"index":3821},{"krate":0,"index":3830},{"krate":0,"index":3832},{"krate":0,"index":3834},{"krate":0,"index":3836},{"krate":0,"index":3838},{"krate":0,"index":3863},{"krate":0,"index":3866},{"krate":0,"index":3868},{"krate":0,"index":3871},{"krate":0,"index":3873},{"krate":0,"index":3876},{"krate":0,"index":3878},{"krate":0,"index":3881},{"krate":0,"index":3883},{"krate":0,"index":3886},{"krate":0,"index":3889},{"krate":0,"index":3909},{"krate":0,"index":3911},{"krate":0,"index":3913},{"krate":0,"index":3915},{"krate":0,"index":3917},{"krate":0,"index":3918},{"krate":0,"index":3921},{"krate":0,"index":3922},{"krate":0,"index":3924},{"krate":0,"index":1411},{"krate":0,"index":3927},{"krate":0,"index":3933},{"krate":0,"index":3935},{"krate":0,"index":1412},{"krate":0,"index":3937},{"krate":0,"index":3940},{"krate":0,"index":3942},{"krate":0,"index":3944},{"krate":0,"index":3945},{"krate":0,"index":3948},{"krate":0,"index":3949},{"krate":0,"index":3951},{"krate":0,"index":1414}],"decl_id":null,"docs":"Backend for [SPIR-V][spv] (Standard Portable Intermediate Representation).","sig":null,"attributes":[{"value":"cfg(feature = \"spv-out\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":80191,"byte_end":80218,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"*\nBackend for [SPIR-V][spv] (Standard Portable Intermediate Representation).\n\n[spv]: https://www.khronos.org/registry/SPIR-V/\n*/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":290716,"byte_end":290846,"line_start":1,"line_end":5,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":770},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":410714,"byte_end":410720,"line_start":59,"line_end":59,"column_start":10,"column_end":16},"name":"Output","qualname":"::back::spv::image::Access::Output","value":"type Output: MergeTuple + Copy + Clone;","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" The Rust type that represents SPIR-V values and types for this access.","sig":null,"attributes":[{"value":"/ The Rust type that represents SPIR-V values and types for this access.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":410347,"byte_end":410421,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":410426,"byte_end":410429,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ For operations like loads, this is `Word`. For operations like stores,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":410434,"byte_end":410508,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ this is `()`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":410513,"byte_end":410530,"line_start":54,"line_end":54,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":410535,"byte_end":410538,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ For `ReadZeroSkipWrite`, this will be the type of the selection","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":410543,"byte_end":410610,"line_start":56,"line_end":56,"column_start":5,"column_end":72}},{"value":"/ construct that performs the bounds checks, so it must implement","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":410615,"byte_end":410682,"line_start":57,"line_end":57,"column_start":5,"column_end":72}},{"value":"/ `MergeTuple`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":410687,"byte_end":410704,"line_start":58,"line_end":58,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\writer.rs","byte_start":517777,"byte_end":517780,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer>::new","value":"pub fn new(&Options) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\writer.rs","byte_start":579254,"byte_end":579259,"line_start":1598,"line_end":1598,"column_start":12,"column_end":17},"name":"write","qualname":"<Writer>::write","value":"pub fn write(&mut Self, &crate::Module, &ModuleInfo, Option<&PipelineOptions>,\n&mut Vec<Word>) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\writer.rs","byte_start":580244,"byte_end":580265,"line_start":1629,"line_end":1629,"column_start":18,"column_end":39},"name":"get_capabilities_used","qualname":"<Writer>::get_capabilities_used","value":"pub const fn get_capabilities_used(&Self)\n-> &crate::FastHashSet<spirv::Capability>","parent":null,"children":[],"decl_id":null,"docs":" Return the set of capabilities the last module written used.\n","sig":null,"attributes":[{"value":"/ Return the set of capabilities the last module written used.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\writer.rs","byte_start":580162,"byte_end":580226,"line_start":1628,"line_end":1628,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":291956,"byte_end":291974,"line_start":63,"line_end":63,"column_start":5,"column_end":23},"name":"EntryPointNotFound","qualname":"::back::spv::Error::EntryPointNotFound","value":"Error::EntryPointNotFound","parent":{"krate":0,"index":3529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The requested entry point couldn't be found\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":291896,"byte_end":291951,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3546},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":292034,"byte_end":292052,"line_start":65,"line_end":65,"column_start":5,"column_end":23},"name":"UnsupportedVersion","qualname":"::back::spv::Error::UnsupportedVersion","value":"Error::UnsupportedVersion(u8, u8)","parent":{"krate":0,"index":3529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"target SPIRV-{0}.{1} is not supported\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":291980,"byte_end":292029,"line_start":64,"line_end":64,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3550},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":292164,"byte_end":292183,"line_start":67,"line_end":67,"column_start":5,"column_end":24},"name":"MissingCapabilities","qualname":"::back::spv::Error::MissingCapabilities","value":"Error::MissingCapabilities(&'static str, Vec<Capability>)","parent":{"krate":0,"index":3529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"using {0} requires at least one of the capabilities {1:?}, but none are available\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":292066,"byte_end":292159,"line_start":66,"line_end":66,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3554},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":292254,"byte_end":292275,"line_start":69,"line_end":69,"column_start":5,"column_end":26},"name":"FeatureNotImplemented","qualname":"::back::spv::Error::FeatureNotImplemented","value":"Error::FeatureNotImplemented(&'static str)","parent":{"krate":0,"index":3529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"unimplemented {0}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":292220,"byte_end":292249,"line_start":68,"line_end":68,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3557},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":292349,"byte_end":292359,"line_start":71,"line_end":71,"column_start":5,"column_end":15},"name":"Validation","qualname":"::back::spv::Error::Validation","value":"Error::Validation(&'static str)","parent":{"krate":0,"index":3529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"module is not validated properly: {0}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":292295,"byte_end":292344,"line_start":70,"line_end":70,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":3529},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":291884,"byte_end":291889,"line_start":61,"line_end":61,"column_start":10,"column_end":15},"name":"Error","qualname":"::back::spv::Error","value":"pub enum Error {\n    EntryPointNotFound,\n    UnsupportedVersion(u8, u8),\n    MissingCapabilities(&'static str, Vec<Capability>),\n    FeatureNotImplemented(&'static str),\n    Validation(&'static str),\n}","parent":null,"children":[{"krate":0,"index":3544},{"krate":0,"index":3546},{"krate":0,"index":3550},{"krate":0,"index":3554},{"krate":0,"index":3557}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3593},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":295283,"byte_end":295297,"line_start":178,"line_end":178,"column_start":16,"column_end":30},"name":"ImageTypeFlags","qualname":"::back::spv::ImageTypeFlags","value":"ImageTypeFlags {  }","parent":null,"children":[{"krate":0,"index":3594}],"decl_id":null,"docs":" Flags corresponding to the boolean(-ish) parameters to OpTypeImage.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3629},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":295318,"byte_end":295323,"line_start":179,"line_end":179,"column_start":15,"column_end":20},"name":"DEPTH","qualname":"::back::spv::ImageTypeFlags::DEPTH","value":"Self","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3630},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":295345,"byte_end":295352,"line_start":180,"line_end":180,"column_start":15,"column_end":22},"name":"ARRAYED","qualname":"::back::spv::ImageTypeFlags::ARRAYED","value":"Self","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3631},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":295374,"byte_end":295386,"line_start":181,"line_end":181,"column_start":15,"column_end":27},"name":"MULTISAMPLED","qualname":"::back::spv::ImageTypeFlags::MULTISAMPLED","value":"Self","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3632},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":295408,"byte_end":295415,"line_start":182,"line_end":182,"column_start":15,"column_end":22},"name":"SAMPLED","qualname":"::back::spv::ImageTypeFlags::SAMPLED","value":"Self","parent":{"krate":0,"index":3628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":308252,"byte_end":308258,"line_start":562,"line_end":562,"column_start":12,"column_end":18},"name":"Writer","qualname":"::back::spv::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3802},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":309810,"byte_end":309821,"line_start":605,"line_end":605,"column_start":16,"column_end":27},"name":"WriterFlags","qualname":"::back::spv::WriterFlags","value":"WriterFlags {  }","parent":null,"children":[{"krate":0,"index":3803}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3839},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":309892,"byte_end":309897,"line_start":607,"line_end":607,"column_start":15,"column_end":20},"name":"DEBUG","qualname":"::back::spv::WriterFlags::DEBUG","value":"Self","parent":{"krate":0,"index":3838},"children":[],"decl_id":null,"docs":" Include debug labels for everything.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3840},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":309980,"byte_end":310003,"line_start":609,"line_end":609,"column_start":15,"column_end":38},"name":"ADJUST_COORDINATE_SPACE","qualname":"::back::spv::WriterFlags::ADJUST_COORDINATE_SPACE","value":"Self","parent":{"krate":0,"index":3838},"children":[],"decl_id":null,"docs":" Flip Y coordinate of `BuiltIn::Position` output.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3841},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":310184,"byte_end":310198,"line_start":613,"line_end":613,"column_start":15,"column_end":29},"name":"LABEL_VARYINGS","qualname":"::back::spv::WriterFlags::LABEL_VARYINGS","value":"Self","parent":{"krate":0,"index":3838},"children":[],"decl_id":null,"docs":" Emit `OpName` for input/output locations.\n Contrary to spec, some drivers treat it as semantic, not allowing\n any conflicts.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3842},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":310352,"byte_end":310368,"line_start":616,"line_end":616,"column_start":15,"column_end":31},"name":"FORCE_POINT_SIZE","qualname":"::back::spv::WriterFlags::FORCE_POINT_SIZE","value":"Self","parent":{"krate":0,"index":3838},"children":[],"decl_id":null,"docs":" Emit `PointSize` output builtin to vertex shaders, which is\n required for drawing with `PointList` topology.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":3843},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":310453,"byte_end":310469,"line_start":618,"line_end":618,"column_start":15,"column_end":31},"name":"CLAMP_FRAG_DEPTH","qualname":"::back::spv::WriterFlags::CLAMP_FRAG_DEPTH","value":"Self","parent":{"krate":0,"index":3838},"children":[],"decl_id":null,"docs":" Clamp `BuiltIn::FragDepth` output between 0 and 1.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3909},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":310678,"byte_end":310689,"line_start":625,"line_end":625,"column_start":12,"column_end":23},"name":"BindingInfo","qualname":"::back::spv::BindingInfo","value":"BindingInfo { binding_array_size }","parent":null,"children":[{"krate":0,"index":3910}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3910},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":310777,"byte_end":310795,"line_start":627,"line_end":627,"column_start":9,"column_end":27},"name":"binding_array_size","qualname":"::back::spv::BindingInfo::binding_array_size","value":"std::option::Option<u32>","parent":{"krate":0,"index":3909},"children":[],"decl_id":null,"docs":" If the binding is an unsized binding array, this overrides the size.\n","sig":null,"attributes":[{"value":"/ If the binding is an unsized binding array, this overrides the size.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":310696,"byte_end":310768,"line_start":626,"line_end":626,"column_start":5,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":310891,"byte_end":310901,"line_start":631,"line_end":631,"column_start":10,"column_end":20},"name":"BindingMap","qualname":"::back::spv::BindingMap","value":"std::collections::BTreeMap<crate::ResourceBinding, BindingInfo>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3927},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311005,"byte_end":311012,"line_start":634,"line_end":634,"column_start":12,"column_end":19},"name":"Options","qualname":"::back::spv::Options","value":"Options { lang_version, flags, binding_map, capabilities, bounds_check_policies }","parent":null,"children":[{"krate":0,"index":3928},{"krate":0,"index":3929},{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3932}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3928},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311076,"byte_end":311088,"line_start":636,"line_end":636,"column_start":9,"column_end":21},"name":"lang_version","qualname":"::back::spv::Options::lang_version","value":"(u8, u8)","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":" (Major, Minor) target version of the SPIR-V.\n","sig":null,"attributes":[{"value":"/ (Major, Minor) target version of the SPIR-V.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311019,"byte_end":311067,"line_start":635,"line_end":635,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3929},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311153,"byte_end":311158,"line_start":639,"line_end":639,"column_start":9,"column_end":14},"name":"flags","qualname":"::back::spv::Options::flags","value":"back::spv::WriterFlags","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":" Configuration flags for the writer.\n","sig":null,"attributes":[{"value":"/ Configuration flags for the writer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311105,"byte_end":311144,"line_start":638,"line_end":638,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3930},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311241,"byte_end":311252,"line_start":642,"line_end":642,"column_start":9,"column_end":20},"name":"binding_map","qualname":"::back::spv::Options::binding_map","value":"std::collections::BTreeMap<ResourceBinding, back::spv::BindingInfo>","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":" Map of resources to information about the binding.\n","sig":null,"attributes":[{"value":"/ Map of resources to information about the binding.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311178,"byte_end":311232,"line_start":641,"line_end":641,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3931},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311492,"byte_end":311504,"line_start":648,"line_end":648,"column_start":9,"column_end":21},"name":"capabilities","qualname":"::back::spv::Options::capabilities","value":"std::option::Option<std::collections::HashSet<spirv::Capability, std::hash::BuildHasherDefault<rustc_hash::FxHasher>>>","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":" If given, the set of capabilities modules are allowed to use. Code that\n requires capabilities beyond these is rejected with an error.","sig":null,"attributes":[{"value":"/ If given, the set of capabilities modules are allowed to use. Code that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311271,"byte_end":311346,"line_start":644,"line_end":644,"column_start":5,"column_end":80}},{"value":"/ requires capabilities beyond these is rejected with an error.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311351,"byte_end":311416,"line_start":645,"line_end":645,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311421,"byte_end":311424,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ If this is `None`, all capabilities are permitted.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311429,"byte_end":311483,"line_start":647,"line_end":647,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3932},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311672,"byte_end":311693,"line_start":652,"line_end":652,"column_start":9,"column_end":30},"name":"bounds_check_policies","qualname":"::back::spv::Options::bounds_check_policies","value":"proc::index::BoundsCheckPolicies","parent":{"krate":0,"index":3927},"children":[],"decl_id":null,"docs":" How should generate code handle array, vector, matrix, or image texel\n indices that are out of range?\n","sig":null,"attributes":[{"value":"/ How should generate code handle array, vector, matrix, or image texel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311551,"byte_end":311624,"line_start":650,"line_end":650,"column_start":5,"column_end":78}},{"value":"/ indices that are out of range?","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311629,"byte_end":311663,"line_start":651,"line_end":651,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3937},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":312497,"byte_end":312512,"line_start":677,"line_end":677,"column_start":12,"column_end":27},"name":"PipelineOptions","qualname":"::back::spv::PipelineOptions","value":"PipelineOptions { shader_stage, entry_point }","parent":null,"children":[{"krate":0,"index":3938},{"krate":0,"index":3939}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3938},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":312561,"byte_end":312573,"line_start":679,"line_end":679,"column_start":9,"column_end":21},"name":"shader_stage","qualname":"::back::spv::PipelineOptions::shader_stage","value":"ShaderStage","parent":{"krate":0,"index":3937},"children":[],"decl_id":null,"docs":" The stage of the entry point.\n","sig":null,"attributes":[{"value":"/ The stage of the entry point.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":312519,"byte_end":312552,"line_start":678,"line_end":678,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3939},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":312749,"byte_end":312760,"line_start":683,"line_end":683,"column_start":9,"column_end":20},"name":"entry_point","qualname":"::back::spv::PipelineOptions::entry_point","value":"std::string::String","parent":{"krate":0,"index":3937},"children":[],"decl_id":null,"docs":" The name of the entry point.","sig":null,"attributes":[{"value":"/ The name of the entry point.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":312599,"byte_end":312631,"line_start":680,"line_end":680,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":312636,"byte_end":312639,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ If no entry point that matches is found while creating a [`Writer`], a error will be thrown.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":312644,"byte_end":312740,"line_start":682,"line_end":682,"column_start":5,"column_end":101}}]},{"kind":"Function","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":312780,"byte_end":312789,"line_start":686,"line_end":686,"column_start":8,"column_end":17},"name":"write_vec","qualname":"::back::spv::write_vec","value":"pub fn write_vec(&crate::Module, &crate::valid::ModuleInfo, &Options,\nOption<&PipelineOptions>) -> Result<Vec<u32>, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":87128,"byte_end":87141,"line_start":200,"line_end":200,"column_start":18,"column_end":31},"name":"is_terminator","qualname":"<crate::Statement>::is_terminator","value":"pub const fn is_terminator(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the statement directly terminates the current block.","sig":null,"attributes":[{"value":"/ Returns true if the statement directly terminates the current block.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":86959,"byte_end":87031,"line_start":197,"line_end":197,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":87036,"byte_end":87039,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Used to decide whether case blocks require a explicit `break`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":87044,"byte_end":87110,"line_start":199,"line_end":199,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":3960},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":580977,"byte_end":580982,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Block","qualname":"::block::Block","value":"Block {  }","parent":null,"children":[{"krate":0,"index":3961},{"krate":0,"index":3962}],"decl_id":null,"docs":" A code block is a vector of statements, with maybe a vector of spans.\n","sig":null,"attributes":[{"value":"/ A code block is a vector of statements, with maybe a vector of spans.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":580678,"byte_end":580751,"line_start":4,"line_end":4,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":581151,"byte_end":581154,"line_start":17,"line_end":17,"column_start":18,"column_end":21},"name":"new","qualname":"<Block>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":581312,"byte_end":581320,"line_start":25,"line_end":25,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<Block>::from_vec","value":"pub fn from_vec(Vec<Statement>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":581620,"byte_end":581633,"line_start":37,"line_end":37,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Block>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":581873,"byte_end":581877,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"push","qualname":"<Block>::push","value":"pub fn push(&mut Self, Statement, Span)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":581835,"byte_end":581861,"line_start":45,"line_end":45,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":582034,"byte_end":582040,"line_start":52,"line_end":52,"column_start":12,"column_end":18},"name":"extend","qualname":"<Block>::extend","value":"pub fn extend(&mut Self, Option<(Statement, Span)>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":582190,"byte_end":582202,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"extend_block","qualname":"<Block>::extend_block","value":"pub fn extend_block(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":582366,"byte_end":582372,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"name":"append","qualname":"<Block>::append","value":"pub fn append(&mut Self, &mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":582551,"byte_end":582555,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"cull","qualname":"<Block>::cull","value":"pub fn cull<R: RangeBounds<usize> + Clone>(&mut Self, R)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":582738,"byte_end":582744,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"splice","qualname":"<Block>::splice","value":"pub fn splice<R: RangeBounds<usize> + Clone>(&mut Self, R, Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":583007,"byte_end":583016,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"span_iter","qualname":"<Block>::span_iter","value":"pub fn span_iter(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":583317,"byte_end":583330,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"span_iter_mut","qualname":"<Block>::span_iter_mut","value":"pub fn span_iter_mut(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":583657,"byte_end":583665,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Block>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":583730,"byte_end":583733,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"len","qualname":"<Block>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"front","qualname":"::front","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1504},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2162},{"krate":0,"index":2165},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2172},{"krate":0,"index":2175},{"krate":0,"index":2178},{"krate":0,"index":4353},{"krate":0,"index":4355},{"krate":0,"index":4357},{"krate":0,"index":2181},{"krate":0,"index":2184},{"krate":0,"index":4359},{"krate":0,"index":4361},{"krate":0,"index":4363},{"krate":0,"index":2186},{"krate":0,"index":2195}],"decl_id":null,"docs":"Frontend parsers that consume binary and text shaders and load them into [`Module`](super::Module)s.\n","sig":null,"attributes":[{"value":"*\nFrontend parsers that consume binary and text shaders and load them into [`Module`](super::Module)s.\n*/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":584610,"byte_end":584717,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":590542,"byte_end":590569,"line_start":41,"line_end":41,"column_start":12,"column_end":39},"name":"apply_default_interpolation","qualname":"<crate::Binding>::apply_default_interpolation","value":"pub fn apply_default_interpolation(&mut Self, &crate::TypeInner)","parent":null,"children":[],"decl_id":null,"docs":" Apply the usual default interpolation for `ty` to `binding`.","sig":null,"attributes":[{"value":"/ Apply the usual default interpolation for `ty` to `binding`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":588615,"byte_end":588679,"line_start":6,"line_end":6,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":588684,"byte_end":588687,"line_start":7,"line_end":7,"column_start":5,"column_end":8}},{"value":"/ This function is a utility front ends may use to satisfy the Naga IR's","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":588692,"byte_end":588766,"line_start":8,"line_end":8,"column_start":5,"column_end":79}},{"value":"/ requirement, meant to ensure that input languages' policies have been","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":588771,"byte_end":588844,"line_start":9,"line_end":9,"column_start":5,"column_end":78}},{"value":"/ applied appropriately, that all I/O `Binding`s from the vertex shader to the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":588849,"byte_end":588929,"line_start":10,"line_end":10,"column_start":5,"column_end":85}},{"value":"/ fragment shader must have non-`None` `interpolation` values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":588934,"byte_end":588998,"line_start":11,"line_end":11,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589003,"byte_end":589006,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ All the shader languages Naga supports have similar rules:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589011,"byte_end":589073,"line_start":13,"line_end":13,"column_start":5,"column_end":67}},{"value":"/ perspective-correct, center-sampled interpolation is the default for any","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589078,"byte_end":589154,"line_start":14,"line_end":14,"column_start":5,"column_end":81}},{"value":"/ binding that can vary, and everything else either defaults to flat, or","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589159,"byte_end":589233,"line_start":15,"line_end":15,"column_start":5,"column_end":79}},{"value":"/ requires an explicit flat qualifier/attribute/what-have-you.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589238,"byte_end":589302,"line_start":16,"line_end":16,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589307,"byte_end":589310,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ If `binding` is not a [`Location`] binding, or if its [`interpolation`] is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589315,"byte_end":589393,"line_start":18,"line_end":18,"column_start":5,"column_end":83}},{"value":"/ already set, then make no changes. Otherwise, set `binding`'s interpolation","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589398,"byte_end":589477,"line_start":19,"line_end":19,"column_start":5,"column_end":84}},{"value":"/ and sampling to reasonable defaults depending on `ty`, the type of the value","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589482,"byte_end":589562,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ being interpolated:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589567,"byte_end":589590,"line_start":21,"line_end":21,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589595,"byte_end":589598,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ - If `ty` is a floating-point scalar, vector, or matrix type, then","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589603,"byte_end":589673,"line_start":23,"line_end":23,"column_start":5,"column_end":75}},{"value":"/   default to [`Perspective`] interpolation and [`Center`] sampling.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589678,"byte_end":589749,"line_start":24,"line_end":24,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589754,"byte_end":589757,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ - If `ty` is an integral scalar or vector, then default to [`Flat`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589762,"byte_end":589833,"line_start":26,"line_end":26,"column_start":5,"column_end":76}},{"value":"/   interpolation, which has no associated sampling.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589838,"byte_end":589892,"line_start":27,"line_end":27,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589897,"byte_end":589900,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ - For any other types, make no change. Such types are not permitted as","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589905,"byte_end":589979,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/   user-defined IO values, and will probably be flagged by the verifier","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":589984,"byte_end":590058,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":590063,"byte_end":590066,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ When structs appear in input or output types, each member ought to have its","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":590071,"byte_end":590150,"line_start":32,"line_end":32,"column_start":5,"column_end":84}},{"value":"/ own [`Binding`], so structs are simply covered by the third case.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":590155,"byte_end":590224,"line_start":33,"line_end":33,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":590229,"byte_end":590232,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ [`Binding`]: crate::Binding","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":590237,"byte_end":590268,"line_start":35,"line_end":35,"column_start":5,"column_end":36}},{"value":"/ [`Location`]: crate::Binding::Location","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":590273,"byte_end":590315,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/ [`interpolation`]: crate::Binding::Location::interpolation","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":590320,"byte_end":590382,"line_start":37,"line_end":37,"column_start":5,"column_end":67}},{"value":"/ [`Perspective`]: crate::Interpolation::Perspective","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":590387,"byte_end":590441,"line_start":38,"line_end":38,"column_start":5,"column_end":59}},{"value":"/ [`Flat`]: crate::Interpolation::Flat","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":590446,"byte_end":590486,"line_start":39,"line_end":39,"column_start":5,"column_end":45}},{"value":"/ [`Center`]: crate::Sampling::Center","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":590491,"byte_end":590530,"line_start":40,"line_end":40,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":1504},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wgsl","qualname":"::front::wgsl","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","parent":null,"children":[{"krate":0,"index":1505},{"krate":0,"index":1626},{"krate":0,"index":1653},{"krate":0,"index":1714},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1775},{"krate":0,"index":1778},{"krate":0,"index":1781},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1788},{"krate":0,"index":1791},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1803},{"krate":0,"index":1806},{"krate":0,"index":1809},{"krate":0,"index":1812},{"krate":0,"index":1815},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1830},{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1861},{"krate":0,"index":1864},{"krate":0,"index":1867},{"krate":0,"index":1870},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":4004},{"krate":0,"index":4045},{"krate":0,"index":4047},{"krate":0,"index":4050},{"krate":0,"index":4053},{"krate":0,"index":4055},{"krate":0,"index":4059},{"krate":0,"index":4066},{"krate":0,"index":4067},{"krate":0,"index":4069},{"krate":0,"index":4071},{"krate":0,"index":4072},{"krate":0,"index":4074},{"krate":0,"index":4102},{"krate":0,"index":4104},{"krate":0,"index":4107},{"krate":0,"index":4110},{"krate":0,"index":4112},{"krate":0,"index":4116},{"krate":0,"index":4117},{"krate":0,"index":4119},{"krate":0,"index":4120},{"krate":0,"index":4122},{"krate":0,"index":4123},{"krate":0,"index":4125},{"krate":0,"index":4126},{"krate":0,"index":4134},{"krate":0,"index":4288},{"krate":0,"index":4291},{"krate":0,"index":1876},{"krate":0,"index":1879},{"krate":0,"index":1884},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1892},{"krate":0,"index":1896},{"krate":0,"index":1900},{"krate":0,"index":1914},{"krate":0,"index":1920},{"krate":0,"index":1923},{"krate":0,"index":1938},{"krate":0,"index":4294},{"krate":0,"index":4297},{"krate":0,"index":4299},{"krate":0,"index":4300},{"krate":0,"index":1956},{"krate":0,"index":1958},{"krate":0,"index":1967},{"krate":0,"index":4302},{"krate":0,"index":4303},{"krate":0,"index":4305},{"krate":0,"index":4330},{"krate":0,"index":4332},{"krate":0,"index":4334},{"krate":0,"index":4335},{"krate":0,"index":1977},{"krate":0,"index":4337},{"krate":0,"index":4343},{"krate":0,"index":1978},{"krate":0,"index":1983},{"krate":0,"index":1990},{"krate":0,"index":4345},{"krate":0,"index":4349},{"krate":0,"index":4351},{"krate":0,"index":1992},{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2009},{"krate":0,"index":2014},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2147},{"krate":0,"index":2150},{"krate":0,"index":2153}],"decl_id":null,"docs":"Frontend for [WGSL][wgsl] (WebGPU Shading Language).","sig":null,"attributes":[{"value":"cfg(feature = \"wgsl-in\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":584820,"byte_end":584847,"line_start":11,"line_end":11,"column_start":1,"column_end":28}},{"value":"*\nFrontend for [WGSL][wgsl] (WebGPU Shading Language).\n\n[wgsl]: https://gpuweb.github.io/gpuweb/wgsl.html\n*/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":591310,"byte_end":591420,"line_start":1,"line_end":5,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3980},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":838535,"byte_end":838546,"line_start":9,"line_end":9,"column_start":5,"column_end":16},"name":"AbstractInt","qualname":"::front::wgsl::number::Number::AbstractInt","value":"Number::AbstractInt(i64)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":" Abstract Int (-2^63 ≤ i < 2^63)\n","sig":null,"attributes":[{"value":"/ Abstract Int (-2^63 ≤ i < 2^63)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":838493,"byte_end":838530,"line_start":8,"line_end":8,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3983},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":838600,"byte_end":838613,"line_start":11,"line_end":11,"column_start":5,"column_end":18},"name":"AbstractFloat","qualname":"::front::wgsl::number::Number::AbstractFloat","value":"Number::AbstractFloat(f64)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":" Abstract Float (IEEE-754 binary64)\n","sig":null,"attributes":[{"value":"/ Abstract Float (IEEE-754 binary64)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":838557,"byte_end":838595,"line_start":10,"line_end":10,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3986},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":838645,"byte_end":838648,"line_start":13,"line_end":13,"column_start":5,"column_end":8},"name":"I32","qualname":"::front::wgsl::number::Number::I32","value":"Number::I32(i32)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":" Concrete i32\n","sig":null,"attributes":[{"value":"/ Concrete i32","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":838624,"byte_end":838640,"line_start":12,"line_end":12,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3989},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":838680,"byte_end":838683,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"U32","qualname":"::front::wgsl::number::Number::U32","value":"Number::U32(u32)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":" Concrete u32\n","sig":null,"attributes":[{"value":"/ Concrete u32","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":838659,"byte_end":838675,"line_start":14,"line_end":14,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3992},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":838715,"byte_end":838718,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"name":"F32","qualname":"::front::wgsl::number::Number::F32","value":"Number::F32(f32)","parent":{"krate":0,"index":3979},"children":[],"decl_id":null,"docs":" Concrete f32\n","sig":null,"attributes":[{"value":"/ Concrete f32","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":838694,"byte_end":838710,"line_start":16,"line_end":16,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":3979},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":838480,"byte_end":838486,"line_start":7,"line_end":7,"column_start":10,"column_end":16},"name":"Number","qualname":"::front::wgsl::number::Number","value":"pub enum Number {\n    AbstractInt(i64),\n    AbstractFloat(f64),\n    I32(i32),\n    U32(u32),\n    F32(f32),\n}","parent":null,"children":[{"krate":0,"index":3980},{"krate":0,"index":3983},{"krate":0,"index":3986},{"krate":0,"index":3989},{"krate":0,"index":3992}],"decl_id":null,"docs":" When using this type assume no Abstract Int/Float for now\n","sig":null,"attributes":[{"value":"/ When using this type assume no Abstract Int/Float for now","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":838368,"byte_end":838429,"line_start":5,"line_end":5,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4006},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592254,"byte_end":592263,"line_start":46,"line_end":46,"column_start":5,"column_end":14},"name":"Separator","qualname":"::front::wgsl::Token::Separator","value":"Token::Separator(char)","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4009},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592275,"byte_end":592280,"line_start":47,"line_end":47,"column_start":5,"column_end":10},"name":"Paren","qualname":"::front::wgsl::Token::Paren","value":"Token::Paren(char)","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4012},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592292,"byte_end":592301,"line_start":48,"line_end":48,"column_start":5,"column_end":14},"name":"Attribute","qualname":"::front::wgsl::Token::Attribute","value":"Token::Attribute","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592307,"byte_end":592313,"line_start":49,"line_end":49,"column_start":5,"column_end":11},"name":"Number","qualname":"::front::wgsl::Token::Number","value":"Token::Number(Result<Number, NumberError>)","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4017},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592348,"byte_end":592352,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Word","qualname":"::front::wgsl::Token::Word","value":"Token::Word(&'a str)","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4020},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592367,"byte_end":592376,"line_start":51,"line_end":51,"column_start":5,"column_end":14},"name":"Operation","qualname":"::front::wgsl::Token::Operation","value":"Token::Operation(char)","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4023},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592388,"byte_end":592404,"line_start":52,"line_end":52,"column_start":5,"column_end":21},"name":"LogicalOperation","qualname":"::front::wgsl::Token::LogicalOperation","value":"Token::LogicalOperation(char)","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4026},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592416,"byte_end":592430,"line_start":53,"line_end":53,"column_start":5,"column_end":19},"name":"ShiftOperation","qualname":"::front::wgsl::Token::ShiftOperation","value":"Token::ShiftOperation(char)","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4029},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592442,"byte_end":592461,"line_start":54,"line_end":54,"column_start":5,"column_end":24},"name":"AssignmentOperation","qualname":"::front::wgsl::Token::AssignmentOperation","value":"Token::AssignmentOperation(char)","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4032},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592473,"byte_end":592491,"line_start":55,"line_end":55,"column_start":5,"column_end":23},"name":"IncrementOperation","qualname":"::front::wgsl::Token::IncrementOperation","value":"Token::IncrementOperation","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4034},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592497,"byte_end":592515,"line_start":56,"line_end":56,"column_start":5,"column_end":23},"name":"DecrementOperation","qualname":"::front::wgsl::Token::DecrementOperation","value":"Token::DecrementOperation","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4036},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592521,"byte_end":592526,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Arrow","qualname":"::front::wgsl::Token::Arrow","value":"Token::Arrow","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4038},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592532,"byte_end":592539,"line_start":58,"line_end":58,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::front::wgsl::Token::Unknown","value":"Token::Unknown(char)","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4041},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592551,"byte_end":592557,"line_start":59,"line_end":59,"column_start":5,"column_end":11},"name":"Trivia","qualname":"::front::wgsl::Token::Trivia","value":"Token::Trivia","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4043},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592563,"byte_end":592566,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"name":"End","qualname":"::front::wgsl::Token::End","value":"Token::End","parent":{"krate":0,"index":4004},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4004},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592238,"byte_end":592243,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"Token","qualname":"::front::wgsl::Token","value":"pub enum Token<'a> {\n    Separator(char),\n    Paren(char),\n    Attribute,\n    Number(Result<Number, NumberError>),\n    Word(&'a str),\n    Operation(char),\n    LogicalOperation(char),\n    ShiftOperation(char),\n    AssignmentOperation(char),\n    IncrementOperation,\n    DecrementOperation,\n    Arrow,\n    Unknown(char),\n    Trivia,\n    End,\n}","parent":null,"children":[{"krate":0,"index":4006},{"krate":0,"index":4009},{"krate":0,"index":4012},{"krate":0,"index":4014},{"krate":0,"index":4017},{"krate":0,"index":4020},{"krate":0,"index":4023},{"krate":0,"index":4026},{"krate":0,"index":4029},{"krate":0,"index":4032},{"krate":0,"index":4034},{"krate":0,"index":4036},{"krate":0,"index":4038},{"krate":0,"index":4041},{"krate":0,"index":4043}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4060},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592638,"byte_end":592641,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"I32","qualname":"::front::wgsl::NumberType::I32","value":"NumberType::I32","parent":{"krate":0,"index":4059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4062},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592647,"byte_end":592650,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"name":"U32","qualname":"::front::wgsl::NumberType::U32","value":"NumberType::U32","parent":{"krate":0,"index":4059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4064},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592656,"byte_end":592659,"line_start":67,"line_end":67,"column_start":5,"column_end":8},"name":"F32","qualname":"::front::wgsl::NumberType::F32","value":"NumberType::F32","parent":{"krate":0,"index":4059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4059},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592621,"byte_end":592631,"line_start":64,"line_end":64,"column_start":10,"column_end":20},"name":"NumberType","qualname":"::front::wgsl::NumberType","value":"pub enum NumberType { I32, U32, F32, }","parent":null,"children":[{"krate":0,"index":4060},{"krate":0,"index":4062},{"krate":0,"index":4064}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4076},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592738,"byte_end":592743,"line_start":72,"line_end":72,"column_start":5,"column_end":10},"name":"Token","qualname":"::front::wgsl::ExpectedToken::Token","value":"ExpectedToken::Token(Token)","parent":{"krate":0,"index":4074},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4079},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592760,"byte_end":592770,"line_start":73,"line_end":73,"column_start":5,"column_end":15},"name":"Identifier","qualname":"::front::wgsl::ExpectedToken::Identifier","value":"ExpectedToken::Identifier","parent":{"krate":0,"index":4074},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4081},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592776,"byte_end":592782,"line_start":74,"line_end":74,"column_start":5,"column_end":11},"name":"Number","qualname":"::front::wgsl::ExpectedToken::Number","value":"ExpectedToken::Number(NumberType)","parent":{"krate":0,"index":4074},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4084},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592800,"byte_end":592807,"line_start":75,"line_end":75,"column_start":5,"column_end":12},"name":"Integer","qualname":"::front::wgsl::ExpectedToken::Integer","value":"ExpectedToken::Integer","parent":{"krate":0,"index":4074},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4086},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592813,"byte_end":592821,"line_start":76,"line_end":76,"column_start":5,"column_end":13},"name":"Constant","qualname":"::front::wgsl::ExpectedToken::Constant","value":"ExpectedToken::Constant","parent":{"krate":0,"index":4074},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4088},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592892,"byte_end":592909,"line_start":78,"line_end":78,"column_start":5,"column_end":22},"name":"PrimaryExpression","qualname":"::front::wgsl::ExpectedToken::PrimaryExpression","value":"ExpectedToken::PrimaryExpression","parent":{"krate":0,"index":4074},"children":[],"decl_id":null,"docs":" Expected: constant, parenthesized expression, identifier\n","sig":null,"attributes":[{"value":"/ Expected: constant, parenthesized expression, identifier","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592827,"byte_end":592887,"line_start":77,"line_end":77,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4090},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592949,"byte_end":592958,"line_start":80,"line_end":80,"column_start":5,"column_end":14},"name":"FieldName","qualname":"::front::wgsl::ExpectedToken::FieldName","value":"ExpectedToken::FieldName","parent":{"krate":0,"index":4074},"children":[],"decl_id":null,"docs":" Expected: '}', identifier\n","sig":null,"attributes":[{"value":"/ Expected: '}', identifier","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592915,"byte_end":592944,"line_start":79,"line_end":79,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4092},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593003,"byte_end":593016,"line_start":82,"line_end":82,"column_start":5,"column_end":18},"name":"TypeAttribute","qualname":"::front::wgsl::ExpectedToken::TypeAttribute","value":"ExpectedToken::TypeAttribute","parent":{"krate":0,"index":4074},"children":[],"decl_id":null,"docs":" Expected: attribute for a type\n","sig":null,"attributes":[{"value":"/ Expected: attribute for a type","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592964,"byte_end":592998,"line_start":81,"line_end":81,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4094},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593055,"byte_end":593064,"line_start":84,"line_end":84,"column_start":5,"column_end":14},"name":"Statement","qualname":"::front::wgsl::ExpectedToken::Statement","value":"ExpectedToken::Statement","parent":{"krate":0,"index":4074},"children":[],"decl_id":null,"docs":" Expected: ';', '{', word\n","sig":null,"attributes":[{"value":"/ Expected: ';', '{', word","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593022,"byte_end":593050,"line_start":83,"line_end":83,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4096},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593111,"byte_end":593121,"line_start":86,"line_end":86,"column_start":5,"column_end":15},"name":"SwitchItem","qualname":"::front::wgsl::ExpectedToken::SwitchItem","value":"ExpectedToken::SwitchItem","parent":{"krate":0,"index":4074},"children":[],"decl_id":null,"docs":" Expected: 'case', 'default', '}'\n","sig":null,"attributes":[{"value":"/ Expected: 'case', 'default', '}'","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593070,"byte_end":593106,"line_start":85,"line_end":85,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4098},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593154,"byte_end":593176,"line_start":88,"line_end":88,"column_start":5,"column_end":27},"name":"WorkgroupSizeSeparator","qualname":"::front::wgsl::ExpectedToken::WorkgroupSizeSeparator","value":"ExpectedToken::WorkgroupSizeSeparator","parent":{"krate":0,"index":4074},"children":[],"decl_id":null,"docs":" Expected: ',', ')'\n","sig":null,"attributes":[{"value":"/ Expected: ',', ')'","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593127,"byte_end":593149,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4100},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593247,"byte_end":593257,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"GlobalItem","qualname":"::front::wgsl::ExpectedToken::GlobalItem","value":"ExpectedToken::GlobalItem","parent":{"krate":0,"index":4074},"children":[],"decl_id":null,"docs":" Expected: 'struct', 'let', 'var', 'type', ';', 'fn', eof\n","sig":null,"attributes":[{"value":"/ Expected: 'struct', 'let', 'var', 'type', ';', 'fn', eof","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593182,"byte_end":593242,"line_start":89,"line_end":89,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":4074},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":592714,"byte_end":592727,"line_start":71,"line_end":71,"column_start":10,"column_end":23},"name":"ExpectedToken","qualname":"::front::wgsl::ExpectedToken","value":"pub enum ExpectedToken<'a> {\n    Token(Token),\n    Identifier,\n    Number(NumberType),\n    Integer,\n    Constant,\n    PrimaryExpression,\n    FieldName,\n    TypeAttribute,\n    Statement,\n    SwitchItem,\n    WorkgroupSizeSeparator,\n    GlobalItem,\n}","parent":null,"children":[{"krate":0,"index":4076},{"krate":0,"index":4079},{"krate":0,"index":4081},{"krate":0,"index":4084},{"krate":0,"index":4086},{"krate":0,"index":4088},{"krate":0,"index":4090},{"krate":0,"index":4092},{"krate":0,"index":4094},{"krate":0,"index":4096},{"krate":0,"index":4098},{"krate":0,"index":4100}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4128},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593384,"byte_end":593391,"line_start":96,"line_end":96,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::front::wgsl::NumberError::Invalid","value":"NumberError::Invalid","parent":{"krate":0,"index":4116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"invalid numeric literal format\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593337,"byte_end":593379,"line_start":95,"line_end":95,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4130},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593462,"byte_end":593478,"line_start":98,"line_end":98,"column_start":5,"column_end":21},"name":"NotRepresentable","qualname":"::front::wgsl::NumberError::NotRepresentable","value":"NumberError::NotRepresentable","parent":{"krate":0,"index":4116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"numeric literal not representable by target type\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593397,"byte_end":593457,"line_start":97,"line_end":97,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4132},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593523,"byte_end":593539,"line_start":100,"line_end":100,"column_start":5,"column_end":21},"name":"UnimplementedF16","qualname":"::front::wgsl::NumberError::UnimplementedF16","value":"NumberError::UnimplementedF16","parent":{"krate":0,"index":4116},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"unimplemented f16 type\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593484,"byte_end":593518,"line_start":99,"line_end":99,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":4116},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593319,"byte_end":593330,"line_start":94,"line_end":94,"column_start":10,"column_end":21},"name":"NumberError","qualname":"::front::wgsl::NumberError","value":"pub enum NumberError { Invalid, NotRepresentable, UnimplementedF16, }","parent":null,"children":[{"krate":0,"index":4128},{"krate":0,"index":4130},{"krate":0,"index":4132}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4136},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593593,"byte_end":593603,"line_start":105,"line_end":105,"column_start":5,"column_end":15},"name":"Unexpected","qualname":"::front::wgsl::Error::Unexpected","value":"Error::Unexpected(TokenSpan, ExpectedToken)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4140},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593643,"byte_end":593663,"line_start":106,"line_end":106,"column_start":5,"column_end":25},"name":"UnexpectedComponents","qualname":"::front::wgsl::Error::UnexpectedComponents","value":"Error::UnexpectedComponents(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4143},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593675,"byte_end":593684,"line_start":107,"line_end":107,"column_start":5,"column_end":14},"name":"BadNumber","qualname":"::front::wgsl::Error::BadNumber","value":"Error::BadNumber(Span, NumberError)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4147},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593835,"byte_end":593846,"line_start":110,"line_end":110,"column_start":5,"column_end":16},"name":"NegativeInt","qualname":"::front::wgsl::Error::NegativeInt","value":"Error::NegativeInt(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":" A negative signed integer literal where both signed and unsigned,\n but only non-negative literals are allowed.\n","sig":null,"attributes":[{"value":"/ A negative signed integer literal where both signed and unsigned,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593709,"byte_end":593778,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ but only non-negative literals are allowed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593783,"byte_end":593830,"line_start":109,"line_end":109,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4150},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593858,"byte_end":593872,"line_start":111,"line_end":111,"column_start":5,"column_end":19},"name":"BadU32Constant","qualname":"::front::wgsl::Error::BadU32Constant","value":"Error::BadU32Constant(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4153},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593884,"byte_end":593903,"line_start":112,"line_end":112,"column_start":5,"column_end":24},"name":"BadMatrixScalarKind","qualname":"::front::wgsl::Error::BadMatrixScalarKind","value":"Error::BadMatrixScalarKind(Span, crate::ScalarKind, u8)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4158},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593938,"byte_end":593949,"line_start":113,"line_end":113,"column_start":5,"column_end":16},"name":"BadAccessor","qualname":"::front::wgsl::Error::BadAccessor","value":"Error::BadAccessor(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4161},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593961,"byte_end":593971,"line_start":114,"line_end":114,"column_start":5,"column_end":15},"name":"BadTexture","qualname":"::front::wgsl::Error::BadTexture","value":"Error::BadTexture(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4164},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593983,"byte_end":593994,"line_start":115,"line_end":115,"column_start":5,"column_end":16},"name":"BadTypeCast","qualname":"::front::wgsl::Error::BadTypeCast","value":"Error::BadTypeCast { span, from_type, to_type }","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4168},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594080,"byte_end":594100,"line_start":120,"line_end":120,"column_start":5,"column_end":25},"name":"BadTextureSampleType","qualname":"::front::wgsl::Error::BadTextureSampleType","value":"Error::BadTextureSampleType { span, kind, width }","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4172},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594186,"byte_end":594210,"line_start":125,"line_end":125,"column_start":5,"column_end":29},"name":"BadIncrDecrReferenceType","qualname":"::front::wgsl::Error::BadIncrDecrReferenceType","value":"Error::BadIncrDecrReferenceType(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4175},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594222,"byte_end":594236,"line_start":126,"line_end":126,"column_start":5,"column_end":19},"name":"InvalidResolve","qualname":"::front::wgsl::Error::InvalidResolve","value":"Error::InvalidResolve(ResolveError)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4178},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594256,"byte_end":594277,"line_start":127,"line_end":127,"column_start":5,"column_end":26},"name":"InvalidForInitializer","qualname":"::front::wgsl::Error::InvalidForInitializer","value":"Error::InvalidForInitializer(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4181},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594347,"byte_end":594361,"line_start":129,"line_end":129,"column_start":5,"column_end":19},"name":"InvalidBreakIf","qualname":"::front::wgsl::Error::InvalidBreakIf","value":"Error::InvalidBreakIf(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":" A break if appeared outside of a continuing block\n","sig":null,"attributes":[{"value":"/ A break if appeared outside of a continuing block","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594289,"byte_end":594342,"line_start":128,"line_end":128,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4184},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594373,"byte_end":594395,"line_start":130,"line_end":130,"column_start":5,"column_end":27},"name":"InvalidGatherComponent","qualname":"::front::wgsl::Error::InvalidGatherComponent","value":"Error::InvalidGatherComponent(Span, u32)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4188},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594412,"byte_end":594443,"line_start":131,"line_end":131,"column_start":5,"column_end":36},"name":"InvalidConstructorComponentType","qualname":"::front::wgsl::Error::InvalidConstructorComponentType","value":"Error::InvalidConstructorComponentType(Span, i32)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4192},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594460,"byte_end":594487,"line_start":132,"line_end":132,"column_start":5,"column_end":32},"name":"InvalidIdentifierUnderscore","qualname":"::front::wgsl::Error::InvalidIdentifierUnderscore","value":"Error::InvalidIdentifierUnderscore(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4195},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594499,"byte_end":594523,"line_start":133,"line_end":133,"column_start":5,"column_end":29},"name":"ReservedIdentifierPrefix","qualname":"::front::wgsl::Error::ReservedIdentifierPrefix","value":"Error::ReservedIdentifierPrefix(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4198},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594535,"byte_end":594554,"line_start":134,"line_end":134,"column_start":5,"column_end":24},"name":"UnknownAddressSpace","qualname":"::front::wgsl::Error::UnknownAddressSpace","value":"Error::UnknownAddressSpace(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4201},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594566,"byte_end":594582,"line_start":135,"line_end":135,"column_start":5,"column_end":21},"name":"UnknownAttribute","qualname":"::front::wgsl::Error::UnknownAttribute","value":"Error::UnknownAttribute(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4204},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594594,"byte_end":594608,"line_start":136,"line_end":136,"column_start":5,"column_end":19},"name":"UnknownBuiltin","qualname":"::front::wgsl::Error::UnknownBuiltin","value":"Error::UnknownBuiltin(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4207},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594620,"byte_end":594633,"line_start":137,"line_end":137,"column_start":5,"column_end":18},"name":"UnknownAccess","qualname":"::front::wgsl::Error::UnknownAccess","value":"Error::UnknownAccess(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4210},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594645,"byte_end":594663,"line_start":138,"line_end":138,"column_start":5,"column_end":23},"name":"UnknownShaderStage","qualname":"::front::wgsl::Error::UnknownShaderStage","value":"Error::UnknownShaderStage(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4213},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594675,"byte_end":594687,"line_start":139,"line_end":139,"column_start":5,"column_end":17},"name":"UnknownIdent","qualname":"::front::wgsl::Error::UnknownIdent","value":"Error::UnknownIdent(Span, &'a str)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4217},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594708,"byte_end":594725,"line_start":140,"line_end":140,"column_start":5,"column_end":22},"name":"UnknownScalarType","qualname":"::front::wgsl::Error::UnknownScalarType","value":"Error::UnknownScalarType(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4220},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594737,"byte_end":594748,"line_start":141,"line_end":141,"column_start":5,"column_end":16},"name":"UnknownType","qualname":"::front::wgsl::Error::UnknownType","value":"Error::UnknownType(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4223},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594760,"byte_end":594780,"line_start":142,"line_end":142,"column_start":5,"column_end":25},"name":"UnknownStorageFormat","qualname":"::front::wgsl::Error::UnknownStorageFormat","value":"Error::UnknownStorageFormat(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4226},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594792,"byte_end":594816,"line_start":143,"line_end":143,"column_start":5,"column_end":29},"name":"UnknownConservativeDepth","qualname":"::front::wgsl::Error::UnknownConservativeDepth","value":"Error::UnknownConservativeDepth(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4229},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594828,"byte_end":594847,"line_start":144,"line_end":144,"column_start":5,"column_end":24},"name":"SizeAttributeTooLow","qualname":"::front::wgsl::Error::SizeAttributeTooLow","value":"Error::SizeAttributeTooLow(Span, u32)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4233},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594864,"byte_end":594884,"line_start":145,"line_end":145,"column_start":5,"column_end":25},"name":"AlignAttributeTooLow","qualname":"::front::wgsl::Error::AlignAttributeTooLow","value":"Error::AlignAttributeTooLow(Span, Alignment)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4237},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594907,"byte_end":594934,"line_start":146,"line_end":146,"column_start":5,"column_end":32},"name":"NonPowerOfTwoAlignAttribute","qualname":"::front::wgsl::Error::NonPowerOfTwoAlignAttribute","value":"Error::NonPowerOfTwoAlignAttribute(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4240},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594946,"byte_end":594965,"line_start":147,"line_end":147,"column_start":5,"column_end":24},"name":"InconsistentBinding","qualname":"::front::wgsl::Error::InconsistentBinding","value":"Error::InconsistentBinding(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4243},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":594977,"byte_end":594997,"line_start":148,"line_end":148,"column_start":5,"column_end":25},"name":"UnknownLocalFunction","qualname":"::front::wgsl::Error::UnknownLocalFunction","value":"Error::UnknownLocalFunction(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4246},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595009,"byte_end":595029,"line_start":149,"line_end":149,"column_start":5,"column_end":25},"name":"TypeNotConstructible","qualname":"::front::wgsl::Error::TypeNotConstructible","value":"Error::TypeNotConstructible(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4249},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595041,"byte_end":595058,"line_start":150,"line_end":150,"column_start":5,"column_end":22},"name":"TypeNotInferrable","qualname":"::front::wgsl::Error::TypeNotInferrable","value":"Error::TypeNotInferrable(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4252},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595070,"byte_end":595096,"line_start":151,"line_end":151,"column_start":5,"column_end":31},"name":"InitializationTypeMismatch","qualname":"::front::wgsl::Error::InitializationTypeMismatch","value":"Error::InitializationTypeMismatch(Span, String)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4256},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595116,"byte_end":595127,"line_start":152,"line_end":152,"column_start":5,"column_end":16},"name":"MissingType","qualname":"::front::wgsl::Error::MissingType","value":"Error::MissingType(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4259},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595139,"byte_end":595155,"line_start":153,"line_end":153,"column_start":5,"column_end":21},"name":"MissingAttribute","qualname":"::front::wgsl::Error::MissingAttribute","value":"Error::MissingAttribute(&'static str, Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4263},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595181,"byte_end":595201,"line_start":154,"line_end":154,"column_start":5,"column_end":25},"name":"InvalidAtomicPointer","qualname":"::front::wgsl::Error::InvalidAtomicPointer","value":"Error::InvalidAtomicPointer(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4266},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595213,"byte_end":595237,"line_start":155,"line_end":155,"column_start":5,"column_end":29},"name":"InvalidAtomicOperandType","qualname":"::front::wgsl::Error::InvalidAtomicOperandType","value":"Error::InvalidAtomicOperandType(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4269},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595249,"byte_end":595256,"line_start":156,"line_end":156,"column_start":5,"column_end":12},"name":"Pointer","qualname":"::front::wgsl::Error::Pointer","value":"Error::Pointer(&'static str, Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4273},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595282,"byte_end":595292,"line_start":157,"line_end":157,"column_start":5,"column_end":15},"name":"NotPointer","qualname":"::front::wgsl::Error::NotPointer","value":"Error::NotPointer(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4276},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595304,"byte_end":595316,"line_start":158,"line_end":158,"column_start":5,"column_end":17},"name":"NotReference","qualname":"::front::wgsl::Error::NotReference","value":"Error::NotReference(&'static str, Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4280},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595342,"byte_end":595357,"line_start":159,"line_end":159,"column_start":5,"column_end":20},"name":"ReservedKeyword","qualname":"::front::wgsl::Error::ReservedKeyword","value":"Error::ReservedKeyword(Span)","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":4283},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595369,"byte_end":595381,"line_start":160,"line_end":160,"column_start":5,"column_end":17},"name":"Redefinition","qualname":"::front::wgsl::Error::Redefinition","value":"Error::Redefinition { previous, current }","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4286},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595442,"byte_end":595447,"line_start":164,"line_end":164,"column_start":5,"column_end":10},"name":"Other","qualname":"::front::wgsl::Error::Other","value":"Error::Other","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4134},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":593577,"byte_end":593582,"line_start":104,"line_end":104,"column_start":10,"column_end":15},"name":"Error","qualname":"::front::wgsl::Error","value":"pub enum Error<'a> {\n    Unexpected(TokenSpan, ExpectedToken),\n    UnexpectedComponents(Span),\n    BadNumber(Span, NumberError),\n    NegativeInt(Span),\n    BadU32Constant(Span),\n    BadMatrixScalarKind(Span, crate::ScalarKind, u8),\n    BadAccessor(Span),\n    BadTexture(Span),\n    BadTypeCast {\n            span: Span,\n            from_type: String,\n            to_type: String,\n        },\n    BadTextureSampleType {\n            span: Span,\n            kind: crate::ScalarKind,\n            width: u8,\n        },\n    BadIncrDecrReferenceType(Span),\n    InvalidResolve(ResolveError),\n    InvalidForInitializer(Span),\n    InvalidBreakIf(Span),\n    InvalidGatherComponent(Span, u32),\n    InvalidConstructorComponentType(Span, i32),\n    InvalidIdentifierUnderscore(Span),\n    ReservedIdentifierPrefix(Span),\n    UnknownAddressSpace(Span),\n    UnknownAttribute(Span),\n    UnknownBuiltin(Span),\n    UnknownAccess(Span),\n    UnknownShaderStage(Span),\n    UnknownIdent(Span, &'a str),\n    UnknownScalarType(Span),\n    UnknownType(Span),\n    UnknownStorageFormat(Span),\n    UnknownConservativeDepth(Span),\n    SizeAttributeTooLow(Span, u32),\n    AlignAttributeTooLow(Span, Alignment),\n    NonPowerOfTwoAlignAttribute(Span),\n    InconsistentBinding(Span),\n    UnknownLocalFunction(Span),\n    TypeNotConstructible(Span),\n    TypeNotInferrable(Span),\n    InitializationTypeMismatch(Span, String),\n    MissingType(Span),\n    MissingAttribute(&'static str, Span),\n    InvalidAtomicPointer(Span),\n    InvalidAtomicOperandType(Span),\n    Pointer(&'static str, Span),\n    NotPointer(Span),\n    NotReference(&'static str, Span),\n    ReservedKeyword(Span),\n    Redefinition {\n            previous: Span,\n            current: Span,\n        },\n    Other,\n}","parent":null,"children":[{"krate":0,"index":4136},{"krate":0,"index":4140},{"krate":0,"index":4143},{"krate":0,"index":4147},{"krate":0,"index":4150},{"krate":0,"index":4153},{"krate":0,"index":4158},{"krate":0,"index":4161},{"krate":0,"index":4164},{"krate":0,"index":4168},{"krate":0,"index":4172},{"krate":0,"index":4175},{"krate":0,"index":4178},{"krate":0,"index":4181},{"krate":0,"index":4184},{"krate":0,"index":4188},{"krate":0,"index":4192},{"krate":0,"index":4195},{"krate":0,"index":4198},{"krate":0,"index":4201},{"krate":0,"index":4204},{"krate":0,"index":4207},{"krate":0,"index":4210},{"krate":0,"index":4213},{"krate":0,"index":4217},{"krate":0,"index":4220},{"krate":0,"index":4223},{"krate":0,"index":4226},{"krate":0,"index":4229},{"krate":0,"index":4233},{"krate":0,"index":4237},{"krate":0,"index":4240},{"krate":0,"index":4243},{"krate":0,"index":4246},{"krate":0,"index":4249},{"krate":0,"index":4252},{"krate":0,"index":4256},{"krate":0,"index":4259},{"krate":0,"index":4263},{"krate":0,"index":4266},{"krate":0,"index":4269},{"krate":0,"index":4273},{"krate":0,"index":4276},{"krate":0,"index":4280},{"krate":0,"index":4283},{"krate":0,"index":4286}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1894},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":622956,"byte_end":622961,"line_start":746,"line_end":746,"column_start":10,"column_end":15},"name":"Value","qualname":"::front::wgsl::StringValueLookup::Value","value":"type Value;","parent":{"krate":0,"index":1892},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4306},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638343,"byte_end":638352,"line_start":1164,"line_end":1164,"column_start":5,"column_end":14},"name":"Attribute","qualname":"::front::wgsl::Scope::Attribute","value":"Scope::Attribute","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4308},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638358,"byte_end":638368,"line_start":1165,"line_end":1165,"column_start":5,"column_end":15},"name":"ImportDecl","qualname":"::front::wgsl::Scope::ImportDecl","value":"Scope::ImportDecl","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4310},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638374,"byte_end":638386,"line_start":1166,"line_end":1166,"column_start":5,"column_end":17},"name":"VariableDecl","qualname":"::front::wgsl::Scope::VariableDecl","value":"Scope::VariableDecl","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4312},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638392,"byte_end":638400,"line_start":1167,"line_end":1167,"column_start":5,"column_end":13},"name":"TypeDecl","qualname":"::front::wgsl::Scope::TypeDecl","value":"Scope::TypeDecl","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4314},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638406,"byte_end":638418,"line_start":1168,"line_end":1168,"column_start":5,"column_end":17},"name":"FunctionDecl","qualname":"::front::wgsl::Scope::FunctionDecl","value":"Scope::FunctionDecl","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4316},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638424,"byte_end":638429,"line_start":1169,"line_end":1169,"column_start":5,"column_end":10},"name":"Block","qualname":"::front::wgsl::Scope::Block","value":"Scope::Block","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4318},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638435,"byte_end":638444,"line_start":1170,"line_end":1170,"column_start":5,"column_end":14},"name":"Statement","qualname":"::front::wgsl::Scope::Statement","value":"Scope::Statement","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4320},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638450,"byte_end":638462,"line_start":1171,"line_end":1171,"column_start":5,"column_end":17},"name":"ConstantExpr","qualname":"::front::wgsl::Scope::ConstantExpr","value":"Scope::ConstantExpr","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4322},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638468,"byte_end":638479,"line_start":1172,"line_end":1172,"column_start":5,"column_end":16},"name":"PrimaryExpr","qualname":"::front::wgsl::Scope::PrimaryExpr","value":"Scope::PrimaryExpr","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4324},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638485,"byte_end":638497,"line_start":1173,"line_end":1173,"column_start":5,"column_end":17},"name":"SingularExpr","qualname":"::front::wgsl::Scope::SingularExpr","value":"Scope::SingularExpr","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4326},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638503,"byte_end":638512,"line_start":1174,"line_end":1174,"column_start":5,"column_end":14},"name":"UnaryExpr","qualname":"::front::wgsl::Scope::UnaryExpr","value":"Scope::UnaryExpr","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4328},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638518,"byte_end":638529,"line_start":1175,"line_end":1175,"column_start":5,"column_end":16},"name":"GeneralExpr","qualname":"::front::wgsl::Scope::GeneralExpr","value":"Scope::GeneralExpr","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4305},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638331,"byte_end":638336,"line_start":1163,"line_end":1163,"column_start":10,"column_end":15},"name":"Scope","qualname":"::front::wgsl::Scope","value":"pub enum Scope {\n    Attribute,\n    ImportDecl,\n    VariableDecl,\n    TypeDecl,\n    FunctionDecl,\n    Block,\n    Statement,\n    ConstantExpr,\n    PrimaryExpr,\n    SingularExpr,\n    UnaryExpr,\n    GeneralExpr,\n}","parent":null,"children":[{"krate":0,"index":4306},{"krate":0,"index":4308},{"krate":0,"index":4310},{"krate":0,"index":4312},{"krate":0,"index":4314},{"krate":0,"index":4316},{"krate":0,"index":4318},{"krate":0,"index":4320},{"krate":0,"index":4322},{"krate":0,"index":4324},{"krate":0,"index":4326},{"krate":0,"index":4328}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4345},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":641847,"byte_end":641857,"line_start":1270,"line_end":1270,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::front::wgsl::ParseError","value":"ParseError {  }","parent":null,"children":[{"krate":0,"index":4346},{"krate":0,"index":4347},{"krate":0,"index":4348}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":641981,"byte_end":641987,"line_start":1277,"line_end":1277,"column_start":12,"column_end":18},"name":"labels","qualname":"<ParseError>::labels","value":"pub fn labels(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":642188,"byte_end":642195,"line_start":1283,"line_end":1283,"column_start":12,"column_end":19},"name":"message","qualname":"<ParseError>::message","value":"pub fn message(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":642950,"byte_end":642964,"line_start":1308,"line_end":1308,"column_start":12,"column_end":26},"name":"emit_to_stderr","qualname":"<ParseError>::emit_to_stderr","value":"pub fn emit_to_stderr(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits a summary of the error to standard error stream.\n","sig":null,"attributes":[{"value":"/ Emits a summary of the error to standard error stream.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":642880,"byte_end":642938,"line_start":1307,"line_end":1307,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":643123,"byte_end":643147,"line_start":1313,"line_end":1313,"column_start":12,"column_end":36},"name":"emit_to_stderr_with_path","qualname":"<ParseError>::emit_to_stderr_with_path","value":"pub fn emit_to_stderr_with_path(&Self, &str, &str)","parent":null,"children":[],"decl_id":null,"docs":" Emits a summary of the error to standard error stream.\n","sig":null,"attributes":[{"value":"/ Emits a summary of the error to standard error stream.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":643053,"byte_end":643111,"line_start":1312,"line_end":1312,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2002},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":643551,"byte_end":643565,"line_start":1322,"line_end":1322,"column_start":12,"column_end":26},"name":"emit_to_string","qualname":"<ParseError>::emit_to_string","value":"pub fn emit_to_string(&Self, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Emits a summary of the error to a string.\n","sig":null,"attributes":[{"value":"/ Emits a summary of the error to a string.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":643494,"byte_end":643539,"line_start":1321,"line_end":1321,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":643994,"byte_end":644002,"line_start":1331,"line_end":1331,"column_start":12,"column_end":20},"name":"location","qualname":"<ParseError>::location","value":"pub fn location(&Self, &str) -> Option<SourceLocation>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`SourceLocation`] for the first label in the error message.\n","sig":null,"attributes":[{"value":"/ Returns a [`SourceLocation`] for the first label in the error message.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":643908,"byte_end":643982,"line_start":1330,"line_end":1330,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":2009},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":644502,"byte_end":644508,"line_start":1350,"line_end":1350,"column_start":12,"column_end":18},"name":"Parser","qualname":"::front::wgsl::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":644712,"byte_end":644715,"line_start":1358,"line_end":1358,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":784846,"byte_end":784851,"line_start":4534,"line_end":4534,"column_start":12,"column_end":17},"name":"parse","qualname":"<Parser>::parse","value":"pub fn parse(&mut Self, &str) -> Result<crate::Module, ParseError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2144},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":785694,"byte_end":785703,"line_start":4556,"line_end":4556,"column_start":8,"column_end":17},"name":"parse_str","qualname":"::front::wgsl::parse_str","value":"pub fn parse_str(&str) -> Result<crate::Module, ParseError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2145},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":785803,"byte_end":785820,"line_start":4560,"line_end":4560,"column_start":12,"column_end":29},"name":"StringErrorBuffer","qualname":"::front::wgsl::StringErrorBuffer","value":"StringErrorBuffer {  }","parent":null,"children":[{"krate":0,"index":2146}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":785886,"byte_end":785889,"line_start":4565,"line_end":4565,"column_start":18,"column_end":21},"name":"new","qualname":"<StringErrorBuffer>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2149},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":785953,"byte_end":785964,"line_start":4569,"line_end":4569,"column_start":12,"column_end":23},"name":"into_string","qualname":"<StringErrorBuffer>::into_string","value":"pub fn into_string(Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4359},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":586344,"byte_end":586352,"line_start":68,"line_end":68,"column_start":12,"column_end":20},"name":"Typifier","qualname":"::front::Typifier","value":"Typifier {  }","parent":null,"children":[{"krate":0,"index":4360}],"decl_id":null,"docs":" Helper processor that derives the types of all expressions.\n","sig":null,"attributes":[{"value":"/ Helper processor that derives the types of all expressions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":586243,"byte_end":586306,"line_start":66,"line_end":66,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":586429,"byte_end":586432,"line_start":73,"line_end":73,"column_start":18,"column_end":21},"name":"new","qualname":"<Typifier>::new","value":"pub const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":586529,"byte_end":586534,"line_start":79,"line_end":79,"column_start":12,"column_end":17},"name":"reset","qualname":"<Typifier>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":586599,"byte_end":586602,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"get","qualname":"<Typifier>::get","value":"pub fn get<'a>(&'a Self, Handle<crate::Expression>,\n&'a UniqueArena<crate::Type>) -> &'a crate::TypeInner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":586833,"byte_end":586837,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"grow","qualname":"<Typifier>::grow","value":"pub fn grow(&mut Self, Handle<crate::Expression>, &Arena<crate::Expression>,\n&ResolveContext) -> Result<(), ResolveError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":587719,"byte_end":587729,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"invalidate","qualname":"<Typifier>::invalidate","value":"pub fn invalidate(&mut Self, Handle<crate::Expression>,\n&Arena<crate::Expression>, &ResolveContext) -> Result<(), ResolveError>","parent":null,"children":[],"decl_id":null,"docs":" Invalidates the cached type resolution for `expr_handle` forcing a recomputation","sig":null,"attributes":[{"value":"/ Invalidates the cached type resolution for `expr_handle` forcing a recomputation","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":587498,"byte_end":587582,"line_start":108,"line_end":108,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":587587,"byte_end":587590,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ If the type of the expression hasn't yet been calculated a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":587595,"byte_end":587657,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/ [`grow`](Self::grow) is performed instead","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":587662,"byte_end":587707,"line_start":111,"line_end":111,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\keywords\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"keywords","qualname":"::keywords","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\keywords\\mod.rs","parent":null,"children":[{"krate":0,"index":2199}],"decl_id":null,"docs":"Lists of reserved keywords for each shading language with a [frontend][crate::front] or [backend][crate::back].\n","sig":null,"attributes":[{"value":"*\nLists of reserved keywords for each shading language with a [frontend][crate::front] or [backend][crate::back].\n*/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\keywords\\mod.rs","byte_start":853921,"byte_end":854039,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":2199},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\keywords\\wgsl.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"wgsl","qualname":"::keywords::wgsl","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\keywords\\wgsl.rs","parent":null,"children":[{"krate":0,"index":2200}],"decl_id":null,"docs":"Keywords for [WGSL][wgsl] (WebGPU Shading Language).","sig":null,"attributes":[{"value":"cfg(any(feature = \"wgsl-in\", feature = \"wgsl-out\"))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\keywords\\mod.rs","byte_start":854041,"byte_end":854095,"line_start":5,"line_end":5,"column_start":1,"column_end":55}},{"value":"*\nKeywords for [WGSL][wgsl] (WebGPU Shading Language).\n\n[wgsl]: https://gpuweb.github.io/gpuweb/wgsl.html\n*/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\keywords\\wgsl.rs","byte_start":854111,"byte_end":854221,"line_start":1,"line_end":5,"column_start":1,"column_end":3}}]},{"kind":"Const","id":{"krate":0,"index":2200},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\keywords\\wgsl.rs","byte_start":854290,"byte_end":854298,"line_start":8,"line_end":8,"column_start":11,"column_end":19},"name":"RESERVED","qualname":"::keywords::wgsl::RESERVED","value":"&[&str]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2201},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"proc","qualname":"::proc","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","parent":null,"children":[{"krate":0,"index":2202},{"krate":0,"index":2235},{"krate":0,"index":2294},{"krate":0,"index":2330},{"krate":0,"index":2335},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2389},{"krate":0,"index":2392},{"krate":0,"index":2395},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2402},{"krate":0,"index":2405},{"krate":0,"index":2408},{"krate":0,"index":2411},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2418},{"krate":0,"index":2421},{"krate":0,"index":2424},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2431},{"krate":0,"index":2434},{"krate":0,"index":2437},{"krate":0,"index":2446},{"krate":0,"index":2448},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2466},{"krate":0,"index":2471},{"krate":0,"index":2473},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2480},{"krate":0,"index":2485},{"krate":0,"index":2487},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2493},{"krate":0,"index":2498}],"decl_id":null,"docs":"[`Module`](super::Module) processing functionality.\n","sig":null,"attributes":[{"value":"*\n[`Module`](super::Module) processing functionality.\n*/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":861992,"byte_end":862050,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":2202},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"index","qualname":"::proc::index","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","parent":null,"children":[{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2207},{"krate":0,"index":2210},{"krate":0,"index":2213},{"krate":0,"index":4365},{"krate":0,"index":4372},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4377},{"krate":0,"index":4378},{"krate":0,"index":4380},{"krate":0,"index":4383},{"krate":0,"index":4384},{"krate":0,"index":4386},{"krate":0,"index":4391},{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4396},{"krate":0,"index":4398},{"krate":0,"index":4399},{"krate":0,"index":4401},{"krate":0,"index":4404},{"krate":0,"index":4405},{"krate":0,"index":2216},{"krate":0,"index":2218},{"krate":0,"index":4408},{"krate":0,"index":4415},{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":2221},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":4420},{"krate":0,"index":4421},{"krate":0,"index":4423},{"krate":0,"index":4424},{"krate":0,"index":4426},{"krate":0,"index":4427},{"krate":0,"index":4429},{"krate":0,"index":4430},{"krate":0,"index":2228},{"krate":0,"index":4438},{"krate":0,"index":4444},{"krate":0,"index":2233}],"decl_id":null,"docs":"Definitions for index bounds checking.\n","sig":null,"attributes":[{"value":"*\nDefinitions for index bounds checking.\n*/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":878728,"byte_end":878773,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4366},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880883,"byte_end":880891,"line_start":47,"line_end":47,"column_start":5,"column_end":13},"name":"Restrict","qualname":"::proc::index::BoundsCheckPolicy::Restrict","value":"BoundsCheckPolicy::Restrict","parent":{"krate":0,"index":4365},"children":[],"decl_id":null,"docs":" Replace out-of-bounds indexes with some arbitrary in-bounds index.","sig":null,"attributes":[{"value":"/ Replace out-of-bounds indexes with some arbitrary in-bounds index.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880519,"byte_end":880589,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880594,"byte_end":880597,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ (This does not necessarily mean clamping. For example, interpreting the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880602,"byte_end":880677,"line_start":43,"line_end":43,"column_start":5,"column_end":80}},{"value":"/ index as unsigned and taking the minimum with the largest valid index","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880682,"byte_end":880755,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ would also be a valid implementation. That would map negative indices to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880760,"byte_end":880836,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ the last element, not the first.)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880841,"byte_end":880878,"line_start":46,"line_end":46,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4368},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":881243,"byte_end":881260,"line_start":55,"line_end":55,"column_start":5,"column_end":22},"name":"ReadZeroSkipWrite","qualname":"::proc::index::BoundsCheckPolicy::ReadZeroSkipWrite","value":"BoundsCheckPolicy::ReadZeroSkipWrite","parent":{"krate":0,"index":4365},"children":[],"decl_id":null,"docs":" Out-of-bounds reads return zero, and writes have no effect.","sig":null,"attributes":[{"value":"/ Out-of-bounds reads return zero, and writes have no effect.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880898,"byte_end":880961,"line_start":49,"line_end":49,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880966,"byte_end":880969,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ When applied to a chain of accesses, like `a[i][j].b[k]`, all index","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880974,"byte_end":881045,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/ expressions are evaluated, regardless of whether prior or later index","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":881050,"byte_end":881123,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ expressions were in bounds. But all the accesses per se are skipped","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":881128,"byte_end":881199,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ if any index is out of bounds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":881204,"byte_end":881238,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4370},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":881480,"byte_end":881489,"line_start":60,"line_end":60,"column_start":5,"column_end":14},"name":"Unchecked","qualname":"::proc::index::BoundsCheckPolicy::Unchecked","value":"BoundsCheckPolicy::Unchecked","parent":{"krate":0,"index":4365},"children":[],"decl_id":null,"docs":" Naga adds no checks to indexing operations. Generate the fastest code\n possible. This is the default for Naga, as a translator, but consumers\n should consider defaulting to a safer behavior.\n","sig":null,"attributes":[{"value":"/ Naga adds no checks to indexing operations. Generate the fastest code","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":881267,"byte_end":881340,"line_start":57,"line_end":57,"column_start":5,"column_end":78}},{"value":"/ possible. This is the default for Naga, as a translator, but consumers","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":881345,"byte_end":881419,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ should consider defaulting to a safer behavior.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":881424,"byte_end":881475,"line_start":59,"line_end":59,"column_start":5,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":4365},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880495,"byte_end":880512,"line_start":40,"line_end":40,"column_start":10,"column_end":27},"name":"BoundsCheckPolicy","qualname":"::proc::index::BoundsCheckPolicy","value":"pub enum BoundsCheckPolicy { Restrict, ReadZeroSkipWrite, Unchecked, }","parent":null,"children":[{"krate":0,"index":4366},{"krate":0,"index":4368},{"krate":0,"index":4370}],"decl_id":null,"docs":" How should code generated by Naga do bounds checks?","sig":null,"attributes":[{"value":"/ How should code generated by Naga do bounds checks?","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":878838,"byte_end":878893,"line_start":8,"line_end":8,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":878894,"byte_end":878897,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ When a vector, matrix, or array index is out of bounds—either negative, or","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":878898,"byte_end":878978,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ greater than or equal to the number of elements in the type—WGSL requires","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":878979,"byte_end":879058,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ that some other index of the implementation's choice that is in bounds is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879059,"byte_end":879136,"line_start":12,"line_end":12,"column_start":1,"column_end":78}},{"value":"/ used instead. (There are no types with zero elements.)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879137,"byte_end":879195,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879196,"byte_end":879199,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Similarly, when out-of-bounds coordinates, array indices, or sample indices","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879200,"byte_end":879279,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ are presented to the WGSL `textureLoad` and `textureStore` operations, the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879280,"byte_end":879358,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ operation is redirected to do something safe.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879359,"byte_end":879408,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879409,"byte_end":879412,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Different users of Naga will prefer different defaults:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879413,"byte_end":879472,"line_start":19,"line_end":19,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879473,"byte_end":879476,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ -   When used as part of a WebGPU implementation, the WGSL specification","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879477,"byte_end":879553,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/     requires the `Restrict` behavior for array, vector, and matrix accesses,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879554,"byte_end":879634,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"/     and either the `Restrict` or `ReadZeroSkipWrite` behaviors for texture","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879635,"byte_end":879713,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/     accesses.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879714,"byte_end":879731,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879732,"byte_end":879735,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ -   When used by the `wgpu` crate for native development, `wgpu` selects","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879736,"byte_end":879812,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/     `ReadZeroSkipWrite` as its default.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879813,"byte_end":879856,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879857,"byte_end":879860,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ -   Naga's own default is `Unchecked`, so that shader translations","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879861,"byte_end":879931,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/     are as faithful to the original as possible.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879932,"byte_end":879984,"line_start":30,"line_end":30,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879985,"byte_end":879988,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Sometimes the underlying hardware and drivers can perform bounds checks","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":879989,"byte_end":880064,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ themselves, in a way that performs better than the checks Naga would inject.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880065,"byte_end":880145,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ If you're using native checks like this, then having Naga inject its own","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880146,"byte_end":880222,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ checks as well would be redundant, and the `Unchecked` policy is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880223,"byte_end":880291,"line_start":35,"line_end":35,"column_start":1,"column_end":69}},{"value":"/ appropriate.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":880292,"byte_end":880308,"line_start":36,"line_end":36,"column_start":1,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":4386},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":881756,"byte_end":881775,"line_start":67,"line_end":67,"column_start":12,"column_end":31},"name":"BoundsCheckPolicies","qualname":"::proc::index::BoundsCheckPolicies","value":"BoundsCheckPolicies { index, buffer, image, binding_array }","parent":null,"children":[{"krate":0,"index":4387},{"krate":0,"index":4388},{"krate":0,"index":4389},{"krate":0,"index":4390}],"decl_id":null,"docs":" Policies for injecting bounds checks during code generation.\n","sig":null,"attributes":[{"value":"/ Policies for injecting bounds checks during code generation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":881494,"byte_end":881558,"line_start":63,"line_end":63,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":4387},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":881952,"byte_end":881957,"line_start":71,"line_end":71,"column_start":9,"column_end":14},"name":"index","qualname":"::proc::index::BoundsCheckPolicies::index","value":"proc::index::BoundsCheckPolicy","parent":{"krate":0,"index":4386},"children":[],"decl_id":null,"docs":" How should the generated code handle array, vector, or matrix indices\n that are out of range?\n","sig":null,"attributes":[{"value":"/ How should the generated code handle array, vector, or matrix indices","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":881782,"byte_end":881855,"line_start":68,"line_end":68,"column_start":5,"column_end":78}},{"value":"/ that are out of range?","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":881860,"byte_end":881886,"line_start":69,"line_end":69,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":4388},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883957,"byte_end":883963,"line_start":107,"line_end":107,"column_start":9,"column_end":15},"name":"buffer","qualname":"::proc::index::BoundsCheckPolicies::buffer","value":"proc::index::BoundsCheckPolicy","parent":{"krate":0,"index":4386},"children":[],"decl_id":null,"docs":" How should the generated code handle array, vector, or matrix indices\n that are out of range, when those values live in a [`GlobalVariable`] in\n the [`Storage`] or [`Uniform`] address spaces?","sig":null,"attributes":[{"value":"/ How should the generated code handle array, vector, or matrix indices","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":881983,"byte_end":882056,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/ that are out of range, when those values live in a [`GlobalVariable`] in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882061,"byte_end":882137,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"/ the [`Storage`] or [`Uniform`] address spaces?","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882142,"byte_end":882192,"line_start":75,"line_end":75,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882197,"byte_end":882200,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Some graphics hardware provides \"robust buffer access\", a feature that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882205,"byte_end":882279,"line_start":77,"line_end":77,"column_start":5,"column_end":79}},{"value":"/ ensures that using a pointer cannot access memory outside the 'buffer'","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882284,"byte_end":882358,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ that it was derived from. In Naga terms, this means that the hardware","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882363,"byte_end":882436,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ ensures that pointers computed by applying [`Access`] and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882441,"byte_end":882502,"line_start":80,"line_end":80,"column_start":5,"column_end":66}},{"value":"/ [`AccessIndex`] expressions to a [`GlobalVariable`] whose [`space`] is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882507,"byte_end":882581,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/ [`Storage`] or [`Uniform`] will never read or write memory outside that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882586,"byte_end":882661,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ global variable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882666,"byte_end":882686,"line_start":83,"line_end":83,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882691,"byte_end":882694,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ When hardware offers such a feature, it is probably undesirable to have","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882699,"byte_end":882774,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ Naga inject bounds checking code for such accesses, since the hardware","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882779,"byte_end":882853,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ can probably provide the same protection more efficiently. However,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882858,"byte_end":882929,"line_start":87,"line_end":87,"column_start":5,"column_end":76}},{"value":"/ bounds checks are still needed on accesses to indexable values that do","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":882934,"byte_end":883008,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ not live in buffers, like local variables.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883013,"byte_end":883059,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883064,"byte_end":883067,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ So, this option provides a separate policy that applies only to accesses","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883072,"byte_end":883148,"line_start":91,"line_end":91,"column_start":5,"column_end":81}},{"value":"/ to storage and uniform globals. When depending on hardware bounds","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883153,"byte_end":883222,"line_start":92,"line_end":92,"column_start":5,"column_end":74}},{"value":"/ checking, this policy can be `Unchecked` to avoid unnecessary overhead.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883227,"byte_end":883302,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883307,"byte_end":883310,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ When special hardware support is not available, this should probably be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883315,"byte_end":883390,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ the same as `index_bounds_check_policy`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883395,"byte_end":883439,"line_start":96,"line_end":96,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883444,"byte_end":883447,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ [`GlobalVariable`]: crate::GlobalVariable","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883452,"byte_end":883497,"line_start":98,"line_end":98,"column_start":5,"column_end":50}},{"value":"/ [`space`]: crate::GlobalVariable::space","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883502,"byte_end":883545,"line_start":99,"line_end":99,"column_start":5,"column_end":48}},{"value":"/ [`Restrict`]: crate::back::BoundsCheckPolicy::Restrict","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883550,"byte_end":883608,"line_start":100,"line_end":100,"column_start":5,"column_end":63}},{"value":"/ [`ReadZeroSkipWrite`]: crate::back::BoundsCheckPolicy::ReadZeroSkipWrite","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883613,"byte_end":883689,"line_start":101,"line_end":101,"column_start":5,"column_end":81}},{"value":"/ [`Access`]: crate::Expression::Access","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883694,"byte_end":883735,"line_start":102,"line_end":102,"column_start":5,"column_end":46}},{"value":"/ [`AccessIndex`]: crate::Expression::AccessIndex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883740,"byte_end":883791,"line_start":103,"line_end":103,"column_start":5,"column_end":56}},{"value":"/ [`Storage`]: crate::AddressSpace::Storage","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883796,"byte_end":883841,"line_start":104,"line_end":104,"column_start":5,"column_end":50}},{"value":"/ [`Uniform`]: crate::AddressSpace::Uniform","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883846,"byte_end":883891,"line_start":105,"line_end":105,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":4389},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884484,"byte_end":884489,"line_start":119,"line_end":119,"column_start":9,"column_end":14},"name":"image","qualname":"::proc::index::BoundsCheckPolicies::image","value":"proc::index::BoundsCheckPolicy","parent":{"krate":0,"index":4386},"children":[],"decl_id":null,"docs":" How should the generated code handle image texel references that are out\n of range?","sig":null,"attributes":[{"value":"/ How should the generated code handle image texel references that are out","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":883989,"byte_end":884065,"line_start":109,"line_end":109,"column_start":5,"column_end":81}},{"value":"/ of range?","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884070,"byte_end":884083,"line_start":110,"line_end":110,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884088,"byte_end":884091,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This controls the behavior of [`ImageLoad`] expressions and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884096,"byte_end":884159,"line_start":112,"line_end":112,"column_start":5,"column_end":68}},{"value":"/ [`ImageStore`] statements when a coordinate, texture array index, level","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884164,"byte_end":884239,"line_start":113,"line_end":113,"column_start":5,"column_end":80}},{"value":"/ of detail, or multisampled sample number is out of range.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884244,"byte_end":884305,"line_start":114,"line_end":114,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884310,"byte_end":884313,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ [`ImageLoad`]: crate::Expression::ImageLoad","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884318,"byte_end":884365,"line_start":116,"line_end":116,"column_start":5,"column_end":52}},{"value":"/ [`ImageStore`]: crate::Statement::ImageStore","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884370,"byte_end":884418,"line_start":117,"line_end":117,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":4390},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884667,"byte_end":884680,"line_start":123,"line_end":123,"column_start":9,"column_end":22},"name":"binding_array","qualname":"::proc::index::BoundsCheckPolicies::binding_array","value":"proc::index::BoundsCheckPolicy","parent":{"krate":0,"index":4386},"children":[],"decl_id":null,"docs":" How should the generated code handle binding array indexes that are out of bounds.\n","sig":null,"attributes":[{"value":"/ How should the generated code handle binding array indexes that are out of bounds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884515,"byte_end":884601,"line_start":121,"line_end":121,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":885288,"byte_end":885301,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"choose_policy","qualname":"<BoundsCheckPolicies>::choose_policy","value":"pub fn choose_policy(&Self, Handle<crate::Expression>,\n&UniqueArena<crate::Type>, &valid::FunctionInfo) -> BoundsCheckPolicy","parent":null,"children":[],"decl_id":null,"docs":" Determine which policy applies to `base`.","sig":null,"attributes":[{"value":"/ Determine which policy applies to `base`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884897,"byte_end":884942,"line_start":134,"line_end":134,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884947,"byte_end":884950,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ `base` is the \"base\" expression (the expression being indexed) of a `Access`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884955,"byte_end":885035,"line_start":136,"line_end":136,"column_start":5,"column_end":85}},{"value":"/ and `AccessIndex` expression. This is either a pointer, a value, being directly","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":885040,"byte_end":885123,"line_start":137,"line_end":137,"column_start":5,"column_end":88}},{"value":"/ indexed, or a binding array.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":885128,"byte_end":885160,"line_start":138,"line_end":138,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":885165,"byte_end":885168,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ See the documentation for [`BoundsCheckPolicy`] for details about","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":885173,"byte_end":885242,"line_start":140,"line_end":140,"column_start":5,"column_end":74}},{"value":"/ when each policy applies.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":885247,"byte_end":885276,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886067,"byte_end":886075,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"contains","qualname":"<BoundsCheckPolicies>::contains","value":"pub fn contains(&Self, BoundsCheckPolicy) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if any of `self`'s policies are `policy`.\n","sig":null,"attributes":[{"value":"/ Return `true` if any of `self`'s policies are `policy`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":885996,"byte_end":886055,"line_start":164,"line_end":164,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4409},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886550,"byte_end":886555,"line_start":179,"line_end":179,"column_start":5,"column_end":10},"name":"Known","qualname":"::proc::index::GuardedIndex::Known","value":"GuardedIndex::Known(u32)","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4412},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886566,"byte_end":886576,"line_start":180,"line_end":180,"column_start":5,"column_end":15},"name":"Expression","qualname":"::proc::index::GuardedIndex::Expression","value":"GuardedIndex::Expression(Handle<crate::Expression>)","parent":{"krate":0,"index":4408},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4408},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886531,"byte_end":886543,"line_start":178,"line_end":178,"column_start":10,"column_end":22},"name":"GuardedIndex","qualname":"::proc::index::GuardedIndex","value":"pub enum GuardedIndex { Known(u32), Expression(Handle<crate::Expression>), }","parent":null,"children":[{"krate":0,"index":4409},{"krate":0,"index":4412}],"decl_id":null,"docs":" An index that may be statically known, or may need to be computed at runtime.","sig":null,"attributes":[{"value":"/ An index that may be statically known, or may need to be computed at runtime.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886207,"byte_end":886288,"line_start":170,"line_end":170,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886289,"byte_end":886292,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ This enum lets us handle both [`Access`] and [`AccessIndex`] expressions","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886293,"byte_end":886369,"line_start":172,"line_end":172,"column_start":1,"column_end":77}},{"value":"/ with the same code.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886370,"byte_end":886393,"line_start":173,"line_end":173,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886394,"byte_end":886397,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ [`Access`]: crate::Expression::Access","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886398,"byte_end":886439,"line_start":175,"line_end":175,"column_start":1,"column_end":42}},{"value":"/ [`AccessIndex`]: crate::Expression::AccessIndex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886440,"byte_end":886491,"line_start":176,"line_end":176,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":2221},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":889265,"byte_end":889285,"line_start":226,"line_end":226,"column_start":8,"column_end":28},"name":"find_checked_indexes","qualname":"::proc::index::find_checked_indexes","value":"pub fn find_checked_indexes(&crate::Module, &crate::Function,\n&crate::valid::FunctionInfo, BoundsCheckPolicies) -> BitSet","parent":null,"children":[],"decl_id":null,"docs":" Build a set of expressions used as indices, to cache in temporary variables when\n emitted.","sig":null,"attributes":[{"value":"/ Build a set of expressions used as indices, to cache in temporary variables when","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886608,"byte_end":886692,"line_start":183,"line_end":183,"column_start":1,"column_end":85}},{"value":"/ emitted.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886693,"byte_end":886705,"line_start":184,"line_end":184,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886706,"byte_end":886709,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ Given the bounds-check policies `policies`, construct a `BitSet` containing the handle","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886710,"byte_end":886800,"line_start":186,"line_end":186,"column_start":1,"column_end":91}},{"value":"/ indices of all the expressions in `function` that are ever used as guarded indices","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886801,"byte_end":886887,"line_start":187,"line_end":187,"column_start":1,"column_end":87}},{"value":"/ under the [`ReadZeroSkipWrite`] policy. The `module` argument must be the module to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886888,"byte_end":886975,"line_start":188,"line_end":188,"column_start":1,"column_end":88}},{"value":"/ which `function` belongs, and `info` should be that function's analysis results.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":886976,"byte_end":887060,"line_start":189,"line_end":189,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":887061,"byte_end":887064,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ Such index expressions will be used twice in the generated code: first for the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":887065,"byte_end":887147,"line_start":191,"line_end":191,"column_start":1,"column_end":83}},{"value":"/ comparison to see if the index is in bounds, and then for the access itself, should","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":887148,"byte_end":887235,"line_start":192,"line_end":192,"column_start":1,"column_end":88}},{"value":"/ the comparison succeed. To avoid computing the expressions twice, the generated code","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":887236,"byte_end":887324,"line_start":193,"line_end":193,"column_start":1,"column_end":89}},{"value":"/ should cache them in temporary variables.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":887325,"byte_end":887370,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":887371,"byte_end":887374,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Why do we need to build such a set in advance, instead of just processing access","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":887375,"byte_end":887459,"line_start":196,"line_end":196,"column_start":1,"column_end":85}},{"value":"/ expressions as we encounter them? Whether an expression needs to be cached depends on","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":887460,"byte_end":887549,"line_start":197,"line_end":197,"column_start":1,"column_end":90}},{"value":"/ whether it appears as something like the [`index`] operand of an [`Access`] expression","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":887550,"byte_end":887640,"line_start":198,"line_end":198,"column_start":1,"column_end":91}},{"value":"/ or the [`level`] operand of an [`ImageLoad`] expression, and on the index bounds check","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":887641,"byte_end":887731,"line_start":199,"line_end":199,"column_start":1,"column_end":91}},{"value":"/ policies that apply to those accesses. But [`Emit`] statements just identify a range","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":887732,"byte_end":887820,"line_start":200,"line_end":200,"column_start":1,"column_end":89}},{"value":"/ of expressions by index; there's no good way to tell what an expression is used","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":887821,"byte_end":887904,"line_start":201,"line_end":201,"column_start":1,"column_end":84}},{"value":"/ for. The only way to do it is to just iterate over all the expressions looking for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":887905,"byte_end":887991,"line_start":202,"line_end":202,"column_start":1,"column_end":87}},{"value":"/ relevant `Access` expressions --- which is what this function does.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":887992,"byte_end":888063,"line_start":203,"line_end":203,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888064,"byte_end":888067,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ Simple expressions like variable loads and constants don't make sense to cache: it's","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888068,"byte_end":888156,"line_start":205,"line_end":205,"column_start":1,"column_end":89}},{"value":"/ no better than just re-evaluating them. But constants are not covered by `Emit`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888157,"byte_end":888240,"line_start":206,"line_end":206,"column_start":1,"column_end":84}},{"value":"/ statements, and `Load`s are always cached to ensure they occur at the right time, so","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888241,"byte_end":888329,"line_start":207,"line_end":207,"column_start":1,"column_end":89}},{"value":"/ we don't bother filtering them out from this set.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888330,"byte_end":888383,"line_start":208,"line_end":208,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888384,"byte_end":888387,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Fortunately, we don't need to deal with [`ImageStore`] statements here. When we emit","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888388,"byte_end":888476,"line_start":210,"line_end":210,"column_start":1,"column_end":89}},{"value":"/ code for a statement, the writer isn't in the middle of an expression, so we can just","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888477,"byte_end":888566,"line_start":211,"line_end":211,"column_start":1,"column_end":90}},{"value":"/ emit declarations for temporaries, initialized appropriately.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888567,"byte_end":888632,"line_start":212,"line_end":212,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888633,"byte_end":888636,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ None of these concerns apply for SPIR-V output, since it's easy to just reuse an","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888637,"byte_end":888721,"line_start":214,"line_end":214,"column_start":1,"column_end":85}},{"value":"/ instruction ID in two places; that has the same semantics as a temporary variable, and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888722,"byte_end":888812,"line_start":215,"line_end":215,"column_start":1,"column_end":91}},{"value":"/ it's inherent in the design of SPIR-V. This function is more useful for text-based","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888813,"byte_end":888899,"line_start":216,"line_end":216,"column_start":1,"column_end":87}},{"value":"/ back ends.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888900,"byte_end":888914,"line_start":217,"line_end":217,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888915,"byte_end":888918,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ [`ReadZeroSkipWrite`]: BoundsCheckPolicy::ReadZeroSkipWrite","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888919,"byte_end":888982,"line_start":219,"line_end":219,"column_start":1,"column_end":64}},{"value":"/ [`index`]: crate::Expression::Access::index","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":888983,"byte_end":889030,"line_start":220,"line_end":220,"column_start":1,"column_end":48}},{"value":"/ [`Access`]: crate::Expression::Access","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":889031,"byte_end":889072,"line_start":221,"line_end":221,"column_start":1,"column_end":42}},{"value":"/ [`level`]: crate::Expression::ImageLoad::level","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":889073,"byte_end":889123,"line_start":222,"line_end":222,"column_start":1,"column_end":51}},{"value":"/ [`ImageLoad`]: crate::Expression::ImageLoad","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":889124,"byte_end":889171,"line_start":223,"line_end":223,"column_start":1,"column_end":48}},{"value":"/ [`Emit`]: crate::Statement::Emit","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":889172,"byte_end":889208,"line_start":224,"line_end":224,"column_start":1,"column_end":37}},{"value":"/ [`ImageStore`]: crate::Statement::ImageStore","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":889209,"byte_end":889257,"line_start":225,"line_end":225,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":892326,"byte_end":892344,"line_start":306,"line_end":306,"column_start":8,"column_end":26},"name":"access_needs_check","qualname":"::proc::index::access_needs_check","value":"pub fn access_needs_check(Handle<crate::Expression>, GuardedIndex,\n&crate::Module, &crate::Function, &crate::valid::FunctionInfo)\n-> Option<IndexableLength>","parent":null,"children":[],"decl_id":null,"docs":" Determine whether `index` is statically known to be in bounds for `base`.","sig":null,"attributes":[{"value":"/ Determine whether `index` is statically known to be in bounds for `base`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891403,"byte_end":891480,"line_start":285,"line_end":285,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891481,"byte_end":891484,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ If we can't be sure that the index is in bounds, return the limit within","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891485,"byte_end":891561,"line_start":287,"line_end":287,"column_start":1,"column_end":77}},{"value":"/ which valid indices must fall.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891562,"byte_end":891596,"line_start":288,"line_end":288,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891597,"byte_end":891600,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ The return value is one of the following:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891601,"byte_end":891646,"line_start":290,"line_end":290,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891647,"byte_end":891650,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ - `Some(Known(n))` indicates that `n` is the largest valid index.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891651,"byte_end":891720,"line_start":292,"line_end":292,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891721,"byte_end":891724,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ - `Some(Computed(global))` indicates that the largest valid index is one","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891725,"byte_end":891801,"line_start":294,"line_end":294,"column_start":1,"column_end":77}},{"value":"/   less than the length of the array that is the last member of the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891802,"byte_end":891872,"line_start":295,"line_end":295,"column_start":1,"column_end":71}},{"value":"/   struct held in `global`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891873,"byte_end":891903,"line_start":296,"line_end":296,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891904,"byte_end":891907,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ - `None` indicates that the index need not be checked, either because it","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891908,"byte_end":891984,"line_start":298,"line_end":298,"column_start":1,"column_end":77}},{"value":"/   is statically known to be in bounds, or because the applicable policy","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":891985,"byte_end":892060,"line_start":299,"line_end":299,"column_start":1,"column_end":76}},{"value":"/   is `Unchecked`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":892061,"byte_end":892082,"line_start":300,"line_end":300,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":892083,"byte_end":892086,"line_start":301,"line_end":301,"column_start":1,"column_end":4}},{"value":"/ This function only handles subscriptable types: arrays, vectors, and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":892087,"byte_end":892159,"line_start":302,"line_end":302,"column_start":1,"column_end":73}},{"value":"/ matrices. It does not handle struct member indices; those never require","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":892160,"byte_end":892235,"line_start":303,"line_end":303,"column_start":1,"column_end":76}},{"value":"/ run-time checks, so it's best to deal with them further up the call","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":892236,"byte_end":892307,"line_start":304,"line_end":304,"column_start":1,"column_end":72}},{"value":"/ chain.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":892308,"byte_end":892318,"line_start":305,"line_end":305,"column_start":1,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4433},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894289,"byte_end":894305,"line_start":354,"line_end":354,"column_start":5,"column_end":21},"name":"TypeNotIndexable","qualname":"::proc::index::IndexableLengthError::TypeNotIndexable","value":"IndexableLengthError::TypeNotIndexable","parent":{"krate":0,"index":4420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type is not indexable, and has no length (validation error)\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894213,"byte_end":894284,"line_start":353,"line_end":353,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4435},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894366,"byte_end":894384,"line_start":356,"line_end":356,"column_start":5,"column_end":23},"name":"InvalidArrayLength","qualname":"::proc::index::IndexableLengthError::InvalidArrayLength","value":"IndexableLengthError::InvalidArrayLength(Handle<crate::Constant>)","parent":{"krate":0,"index":4420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Array length constant {0:?} is invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894311,"byte_end":894361,"line_start":355,"line_end":355,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":4420},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894186,"byte_end":894206,"line_start":352,"line_end":352,"column_start":10,"column_end":30},"name":"IndexableLengthError","qualname":"::proc::index::IndexableLengthError","value":"pub enum IndexableLengthError {\n    TypeNotIndexable,\n    InvalidArrayLength(Handle<crate::Constant>),\n}","parent":null,"children":[{"krate":0,"index":4433},{"krate":0,"index":4435}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":895007,"byte_end":895023,"line_start":371,"line_end":371,"column_start":12,"column_end":28},"name":"indexable_length","qualname":"<crate::TypeInner>::indexable_length","value":"pub fn indexable_length(&Self, &crate::Module)\n-> Result<IndexableLength, IndexableLengthError>","parent":null,"children":[],"decl_id":null,"docs":" Return the length of a subscriptable type.","sig":null,"attributes":[{"value":"/ Return the length of a subscriptable type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894442,"byte_end":894488,"line_start":360,"line_end":360,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894493,"byte_end":894496,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ The `self` parameter should be a handle to a vector, matrix, or array","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894501,"byte_end":894574,"line_start":362,"line_end":362,"column_start":5,"column_end":78}},{"value":"/ type, a pointer to one of those, or a value pointer. Arrays may be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894579,"byte_end":894649,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ fixed-size, dynamically sized, or sized by a specializable constant.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894654,"byte_end":894726,"line_start":364,"line_end":364,"column_start":5,"column_end":77}},{"value":"/ This function does not handle struct member references, as with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894731,"byte_end":894798,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `AccessIndex`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894803,"byte_end":894821,"line_start":366,"line_end":366,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894826,"byte_end":894829,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The value returned is appropriate for bounds checks on subscripting.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894834,"byte_end":894906,"line_start":368,"line_end":368,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894911,"byte_end":894914,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Return an error if `self` does not describe a subscriptable type at all.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894919,"byte_end":894995,"line_start":370,"line_end":370,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4439},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":896651,"byte_end":896656,"line_start":410,"line_end":410,"column_start":5,"column_end":10},"name":"Known","qualname":"::proc::index::IndexableLength::Known","value":"IndexableLength::Known(u32)","parent":{"krate":0,"index":4438},"children":[],"decl_id":null,"docs":" Values of this type always have the given number of elements.\n","sig":null,"attributes":[{"value":"/ Values of this type always have the given number of elements.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":896581,"byte_end":896646,"line_start":409,"line_end":409,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4442},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":896725,"byte_end":896732,"line_start":413,"line_end":413,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::proc::index::IndexableLength::Dynamic","value":"IndexableLength::Dynamic","parent":{"krate":0,"index":4438},"children":[],"decl_id":null,"docs":" The number of elements is determined at runtime.\n","sig":null,"attributes":[{"value":"/ The number of elements is determined at runtime.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":896668,"byte_end":896720,"line_start":412,"line_end":412,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":4438},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":896559,"byte_end":896574,"line_start":408,"line_end":408,"column_start":10,"column_end":25},"name":"IndexableLength","qualname":"::proc::index::IndexableLength","value":"pub enum IndexableLength { Known(u32), Dynamic, }","parent":null,"children":[{"krate":0,"index":4439},{"krate":0,"index":4442}],"decl_id":null,"docs":" The number of elements in an indexable type.","sig":null,"attributes":[{"value":"/ The number of elements in an indexable type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":896345,"byte_end":896393,"line_start":403,"line_end":403,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":896394,"byte_end":896397,"line_start":404,"line_end":404,"column_start":1,"column_end":4}},{"value":"/ This summarizes the length of vectors, matrices, and arrays in a way that is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":896398,"byte_end":896478,"line_start":405,"line_end":405,"column_start":1,"column_end":81}},{"value":"/ convenient for indexing and bounds-checking code.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":896479,"byte_end":896532,"line_start":406,"line_end":406,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2234},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":896772,"byte_end":896791,"line_start":417,"line_end":417,"column_start":12,"column_end":31},"name":"to_indexable_length","qualname":"<crate::ArraySize>::to_indexable_length","value":"pub fn to_indexable_length(Self, &crate::Module)\n-> Result<IndexableLength, IndexableLengthError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4446},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":897985,"byte_end":897994,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"Alignment","qualname":"::proc::layouter::Alignment","value":"","parent":null,"children":[],"decl_id":null,"docs":" A newtype struct where its only valid values are powers of 2\n","sig":null,"attributes":[{"value":"/ A newtype struct where its only valid values are powers of 2","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":897715,"byte_end":897779,"line_start":4,"line_end":4,"column_start":1,"column_end":65}}]},{"kind":"Const","id":{"krate":0,"index":2260},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":898040,"byte_end":898043,"line_start":11,"line_end":11,"column_start":15,"column_end":18},"name":"ONE","qualname":"::proc::layouter::Alignment::ONE","value":"Self","parent":{"krate":0,"index":2259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2261},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":898113,"byte_end":898116,"line_start":12,"line_end":12,"column_start":15,"column_end":18},"name":"TWO","qualname":"::proc::layouter::Alignment::TWO","value":"Self","parent":{"krate":0,"index":2259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2262},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":898186,"byte_end":898190,"line_start":13,"line_end":13,"column_start":15,"column_end":19},"name":"FOUR","qualname":"::proc::layouter::Alignment::FOUR","value":"Self","parent":{"krate":0,"index":2259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":898260,"byte_end":898265,"line_start":14,"line_end":14,"column_start":15,"column_end":20},"name":"EIGHT","qualname":"::proc::layouter::Alignment::EIGHT","value":"Self","parent":{"krate":0,"index":2259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2264},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":898335,"byte_end":898342,"line_start":15,"line_end":15,"column_start":15,"column_end":22},"name":"SIXTEEN","qualname":"::proc::layouter::Alignment::SIXTEEN","value":"Self","parent":{"krate":0,"index":2259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2265},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":898414,"byte_end":898425,"line_start":17,"line_end":17,"column_start":15,"column_end":26},"name":"MIN_UNIFORM","qualname":"::proc::layouter::Alignment::MIN_UNIFORM","value":"Self","parent":{"krate":0,"index":2259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":898467,"byte_end":898470,"line_start":19,"line_end":19,"column_start":18,"column_end":21},"name":"new","qualname":"<Alignment>::new","value":"pub const fn new(u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":898795,"byte_end":898805,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"from_width","qualname":"<Alignment>::from_width","value":"pub fn from_width(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" # Panics\n If `width` is not a power of 2\n","sig":null,"attributes":[{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":898732,"byte_end":898744,"line_start":28,"line_end":28,"column_start":5,"column_end":17}},{"value":"/ If `width` is not a power of 2","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":898749,"byte_end":898783,"line_start":29,"line_end":29,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2268},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":898960,"byte_end":898970,"line_start":35,"line_end":35,"column_start":18,"column_end":28},"name":"is_aligned","qualname":"<Alignment>::is_aligned","value":"pub const fn is_aligned(&Self, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not `n` is a multiple of this alignment.\n","sig":null,"attributes":[{"value":"/ Returns whether or not `n` is a multiple of this alignment.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":898879,"byte_end":898942,"line_start":34,"line_end":34,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2269},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":899178,"byte_end":899186,"line_start":41,"line_end":41,"column_start":18,"column_end":26},"name":"round_up","qualname":"<Alignment>::round_up","value":"pub const fn round_up(&Self, u32) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Round `n` up to the nearest alignment boundary.\n","sig":null,"attributes":[{"value":"/ Round `n` up to the nearest alignment boundary.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":899109,"byte_end":899160,"line_start":40,"line_end":40,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":4468},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900520,"byte_end":900530,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"TypeLayout","qualname":"::proc::layouter::TypeLayout","value":"TypeLayout { size, alignment }","parent":null,"children":[{"krate":0,"index":4469},{"krate":0,"index":4470}],"decl_id":null,"docs":" Size and alignment information for a type.\n","sig":null,"attributes":[{"value":"/ Size and alignment information for a type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900289,"byte_end":900335,"line_start":85,"line_end":85,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":4469},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900541,"byte_end":900545,"line_start":90,"line_end":90,"column_start":9,"column_end":13},"name":"size","qualname":"::proc::layouter::TypeLayout::size","value":"u32","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4470},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900560,"byte_end":900569,"line_start":91,"line_end":91,"column_start":9,"column_end":18},"name":"alignment","qualname":"::proc::layouter::TypeLayout::alignment","value":"proc::layouter::Alignment","parent":{"krate":0,"index":4468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900686,"byte_end":900695,"line_start":96,"line_end":96,"column_start":18,"column_end":27},"name":"to_stride","qualname":"<TypeLayout>::to_stride","value":"pub const fn to_stride(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Produce the stride as if this type is a base of an array.\n","sig":null,"attributes":[{"value":"/ Produce the stride as if this type is a base of an array.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900607,"byte_end":900668,"line_start":95,"line_end":95,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4483},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":901325,"byte_end":901333,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"Layouter","qualname":"::proc::layouter::Layouter","value":"Layouter {  }","parent":null,"children":[{"krate":0,"index":4484}],"decl_id":null,"docs":" Helper processor that derives the sizes of all types.","sig":null,"attributes":[{"value":"/ Helper processor that derives the sizes of all types.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900764,"byte_end":900821,"line_start":101,"line_end":101,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900822,"byte_end":900825,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ `Layouter` uses the default layout algorithm/table, described in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900826,"byte_end":900894,"line_start":103,"line_end":103,"column_start":1,"column_end":69}},{"value":"/ [WGSL §4.3.7, \"Memory Layout\"]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900895,"byte_end":900930,"line_start":104,"line_end":104,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900931,"byte_end":900934,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ A `Layouter` may be indexed by `Handle<Type>` values: `layouter[handle]` is the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900935,"byte_end":901018,"line_start":106,"line_end":106,"column_start":1,"column_end":84}},{"value":"/ layout of the type whose handle is `handle`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":901019,"byte_end":901067,"line_start":107,"line_end":107,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":901068,"byte_end":901071,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ [WGSL §4.3.7, \"Memory Layout\"](https://gpuweb.github.io/gpuweb/wgsl/#memory-layouts)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":901072,"byte_end":901161,"line_start":109,"line_end":109,"column_start":1,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4515},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":901776,"byte_end":901799,"line_start":128,"line_end":128,"column_start":5,"column_end":28},"name":"InvalidArrayElementType","qualname":"::proc::layouter::LayoutErrorInner::InvalidArrayElementType","value":"LayoutErrorInner::InvalidArrayElementType(Handle<crate::Type>)","parent":{"krate":0,"index":4489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Array element type {0:?} doesn't exist\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":901721,"byte_end":901771,"line_start":127,"line_end":127,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4518},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":901886,"byte_end":901909,"line_start":130,"line_end":130,"column_start":5,"column_end":28},"name":"InvalidStructMemberType","qualname":"::proc::layouter::LayoutErrorInner::InvalidStructMemberType","value":"LayoutErrorInner::InvalidStructMemberType(u32, Handle<crate::Type>)","parent":{"krate":0,"index":4489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Struct member[{0}] type {1:?} doesn't exist\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":901826,"byte_end":901881,"line_start":129,"line_end":129,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4522},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":901991,"byte_end":902009,"line_start":132,"line_end":132,"column_start":5,"column_end":23},"name":"NonPowerOfTwoWidth","qualname":"::proc::layouter::LayoutErrorInner::NonPowerOfTwoWidth","value":"LayoutErrorInner::NonPowerOfTwoWidth","parent":{"krate":0,"index":4489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type width must be a power of two\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":901941,"byte_end":901986,"line_start":131,"line_end":131,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4524},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902058,"byte_end":902067,"line_start":134,"line_end":134,"column_start":5,"column_end":14},"name":"BadHandle","qualname":"::proc::layouter::LayoutErrorInner::BadHandle","value":"LayoutErrorInner::BadHandle(BadHandle)","parent":{"krate":0,"index":4489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Array size is a bad handle\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902015,"byte_end":902053,"line_start":133,"line_end":133,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":4489},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":901698,"byte_end":901714,"line_start":126,"line_end":126,"column_start":10,"column_end":26},"name":"LayoutErrorInner","qualname":"::proc::layouter::LayoutErrorInner","value":"pub enum LayoutErrorInner {\n    InvalidArrayElementType(Handle<crate::Type>),\n    InvalidStructMemberType(u32, Handle<crate::Type>),\n    NonPowerOfTwoWidth,\n    BadHandle(BadHandle),\n}","parent":null,"children":[{"krate":0,"index":4515},{"krate":0,"index":4518},{"krate":0,"index":4522},{"krate":0,"index":4524}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4546},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902211,"byte_end":902222,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"LayoutError","qualname":"::proc::layouter::LayoutError","value":"LayoutError { ty, inner }","parent":null,"children":[{"krate":0,"index":4547},{"krate":0,"index":4548}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Error laying out type {ty:?}: {inner}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902150,"byte_end":902199,"line_start":138,"line_end":138,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":4547},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902233,"byte_end":902235,"line_start":140,"line_end":140,"column_start":9,"column_end":11},"name":"ty","qualname":"::proc::layouter::LayoutError::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":4546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4548},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902266,"byte_end":902271,"line_start":141,"line_end":141,"column_start":9,"column_end":14},"name":"inner","qualname":"::proc::layouter::LayoutError::inner","value":"proc::layouter::LayoutErrorInner","parent":{"krate":0,"index":4546},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902528,"byte_end":902533,"line_start":152,"line_end":152,"column_start":12,"column_end":17},"name":"clear","qualname":"<Layouter>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all entries from this `Layouter`, retaining storage.\n","sig":null,"attributes":[{"value":"/ Remove all entries from this `Layouter`, retaining storage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902453,"byte_end":902516,"line_start":151,"line_end":151,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2289},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":903388,"byte_end":903394,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"update","qualname":"<Layouter>::update","value":"pub fn update(&mut Self, &UniqueArena<crate::Type>, &Arena<crate::Constant>)\n-> Result<(), LayoutError>","parent":null,"children":[],"decl_id":null,"docs":" Extend this `Layouter` with layouts for any new entries in `types`.","sig":null,"attributes":[{"value":"/ Extend this `Layouter` with layouts for any new entries in `types`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902588,"byte_end":902659,"line_start":156,"line_end":156,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902664,"byte_end":902667,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Ensure that every type in `types` has a corresponding [TypeLayout] in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902672,"byte_end":902745,"line_start":158,"line_end":158,"column_start":5,"column_end":78}},{"value":"/ [`self.layouts`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902750,"byte_end":902771,"line_start":159,"line_end":159,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902776,"byte_end":902779,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Some front ends need to be able to compute layouts for existing types","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902784,"byte_end":902857,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/ while module construction is still in progress and new types are still","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902862,"byte_end":902936,"line_start":162,"line_end":162,"column_start":5,"column_end":79}},{"value":"/ being added. This function assumes that the `TypeLayout` values already","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902941,"byte_end":903016,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/ present in `self.layouts` cover their corresponding entries in `types`,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":903021,"byte_end":903096,"line_start":164,"line_end":164,"column_start":5,"column_end":80}},{"value":"/ and extends `self.layouts` as needed to cover the rest. Thus, a front","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":903101,"byte_end":903174,"line_start":165,"line_end":165,"column_start":5,"column_end":78}},{"value":"/ end can call this function at any time, passing its current type and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":903179,"byte_end":903251,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/ constant arenas, and then assume that layouts are available for all","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":903256,"byte_end":903327,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ types.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":903332,"byte_end":903342,"line_start":168,"line_end":168,"column_start":5,"column_end":15}},{"value":"allow(clippy :: or_fun_call)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":903347,"byte_end":903376,"line_start":169,"line_end":169,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":2308},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":906894,"byte_end":906909,"line_start":4,"line_end":4,"column_start":10,"column_end":25},"name":"EntryPointIndex","qualname":"::proc::namer::EntryPointIndex","value":"u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4550},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907008,"byte_end":907016,"line_start":9,"line_end":9,"column_start":5,"column_end":13},"name":"Constant","qualname":"::proc::namer::NameKey::Constant","value":"NameKey::Constant(Handle<crate::Constant>)","parent":{"krate":0,"index":4549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4553},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907047,"byte_end":907061,"line_start":10,"line_end":10,"column_start":5,"column_end":19},"name":"GlobalVariable","qualname":"::proc::namer::NameKey::GlobalVariable","value":"NameKey::GlobalVariable(Handle<crate::GlobalVariable>)","parent":{"krate":0,"index":4549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4556},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907098,"byte_end":907102,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Type","qualname":"::proc::namer::NameKey::Type","value":"NameKey::Type(Handle<crate::Type>)","parent":{"krate":0,"index":4549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4559},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907129,"byte_end":907141,"line_start":12,"line_end":12,"column_start":5,"column_end":17},"name":"StructMember","qualname":"::proc::namer::NameKey::StructMember","value":"NameKey::StructMember(Handle<crate::Type>, u32)","parent":{"krate":0,"index":4549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4563},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907173,"byte_end":907181,"line_start":13,"line_end":13,"column_start":5,"column_end":13},"name":"Function","qualname":"::proc::namer::NameKey::Function","value":"NameKey::Function(Handle<crate::Function>)","parent":{"krate":0,"index":4549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4566},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907212,"byte_end":907228,"line_start":14,"line_end":14,"column_start":5,"column_end":21},"name":"FunctionArgument","qualname":"::proc::namer::NameKey::FunctionArgument","value":"NameKey::FunctionArgument(Handle<crate::Function>, u32)","parent":{"krate":0,"index":4549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4570},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907264,"byte_end":907277,"line_start":15,"line_end":15,"column_start":5,"column_end":18},"name":"FunctionLocal","qualname":"::proc::namer::NameKey::FunctionLocal","value":"NameKey::FunctionLocal(Handle<crate::Function>, Handle<crate::LocalVariable>)","parent":{"krate":0,"index":4549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4574},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907338,"byte_end":907348,"line_start":16,"line_end":16,"column_start":5,"column_end":15},"name":"EntryPoint","qualname":"::proc::namer::NameKey::EntryPoint","value":"NameKey::EntryPoint(EntryPointIndex)","parent":{"krate":0,"index":4549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4577},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907371,"byte_end":907386,"line_start":17,"line_end":17,"column_start":5,"column_end":20},"name":"EntryPointLocal","qualname":"::proc::namer::NameKey::EntryPointLocal","value":"NameKey::EntryPointLocal(EntryPointIndex, Handle<crate::LocalVariable>)","parent":{"krate":0,"index":4549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4581},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907439,"byte_end":907457,"line_start":18,"line_end":18,"column_start":5,"column_end":23},"name":"EntryPointArgument","qualname":"::proc::namer::NameKey::EntryPointArgument","value":"NameKey::EntryPointArgument(EntryPointIndex, u32)","parent":{"krate":0,"index":4549},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4549},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":906994,"byte_end":907001,"line_start":8,"line_end":8,"column_start":10,"column_end":17},"name":"NameKey","qualname":"::proc::namer::NameKey","value":"pub enum NameKey {\n    Constant(Handle<crate::Constant>),\n    GlobalVariable(Handle<crate::GlobalVariable>),\n    Type(Handle<crate::Type>),\n    StructMember(Handle<crate::Type>, u32),\n    Function(Handle<crate::Function>),\n    FunctionArgument(Handle<crate::Function>, u32),\n    FunctionLocal(Handle<crate::Function>, Handle<crate::LocalVariable>),\n    EntryPoint(EntryPointIndex),\n    EntryPointLocal(EntryPointIndex, Handle<crate::LocalVariable>),\n    EntryPointArgument(EntryPointIndex, u32),\n}","parent":null,"children":[{"krate":0,"index":4550},{"krate":0,"index":4553},{"krate":0,"index":4556},{"krate":0,"index":4559},{"krate":0,"index":4563},{"krate":0,"index":4566},{"krate":0,"index":4570},{"krate":0,"index":4574},{"krate":0,"index":4577},{"krate":0,"index":4581}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4597},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907629,"byte_end":907634,"line_start":24,"line_end":24,"column_start":12,"column_end":17},"name":"Namer","qualname":"::proc::namer::Namer","value":"Namer {  }","parent":null,"children":[{"krate":0,"index":4598},{"krate":0,"index":4599},{"krate":0,"index":4600}],"decl_id":null,"docs":" This processor assigns names to all the things in a module\n that may need identifiers in a textual backend.\n","sig":null,"attributes":[{"value":"/ This processor assigns names to all the things in a module","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907484,"byte_end":907546,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ that may need identifiers in a textual backend.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907547,"byte_end":907598,"line_start":22,"line_end":22,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":909806,"byte_end":909810,"line_start":84,"line_end":84,"column_start":12,"column_end":16},"name":"call","qualname":"<Namer>::call","value":"pub fn call(&mut Self, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Return a new identifier based on `label_raw`.","sig":null,"attributes":[{"value":"/ Return a new identifier based on `label_raw`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":909315,"byte_end":909364,"line_start":74,"line_end":74,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":909369,"byte_end":909372,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The result:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":909377,"byte_end":909392,"line_start":76,"line_end":76,"column_start":5,"column_end":20}},{"value":"/ - is a valid identifier even if `label_raw` is not","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":909397,"byte_end":909451,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/ - conflicts with no keywords listed in `Namer::keywords`, and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":909456,"byte_end":909521,"line_start":78,"line_end":78,"column_start":5,"column_end":70}},{"value":"/ - is different from any identifier previously constructed by this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":909526,"byte_end":909595,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"/   `Namer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":909600,"byte_end":909614,"line_start":80,"line_end":80,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":909619,"byte_end":909622,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Guarantee uniqueness by applying a numeric suffix when necessary. If `label_raw`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":909627,"byte_end":909711,"line_start":82,"line_end":82,"column_start":5,"column_end":89}},{"value":"/ itself ends with digits, separate them from the suffix with an underscore.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":909716,"byte_end":909794,"line_start":83,"line_end":83,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2320},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":911324,"byte_end":911331,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"call_or","qualname":"<Namer>::call_or","value":"pub fn call_or(&mut Self, &Option<String>, &str) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2323},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":912083,"byte_end":912088,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"reset","qualname":"<Namer>::reset","value":"pub fn reset(&mut Self, &crate::Module, &[&str], &[&str],\n&mut FastHashMap<NameKey, String>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2331},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\terminator.rs","byte_start":917677,"byte_end":917697,"line_start":7,"line_end":7,"column_start":8,"column_end":28},"name":"ensure_block_returns","qualname":"::proc::terminator::ensure_block_returns","value":"pub fn ensure_block_returns(&mut crate::Block)","parent":null,"children":[],"decl_id":null,"docs":" Ensure that the given block has return statements\n at the end of its control flow.","sig":null,"attributes":[{"value":"/ Ensure that the given block has return statements","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\terminator.rs","byte_start":917388,"byte_end":917441,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/ at the end of its control flow.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\terminator.rs","byte_start":917442,"byte_end":917477,"line_start":2,"line_end":2,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\terminator.rs","byte_start":917478,"byte_end":917481,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Note: we don't want to blindly append a return statement","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\terminator.rs","byte_start":917482,"byte_end":917542,"line_start":4,"line_end":4,"column_start":1,"column_end":61}},{"value":"/ to the end, because it may be either redundant or invalid,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\terminator.rs","byte_start":917543,"byte_end":917605,"line_start":5,"line_end":5,"column_start":1,"column_end":63}},{"value":"/ e.g. when the user already has returns in if/else branches.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\terminator.rs","byte_start":917606,"byte_end":917669,"line_start":6,"line_end":6,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4604},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":922331,"byte_end":922337,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Handle","qualname":"::proc::typifier::TypeResolution::Handle","value":"TypeResolution::Handle(Handle<crate::Type>)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":" A type stored in the associated arena.\n","sig":null,"attributes":[{"value":"/ A type stored in the associated arena.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":922284,"byte_end":922326,"line_start":88,"line_end":88,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4607},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":922640,"byte_end":922645,"line_start":96,"line_end":96,"column_start":5,"column_end":10},"name":"Value","qualname":"::proc::typifier::TypeResolution::Value","value":"TypeResolution::Value(crate::TypeInner)","parent":{"krate":0,"index":4603},"children":[],"decl_id":null,"docs":" A free-floating [`TypeInner`], representing a type that may not be\n available in the associated arena. However, the `TypeInner` itself may\n contain `Handle<Type>` values referring to types from the arena.","sig":null,"attributes":[{"value":"/ A free-floating [`TypeInner`], representing a type that may not be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":922365,"byte_end":922435,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ available in the associated arena. However, the `TypeInner` itself may","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":922440,"byte_end":922514,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ contain `Handle<Type>` values referring to types from the arena.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":922519,"byte_end":922587,"line_start":93,"line_end":93,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":922592,"byte_end":922595,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ [`TypeInner`]: crate::TypeInner","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":922600,"byte_end":922635,"line_start":95,"line_end":95,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":4603},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":922263,"byte_end":922277,"line_start":87,"line_end":87,"column_start":10,"column_end":24},"name":"TypeResolution","qualname":"::proc::typifier::TypeResolution","value":"pub enum TypeResolution {\n    Handle(Handle<crate::Type>),\n    Value(crate::TypeInner),\n}","parent":null,"children":[{"krate":0,"index":4604},{"krate":0,"index":4607}],"decl_id":null,"docs":" The result of computing an expression's type.","sig":null,"attributes":[{"value":"/ The result of computing an expression's type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":918850,"byte_end":918899,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":918900,"byte_end":918903,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is the (Rust) type returned by [`ResolveContext::resolve`] to represent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":918904,"byte_end":918984,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ the (Naga) type it ascribes to some expression.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":918985,"byte_end":919036,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919037,"byte_end":919040,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ You might expect such a function to simply return a `Handle<Type>`. However,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919041,"byte_end":919121,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ we want type resolution to be a read-only process, and that would limit the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919122,"byte_end":919201,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ possible results to types already present in the expression's associated","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919202,"byte_end":919278,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `UniqueArena<Type>`. Naga IR does have certain expressions whose types are","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919279,"byte_end":919357,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ not certain to be present.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919358,"byte_end":919388,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919389,"byte_end":919392,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ So instead, type resolution returns a `TypeResolution` enum: either a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919393,"byte_end":919466,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"/ [`Handle`], referencing some type in the arena, or a [`Value`], holding a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919467,"byte_end":919544,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ free-floating [`TypeInner`]. This extends the range to cover anything that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919545,"byte_end":919623,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ can be represented with a `TypeInner` referring to the existing arena.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919624,"byte_end":919698,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919699,"byte_end":919702,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ What sorts of expressions can have types not available in the arena?","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919703,"byte_end":919775,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919776,"byte_end":919779,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ -   An [`Access`] or [`AccessIndex`] expression applied to a [`Vector`] or","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919780,"byte_end":919858,"line_start":23,"line_end":23,"column_start":1,"column_end":79}},{"value":"/     [`Matrix`] must have a [`Scalar`] or [`Vector`] type. But since `Vector`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919859,"byte_end":919939,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/     and `Matrix` represent their element and column types implicitly, not","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":919940,"byte_end":920017,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/     via a handle, there may not be a suitable type in the expression's","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920018,"byte_end":920092,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/     associated arena. Instead, resolving such an expression returns a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920093,"byte_end":920166,"line_start":27,"line_end":27,"column_start":1,"column_end":74}},{"value":"/     `TypeResolution::Value(TypeInner::X { ... })`, where `X` is `Scalar` or","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920167,"byte_end":920246,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/     `Vector`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920247,"byte_end":920264,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920265,"byte_end":920268,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ -   Similarly, the type of an [`Access`] or [`AccessIndex`] expression","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920269,"byte_end":920343,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/     applied to a *pointer to* a vector or matrix must produce a *pointer to*","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920344,"byte_end":920424,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/     a scalar or vector type. These cannot be represented with a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920425,"byte_end":920492,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/     [`TypeInner::Pointer`], since the `Pointer`'s `base` must point into the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920493,"byte_end":920573,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/     arena, and as before, we cannot assume that a suitable scalar or vector","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920574,"byte_end":920653,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/     type is there. So we take things one step further and provide","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920654,"byte_end":920723,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/     [`TypeInner::ValuePointer`], specifically for the case of pointers to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920724,"byte_end":920801,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/     scalars or vectors. This type fits in a `TypeInner` and is exactly","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920802,"byte_end":920876,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/     equivalent to a `Pointer` to a `Vector` or `Scalar`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920877,"byte_end":920937,"line_start":39,"line_end":39,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920938,"byte_end":920941,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ So, for example, the type of an `Access` expression applied to a value of type:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":920942,"byte_end":921025,"line_start":41,"line_end":41,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921026,"byte_end":921029,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921030,"byte_end":921043,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/ TypeInner::Matrix { columns, rows, width }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921044,"byte_end":921090,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921091,"byte_end":921098,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921099,"byte_end":921102,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ might be:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921103,"byte_end":921116,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921117,"byte_end":921120,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921121,"byte_end":921134,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ TypeResolution::Value(TypeInner::Vector {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921135,"byte_end":921180,"line_start":50,"line_end":50,"column_start":1,"column_end":46}},{"value":"/     size: rows,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921181,"byte_end":921200,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/     kind: ScalarKind::Float,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921201,"byte_end":921233,"line_start":52,"line_end":52,"column_start":1,"column_end":33}},{"value":"/     width,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921234,"byte_end":921248,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921249,"byte_end":921255,"line_start":54,"line_end":54,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921256,"byte_end":921263,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921264,"byte_end":921267,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ and the type of an access to a pointer of address space `space` to such a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921268,"byte_end":921345,"line_start":57,"line_end":57,"column_start":1,"column_end":78}},{"value":"/ matrix might be:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921346,"byte_end":921366,"line_start":58,"line_end":58,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921367,"byte_end":921370,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921371,"byte_end":921384,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/ TypeResolution::Value(TypeInner::ValuePointer {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921385,"byte_end":921436,"line_start":61,"line_end":61,"column_start":1,"column_end":52}},{"value":"/     size: Some(rows),","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921437,"byte_end":921462,"line_start":62,"line_end":62,"column_start":1,"column_end":26}},{"value":"/     kind: ScalarKind::Float,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921463,"byte_end":921495,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/     width,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921496,"byte_end":921510,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"/     space,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921511,"byte_end":921525,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/ })","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921526,"byte_end":921532,"line_start":66,"line_end":66,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921533,"byte_end":921540,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921541,"byte_end":921544,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [`Handle`]: TypeResolution::Handle","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921545,"byte_end":921583,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/ [`Value`]: TypeResolution::Value","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921584,"byte_end":921620,"line_start":70,"line_end":70,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921621,"byte_end":921624,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ [`Access`]: crate::Expression::Access","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921625,"byte_end":921666,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ [`AccessIndex`]: crate::Expression::AccessIndex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921667,"byte_end":921718,"line_start":73,"line_end":73,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921719,"byte_end":921722,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`TypeInner`]: crate::TypeInner","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921723,"byte_end":921758,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/ [`Matrix`]: crate::TypeInner::Matrix","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921759,"byte_end":921799,"line_start":76,"line_end":76,"column_start":1,"column_end":41}},{"value":"/ [`Pointer`]: crate::TypeInner::Pointer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921800,"byte_end":921842,"line_start":77,"line_end":77,"column_start":1,"column_end":43}},{"value":"/ [`Scalar`]: crate::TypeInner::Scalar","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921843,"byte_end":921883,"line_start":78,"line_end":78,"column_start":1,"column_end":41}},{"value":"/ [`ValuePointer`]: crate::TypeInner::ValuePointer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921884,"byte_end":921936,"line_start":79,"line_end":79,"column_start":1,"column_end":53}},{"value":"/ [`Vector`]: crate::TypeInner::Vector","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921937,"byte_end":921977,"line_start":80,"line_end":80,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921978,"byte_end":921981,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [`TypeInner::Pointer`]: crate::TypeInner::Pointer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":921982,"byte_end":922035,"line_start":82,"line_end":82,"column_start":1,"column_end":54}},{"value":"/ [`TypeInner::ValuePointer`]: crate::TypeInner::ValuePointer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":922036,"byte_end":922099,"line_start":83,"line_end":83,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2353},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":922707,"byte_end":922713,"line_start":100,"line_end":100,"column_start":18,"column_end":24},"name":"handle","qualname":"<TypeResolution>::handle","value":"pub const fn handle(&Self) -> Option<Handle<crate::Type>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":922890,"byte_end":922900,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"inner_with","qualname":"<TypeResolution>::inner_with","value":"pub fn inner_with<'a>(&'a Self, &'a UniqueArena<crate::Type>)\n-> &'a crate::TypeInner","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":924360,"byte_end":924372,"line_start":152,"line_end":152,"column_start":18,"column_end":30},"name":"resolve_type","qualname":"<crate::ConstantInner>::resolve_type","value":"pub const fn resolve_type(&Self) -> TypeResolution","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4641},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":924798,"byte_end":924807,"line_start":166,"line_end":166,"column_start":5,"column_end":14},"name":"BadHandle","qualname":"::proc::typifier::ResolveError::BadHandle","value":"ResolveError::BadHandle(BadHandle)","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":924772,"byte_end":924793,"line_start":165,"line_end":165,"column_start":5,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":4644},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":924903,"byte_end":924919,"line_start":168,"line_end":168,"column_start":5,"column_end":21},"name":"OutOfBoundsIndex","qualname":"::proc::typifier::ResolveError::OutOfBoundsIndex","value":"ResolveError::OutOfBoundsIndex { expr, index }","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Index {index} is out of bounds for expression {expr:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":924832,"byte_end":924898,"line_start":167,"line_end":167,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":4647},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925070,"byte_end":925083,"line_start":173,"line_end":173,"column_start":5,"column_end":18},"name":"InvalidAccess","qualname":"::proc::typifier::ResolveError::InvalidAccess","value":"ResolveError::InvalidAccess { expr, indexed }","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid access into expression {expr:?}, indexed: {indexed}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":924994,"byte_end":925065,"line_start":172,"line_end":172,"column_start":5,"column_end":76}}]},{"kind":"StructVariant","id":{"krate":0,"index":4650},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925233,"byte_end":925249,"line_start":178,"line_end":178,"column_start":5,"column_end":21},"name":"InvalidSubAccess","qualname":"::proc::typifier::ResolveError::InvalidSubAccess","value":"ResolveError::InvalidSubAccess { ty, indexed }","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid sub-access into type {ty:?}, indexed: {indexed}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925161,"byte_end":925228,"line_start":177,"line_end":177,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4653},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925356,"byte_end":925369,"line_start":183,"line_end":183,"column_start":5,"column_end":18},"name":"InvalidScalar","qualname":"::proc::typifier::ResolveError::InvalidScalar","value":"ResolveError::InvalidScalar(Handle<crate::Expression>)","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid scalar {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925319,"byte_end":925351,"line_start":182,"line_end":182,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4656},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925439,"byte_end":925452,"line_start":185,"line_end":185,"column_start":5,"column_end":18},"name":"InvalidVector","qualname":"::proc::typifier::ResolveError::InvalidVector","value":"ResolveError::InvalidVector(Handle<crate::Expression>)","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid vector {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925402,"byte_end":925434,"line_start":184,"line_end":184,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4659},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925523,"byte_end":925537,"line_start":187,"line_end":187,"column_start":5,"column_end":19},"name":"InvalidPointer","qualname":"::proc::typifier::ResolveError::InvalidPointer","value":"ResolveError::InvalidPointer(Handle<crate::Expression>)","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid pointer {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925485,"byte_end":925518,"line_start":186,"line_end":186,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4662},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925606,"byte_end":925618,"line_start":189,"line_end":189,"column_start":5,"column_end":17},"name":"InvalidImage","qualname":"::proc::typifier::ResolveError::InvalidImage","value":"ResolveError::InvalidImage(Handle<crate::Expression>)","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid image {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925570,"byte_end":925601,"line_start":188,"line_end":188,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":4665},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925695,"byte_end":925713,"line_start":191,"line_end":191,"column_start":5,"column_end":23},"name":"FunctionNotDefined","qualname":"::proc::typifier::ResolveError::FunctionNotDefined","value":"ResolveError::FunctionNotDefined { name }","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function {name} not defined\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925651,"byte_end":925690,"line_start":190,"line_end":190,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4667},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925781,"byte_end":925800,"line_start":193,"line_end":193,"column_start":5,"column_end":24},"name":"FunctionReturnsVoid","qualname":"::proc::typifier::ResolveError::FunctionReturnsVoid","value":"ResolveError::FunctionReturnsVoid","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function without return type\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925736,"byte_end":925776,"line_start":192,"line_end":192,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4669},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925849,"byte_end":925869,"line_start":195,"line_end":195,"column_start":5,"column_end":25},"name":"IncompatibleOperands","qualname":"::proc::typifier::ResolveError::IncompatibleOperands","value":"ResolveError::IncompatibleOperands(String)","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Incompatible operands: {0}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925806,"byte_end":925844,"line_start":194,"line_end":194,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4672},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925935,"byte_end":925959,"line_start":197,"line_end":197,"column_start":5,"column_end":29},"name":"FunctionArgumentNotFound","qualname":"::proc::typifier::ResolveError::FunctionArgumentNotFound","value":"ResolveError::FunctionArgumentNotFound(u32)","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function argument {0} doesn't exist\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925883,"byte_end":925930,"line_start":196,"line_end":196,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4675},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926038,"byte_end":926065,"line_start":199,"line_end":199,"column_start":5,"column_end":32},"name":"ExpressionForwardDependency","qualname":"::proc::typifier::ResolveError::ExpressionForwardDependency","value":"ResolveError::ExpressionForwardDependency(Handle<crate::Expression>)","parent":{"krate":0,"index":4616},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expression {0:?} depends on expressions that follow\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":925970,"byte_end":926033,"line_start":198,"line_end":198,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":4616},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":924753,"byte_end":924765,"line_start":164,"line_end":164,"column_start":10,"column_end":22},"name":"ResolveError","qualname":"::proc::typifier::ResolveError","value":"pub enum ResolveError {\n    BadHandle(BadHandle),\n    OutOfBoundsIndex {\n            expr: Handle<crate::Expression>,\n            index: u32,\n        },\n    InvalidAccess {\n            expr: Handle<crate::Expression>,\n            indexed: bool,\n        },\n    InvalidSubAccess {\n            ty: Handle<crate::Type>,\n            indexed: bool,\n        },\n    InvalidScalar(Handle<crate::Expression>),\n    InvalidVector(Handle<crate::Expression>),\n    InvalidPointer(Handle<crate::Expression>),\n    InvalidImage(Handle<crate::Expression>),\n    FunctionNotDefined {\n            name: String,\n        },\n    FunctionReturnsVoid,\n    IncompatibleOperands(String),\n    FunctionArgumentNotFound(u32),\n    ExpressionForwardDependency(Handle<crate::Expression>),\n}","parent":null,"children":[{"krate":0,"index":4641},{"krate":0,"index":4644},{"krate":0,"index":4647},{"krate":0,"index":4650},{"krate":0,"index":4653},{"krate":0,"index":4656},{"krate":0,"index":4659},{"krate":0,"index":4662},{"krate":0,"index":4665},{"krate":0,"index":4667},{"krate":0,"index":4669},{"krate":0,"index":4672},{"krate":0,"index":4675}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2363},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926108,"byte_end":926122,"line_start":202,"line_end":202,"column_start":12,"column_end":26},"name":"ResolveContext","qualname":"::proc::typifier::ResolveContext","value":"ResolveContext { constants, types, global_vars, local_vars, functions, arguments }","parent":null,"children":[{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2365},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926137,"byte_end":926146,"line_start":203,"line_end":203,"column_start":9,"column_end":18},"name":"constants","qualname":"::proc::typifier::ResolveContext::constants","value":"&'a arena::Arena<Constant>","parent":{"krate":0,"index":2363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2366},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926184,"byte_end":926189,"line_start":204,"line_end":204,"column_start":9,"column_end":14},"name":"types","qualname":"::proc::typifier::ResolveContext::types","value":"&'a arena::UniqueArena<Type>","parent":{"krate":0,"index":2363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2367},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926229,"byte_end":926240,"line_start":205,"line_end":205,"column_start":9,"column_end":20},"name":"global_vars","qualname":"::proc::typifier::ResolveContext::global_vars","value":"&'a arena::Arena<GlobalVariable>","parent":{"krate":0,"index":2363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2368},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926284,"byte_end":926294,"line_start":206,"line_end":206,"column_start":9,"column_end":19},"name":"local_vars","qualname":"::proc::typifier::ResolveContext::local_vars","value":"&'a arena::Arena<LocalVariable>","parent":{"krate":0,"index":2363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2369},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926337,"byte_end":926346,"line_start":207,"line_end":207,"column_start":9,"column_end":18},"name":"functions","qualname":"::proc::typifier::ResolveContext::functions","value":"&'a arena::Arena<Function>","parent":{"krate":0,"index":2363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2370},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926384,"byte_end":926393,"line_start":208,"line_end":208,"column_start":9,"column_end":18},"name":"arguments","qualname":"::proc::typifier::ResolveContext::arguments","value":"&'a [FunctionArgument]","parent":{"krate":0,"index":2363},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2373},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":927259,"byte_end":927266,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"name":"resolve","qualname":"<ResolveContext>::resolve","value":"pub fn resolve<impl Fn(Handle<crate::Expression>) -> Result<&'a TypeResolution, ResolveError>: Fn(Handle<crate::Expression>)\n->\nResult<&'a TypeResolution,\nResolveError>>(&Self, &crate::Expression,\nimpl Fn(Handle<crate::Expression>) -> Result<&'a TypeResolution, ResolveError>)\n-> Result<TypeResolution, ResolveError>","parent":null,"children":[],"decl_id":null,"docs":" Determine the type of `expr`.","sig":null,"attributes":[{"value":"/ Determine the type of `expr`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926463,"byte_end":926496,"line_start":212,"line_end":212,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926501,"byte_end":926504,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The `past` argument must be a closure that can resolve the types of any","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926509,"byte_end":926584,"line_start":214,"line_end":214,"column_start":5,"column_end":80}},{"value":"/ expressions that `expr` refers to. These can be gathered by caching the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926589,"byte_end":926664,"line_start":215,"line_end":215,"column_start":5,"column_end":80}},{"value":"/ results of prior calls to `resolve`, perhaps as done by the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926669,"byte_end":926732,"line_start":216,"line_end":216,"column_start":5,"column_end":68}},{"value":"/ [`front::Typifier`] utility type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926737,"byte_end":926774,"line_start":217,"line_end":217,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926779,"byte_end":926782,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ Type resolution is a read-only process: this method takes `self` by","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926787,"byte_end":926858,"line_start":219,"line_end":219,"column_start":5,"column_end":76}},{"value":"/ shared reference. However, this means that we cannot add anything to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926863,"byte_end":926935,"line_start":220,"line_end":220,"column_start":5,"column_end":77}},{"value":"/ `self.types` that we might need to describe `expr`. To work around this,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926940,"byte_end":927016,"line_start":221,"line_end":221,"column_start":5,"column_end":81}},{"value":"/ this method returns a [`TypeResolution`], rather than simply returning a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":927021,"byte_end":927097,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/ `Handle<Type>`; see the documentation for [`TypeResolution`] for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":927102,"byte_end":927170,"line_start":223,"line_end":223,"column_start":5,"column_end":73}},{"value":"/ details.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":927175,"byte_end":927187,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":927192,"byte_end":927195,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ [`front::Typifier`]: crate::front::Typifier","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":927200,"byte_end":927247,"line_start":226,"line_end":226,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":863989,"byte_end":864000,"line_start":60,"line_end":60,"column_start":18,"column_end":29},"name":"scalar_kind","qualname":"<super::ScalarValue>::scalar_kind","value":"pub const fn scalar_kind(&Self) -> super::ScalarKind","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":864332,"byte_end":864342,"line_start":71,"line_end":71,"column_start":18,"column_end":28},"name":"is_numeric","qualname":"<super::ScalarKind>::is_numeric","value":"pub const fn is_numeric(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2450},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":864553,"byte_end":864565,"line_start":79,"line_end":79,"column_start":11,"column_end":23},"name":"POINTER_SPAN","qualname":"::proc::POINTER_SPAN","value":"u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2452},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":864618,"byte_end":864629,"line_start":82,"line_end":82,"column_start":18,"column_end":29},"name":"scalar_kind","qualname":"<super::TypeInner>::scalar_kind","value":"pub const fn scalar_kind(&Self) -> Option<super::ScalarKind>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2453},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":864962,"byte_end":864975,"line_start":92,"line_end":92,"column_start":18,"column_end":31},"name":"pointer_space","qualname":"<super::TypeInner>::pointer_space","value":"pub const fn pointer_space(&Self) -> Option<crate::AddressSpace>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":865206,"byte_end":865214,"line_start":100,"line_end":100,"column_start":12,"column_end":20},"name":"try_size","qualname":"<super::TypeInner>::try_size","value":"pub fn try_size(&Self, &super::Arena<super::Constant>)\n-> Result<u32, crate::arena::BadHandle>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2455},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":866797,"byte_end":866801,"line_start":140,"line_end":140,"column_start":12,"column_end":16},"name":"size","qualname":"<super::TypeInner>::size","value":"pub fn size(&Self, &super::Arena<super::Constant>) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the size of this type. Panics if the `constants` doesn't contain\n a referenced handle. This may not happen in a properly validated IR module.\n","sig":null,"attributes":[{"value":"/ Get the size of this type. Panics if the `constants` doesn't contain","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":866629,"byte_end":866701,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ a referenced handle. This may not happen in a properly validated IR module.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":866706,"byte_end":866785,"line_start":139,"line_end":139,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":867342,"byte_end":867356,"line_start":152,"line_end":152,"column_start":12,"column_end":26},"name":"canonical_form","qualname":"<super::TypeInner>::canonical_form","value":"pub fn canonical_form(&Self, &crate::UniqueArena<crate::Type>)\n-> Option<crate::TypeInner>","parent":null,"children":[],"decl_id":null,"docs":" Return the canonical form of `self`, or `None` if it's already in\n canonical form.","sig":null,"attributes":[{"value":"/ Return the canonical form of `self`, or `None` if it's already in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":866914,"byte_end":866983,"line_start":144,"line_end":144,"column_start":5,"column_end":74}},{"value":"/ canonical form.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":866988,"byte_end":867007,"line_start":145,"line_end":145,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":867012,"byte_end":867015,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ Certain types have multiple representations in `TypeInner`. This","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":867020,"byte_end":867088,"line_start":147,"line_end":147,"column_start":5,"column_end":73}},{"value":"/ function converts all forms of equivalent types to a single","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":867093,"byte_end":867156,"line_start":148,"line_end":148,"column_start":5,"column_end":68}},{"value":"/ representative of their class, so that simply applying `Eq` to the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":867161,"byte_end":867231,"line_start":149,"line_end":149,"column_start":5,"column_end":75}},{"value":"/ result indicates whether the types are equivalent, as far as Naga IR is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":867236,"byte_end":867311,"line_start":150,"line_end":150,"column_start":5,"column_end":80}},{"value":"/ concerned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":867316,"byte_end":867330,"line_start":151,"line_end":151,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":868469,"byte_end":868479,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"equivalent","qualname":"<super::TypeInner>::equivalent","value":"pub fn equivalent(&Self, &crate::TypeInner, &crate::UniqueArena<crate::Type>)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Compare `self` and `rhs` as types.","sig":null,"attributes":[{"value":"/ Compare `self` and `rhs` as types.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":868087,"byte_end":868125,"line_start":177,"line_end":177,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":868130,"byte_end":868133,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ This is mostly the same as `<TypeInner as Eq>::eq`, but it treats","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":868138,"byte_end":868207,"line_start":179,"line_end":179,"column_start":5,"column_end":74}},{"value":"/ `ValuePointer` and `Pointer` types as equivalent.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":868212,"byte_end":868265,"line_start":180,"line_end":180,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":868270,"byte_end":868273,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ When you know that one side of the comparison is never a pointer, it's","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":868278,"byte_end":868352,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"/ fine to not bother with canonicalization, and just compare `TypeInner`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":868357,"byte_end":868431,"line_start":183,"line_end":183,"column_start":5,"column_end":79}},{"value":"/ values with `==`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":868436,"byte_end":868457,"line_start":184,"line_end":184,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2461},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":868776,"byte_end":868796,"line_start":195,"line_end":195,"column_start":12,"column_end":32},"name":"is_dynamically_sized","qualname":"<super::TypeInner>::is_dynamically_sized","value":"pub fn is_dynamically_sized(&Self, &crate::UniqueArena<crate::Type>) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":869258,"byte_end":869264,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"access","qualname":"<super::AddressSpace>::access","value":"pub fn access(Self) -> crate::StorageAccess","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2472},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":869805,"byte_end":869819,"line_start":224,"line_end":224,"column_start":18,"column_end":32},"name":"argument_count","qualname":"<super::MathFunction>::argument_count","value":"pub const fn argument_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":872380,"byte_end":872394,"line_start":308,"line_end":308,"column_start":18,"column_end":32},"name":"needs_pre_emit","qualname":"<crate::Expression>::needs_pre_emit","value":"pub const fn needs_pre_emit(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the expression is considered emitted at the start of a function.\n","sig":null,"attributes":[{"value":"/ Returns true if the expression is considered emitted at the start of a function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":872278,"byte_end":872362,"line_start":307,"line_end":307,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873309,"byte_end":873325,"line_start":331,"line_end":331,"column_start":12,"column_end":28},"name":"is_dynamic_index","qualname":"<crate::Expression>::is_dynamic_index","value":"pub fn is_dynamic_index(&Self, &crate::Module) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this expression is a dynamic array index, for [`Access`].","sig":null,"attributes":[{"value":"/ Return true if this expression is a dynamic array index, for [`Access`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":872633,"byte_end":872709,"line_start":318,"line_end":318,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":872714,"byte_end":872717,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ This method returns true if this expression is a dynamically computed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":872722,"byte_end":872795,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ index, and as such can only be used to index matrices and arrays when","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":872800,"byte_end":872873,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ they appear behind a pointer. See the documentation for [`Access`] for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":872878,"byte_end":872952,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/ details.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":872957,"byte_end":872969,"line_start":323,"line_end":323,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":872974,"byte_end":872977,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Note, this does not check the _type_ of the given expression. It's up to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":872982,"byte_end":873058,"line_start":325,"line_end":325,"column_start":5,"column_end":81}},{"value":"/ the caller to establish that the `Access` expression is well-typed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873063,"byte_end":873133,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/ through other means, like [`ResolveContext`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873138,"byte_end":873187,"line_start":327,"line_end":327,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873192,"byte_end":873195,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ [`Access`]: crate::Expression::Access","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873200,"byte_end":873241,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ [`ResolveContext`]: crate::proc::ResolveContext","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873246,"byte_end":873297,"line_start":330,"line_end":330,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2477},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873983,"byte_end":874001,"line_start":350,"line_end":350,"column_start":12,"column_end":30},"name":"originating_global","qualname":"<crate::Function>::originating_global","value":"pub fn originating_global(&Self, crate::Handle<crate::Expression>)\n-> Option<crate::Handle<crate::GlobalVariable>>","parent":null,"children":[],"decl_id":null,"docs":" Return the global variable being accessed by the expression `pointer`.","sig":null,"attributes":[{"value":"/ Return the global variable being accessed by the expression `pointer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873595,"byte_end":873669,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873674,"byte_end":873677,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Assuming that `pointer` is a series of `Access` and `AccessIndex`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873682,"byte_end":873751,"line_start":344,"line_end":344,"column_start":5,"column_end":74}},{"value":"/ expressions that ultimately access some part of a `GlobalVariable`,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873756,"byte_end":873827,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/ return a handle for that global.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873832,"byte_end":873868,"line_start":346,"line_end":346,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873873,"byte_end":873876,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ If the expression does not ultimately access a global variable, return","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873881,"byte_end":873955,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/ `None`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873960,"byte_end":873971,"line_start":349,"line_end":349,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":874746,"byte_end":874766,"line_start":369,"line_end":369,"column_start":18,"column_end":38},"name":"implicit_derivatives","qualname":"<crate::SampleLevel>::implicit_derivatives","value":"pub const fn implicit_derivatives(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":876431,"byte_end":876442,"line_start":409,"line_end":409,"column_start":18,"column_end":29},"name":"to_built_in","qualname":"<crate::Binding>::to_built_in","value":"pub const fn to_built_in(&Self) -> Option<crate::BuiltIn>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2494},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":877497,"byte_end":877501,"line_start":442,"line_end":442,"column_start":15,"column_end":19},"name":"XYZW","qualname":"::proc::<impl SwizzleComponent>::XYZW","value":"[Self; ]","parent":{"krate":0,"index":2493},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":877571,"byte_end":877576,"line_start":444,"line_end":444,"column_start":18,"column_end":23},"name":"index","qualname":"<super::SwizzleComponent>::index","value":"pub const fn index(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":877752,"byte_end":877762,"line_start":452,"line_end":452,"column_start":18,"column_end":28},"name":"from_index","qualname":"<super::SwizzleComponent>::from_index","value":"pub const fn from_index(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":877968,"byte_end":877983,"line_start":463,"line_end":463,"column_start":18,"column_end":33},"name":"is_multisampled","qualname":"<super::ImageClass>::is_multisampled","value":"pub const fn is_multisampled(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":878211,"byte_end":878223,"line_start":470,"line_end":470,"column_start":18,"column_end":30},"name":"is_mipmapped","qualname":"<super::ImageClass>::is_mipmapped","value":"pub const fn is_mipmapped(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4678},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":957236,"byte_end":957240,"line_start":7,"line_end":7,"column_start":12,"column_end":16},"name":"Span","qualname":"::span::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":4679},{"krate":0,"index":4680}],"decl_id":null,"docs":" A source code span, used for error reporting.\n","sig":null,"attributes":[{"value":"/ A source code span, used for error reporting.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":957060,"byte_end":957109,"line_start":4,"line_end":4,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":2523},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":957302,"byte_end":957311,"line_start":13,"line_end":13,"column_start":15,"column_end":24},"name":"UNDEFINED","qualname":"::span::Span::UNDEFINED","value":"Self","parent":{"krate":0,"index":2522},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":957494,"byte_end":957497,"line_start":17,"line_end":17,"column_start":18,"column_end":21},"name":"new","qualname":"<Span>::new","value":"pub const fn new(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Span` from a range of byte indices","sig":null,"attributes":[{"value":"/ Creates a new `Span` from a range of byte indices","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":957351,"byte_end":957404,"line_start":14,"line_end":14,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":957409,"byte_end":957412,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ Note: end is exclusive, it doesn't belong to the `Span`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":957417,"byte_end":957476,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":957686,"byte_end":957693,"line_start":23,"line_end":23,"column_start":12,"column_end":19},"name":"subsume","qualname":"<Span>::subsume","value":"pub fn subsume(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Modifies `self` to contain the smallest `Span` possible that\n contains both `self` and `other`\n","sig":null,"attributes":[{"value":"/ Modifies `self` to contain the smallest `Span` possible that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":957569,"byte_end":957633,"line_start":21,"line_end":21,"column_start":5,"column_end":69}},{"value":"/ contains both `self` and `other`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":957638,"byte_end":957674,"line_start":22,"line_end":22,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":958325,"byte_end":958335,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"total_span","qualname":"<Span>::total_span","value":"pub fn total_span<T: Iterator<Item = Self>>(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest `Span` possible that contains all the `Span`s\n defined in the `from` iterator\n","sig":null,"attributes":[{"value":"/ Returns the smallest `Span` possible that contains all the `Span`s","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":958204,"byte_end":958274,"line_start":39,"line_end":39,"column_start":5,"column_end":75}},{"value":"/ defined in the `from` iterator","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":958279,"byte_end":958313,"line_start":40,"line_end":40,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":958594,"byte_end":958602,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"to_range","qualname":"<Span>::to_range","value":"pub fn to_range(Self) -> Option<Range<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` to a range if the span is not unknown\n","sig":null,"attributes":[{"value":"/ Converts `self` to a range if the span is not unknown","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":958525,"byte_end":958582,"line_start":49,"line_end":49,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":958855,"byte_end":958865,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"is_defined","qualname":"<Span>::is_defined","value":"pub fn is_defined(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether `self` was defined or is a default/unknown span\n","sig":null,"attributes":[{"value":"/ Check whether `self` was defined or is a default/unknown span","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":958778,"byte_end":958843,"line_start":58,"line_end":58,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":959008,"byte_end":959016,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"name":"location","qualname":"<Span>::location","value":"pub fn location(&Self, &str) -> SourceLocation","parent":null,"children":[],"decl_id":null,"docs":" Return a [`SourceLocation`] for this span in the provided source.\n","sig":null,"attributes":[{"value":"/ Return a [`SourceLocation`] for this span in the provided source.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":958927,"byte_end":958996,"line_start":63,"line_end":63,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":4692},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960122,"byte_end":960136,"line_start":96,"line_end":96,"column_start":12,"column_end":26},"name":"SourceLocation","qualname":"::span::SourceLocation","value":"SourceLocation { line_number, line_position, offset, length }","parent":null,"children":[{"krate":0,"index":4693},{"krate":0,"index":4694},{"krate":0,"index":4695},{"krate":0,"index":4696}],"decl_id":null,"docs":" A human-readable representation for a span, tailored for text source.","sig":null,"attributes":[{"value":"/ A human-readable representation for a span, tailored for text source.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":959709,"byte_end":959782,"line_start":88,"line_end":88,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":959783,"byte_end":959786,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Corresponds to the positional members of [`GPUCompilationMessage`][gcm] from","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":959787,"byte_end":959867,"line_start":90,"line_end":90,"column_start":1,"column_end":81}},{"value":"/ the WebGPU specification, except that `offset` and `length` are in bytes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":959868,"byte_end":959944,"line_start":91,"line_end":91,"column_start":1,"column_end":77}},{"value":"/ (UTF-8 code units), instead of UTF-16 code units.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":959945,"byte_end":959998,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":959999,"byte_end":960002,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ [gcm]: https://www.w3.org/TR/webgpu/#gpucompilationmessage","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960003,"byte_end":960065,"line_start":94,"line_end":94,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":4693},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960176,"byte_end":960187,"line_start":98,"line_end":98,"column_start":9,"column_end":20},"name":"line_number","qualname":"::span::SourceLocation::line_number","value":"u32","parent":{"krate":0,"index":4692},"children":[],"decl_id":null,"docs":" 1-based line number.\n","sig":null,"attributes":[{"value":"/ 1-based line number.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960143,"byte_end":960167,"line_start":97,"line_end":97,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":4694},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960251,"byte_end":960264,"line_start":100,"line_end":100,"column_start":9,"column_end":22},"name":"line_position","qualname":"::span::SourceLocation::line_position","value":"u32","parent":{"krate":0,"index":4692},"children":[],"decl_id":null,"docs":" 1-based column of the start of this span\n","sig":null,"attributes":[{"value":"/ 1-based column of the start of this span","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960198,"byte_end":960242,"line_start":99,"line_end":99,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":4695},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960353,"byte_end":960359,"line_start":102,"line_end":102,"column_start":9,"column_end":15},"name":"offset","qualname":"::span::SourceLocation::offset","value":"u32","parent":{"krate":0,"index":4692},"children":[],"decl_id":null,"docs":" 0-based Offset in code units (in bytes) of the start of the span.\n","sig":null,"attributes":[{"value":"/ 0-based Offset in code units (in bytes) of the start of the span.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960275,"byte_end":960344,"line_start":101,"line_end":101,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":4696},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960427,"byte_end":960433,"line_start":104,"line_end":104,"column_start":9,"column_end":15},"name":"length","qualname":"::span::SourceLocation::length","value":"u32","parent":{"krate":0,"index":4692},"children":[],"decl_id":null,"docs":" Length in code units (in bytes) of the span.\n","sig":null,"attributes":[{"value":"/ Length in code units (in bytes) of the span.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960370,"byte_end":960418,"line_start":103,"line_end":103,"column_start":5,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":2534},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960568,"byte_end":960579,"line_start":108,"line_end":108,"column_start":10,"column_end":21},"name":"SpanContext","qualname":"::span::SpanContext","value":"(Span, String)","parent":null,"children":[],"decl_id":null,"docs":" A source code span together with \"context\", a user-readable description of what part of the error it refers to.\n","sig":null,"attributes":[{"value":"/ A source code span together with \"context\", a user-readable description of what part of the error it refers to.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960443,"byte_end":960558,"line_start":107,"line_end":107,"column_start":1,"column_end":116}}]},{"kind":"Struct","id":{"krate":0,"index":4709},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960714,"byte_end":960722,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"WithSpan","qualname":"::span::WithSpan","value":"WithSpan {  }","parent":null,"children":[{"krate":0,"index":4711},{"krate":0,"index":4712}],"decl_id":null,"docs":" Wrapper class for [`Error`], augmenting it with a list of [`SpanContext`]s.\n","sig":null,"attributes":[{"value":"/ Wrapper class for [`Error`], augmenting it with a list of [`SpanContext`]s.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960599,"byte_end":960678,"line_start":110,"line_end":110,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":961390,"byte_end":961393,"line_start":148,"line_end":148,"column_start":18,"column_end":21},"name":"new","qualname":"<WithSpan<E>>::new","value":"pub const fn new(E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`WithSpan`] from an [`Error`], containing no spans.\n","sig":null,"attributes":[{"value":"/ Create a new [`WithSpan`] from an [`Error`], containing no spans.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":961303,"byte_end":961372,"line_start":147,"line_end":147,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":961745,"byte_end":961755,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<WithSpan<E>>::into_inner","value":"pub fn into_inner(Self) -> E","parent":null,"children":[],"decl_id":null,"docs":" Reverse of [`Self::new`], discards span information and returns an inner error.\n","sig":null,"attributes":[{"value":"/ Reverse of [`Self::new`], discards span information and returns an inner error.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":961537,"byte_end":961620,"line_start":156,"line_end":156,"column_start":5,"column_end":88}},{"value":"allow(clippy :: missing_const_for_fn)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":961625,"byte_end":961663,"line_start":157,"line_end":157,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":961812,"byte_end":961820,"line_start":162,"line_end":162,"column_start":18,"column_end":26},"name":"as_inner","qualname":"<WithSpan<E>>::as_inner","value":"pub const fn as_inner(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":961921,"byte_end":961926,"line_start":167,"line_end":167,"column_start":12,"column_end":17},"name":"spans","qualname":"<WithSpan<E>>::spans","value":"pub fn spans(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Iterator over stored [`SpanContext`]s.\n","sig":null,"attributes":[{"value":"/ Iterator over stored [`SpanContext`]s.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":961867,"byte_end":961909,"line_start":166,"line_end":166,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":962269,"byte_end":962278,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"with_span","qualname":"<WithSpan<E>>::with_span","value":"pub fn with_span<S>(Self, Span, S) -> Self where S: ToString","parent":null,"children":[],"decl_id":null,"docs":" Add a new span with description.\n","sig":null,"attributes":[{"value":"/ Add a new span with description.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":962145,"byte_end":962181,"line_start":174,"line_end":174,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":962563,"byte_end":962575,"line_start":188,"line_end":188,"column_start":12,"column_end":24},"name":"with_context","qualname":"<WithSpan<E>>::with_context","value":"pub fn with_context(Self, SpanContext) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a [`SpanContext`].\n","sig":null,"attributes":[{"value":"/ Add a [`SpanContext`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":962525,"byte_end":962551,"line_start":187,"line_end":187,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2554},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":963110,"byte_end":963120,"line_start":200,"line_end":200,"column_start":12,"column_end":22},"name":"into_other","qualname":"<WithSpan<E>>::into_other","value":"pub fn into_other<E2>(Self) -> WithSpan<E2> where E2: From<E>","parent":null,"children":[],"decl_id":null,"docs":" Convert inner error using [`From`].\n","sig":null,"attributes":[{"value":"/ Convert inner error using [`From`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":963059,"byte_end":963098,"line_start":199,"line_end":199,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":963470,"byte_end":963478,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"and_then","qualname":"<WithSpan<E>>::and_then","value":"pub fn and_then<F, E2>(Self, F) -> WithSpan<E2> where F: FnOnce(E) ->\nWithSpan<E2>","parent":null,"children":[],"decl_id":null,"docs":" Convert inner error into another type. Joins span information contained in `self`\n with what is returned from `func`.\n","sig":null,"attributes":[{"value":"/ Convert inner error into another type. Joins span information contained in `self`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":963330,"byte_end":963415,"line_start":211,"line_end":211,"column_start":5,"column_end":90}},{"value":"/ with what is returned from `func`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":963420,"byte_end":963458,"line_start":212,"line_end":212,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":963875,"byte_end":963883,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"location","qualname":"<WithSpan<E>>::location","value":"pub fn location(&Self, &str) -> Option<SourceLocation>","parent":null,"children":[],"decl_id":null,"docs":" Return a [`SourceLocation`] for our first span, if we have one.\n","sig":null,"attributes":[{"value":"cfg(feature = \"span\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":963767,"byte_end":963791,"line_start":224,"line_end":224,"column_start":5,"column_end":29}},{"value":"/ Return a [`SourceLocation`] for our first span, if we have one.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":963796,"byte_end":963863,"line_start":225,"line_end":225,"column_start":5,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":2561},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":964374,"byte_end":964380,"line_start":243,"line_end":243,"column_start":10,"column_end":16},"name":"Output","qualname":"::span::AddSpan::Output","value":"type Output;","parent":{"krate":0,"index":2560},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2590},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":966415,"byte_end":966421,"line_start":309,"line_end":309,"column_start":10,"column_end":16},"name":"Output","qualname":"::span::MapErrWithSpan::Output","value":"type Output: Sized;","parent":{"krate":0,"index":2587},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2603},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"valid","qualname":"::valid","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","parent":null,"children":[{"krate":0,"index":2604},{"krate":0,"index":2714},{"krate":0,"index":2738},{"krate":0,"index":2807},{"krate":0,"index":2902},{"krate":0,"index":2995},{"krate":0,"index":3035},{"krate":0,"index":3036},{"krate":0,"index":3039},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3047},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3054},{"krate":0,"index":3057},{"krate":0,"index":3060},{"krate":0,"index":3063},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3070},{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3077},{"krate":0,"index":3080},{"krate":0,"index":3083},{"krate":0,"index":3086},{"krate":0,"index":3089},{"krate":0,"index":3092},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3099},{"krate":0,"index":3102},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3109},{"krate":0,"index":3112},{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3119},{"krate":0,"index":3122},{"krate":0,"index":5947},{"krate":0,"index":5949},{"krate":0,"index":5950},{"krate":0,"index":5951},{"krate":0,"index":5954},{"krate":0,"index":5955},{"krate":0,"index":5957},{"krate":0,"index":5959},{"krate":0,"index":5961},{"krate":0,"index":5963},{"krate":0,"index":5966},{"krate":0,"index":5975},{"krate":0,"index":5977},{"krate":0,"index":5979},{"krate":0,"index":5981},{"krate":0,"index":5983},{"krate":0,"index":6008},{"krate":0,"index":6011},{"krate":0,"index":6013},{"krate":0,"index":6016},{"krate":0,"index":6018},{"krate":0,"index":6021},{"krate":0,"index":6023},{"krate":0,"index":6026},{"krate":0,"index":6028},{"krate":0,"index":6031},{"krate":0,"index":6034},{"krate":0,"index":3125},{"krate":0,"index":6056},{"krate":0,"index":6058},{"krate":0,"index":6059},{"krate":0,"index":6060},{"krate":0,"index":6063},{"krate":0,"index":6064},{"krate":0,"index":6066},{"krate":0,"index":6068},{"krate":0,"index":6070},{"krate":0,"index":6072},{"krate":0,"index":6054},{"krate":0,"index":6075},{"krate":0,"index":6087},{"krate":0,"index":6089},{"krate":0,"index":6091},{"krate":0,"index":6093},{"krate":0,"index":6095},{"krate":0,"index":6123},{"krate":0,"index":6126},{"krate":0,"index":6128},{"krate":0,"index":6131},{"krate":0,"index":6133},{"krate":0,"index":6136},{"krate":0,"index":6138},{"krate":0,"index":6141},{"krate":0,"index":6143},{"krate":0,"index":6146},{"krate":0,"index":6149},{"krate":0,"index":6178},{"krate":0,"index":6180},{"krate":0,"index":6181},{"krate":0,"index":6182},{"krate":0,"index":6185},{"krate":0,"index":6186},{"krate":0,"index":6188},{"krate":0,"index":6190},{"krate":0,"index":6192},{"krate":0,"index":6194},{"krate":0,"index":6197},{"krate":0,"index":6204},{"krate":0,"index":6206},{"krate":0,"index":6208},{"krate":0,"index":6210},{"krate":0,"index":6212},{"krate":0,"index":6235},{"krate":0,"index":6238},{"krate":0,"index":6240},{"krate":0,"index":6243},{"krate":0,"index":6245},{"krate":0,"index":6248},{"krate":0,"index":6250},{"krate":0,"index":6253},{"krate":0,"index":6255},{"krate":0,"index":6258},{"krate":0,"index":6261},{"krate":0,"index":6275},{"krate":0,"index":6278},{"krate":0,"index":3127},{"krate":0,"index":6280},{"krate":0,"index":6290},{"krate":0,"index":6292},{"krate":0,"index":6293},{"krate":0,"index":6295},{"krate":0,"index":6297},{"krate":0,"index":6302},{"krate":0,"index":6304},{"krate":0,"index":6306},{"krate":0,"index":6322},{"krate":0,"index":6323},{"krate":0,"index":6325},{"krate":0,"index":6327},{"krate":0,"index":6332},{"krate":0,"index":6341},{"krate":0,"index":3130},{"krate":0,"index":3133}],"decl_id":null,"docs":"Shader validator.\n","sig":null,"attributes":[{"value":"*\nShader validator.\n*/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":969302,"byte_end":969326,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":4719},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984169,"byte_end":984191,"line_start":23,"line_end":23,"column_start":16,"column_end":38},"name":"UniformityRequirements","qualname":"::valid::analyzer::UniformityRequirements","value":"UniformityRequirements {  }","parent":null,"children":[{"krate":0,"index":4720}],"decl_id":null,"docs":" Kinds of expressions that require uniform control flow.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4754},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984212,"byte_end":984230,"line_start":24,"line_end":24,"column_start":15,"column_end":33},"name":"WORK_GROUP_BARRIER","qualname":"::valid::analyzer::UniformityRequirements::WORK_GROUP_BARRIER","value":"Self","parent":{"krate":0,"index":4753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4755},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984252,"byte_end":984262,"line_start":25,"line_end":25,"column_start":15,"column_end":25},"name":"DERIVATIVE","qualname":"::valid::analyzer::UniformityRequirements::DERIVATIVE","value":"Self","parent":{"krate":0,"index":4753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4756},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984284,"byte_end":984298,"line_start":26,"line_end":26,"column_start":15,"column_end":29},"name":"IMPLICIT_LEVEL","qualname":"::valid::analyzer::UniformityRequirements::IMPLICIT_LEVEL","value":"Self","parent":{"krate":0,"index":4753},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4816},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984555,"byte_end":984565,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"Uniformity","qualname":"::valid::analyzer::Uniformity","value":"Uniformity { non_uniform_result, requirements }","parent":null,"children":[{"krate":0,"index":4817},{"krate":0,"index":4818}],"decl_id":null,"docs":" Uniform control flow characteristics.\n","sig":null,"attributes":[{"value":"/ Uniform control flow characteristics.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984315,"byte_end":984356,"line_start":30,"line_end":30,"column_start":1,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":4817},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":985101,"byte_end":985119,"line_start":47,"line_end":47,"column_start":9,"column_end":27},"name":"non_uniform_result","qualname":"::valid::analyzer::Uniformity::non_uniform_result","value":"std::option::Option<arena::Handle<Expression>>","parent":{"krate":0,"index":4816},"children":[],"decl_id":null,"docs":" A child expression with non-uniform result.","sig":null,"attributes":[{"value":"/ A child expression with non-uniform result.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984572,"byte_end":984619,"line_start":36,"line_end":36,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984624,"byte_end":984627,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This means, when the relevant invocations are scheduled on a compute unit,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984632,"byte_end":984710,"line_start":38,"line_end":38,"column_start":5,"column_end":83}},{"value":"/ they have to use vector registers to store an individual value","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984715,"byte_end":984781,"line_start":39,"line_end":39,"column_start":5,"column_end":71}},{"value":"/ per invocation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984786,"byte_end":984805,"line_start":40,"line_end":40,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984810,"byte_end":984813,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Whenever the control flow is conditioned on such value,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984818,"byte_end":984877,"line_start":42,"line_end":42,"column_start":5,"column_end":64}},{"value":"/ the hardware needs to keep track of the mask of invocations,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984882,"byte_end":984946,"line_start":43,"line_end":43,"column_start":5,"column_end":69}},{"value":"/ and process all branches of the control flow.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":984951,"byte_end":985000,"line_start":44,"line_end":44,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":985005,"byte_end":985008,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Any operations that depend on non-uniform results also produce non-uniform.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":985013,"byte_end":985092,"line_start":46,"line_end":46,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":4818},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":985228,"byte_end":985240,"line_start":49,"line_end":49,"column_start":9,"column_end":21},"name":"requirements","qualname":"::valid::analyzer::Uniformity::requirements","value":"valid::analyzer::UniformityRequirements","parent":{"krate":0,"index":4816},"children":[],"decl_id":null,"docs":" If this expression requires uniform control flow, store the reason here.\n","sig":null,"attributes":[{"value":"/ If this expression requires uniform control flow, store the reason here.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":985143,"byte_end":985219,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":4915},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":987360,"byte_end":987369,"line_start":120,"line_end":120,"column_start":16,"column_end":25},"name":"GlobalUse","qualname":"::valid::analyzer::GlobalUse","value":"GlobalUse {  }","parent":null,"children":[{"krate":0,"index":4916}],"decl_id":null,"docs":" Indicates how a global variable is used.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4950},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":987439,"byte_end":987443,"line_start":122,"line_end":122,"column_start":15,"column_end":19},"name":"READ","qualname":"::valid::analyzer::GlobalUse::READ","value":"Self","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":" Data will be read from the variable.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4951},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":987515,"byte_end":987520,"line_start":124,"line_end":124,"column_start":15,"column_end":20},"name":"WRITE","qualname":"::valid::analyzer::GlobalUse::WRITE","value":"Self","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":" Data will be written to the variable.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":4952},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":987597,"byte_end":987602,"line_start":126,"line_end":126,"column_start":15,"column_end":20},"name":"QUERY","qualname":"::valid::analyzer::GlobalUse::QUERY","value":"Self","parent":{"krate":0,"index":4949},"children":[],"decl_id":null,"docs":" The information about the data is queried.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5012},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":987801,"byte_end":987812,"line_start":133,"line_end":133,"column_start":12,"column_end":23},"name":"SamplingKey","qualname":"::valid::analyzer::SamplingKey","value":"SamplingKey { image, sampler }","parent":null,"children":[{"krate":0,"index":5013},{"krate":0,"index":5014}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5013},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":987823,"byte_end":987828,"line_start":134,"line_end":134,"column_start":9,"column_end":14},"name":"image","qualname":"::valid::analyzer::SamplingKey::image","value":"arena::Handle<GlobalVariable>","parent":{"krate":0,"index":5012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5014},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":987869,"byte_end":987876,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"sampler","qualname":"::valid::analyzer::SamplingKey::sampler","value":"arena::Handle<GlobalVariable>","parent":{"krate":0,"index":5012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5029},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":988073,"byte_end":988087,"line_start":141,"line_end":141,"column_start":12,"column_end":26},"name":"ExpressionInfo","qualname":"::valid::analyzer::ExpressionInfo","value":"ExpressionInfo { uniformity, ref_count, ty }","parent":null,"children":[{"krate":0,"index":5030},{"krate":0,"index":5031},{"krate":0,"index":5032},{"krate":0,"index":5033}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5030},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":988098,"byte_end":988108,"line_start":142,"line_end":142,"column_start":9,"column_end":19},"name":"uniformity","qualname":"::valid::analyzer::ExpressionInfo::uniformity","value":"valid::analyzer::Uniformity","parent":{"krate":0,"index":5029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5031},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":988130,"byte_end":988139,"line_start":143,"line_end":143,"column_start":9,"column_end":18},"name":"ref_count","qualname":"::valid::analyzer::ExpressionInfo::ref_count","value":"usize","parent":{"krate":0,"index":5029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5033},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":988218,"byte_end":988220,"line_start":145,"line_end":145,"column_start":9,"column_end":11},"name":"ty","qualname":"::valid::analyzer::ExpressionInfo::ty","value":"proc::typifier::TypeResolution","parent":{"krate":0,"index":5029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5077},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990172,"byte_end":990184,"line_start":200,"line_end":200,"column_start":12,"column_end":24},"name":"FunctionInfo","qualname":"::valid::analyzer::FunctionInfo","value":"FunctionInfo { available_stages, uniformity, may_kill, sampling_set }","parent":null,"children":[{"krate":0,"index":5078},{"krate":0,"index":5079},{"krate":0,"index":5080},{"krate":0,"index":5081},{"krate":0,"index":5082},{"krate":0,"index":5083},{"krate":0,"index":5084},{"krate":0,"index":5085}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":5079},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990340,"byte_end":990356,"line_start":205,"line_end":205,"column_start":9,"column_end":25},"name":"available_stages","qualname":"::valid::analyzer::FunctionInfo::available_stages","value":"valid::ShaderStages","parent":{"krate":0,"index":5077},"children":[],"decl_id":null,"docs":" Set of shader stages where calling this function is valid.\n","sig":null,"attributes":[{"value":"/ Set of shader stages where calling this function is valid.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990269,"byte_end":990331,"line_start":204,"line_end":204,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":5080},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990416,"byte_end":990426,"line_start":207,"line_end":207,"column_start":9,"column_end":19},"name":"uniformity","qualname":"::valid::analyzer::FunctionInfo::uniformity","value":"valid::analyzer::Uniformity","parent":{"krate":0,"index":5077},"children":[],"decl_id":null,"docs":" Uniformity characteristics.\n","sig":null,"attributes":[{"value":"/ Uniformity characteristics.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990376,"byte_end":990407,"line_start":206,"line_end":206,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":5081},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990490,"byte_end":990498,"line_start":209,"line_end":209,"column_start":9,"column_end":17},"name":"may_kill","qualname":"::valid::analyzer::FunctionInfo::may_kill","value":"bool","parent":{"krate":0,"index":5077},"children":[],"decl_id":null,"docs":" Function may kill the invocation.\n","sig":null,"attributes":[{"value":"/ Function may kill the invocation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990444,"byte_end":990481,"line_start":208,"line_end":208,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":5082},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":991352,"byte_end":991364,"line_start":225,"line_end":225,"column_start":9,"column_end":21},"name":"sampling_set","qualname":"::valid::analyzer::FunctionInfo::sampling_set","value":"std::collections::HashSet<valid::analyzer::SamplingKey, std::hash::BuildHasherDefault<rustc_hash::FxHasher>>","parent":{"krate":0,"index":5077},"children":[],"decl_id":null,"docs":" All pairs of (texture, sampler) globals that may be used together in\n sampling operations by this function and its callees. This includes\n pairings that arise when this function passes textures and samplers as\n arguments to its callees.","sig":null,"attributes":[{"value":"/ All pairs of (texture, sampler) globals that may be used together in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990511,"byte_end":990583,"line_start":211,"line_end":211,"column_start":5,"column_end":77}},{"value":"/ sampling operations by this function and its callees. This includes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990588,"byte_end":990659,"line_start":212,"line_end":212,"column_start":5,"column_end":76}},{"value":"/ pairings that arise when this function passes textures and samplers as","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990664,"byte_end":990738,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ arguments to its callees.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990743,"byte_end":990772,"line_start":214,"line_end":214,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990777,"byte_end":990780,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ This table does not include uses of textures and samplers passed as","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990785,"byte_end":990856,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ arguments to this function itself, since we do not know which globals","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990861,"byte_end":990934,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/ those will be. However, this table *is* exhaustive when computed for an","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":990939,"byte_end":991014,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/ entry point function: entry points never receive textures or samplers as","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":991019,"byte_end":991095,"line_start":219,"line_end":219,"column_start":5,"column_end":81}},{"value":"/ arguments, so all an entry point's sampling can be reported in terms of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":991100,"byte_end":991175,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ globals.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":991180,"byte_end":991192,"line_start":221,"line_end":221,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":991197,"byte_end":991200,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The GLSL back end uses this table to construct reflection info that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":991205,"byte_end":991276,"line_start":223,"line_end":223,"column_start":5,"column_end":76}},{"value":"/ clients need to construct texture-combined sampler values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":991281,"byte_end":991343,"line_start":224,"line_end":224,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":992838,"byte_end":992859,"line_start":259,"line_end":259,"column_start":18,"column_end":39},"name":"global_variable_count","qualname":"<FunctionInfo>::global_variable_count","value":"pub const fn global_variable_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":992932,"byte_end":992948,"line_start":262,"line_end":262,"column_start":18,"column_end":34},"name":"expression_count","qualname":"<FunctionInfo>::expression_count","value":"pub const fn expression_count(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":993015,"byte_end":993035,"line_start":265,"line_end":265,"column_start":12,"column_end":32},"name":"dominates_global_use","qualname":"<FunctionInfo>::dominates_global_use","value":"pub fn dominates_global_use(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5097},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":994036,"byte_end":994046,"line_start":296,"line_end":296,"column_start":5,"column_end":15},"name":"Expression","qualname":"::valid::analyzer::UniformityDisruptor::Expression","value":"UniformityDisruptor::Expression(Handle<crate::Expression>)","parent":{"krate":0,"index":5088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expression {0:?} produced non-uniform result, and control flow depends on it\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":993943,"byte_end":994031,"line_start":295,"line_end":295,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5100},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":994157,"byte_end":994163,"line_start":298,"line_end":298,"column_start":5,"column_end":11},"name":"Return","qualname":"::valid::analyzer::UniformityDisruptor::Return","value":"UniformityDisruptor::Return","parent":{"krate":0,"index":5088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"There is a Return earlier in the control flow of the function\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":994079,"byte_end":994152,"line_start":297,"line_end":297,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5102},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":994259,"byte_end":994266,"line_start":300,"line_end":300,"column_start":5,"column_end":12},"name":"Discard","qualname":"::valid::analyzer::UniformityDisruptor::Discard","value":"UniformityDisruptor::Discard","parent":{"krate":0,"index":5088},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"There is a Discard earlier in the entry point across all called functions\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":994169,"byte_end":994254,"line_start":299,"line_end":299,"column_start":5,"column_end":90}}]},{"kind":"Enum","id":{"krate":0,"index":5088},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":993917,"byte_end":993936,"line_start":294,"line_end":294,"column_start":10,"column_end":29},"name":"UniformityDisruptor","qualname":"::valid::analyzer::UniformityDisruptor","value":"pub enum UniformityDisruptor {\n    Expression(Handle<crate::Expression>),\n    Return,\n    Discard,\n}","parent":null,"children":[{"krate":0,"index":5097},{"krate":0,"index":5100},{"krate":0,"index":5102}],"decl_id":null,"docs":" Disruptor of the uniform control flow.\n","sig":null,"attributes":[{"value":"/ Disruptor of the uniform control flow.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":993780,"byte_end":993822,"line_start":291,"line_end":291,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":1023744,"byte_end":1023759,"line_start":979,"line_end":979,"column_start":12,"column_end":27},"name":"get_entry_point","qualname":"<ModuleInfo>::get_entry_point","value":"pub fn get_entry_point(&Self, usize) -> &FunctionInfo","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5125},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\compose.rs","byte_start":1031509,"byte_end":1031518,"line_start":13,"line_end":13,"column_start":5,"column_end":14},"name":"BadHandle","qualname":"::valid::compose::ComposeError::BadHandle","value":"ComposeError::BadHandle(BadHandle)","parent":{"krate":0,"index":5104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\compose.rs","byte_start":1031483,"byte_end":1031504,"line_start":12,"line_end":12,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5128},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\compose.rs","byte_start":1031597,"byte_end":1031601,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Type","qualname":"::valid::compose::ComposeError::Type","value":"ComposeError::Type(Handle<crate::Type>)","parent":{"krate":0,"index":5104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Composing of type {0:?} can't be done\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\compose.rs","byte_start":1031543,"byte_end":1031592,"line_start":14,"line_end":14,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":5131},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\compose.rs","byte_start":1031707,"byte_end":1031721,"line_start":17,"line_end":17,"column_start":5,"column_end":19},"name":"ComponentCount","qualname":"::valid::compose::ComposeError::ComponentCount","value":"ComposeError::ComponentCount { given, expected }","parent":{"krate":0,"index":5104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Composing expects {expected} components but {given} were given\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\compose.rs","byte_start":1031628,"byte_end":1031702,"line_start":16,"line_end":16,"column_start":5,"column_end":79}}]},{"kind":"StructVariant","id":{"krate":0,"index":5134},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\compose.rs","byte_start":1031824,"byte_end":1031837,"line_start":19,"line_end":19,"column_start":5,"column_end":18},"name":"ComponentType","qualname":"::valid::compose::ComposeError::ComponentType","value":"ComposeError::ComponentType { index }","parent":{"krate":0,"index":5104},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Composing {index}'s component type is not expected\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\compose.rs","byte_start":1031757,"byte_end":1031819,"line_start":18,"line_end":18,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":5104},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\compose.rs","byte_start":1031464,"byte_end":1031476,"line_start":11,"line_end":11,"column_start":10,"column_end":22},"name":"ComposeError","qualname":"::valid::compose::ComposeError","value":"pub enum ComposeError {\n    BadHandle(BadHandle),\n    Type(Handle<crate::Type>),\n    ComponentCount {\n            given: u32,\n            expected: u32,\n        },\n    ComponentType {\n            index: u32,\n        },\n}","parent":null,"children":[{"krate":0,"index":5125},{"krate":0,"index":5128},{"krate":0,"index":5131},{"krate":0,"index":5134}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5163},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037238,"byte_end":1037249,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"DoesntExist","qualname":"::valid::expression::ExpressionError::DoesntExist","value":"ExpressionError::DoesntExist","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Doesn't exist\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037208,"byte_end":1037233,"line_start":14,"line_end":14,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5165},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037363,"byte_end":1037373,"line_start":17,"line_end":17,"column_start":5,"column_end":15},"name":"NotInScope","qualname":"::valid::expression::ExpressionError::NotInScope","value":"ExpressionError::NotInScope","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Used by a statement before it was introduced into the scope by any of the dominating blocks\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037255,"byte_end":1037358,"line_start":16,"line_end":16,"column_start":5,"column_end":108}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5167},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037446,"byte_end":1037463,"line_start":19,"line_end":19,"column_start":5,"column_end":22},"name":"ForwardDependency","qualname":"::valid::expression::ExpressionError::ForwardDependency","value":"ExpressionError::ForwardDependency(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Depends on {0:?}, which has not been processed yet\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037379,"byte_end":1037441,"line_start":18,"line_end":18,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5170},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037522,"byte_end":1037535,"line_start":21,"line_end":21,"column_start":5,"column_end":18},"name":"BadDependency","qualname":"::valid::expression::ExpressionError::BadDependency","value":"ExpressionError::BadDependency(BadHandle)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037496,"byte_end":1037517,"line_start":20,"line_end":20,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5173},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037631,"byte_end":1037646,"line_start":23,"line_end":23,"column_start":5,"column_end":20},"name":"InvalidBaseType","qualname":"::valid::expression::ExpressionError::InvalidBaseType","value":"ExpressionError::InvalidBaseType(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Base type {0:?} is not compatible with this expression\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037560,"byte_end":1037626,"line_start":22,"line_end":22,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5176},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037736,"byte_end":1037752,"line_start":25,"line_end":25,"column_start":5,"column_end":21},"name":"InvalidIndexType","qualname":"::valid::expression::ExpressionError::InvalidIndexType","value":"ExpressionError::InvalidIndexType(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Accessing with index {0:?} can't be done\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037679,"byte_end":1037731,"line_start":24,"line_end":24,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5179},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037846,"byte_end":1037862,"line_start":27,"line_end":27,"column_start":5,"column_end":21},"name":"IndexOutOfBounds","qualname":"::valid::expression::ExpressionError::IndexOutOfBounds","value":"ExpressionError::IndexOutOfBounds(Handle<crate::Expression>, crate::ScalarValue)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Accessing index {1:?} is out of {0:?} bounds\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037785,"byte_end":1037841,"line_start":26,"line_end":26,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5183},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037986,"byte_end":1038005,"line_start":29,"line_end":29,"column_start":5,"column_end":24},"name":"IndexMustBeConstant","qualname":"::valid::expression::ExpressionError::IndexMustBeConstant","value":"ExpressionError::IndexMustBeConstant(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The expression {0:?} may only be indexed by a constant\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037915,"byte_end":1037981,"line_start":28,"line_end":28,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5186},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038092,"byte_end":1038119,"line_start":31,"line_end":31,"column_start":5,"column_end":32},"name":"FunctionArgumentDoesntExist","qualname":"::valid::expression::ExpressionError::FunctionArgumentDoesntExist","value":"ExpressionError::FunctionArgumentDoesntExist(u32)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function argument {0:?} doesn't exist\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038038,"byte_end":1038087,"line_start":30,"line_end":30,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5189},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038177,"byte_end":1038195,"line_start":33,"line_end":33,"column_start":5,"column_end":23},"name":"InvalidPointerType","qualname":"::valid::expression::ExpressionError::InvalidPointerType","value":"ExpressionError::InvalidPointerType(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Loading of {0:?} can't be done\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038130,"byte_end":1038172,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5192},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038280,"byte_end":1038296,"line_start":35,"line_end":35,"column_start":5,"column_end":21},"name":"InvalidArrayType","qualname":"::valid::expression::ExpressionError::InvalidArrayType","value":"ExpressionError::InvalidArrayType(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Array length of {0:?} can't be done\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038228,"byte_end":1038275,"line_start":34,"line_end":34,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5195},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038375,"byte_end":1038391,"line_start":37,"line_end":37,"column_start":5,"column_end":21},"name":"InvalidSplatType","qualname":"::valid::expression::ExpressionError::InvalidSplatType","value":"ExpressionError::InvalidSplatType(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Splatting {0:?} can't be done\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038329,"byte_end":1038370,"line_start":36,"line_end":36,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5198},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038470,"byte_end":1038487,"line_start":39,"line_end":39,"column_start":5,"column_end":22},"name":"InvalidVectorType","qualname":"::valid::expression::ExpressionError::InvalidVectorType","value":"ExpressionError::InvalidVectorType(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Swizzling {0:?} can't be done\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038424,"byte_end":1038465,"line_start":38,"line_end":38,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5201},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038592,"byte_end":1038615,"line_start":41,"line_end":41,"column_start":5,"column_end":28},"name":"InvalidSwizzleComponent","qualname":"::valid::expression::ExpressionError::InvalidSwizzleComponent","value":"ExpressionError::InvalidSwizzleComponent(crate::SwizzleComponent, crate::VectorSize)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Swizzle component {0:?} is outside of vector size {1:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038520,"byte_end":1038587,"line_start":40,"line_end":40,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5205},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038691,"byte_end":1038698,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"name":"Compose","qualname":"::valid::expression::ExpressionError::Compose","value":"ExpressionError::Compose(super::ComposeError)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038665,"byte_end":1038686,"line_start":42,"line_end":42,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5208},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038759,"byte_end":1038774,"line_start":45,"line_end":45,"column_start":5,"column_end":20},"name":"IndexableLength","qualname":"::valid::expression::ExpressionError::IndexableLength","value":"ExpressionError::IndexableLength(IndexableLengthError)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038733,"byte_end":1038754,"line_start":44,"line_end":44,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5211},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038864,"byte_end":1038887,"line_start":47,"line_end":47,"column_start":5,"column_end":28},"name":"InvalidUnaryOperandType","qualname":"::valid::expression::ExpressionError::InvalidUnaryOperandType","value":"ExpressionError::InvalidUnaryOperandType(crate::UnaryOperator, Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Operation {0:?} can't work with {1:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038810,"byte_end":1038859,"line_start":46,"line_end":46,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5215},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039006,"byte_end":1039031,"line_start":49,"line_end":49,"column_start":5,"column_end":30},"name":"InvalidBinaryOperandTypes","qualname":"::valid::expression::ExpressionError::InvalidBinaryOperandTypes","value":"ExpressionError::InvalidBinaryOperandTypes(crate::BinaryOperator, Handle<crate::Expression>, Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Operation {0:?} can't work with {1:?} and {2:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1038942,"byte_end":1039001,"line_start":48,"line_end":48,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5220},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039187,"byte_end":1039205,"line_start":55,"line_end":55,"column_start":5,"column_end":23},"name":"InvalidSelectTypes","qualname":"::valid::expression::ExpressionError::InvalidSelectTypes","value":"ExpressionError::InvalidSelectTypes","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Selecting is not possible\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039145,"byte_end":1039182,"line_start":54,"line_end":54,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5222},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039277,"byte_end":1039297,"line_start":57,"line_end":57,"column_start":5,"column_end":25},"name":"InvalidBooleanVector","qualname":"::valid::expression::ExpressionError::InvalidBooleanVector","value":"ExpressionError::InvalidBooleanVector(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Relational argument {0:?} is not a boolean vector\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039211,"byte_end":1039272,"line_start":56,"line_end":56,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5225},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039387,"byte_end":1039407,"line_start":59,"line_end":59,"column_start":5,"column_end":25},"name":"InvalidFloatArgument","qualname":"::valid::expression::ExpressionError::InvalidFloatArgument","value":"ExpressionError::InvalidFloatArgument(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Relational argument {0:?} is not a float\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039330,"byte_end":1039382,"line_start":58,"line_end":58,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5228},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039479,"byte_end":1039483,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"name":"Type","qualname":"::valid::expression::ExpressionError::Type","value":"ExpressionError::Type(ResolveError)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type resolution failed\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039440,"byte_end":1039474,"line_start":60,"line_end":60,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5231},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039549,"byte_end":1039571,"line_start":63,"line_end":63,"column_start":5,"column_end":27},"name":"ExpectedGlobalVariable","qualname":"::valid::expression::ExpressionError::ExpectedGlobalVariable","value":"ExpressionError::ExpectedGlobalVariable","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Not a global variable\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039511,"byte_end":1039544,"line_start":62,"line_end":62,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5233},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039638,"byte_end":1039662,"line_start":65,"line_end":65,"column_start":5,"column_end":29},"name":"ExpectedGlobalOrArgument","qualname":"::valid::expression::ExpressionError::ExpectedGlobalOrArgument","value":"ExpressionError::ExpectedGlobalOrArgument","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Not a global variable or a function argument\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039577,"byte_end":1039633,"line_start":64,"line_end":64,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5235},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039721,"byte_end":1039745,"line_start":67,"line_end":67,"column_start":5,"column_end":29},"name":"CallToUndeclaredFunction","qualname":"::valid::expression::ExpressionError::CallToUndeclaredFunction","value":"ExpressionError::CallToUndeclaredFunction(Handle<crate::Function>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Calling an undeclared function {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039668,"byte_end":1039716,"line_start":66,"line_end":66,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5238},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039838,"byte_end":1039862,"line_start":69,"line_end":69,"column_start":5,"column_end":29},"name":"ExpectedBindingArrayType","qualname":"::valid::expression::ExpressionError::ExpectedBindingArrayType","value":"ExpressionError::ExpectedBindingArrayType(Handle<crate::Type>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Needs to be an binding array instead of {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039776,"byte_end":1039833,"line_start":68,"line_end":68,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5241},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039943,"byte_end":1039960,"line_start":71,"line_end":71,"column_start":5,"column_end":22},"name":"ExpectedImageType","qualname":"::valid::expression::ExpressionError::ExpectedImageType","value":"ExpressionError::ExpectedImageType(Handle<crate::Type>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Needs to be an image instead of {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039889,"byte_end":1039938,"line_start":70,"line_end":70,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5244},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040041,"byte_end":1040060,"line_start":73,"line_end":73,"column_start":5,"column_end":24},"name":"ExpectedSamplerType","qualname":"::valid::expression::ExpressionError::ExpectedSamplerType","value":"ExpressionError::ExpectedSamplerType(Handle<crate::Type>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Needs to be an image instead of {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1039987,"byte_end":1040036,"line_start":72,"line_end":72,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5247},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040142,"byte_end":1040159,"line_start":75,"line_end":75,"column_start":5,"column_end":22},"name":"InvalidImageClass","qualname":"::valid::expression::ExpressionError::InvalidImageClass","value":"ExpressionError::InvalidImageClass(crate::ImageClass)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unable to operate on image class {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040087,"byte_end":1040137,"line_start":74,"line_end":74,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5250},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040260,"byte_end":1040277,"line_start":77,"line_end":77,"column_start":5,"column_end":22},"name":"InvalidDerivative","qualname":"::valid::expression::ExpressionError::InvalidDerivative","value":"ExpressionError::InvalidDerivative","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Derivatives can only be taken from scalar and vector floats\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040184,"byte_end":1040255,"line_start":76,"line_end":76,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5252},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040340,"byte_end":1040362,"line_start":79,"line_end":79,"column_start":5,"column_end":27},"name":"InvalidImageArrayIndex","qualname":"::valid::expression::ExpressionError::InvalidImageArrayIndex","value":"ExpressionError::InvalidImageArrayIndex","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image array index parameter is misplaced\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040283,"byte_end":1040335,"line_start":78,"line_end":78,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5254},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040447,"byte_end":1040469,"line_start":81,"line_end":81,"column_start":5,"column_end":27},"name":"InvalidImageOtherIndex","qualname":"::valid::expression::ExpressionError::InvalidImageOtherIndex","value":"ExpressionError::InvalidImageOtherIndex","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Inappropriate sample or level-of-detail index for texel access\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040368,"byte_end":1040442,"line_start":80,"line_end":80,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5256},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040548,"byte_end":1040574,"line_start":83,"line_end":83,"column_start":5,"column_end":31},"name":"InvalidImageArrayIndexType","qualname":"::valid::expression::ExpressionError::InvalidImageArrayIndexType","value":"ExpressionError::InvalidImageArrayIndexType(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image array index type of {0:?} is not an integer scalar\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040475,"byte_end":1040543,"line_start":82,"line_end":82,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5259},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040702,"byte_end":1040728,"line_start":85,"line_end":85,"column_start":5,"column_end":31},"name":"InvalidImageOtherIndexType","qualname":"::valid::expression::ExpressionError::InvalidImageOtherIndexType","value":"ExpressionError::InvalidImageOtherIndexType(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image sample or level-of-detail index's type of {0:?} is not an integer scalar\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040607,"byte_end":1040697,"line_start":84,"line_end":84,"column_start":5,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5262},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040839,"byte_end":1040865,"line_start":87,"line_end":87,"column_start":5,"column_end":31},"name":"InvalidImageCoordinateType","qualname":"::valid::expression::ExpressionError::InvalidImageCoordinateType","value":"ExpressionError::InvalidImageCoordinateType(crate::ImageDimension, Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image coordinate type of {1:?} does not match dimension {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040761,"byte_end":1040834,"line_start":86,"line_end":86,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":5266},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041076,"byte_end":1041102,"line_start":89,"line_end":89,"column_start":5,"column_end":31},"name":"ComparisonSamplingMismatch","qualname":"::valid::expression::ExpressionError::ComparisonSamplingMismatch","value":"ExpressionError::ComparisonSamplingMismatch { image, sampler, has_ref }","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Comparison sampling mismatch: image has class {image:?}, but the sampler is comparison={sampler}, and the reference was provided={has_ref}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1040921,"byte_end":1041071,"line_start":88,"line_end":88,"column_start":5,"column_end":155}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5270},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041281,"byte_end":1041300,"line_start":95,"line_end":95,"column_start":5,"column_end":24},"name":"InvalidSampleOffset","qualname":"::valid::expression::ExpressionError::InvalidSampleOffset","value":"ExpressionError::InvalidSampleOffset(crate::ImageDimension, Handle<crate::Constant>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample offset constant {1:?} doesn't match the image dimension {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041196,"byte_end":1041276,"line_start":94,"line_end":94,"column_start":5,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5274},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041414,"byte_end":1041435,"line_start":97,"line_end":97,"column_start":5,"column_end":26},"name":"InvalidDepthReference","qualname":"::valid::expression::ExpressionError::InvalidDepthReference","value":"ExpressionError::InvalidDepthReference(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Depth reference {0:?} is not a scalar float\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041354,"byte_end":1041409,"line_start":96,"line_end":96,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5277},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041528,"byte_end":1041551,"line_start":99,"line_end":99,"column_start":5,"column_end":28},"name":"InvalidDepthSampleLevel","qualname":"::valid::expression::ExpressionError::InvalidDepthSampleLevel","value":"ExpressionError::InvalidDepthSampleLevel","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Depth sample level can only be Auto or Zero\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041468,"byte_end":1041523,"line_start":98,"line_end":98,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5279},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041603,"byte_end":1041621,"line_start":101,"line_end":101,"column_start":5,"column_end":23},"name":"InvalidGatherLevel","qualname":"::valid::expression::ExpressionError::InvalidGatherLevel","value":"ExpressionError::InvalidGatherLevel","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Gather level can only be Zero\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041557,"byte_end":1041598,"line_start":100,"line_end":100,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5281},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041693,"byte_end":1041715,"line_start":103,"line_end":103,"column_start":5,"column_end":27},"name":"InvalidGatherComponent","qualname":"::valid::expression::ExpressionError::InvalidGatherComponent","value":"ExpressionError::InvalidGatherComponent(crate::SwizzleComponent)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Gather component {0:?} doesn't exist in the image\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041627,"byte_end":1041688,"line_start":102,"line_end":102,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5284},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041809,"byte_end":1041831,"line_start":105,"line_end":105,"column_start":5,"column_end":27},"name":"InvalidGatherDimension","qualname":"::valid::expression::ExpressionError::InvalidGatherDimension","value":"ExpressionError::InvalidGatherDimension(crate::ImageDimension)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Gather can't be done for image dimension {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041746,"byte_end":1041804,"line_start":104,"line_end":104,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5287},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041930,"byte_end":1041957,"line_start":107,"line_end":107,"column_start":5,"column_end":32},"name":"InvalidSampleLevelExactType","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelExactType","value":"ExpressionError::InvalidSampleLevelExactType(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample level (exact) type {0:?} is not a scalar float\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041860,"byte_end":1041925,"line_start":106,"line_end":106,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5290},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1042059,"byte_end":1042085,"line_start":109,"line_end":109,"column_start":5,"column_end":31},"name":"InvalidSampleLevelBiasType","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelBiasType","value":"ExpressionError::InvalidSampleLevelBiasType(Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample level (bias) type {0:?} is not a scalar float\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1041990,"byte_end":1042054,"line_start":108,"line_end":108,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5293},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1042207,"byte_end":1042237,"line_start":111,"line_end":111,"column_start":5,"column_end":35},"name":"InvalidSampleLevelGradientType","qualname":"::valid::expression::ExpressionError::InvalidSampleLevelGradientType","value":"ExpressionError::InvalidSampleLevelGradientType(crate::ImageDimension, Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Sample level (gradient) of {1:?} doesn't match the image dimension {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1042118,"byte_end":1042202,"line_start":110,"line_end":110,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5297},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1042324,"byte_end":1042343,"line_start":113,"line_end":113,"column_start":5,"column_end":24},"name":"InvalidCastArgument","qualname":"::valid::expression::ExpressionError::InvalidCastArgument","value":"ExpressionError::InvalidCastArgument","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unable to cast\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1042293,"byte_end":1042319,"line_start":112,"line_end":112,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5299},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1042398,"byte_end":1042416,"line_start":115,"line_end":115,"column_start":5,"column_end":23},"name":"WrongArgumentCount","qualname":"::valid::expression::ExpressionError::WrongArgumentCount","value":"ExpressionError::WrongArgumentCount(crate::MathFunction)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid argument count for {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1042349,"byte_end":1042393,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5302},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1042524,"byte_end":1042543,"line_start":117,"line_end":117,"column_start":5,"column_end":24},"name":"InvalidArgumentType","qualname":"::valid::expression::ExpressionError::InvalidArgumentType","value":"ExpressionError::InvalidArgumentType(crate::MathFunction, u32, Handle<crate::Expression>)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument [{1}] to {0:?} as expression {2:?} has an invalid type.\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1042443,"byte_end":1042519,"line_start":116,"line_end":116,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5307},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1042665,"byte_end":1042688,"line_start":119,"line_end":119,"column_start":5,"column_end":28},"name":"InvalidAtomicResultType","qualname":"::valid::expression::ExpressionError::InvalidAtomicResultType","value":"ExpressionError::InvalidAtomicResultType(crate::ScalarKind, crate::Bytes)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Atomic result type can't be {0:?} of {1} bytes\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1042602,"byte_end":1042660,"line_start":118,"line_end":118,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5311},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1042776,"byte_end":1042795,"line_start":121,"line_end":121,"column_start":5,"column_end":24},"name":"MissingCapabilities","qualname":"::valid::expression::ExpressionError::MissingCapabilities","value":"ExpressionError::MissingCapabilities(super::Capabilities)","parent":{"krate":0,"index":5136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Shader requires capability {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1042727,"byte_end":1042771,"line_start":120,"line_end":120,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":5136},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1037186,"byte_end":1037201,"line_start":13,"line_end":13,"column_start":10,"column_end":25},"name":"ExpressionError","qualname":"::valid::expression::ExpressionError","value":"pub enum ExpressionError {\n    DoesntExist,\n    NotInScope,\n    ForwardDependency(Handle<crate::Expression>),\n    BadDependency(BadHandle),\n    InvalidBaseType(Handle<crate::Expression>),\n    InvalidIndexType(Handle<crate::Expression>),\n    IndexOutOfBounds(Handle<crate::Expression>, crate::ScalarValue),\n    IndexMustBeConstant(Handle<crate::Expression>),\n    FunctionArgumentDoesntExist(u32),\n    InvalidPointerType(Handle<crate::Expression>),\n    InvalidArrayType(Handle<crate::Expression>),\n    InvalidSplatType(Handle<crate::Expression>),\n    InvalidVectorType(Handle<crate::Expression>),\n    InvalidSwizzleComponent(crate::SwizzleComponent, crate::VectorSize),\n    Compose(super::ComposeError),\n    IndexableLength(IndexableLengthError),\n    InvalidUnaryOperandType(crate::UnaryOperator, Handle<crate::Expression>),\n    InvalidBinaryOperandTypes(crate::BinaryOperator,\n            Handle<crate::Expression>, Handle<crate::Expression>),\n    InvalidSelectTypes,\n    InvalidBooleanVector(Handle<crate::Expression>),\n    InvalidFloatArgument(Handle<crate::Expression>),\n    Type(ResolveError),\n    ExpectedGlobalVariable,\n    ExpectedGlobalOrArgument,\n    CallToUndeclaredFunction(Handle<crate::Function>),\n    ExpectedBindingArrayType(Handle<crate::Type>),\n    ExpectedImageType(Handle<crate::Type>),\n    ExpectedSamplerType(Handle<crate::Type>),\n    InvalidImageClass(crate::ImageClass),\n    InvalidDerivative,\n    InvalidImageArrayIndex,\n    InvalidImageOtherIndex,\n    InvalidImageArrayIndexType(Handle<crate::Expression>),\n    InvalidImageOtherIndexType(Handle<crate::Expression>),\n    InvalidImageCoordinateType(crate::ImageDimension,\n            Handle<crate::Expression>),\n    ComparisonSamplingMismatch {\n            image: crate::ImageClass,\n            sampler: bool,\n            has_ref: bool,\n        },\n    InvalidSampleOffset(crate::ImageDimension, Handle<crate::Constant>),\n    InvalidDepthReference(Handle<crate::Expression>),\n    InvalidDepthSampleLevel,\n    InvalidGatherLevel,\n    InvalidGatherComponent(crate::SwizzleComponent),\n    InvalidGatherDimension(crate::ImageDimension),\n    InvalidSampleLevelExactType(Handle<crate::Expression>),\n    InvalidSampleLevelBiasType(Handle<crate::Expression>),\n    InvalidSampleLevelGradientType(crate::ImageDimension,\n            Handle<crate::Expression>),\n    InvalidCastArgument,\n    WrongArgumentCount(crate::MathFunction),\n    InvalidArgumentType(crate::MathFunction, u32, Handle<crate::Expression>),\n    InvalidAtomicResultType(crate::ScalarKind, crate::Bytes),\n    MissingCapabilities(super::Capabilities),\n}","parent":null,"children":[{"krate":0,"index":5163},{"krate":0,"index":5165},{"krate":0,"index":5167},{"krate":0,"index":5170},{"krate":0,"index":5173},{"krate":0,"index":5176},{"krate":0,"index":5179},{"krate":0,"index":5183},{"krate":0,"index":5186},{"krate":0,"index":5189},{"krate":0,"index":5192},{"krate":0,"index":5195},{"krate":0,"index":5198},{"krate":0,"index":5201},{"krate":0,"index":5205},{"krate":0,"index":5208},{"krate":0,"index":5211},{"krate":0,"index":5215},{"krate":0,"index":5220},{"krate":0,"index":5222},{"krate":0,"index":5225},{"krate":0,"index":5228},{"krate":0,"index":5231},{"krate":0,"index":5233},{"krate":0,"index":5235},{"krate":0,"index":5238},{"krate":0,"index":5241},{"krate":0,"index":5244},{"krate":0,"index":5247},{"krate":0,"index":5250},{"krate":0,"index":5252},{"krate":0,"index":5254},{"krate":0,"index":5256},{"krate":0,"index":5259},{"krate":0,"index":5262},{"krate":0,"index":5266},{"krate":0,"index":5270},{"krate":0,"index":5274},{"krate":0,"index":5277},{"krate":0,"index":5279},{"krate":0,"index":5281},{"krate":0,"index":5284},{"krate":0,"index":5287},{"krate":0,"index":5290},{"krate":0,"index":5293},{"krate":0,"index":5297},{"krate":0,"index":5299},{"krate":0,"index":5302},{"krate":0,"index":5307},{"krate":0,"index":5311}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5335},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1107544,"byte_end":1107553,"line_start":20,"line_end":20,"column_start":5,"column_end":14},"name":"BadHandle","qualname":"::valid::function::CallError::BadHandle","value":"CallError::BadHandle(BadHandle)","parent":{"krate":0,"index":5314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1107518,"byte_end":1107539,"line_start":19,"line_end":19,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5338},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1107634,"byte_end":1107657,"line_start":22,"line_end":22,"column_start":5,"column_end":28},"name":"ForwardDeclaredFunction","qualname":"::valid::function::CallError::ForwardDeclaredFunction","value":"CallError::ForwardDeclaredFunction","parent":{"krate":0,"index":5314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The callee is declared after the caller\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1107578,"byte_end":1107629,"line_start":21,"line_end":21,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":5340},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1107718,"byte_end":1107726,"line_start":24,"line_end":24,"column_start":5,"column_end":13},"name":"Argument","qualname":"::valid::function::CallError::Argument","value":"CallError::Argument { index, error }","parent":{"krate":0,"index":5314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument {index} expression is invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1107663,"byte_end":1107713,"line_start":23,"line_end":23,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5343},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1107888,"byte_end":1107908,"line_start":30,"line_end":30,"column_start":5,"column_end":25},"name":"ResultAlreadyInScope","qualname":"::valid::function::CallError::ResultAlreadyInScope","value":"CallError::ResultAlreadyInScope(Handle<crate::Expression>)","parent":{"krate":0,"index":5314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result expression {0:?} has already been introduced earlier\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1107812,"byte_end":1107883,"line_start":29,"line_end":29,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5346},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1107981,"byte_end":1107992,"line_start":32,"line_end":32,"column_start":5,"column_end":16},"name":"ResultValue","qualname":"::valid::function::CallError::ResultValue","value":"CallError::ResultValue(ExpressionError)","parent":{"krate":0,"index":5314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result value is invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1107941,"byte_end":1107976,"line_start":31,"line_end":31,"column_start":5,"column_end":40}}]},{"kind":"StructVariant","id":{"krate":0,"index":5349},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108096,"byte_end":1108109,"line_start":34,"line_end":34,"column_start":5,"column_end":18},"name":"ArgumentCount","qualname":"::valid::function::CallError::ArgumentCount","value":"CallError::ArgumentCount { required, seen }","parent":{"krate":0,"index":5314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Requires {required} arguments, but {seen} are provided\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108025,"byte_end":1108091,"line_start":33,"line_end":33,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":5352},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108243,"byte_end":1108255,"line_start":36,"line_end":36,"column_start":5,"column_end":17},"name":"ArgumentType","qualname":"::valid::function::CallError::ArgumentType","value":"CallError::ArgumentType { index, required, seen_expression }","parent":{"krate":0,"index":5314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument {index} value {seen_expression:?} doesn't match the type {required:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108148,"byte_end":1108238,"line_start":35,"line_end":35,"column_start":5,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5356},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108444,"byte_end":1108462,"line_start":42,"line_end":42,"column_start":5,"column_end":23},"name":"ExpressionMismatch","qualname":"::valid::function::CallError::ExpressionMismatch","value":"CallError::ExpressionMismatch(Option<Handle<crate::Expression>>)","parent":{"krate":0,"index":5314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The emitted expression doesn't match the call\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108382,"byte_end":1108439,"line_start":41,"line_end":41,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":5314},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1107502,"byte_end":1107511,"line_start":18,"line_end":18,"column_start":10,"column_end":19},"name":"CallError","qualname":"::valid::function::CallError","value":"pub enum CallError {\n    BadHandle(BadHandle),\n    ForwardDeclaredFunction,\n    Argument {\n            index: usize,\n            error: ExpressionError,\n        },\n    ResultAlreadyInScope(Handle<crate::Expression>),\n    ResultValue(ExpressionError),\n    ArgumentCount {\n            required: usize,\n            seen: usize,\n        },\n    ArgumentType {\n            index: usize,\n            required: Handle<crate::Type>,\n            seen_expression: Handle<crate::Expression>,\n        },\n    ExpressionMismatch(Option<Handle<crate::Expression>>),\n}","parent":null,"children":[{"krate":0,"index":5335},{"krate":0,"index":5338},{"krate":0,"index":5340},{"krate":0,"index":5343},{"krate":0,"index":5346},{"krate":0,"index":5349},{"krate":0,"index":5352},{"krate":0,"index":5356}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5367},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108660,"byte_end":1108674,"line_start":49,"line_end":49,"column_start":5,"column_end":19},"name":"InvalidPointer","qualname":"::valid::function::AtomicError::InvalidPointer","value":"AtomicError::InvalidPointer(Handle<crate::Expression>)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Pointer {0:?} to atomic is invalid.\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108608,"byte_end":1108655,"line_start":48,"line_end":48,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5370},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108755,"byte_end":1108769,"line_start":51,"line_end":51,"column_start":5,"column_end":19},"name":"InvalidOperand","qualname":"::valid::function::AtomicError::InvalidOperand","value":"AtomicError::InvalidOperand(Handle<crate::Expression>)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Operand {0:?} has invalid type.\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108707,"byte_end":1108750,"line_start":50,"line_end":50,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5373},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108878,"byte_end":1108898,"line_start":53,"line_end":53,"column_start":5,"column_end":25},"name":"ResultAlreadyInScope","qualname":"::valid::function::AtomicError::ResultAlreadyInScope","value":"AtomicError::ResultAlreadyInScope(Handle<crate::Expression>)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result expression {0:?} has already been introduced earlier\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108802,"byte_end":1108873,"line_start":52,"line_end":52,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5376},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108997,"byte_end":1109015,"line_start":55,"line_end":55,"column_start":5,"column_end":23},"name":"ResultTypeMismatch","qualname":"::valid::function::AtomicError::ResultTypeMismatch","value":"AtomicError::ResultTypeMismatch(Handle<crate::Expression>)","parent":{"krate":0,"index":5359},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Result type for {0:?} doesn't match the statement\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108931,"byte_end":1108992,"line_start":54,"line_end":54,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":5359},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1108590,"byte_end":1108601,"line_start":47,"line_end":47,"column_start":10,"column_end":21},"name":"AtomicError","qualname":"::valid::function::AtomicError","value":"pub enum AtomicError {\n    InvalidPointer(Handle<crate::Expression>),\n    InvalidOperand(Handle<crate::Expression>),\n    ResultAlreadyInScope(Handle<crate::Expression>),\n    ResultTypeMismatch(Handle<crate::Expression>),\n}","parent":null,"children":[{"krate":0,"index":5367},{"krate":0,"index":5370},{"krate":0,"index":5373},{"krate":0,"index":5376}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5387},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1109250,"byte_end":1109261,"line_start":62,"line_end":62,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::function::LocalVariableError::InvalidType","value":"LocalVariableError::InvalidType(Handle<crate::Type>)","parent":{"krate":0,"index":5379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Local variable has a type {0:?} that can't be stored in a local variable.\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1109160,"byte_end":1109245,"line_start":61,"line_end":61,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5390},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1109348,"byte_end":1109363,"line_start":64,"line_end":64,"column_start":5,"column_end":20},"name":"InitializerType","qualname":"::valid::function::LocalVariableError::InitializerType","value":"LocalVariableError::InitializerType","parent":{"krate":0,"index":5379},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Initializer doesn't match the variable type\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1109288,"byte_end":1109343,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":5379},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1109135,"byte_end":1109153,"line_start":60,"line_end":60,"column_start":10,"column_end":28},"name":"LocalVariableError","qualname":"::valid::function::LocalVariableError","value":"pub enum LocalVariableError {\n    InvalidType(Handle<crate::Type>),\n    InitializerType,\n}","parent":null,"children":[{"krate":0,"index":5387},{"krate":0,"index":5390}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5415},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1109502,"byte_end":1109511,"line_start":71,"line_end":71,"column_start":5,"column_end":14},"name":"BadHandle","qualname":"::valid::function::FunctionError::BadHandle","value":"FunctionError::BadHandle(BadHandle)","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1109476,"byte_end":1109497,"line_start":70,"line_end":70,"column_start":5,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":5418},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1109585,"byte_end":1109595,"line_start":73,"line_end":73,"column_start":5,"column_end":15},"name":"Expression","qualname":"::valid::function::FunctionError::Expression","value":"FunctionError::Expression { handle, error }","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expression {handle:?} is invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1109536,"byte_end":1109580,"line_start":72,"line_end":72,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5421},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1109779,"byte_end":1109803,"line_start":79,"line_end":79,"column_start":5,"column_end":29},"name":"ExpressionAlreadyInScope","qualname":"::valid::function::FunctionError::ExpressionAlreadyInScope","value":"FunctionError::ExpressionAlreadyInScope(Handle<crate::Expression>)","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expression {0:?} can't be introduced - it's already in scope\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1109702,"byte_end":1109774,"line_start":78,"line_end":78,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":5424},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1109898,"byte_end":1109911,"line_start":81,"line_end":81,"column_start":5,"column_end":18},"name":"LocalVariable","qualname":"::valid::function::FunctionError::LocalVariable","value":"FunctionError::LocalVariable { handle, name, error }","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Local variable {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1109836,"byte_end":1109893,"line_start":80,"line_end":80,"column_start":5,"column_end":62}}]},{"kind":"StructVariant","id":{"krate":0,"index":5428},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110145,"byte_end":1110164,"line_start":88,"line_end":88,"column_start":5,"column_end":24},"name":"InvalidArgumentType","qualname":"::valid::function::FunctionError::InvalidArgumentType","value":"FunctionError::InvalidArgumentType { index, name }","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument '{name}' at index {index} has a type that can't be passed into functions.\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110046,"byte_end":1110140,"line_start":87,"line_end":87,"column_start":5,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5431},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110284,"byte_end":1110310,"line_start":90,"line_end":90,"column_start":5,"column_end":31},"name":"NonConstructibleReturnType","qualname":"::valid::function::FunctionError::NonConstructibleReturnType","value":"FunctionError::NonConstructibleReturnType","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The function's given return type cannot be returned from functions\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110201,"byte_end":1110279,"line_start":89,"line_end":89,"column_start":5,"column_end":83}}]},{"kind":"StructVariant","id":{"krate":0,"index":5433},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110438,"byte_end":1110465,"line_start":92,"line_end":92,"column_start":5,"column_end":32},"name":"InvalidArgumentPointerSpace","qualname":"::valid::function::FunctionError::InvalidArgumentPointerSpace","value":"FunctionError::InvalidArgumentPointerSpace { index, name, space }","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument '{name}' at index {index} is a pointer of space {space:?}, which can't be passed into functions.\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110316,"byte_end":1110433,"line_start":91,"line_end":91,"column_start":5,"column_end":122}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5437},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110632,"byte_end":1110655,"line_start":98,"line_end":98,"column_start":5,"column_end":28},"name":"InstructionsAfterReturn","qualname":"::valid::function::FunctionError::InstructionsAfterReturn","value":"FunctionError::InstructionsAfterReturn","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"There are instructions after `return`/`break`/`continue`\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110559,"byte_end":1110627,"line_start":97,"line_end":97,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5439},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110737,"byte_end":1110763,"line_start":100,"line_end":100,"column_start":5,"column_end":31},"name":"BreakOutsideOfLoopOrSwitch","qualname":"::valid::function::FunctionError::BreakOutsideOfLoopOrSwitch","value":"FunctionError::BreakOutsideOfLoopOrSwitch","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `break` is used outside of a `loop` or `switch` context\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110661,"byte_end":1110732,"line_start":99,"line_end":99,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5441},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110836,"byte_end":1110857,"line_start":102,"line_end":102,"column_start":5,"column_end":26},"name":"ContinueOutsideOfLoop","qualname":"::valid::function::FunctionError::ContinueOutsideOfLoop","value":"FunctionError::ContinueOutsideOfLoop","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `continue` is used outside of a `loop` context\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110769,"byte_end":1110831,"line_start":101,"line_end":101,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5443},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110930,"byte_end":1110947,"line_start":104,"line_end":104,"column_start":5,"column_end":22},"name":"InvalidReturnSpot","qualname":"::valid::function::FunctionError::InvalidReturnSpot","value":"FunctionError::InvalidReturnSpot","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `return` is called within a `continuing` block\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110863,"byte_end":1110925,"line_start":103,"line_end":103,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5445},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111035,"byte_end":1111052,"line_start":106,"line_end":106,"column_start":5,"column_end":22},"name":"InvalidReturnType","qualname":"::valid::function::FunctionError::InvalidReturnType","value":"FunctionError::InvalidReturnType(Option<Handle<crate::Expression>>)","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `return` value {0:?} does not match the function return value\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1110953,"byte_end":1111030,"line_start":105,"line_end":105,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5448},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111158,"byte_end":1111171,"line_start":108,"line_end":108,"column_start":5,"column_end":18},"name":"InvalidIfType","qualname":"::valid::function::FunctionError::InvalidIfType","value":"FunctionError::InvalidIfType(Handle<crate::Expression>)","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `if` condition {0:?} is not a boolean scalar\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111093,"byte_end":1111153,"line_start":107,"line_end":107,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5451},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111270,"byte_end":1111287,"line_start":110,"line_end":110,"column_start":5,"column_end":22},"name":"InvalidSwitchType","qualname":"::valid::function::FunctionError::InvalidSwitchType","value":"FunctionError::InvalidSwitchType(Handle<crate::Expression>)","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `switch` value {0:?} is not an integer scalar\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111204,"byte_end":1111265,"line_start":109,"line_end":109,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5454},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111382,"byte_end":1111403,"line_start":112,"line_end":112,"column_start":5,"column_end":26},"name":"ConflictingSwitchCase","qualname":"::valid::function::FunctionError::ConflictingSwitchCase","value":"FunctionError::ConflictingSwitchCase(i32)","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Multiple `switch` cases for {0:?} are present\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111320,"byte_end":1111377,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5457},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111471,"byte_end":1111489,"line_start":114,"line_end":114,"column_start":5,"column_end":23},"name":"MissingDefaultCase","qualname":"::valid::function::FunctionError::MissingDefaultCase","value":"FunctionError::MissingDefaultCase","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The `switch` is missing a `default` case\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111414,"byte_end":1111466,"line_start":113,"line_end":113,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5459},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111548,"byte_end":1111568,"line_start":116,"line_end":116,"column_start":5,"column_end":25},"name":"MultipleDefaultCases","qualname":"::valid::function::FunctionError::MultipleDefaultCases","value":"FunctionError::MultipleDefaultCases","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Multiple `default` cases are present\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111495,"byte_end":1111543,"line_start":115,"line_end":115,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5461},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111637,"byte_end":1111655,"line_start":118,"line_end":118,"column_start":5,"column_end":23},"name":"LastCaseFallTrough","qualname":"::valid::function::FunctionError::LastCaseFallTrough","value":"FunctionError::LastCaseFallTrough","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The last `switch` case contains a `falltrough`\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111574,"byte_end":1111632,"line_start":117,"line_end":117,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5463},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111745,"byte_end":1111764,"line_start":120,"line_end":120,"column_start":5,"column_end":24},"name":"InvalidStorePointer","qualname":"::valid::function::FunctionError::InvalidStorePointer","value":"FunctionError::InvalidStorePointer(Handle<crate::Expression>)","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The pointer {0:?} doesn't relate to a valid destination for a store\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111661,"byte_end":1111740,"line_start":119,"line_end":119,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5466},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111847,"byte_end":1111864,"line_start":122,"line_end":122,"column_start":5,"column_end":22},"name":"InvalidStoreValue","qualname":"::valid::function::FunctionError::InvalidStoreValue","value":"FunctionError::InvalidStoreValue(Handle<crate::Expression>)","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The value {0:?} can not be stored\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111797,"byte_end":1111842,"line_start":121,"line_end":121,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":5469},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111977,"byte_end":1111994,"line_start":124,"line_end":124,"column_start":5,"column_end":22},"name":"InvalidStoreTypes","qualname":"::valid::function::FunctionError::InvalidStoreTypes","value":"FunctionError::InvalidStoreTypes { pointer, value }","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Store of {value:?} into {pointer:?} doesn't have matching types\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1111897,"byte_end":1111972,"line_start":123,"line_end":123,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5472},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1112145,"byte_end":1112162,"line_start":129,"line_end":129,"column_start":5,"column_end":22},"name":"InvalidImageStore","qualname":"::valid::function::FunctionError::InvalidImageStore","value":"FunctionError::InvalidImageStore(ExpressionError)","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Image store parameters are invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1112094,"byte_end":1112140,"line_start":128,"line_end":128,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":5475},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1112243,"byte_end":1112254,"line_start":131,"line_end":131,"column_start":5,"column_end":16},"name":"InvalidCall","qualname":"::valid::function::FunctionError::InvalidCall","value":"FunctionError::InvalidCall { function, error }","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Call to {function:?} is invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1112195,"byte_end":1112238,"line_start":130,"line_end":130,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5478},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1112399,"byte_end":1112412,"line_start":137,"line_end":137,"column_start":5,"column_end":18},"name":"InvalidAtomic","qualname":"::valid::function::FunctionError::InvalidAtomic","value":"FunctionError::InvalidAtomic(AtomicError)","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Atomic operation is invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1112355,"byte_end":1112394,"line_start":136,"line_end":136,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5481},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1112558,"byte_end":1112579,"line_start":141,"line_end":141,"column_start":5,"column_end":26},"name":"NonUniformControlFlow","qualname":"::valid::function::FunctionError::NonUniformControlFlow","value":"FunctionError::NonUniformControlFlow(UniformityRequirements, Handle<crate::Expression>, UniformityDisruptor)","parent":{"krate":0,"index":5392},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Required uniformity of control flow for {0:?} in {1:?} is not fulfilled because of {2:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1112439,"byte_end":1112553,"line_start":138,"line_end":140,"column_start":5,"column_end":7}}]},{"kind":"Enum","id":{"krate":0,"index":5392},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1109456,"byte_end":1109469,"line_start":69,"line_end":69,"column_start":10,"column_end":23},"name":"FunctionError","qualname":"::valid::function::FunctionError","value":"pub enum FunctionError {\n    BadHandle(BadHandle),\n    Expression {\n            handle: Handle<crate::Expression>,\n            error: ExpressionError,\n        },\n    ExpressionAlreadyInScope(Handle<crate::Expression>),\n    LocalVariable {\n            handle: Handle<crate::LocalVariable>,\n            name: String,\n            error: LocalVariableError,\n        },\n    InvalidArgumentType {\n            index: usize,\n            name: String,\n        },\n    NonConstructibleReturnType,\n    InvalidArgumentPointerSpace {\n            index: usize,\n            name: String,\n            space: crate::AddressSpace,\n        },\n    InstructionsAfterReturn,\n    BreakOutsideOfLoopOrSwitch,\n    ContinueOutsideOfLoop,\n    InvalidReturnSpot,\n    InvalidReturnType(Option<Handle<crate::Expression>>),\n    InvalidIfType(Handle<crate::Expression>),\n    InvalidSwitchType(Handle<crate::Expression>),\n    ConflictingSwitchCase(i32),\n    MissingDefaultCase,\n    MultipleDefaultCases,\n    LastCaseFallTrough,\n    InvalidStorePointer(Handle<crate::Expression>),\n    InvalidStoreValue(Handle<crate::Expression>),\n    InvalidStoreTypes {\n            pointer: Handle<crate::Expression>,\n            value: Handle<crate::Expression>,\n        },\n    InvalidImageStore(ExpressionError),\n    InvalidCall {\n            function: Handle<crate::Function>,\n            error: CallError,\n        },\n    InvalidAtomic(AtomicError),\n    NonUniformControlFlow(UniformityRequirements, Handle<crate::Expression>,\n            UniformityDisruptor),\n}","parent":null,"children":[{"krate":0,"index":5415},{"krate":0,"index":5418},{"krate":0,"index":5421},{"krate":0,"index":5424},{"krate":0,"index":5428},{"krate":0,"index":5431},{"krate":0,"index":5433},{"krate":0,"index":5437},{"krate":0,"index":5439},{"krate":0,"index":5441},{"krate":0,"index":5443},{"krate":0,"index":5445},{"krate":0,"index":5448},{"krate":0,"index":5451},{"krate":0,"index":5454},{"krate":0,"index":5457},{"krate":0,"index":5459},{"krate":0,"index":5461},{"krate":0,"index":5463},{"krate":0,"index":5466},{"krate":0,"index":5469},{"krate":0,"index":5472},{"krate":0,"index":5475},{"krate":0,"index":5478},{"krate":0,"index":5481}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5597},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148280,"byte_end":1148289,"line_start":16,"line_end":16,"column_start":5,"column_end":14},"name":"BadHandle","qualname":"::valid::interface::GlobalVariableError::BadHandle","value":"GlobalVariableError::BadHandle(BadHandle)","parent":{"krate":0,"index":5583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148254,"byte_end":1148275,"line_start":15,"line_end":15,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5600},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148378,"byte_end":1148390,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"name":"InvalidUsage","qualname":"::valid::interface::GlobalVariableError::InvalidUsage","value":"GlobalVariableError::InvalidUsage(crate::AddressSpace)","parent":{"krate":0,"index":5583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Usage isn't compatible with address space {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148314,"byte_end":1148373,"line_start":17,"line_end":17,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5603},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148480,"byte_end":1148491,"line_start":20,"line_end":20,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::interface::GlobalVariableError::InvalidType","value":"GlobalVariableError::InvalidType(crate::AddressSpace)","parent":{"krate":0,"index":5583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type isn't compatible with address space {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148417,"byte_end":1148475,"line_start":19,"line_end":19,"column_start":5,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":5606},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148592,"byte_end":1148608,"line_start":22,"line_end":22,"column_start":5,"column_end":21},"name":"MissingTypeFlags","qualname":"::valid::interface::GlobalVariableError::MissingTypeFlags","value":"GlobalVariableError::MissingTypeFlags { required, seen }","parent":{"krate":0,"index":5583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type flags {seen:?} do not meet the required {required:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148518,"byte_end":1148587,"line_start":21,"line_end":21,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5609},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148740,"byte_end":1148761,"line_start":27,"line_end":27,"column_start":5,"column_end":26},"name":"UnsupportedCapability","qualname":"::valid::interface::GlobalVariableError::UnsupportedCapability","value":"GlobalVariableError::UnsupportedCapability(Capabilities)","parent":{"krate":0,"index":5583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Capability {0:?} is not supported\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148690,"byte_end":1148735,"line_start":26,"line_end":26,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5612},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148845,"byte_end":1148859,"line_start":29,"line_end":29,"column_start":5,"column_end":19},"name":"InvalidBinding","qualname":"::valid::interface::GlobalVariableError::InvalidBinding","value":"GlobalVariableError::InvalidBinding","parent":{"krate":0,"index":5583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Binding decoration is missing or not applicable\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148781,"byte_end":1148840,"line_start":28,"line_end":28,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5614},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148949,"byte_end":1148958,"line_start":31,"line_end":31,"column_start":5,"column_end":14},"name":"Alignment","qualname":"::valid::interface::GlobalVariableError::Alignment","value":"GlobalVariableError::Alignment(crate::AddressSpace, Handle<crate::Type>, Disalignment)","parent":{"krate":0,"index":5583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Alignment requirements for address space {0:?} are not met by {1:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148865,"byte_end":1148944,"line_start":30,"line_end":30,"column_start":5,"column_end":84}}]},{"kind":"Enum","id":{"krate":0,"index":5583},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1148228,"byte_end":1148247,"line_start":14,"line_end":14,"column_start":10,"column_end":29},"name":"GlobalVariableError","qualname":"::valid::interface::GlobalVariableError","value":"pub enum GlobalVariableError {\n    BadHandle(BadHandle),\n    InvalidUsage(crate::AddressSpace),\n    InvalidType(crate::AddressSpace),\n    MissingTypeFlags {\n            required: super::TypeFlags,\n            seen: super::TypeFlags,\n        },\n    UnsupportedCapability(Capabilities),\n    InvalidBinding,\n    Alignment(crate::AddressSpace, Handle<crate::Type>, Disalignment),\n}","parent":null,"children":[{"krate":0,"index":5597},{"krate":0,"index":5600},{"krate":0,"index":5603},{"krate":0,"index":5606},{"krate":0,"index":5609},{"krate":0,"index":5612},{"krate":0,"index":5614}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5634},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149188,"byte_end":1149199,"line_start":41,"line_end":41,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::interface::VaryingError::InvalidType","value":"VaryingError::InvalidType(Handle<crate::Type>)","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The type {0:?} does not match the varying\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149130,"byte_end":1149183,"line_start":40,"line_end":40,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5637},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149319,"byte_end":1149337,"line_start":43,"line_end":43,"column_start":5,"column_end":23},"name":"NotIOShareableType","qualname":"::valid::interface::VaryingError::NotIOShareableType","value":"VaryingError::NotIOShareableType(Handle<crate::Type>)","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The type {0:?} cannot be used for user-defined entry point inputs or outputs\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149226,"byte_end":1149314,"line_start":42,"line_end":42,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5640},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149407,"byte_end":1149427,"line_start":45,"line_end":45,"column_start":5,"column_end":25},"name":"InvalidInterpolation","qualname":"::valid::interface::VaryingError::InvalidInterpolation","value":"VaryingError::InvalidInterpolation","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Interpolation is not valid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149364,"byte_end":1149402,"line_start":44,"line_end":44,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5642},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149533,"byte_end":1149553,"line_start":47,"line_end":47,"column_start":5,"column_end":25},"name":"MissingInterpolation","qualname":"::valid::interface::VaryingError::MissingInterpolation","value":"VaryingError::MissingInterpolation","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Interpolation must be specified on vertex shader outputs and fragment shader inputs\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149433,"byte_end":1149528,"line_start":46,"line_end":46,"column_start":5,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5644},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149621,"byte_end":1149640,"line_start":49,"line_end":49,"column_start":5,"column_end":24},"name":"InvalidBuiltInStage","qualname":"::valid::interface::VaryingError::InvalidBuiltInStage","value":"VaryingError::InvalidBuiltInStage(crate::BuiltIn)","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Built-in {0:?} is not available at this stage\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149559,"byte_end":1149616,"line_start":48,"line_end":48,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5647},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149713,"byte_end":1149731,"line_start":51,"line_end":51,"column_start":5,"column_end":23},"name":"InvalidBuiltInType","qualname":"::valid::interface::VaryingError::InvalidBuiltInType","value":"VaryingError::InvalidBuiltInType(crate::BuiltIn)","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Built-in type for {0:?} is invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149662,"byte_end":1149708,"line_start":50,"line_end":50,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5650},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149832,"byte_end":1149846,"line_start":53,"line_end":53,"column_start":5,"column_end":19},"name":"MissingBinding","qualname":"::valid::interface::VaryingError::MissingBinding","value":"VaryingError::MissingBinding","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Entry point arguments and return values must all have bindings\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149753,"byte_end":1149827,"line_start":52,"line_end":52,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5652},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149907,"byte_end":1149927,"line_start":55,"line_end":55,"column_start":5,"column_end":25},"name":"MemberMissingBinding","qualname":"::valid::interface::VaryingError::MemberMissingBinding","value":"VaryingError::MemberMissingBinding(u32)","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Struct member {0} is missing a binding\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149852,"byte_end":1149902,"line_start":54,"line_end":54,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":5655},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150007,"byte_end":1150023,"line_start":57,"line_end":57,"column_start":5,"column_end":21},"name":"BindingCollision","qualname":"::valid::interface::VaryingError::BindingCollision","value":"VaryingError::BindingCollision { location }","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Multiple bindings at location {location} are present\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149938,"byte_end":1150002,"line_start":56,"line_end":56,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5657},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150104,"byte_end":1150120,"line_start":59,"line_end":59,"column_start":5,"column_end":21},"name":"DuplicateBuiltIn","qualname":"::valid::interface::VaryingError::DuplicateBuiltIn","value":"VaryingError::DuplicateBuiltIn(crate::BuiltIn)","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Built-in {0:?} is present more than once\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150047,"byte_end":1150099,"line_start":58,"line_end":58,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5660},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150192,"byte_end":1150213,"line_start":61,"line_end":61,"column_start":5,"column_end":26},"name":"UnsupportedCapability","qualname":"::valid::interface::VaryingError::UnsupportedCapability","value":"VaryingError::UnsupportedCapability(Capabilities)","parent":{"krate":0,"index":5619},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Capability {0:?} is not supported\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150142,"byte_end":1150187,"line_start":60,"line_end":60,"column_start":5,"column_end":50}}]},{"kind":"Enum","id":{"krate":0,"index":5619},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1149111,"byte_end":1149123,"line_start":39,"line_end":39,"column_start":10,"column_end":22},"name":"VaryingError","qualname":"::valid::interface::VaryingError","value":"pub enum VaryingError {\n    InvalidType(Handle<crate::Type>),\n    NotIOShareableType(Handle<crate::Type>),\n    InvalidInterpolation,\n    MissingInterpolation,\n    InvalidBuiltInStage(crate::BuiltIn),\n    InvalidBuiltInType(crate::BuiltIn),\n    MissingBinding,\n    MemberMissingBinding(u32),\n    BindingCollision {\n            location: u32,\n        },\n    DuplicateBuiltIn(crate::BuiltIn),\n    UnsupportedCapability(Capabilities),\n}","parent":null,"children":[{"krate":0,"index":5634},{"krate":0,"index":5637},{"krate":0,"index":5640},{"krate":0,"index":5642},{"krate":0,"index":5644},{"krate":0,"index":5647},{"krate":0,"index":5650},{"krate":0,"index":5652},{"krate":0,"index":5655},{"krate":0,"index":5657},{"krate":0,"index":5660}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5686},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150355,"byte_end":1150363,"line_start":67,"line_end":67,"column_start":5,"column_end":13},"name":"Conflict","qualname":"::valid::interface::EntryPointError::Conflict","value":"EntryPointError::Conflict","parent":{"krate":0,"index":5663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Multiple conflicting entry points\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150305,"byte_end":1150350,"line_start":66,"line_end":66,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5688},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150420,"byte_end":1150444,"line_start":69,"line_end":69,"column_start":5,"column_end":29},"name":"UnexpectedEarlyDepthTest","qualname":"::valid::interface::EntryPointError::UnexpectedEarlyDepthTest","value":"EntryPointError::UnexpectedEarlyDepthTest","parent":{"krate":0,"index":5663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Early depth test is not applicable\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150369,"byte_end":1150415,"line_start":68,"line_end":68,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5690},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150499,"byte_end":1150522,"line_start":71,"line_end":71,"column_start":5,"column_end":28},"name":"UnexpectedWorkgroupSize","qualname":"::valid::interface::EntryPointError::UnexpectedWorkgroupSize","value":"EntryPointError::UnexpectedWorkgroupSize","parent":{"krate":0,"index":5663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Workgroup size is not applicable\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150450,"byte_end":1150494,"line_start":70,"line_end":70,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5692},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150575,"byte_end":1150598,"line_start":73,"line_end":73,"column_start":5,"column_end":28},"name":"OutOfRangeWorkgroupSize","qualname":"::valid::interface::EntryPointError::OutOfRangeWorkgroupSize","value":"EntryPointError::OutOfRangeWorkgroupSize","parent":{"krate":0,"index":5663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Workgroup size is out of range\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150528,"byte_end":1150570,"line_start":72,"line_end":72,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5694},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150660,"byte_end":1150684,"line_start":75,"line_end":75,"column_start":5,"column_end":29},"name":"ForbiddenStageOperations","qualname":"::valid::interface::EntryPointError::ForbiddenStageOperations","value":"EntryPointError::ForbiddenStageOperations","parent":{"krate":0,"index":5663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Uses operations forbidden at this stage\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150604,"byte_end":1150655,"line_start":74,"line_end":74,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5696},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150757,"byte_end":1150775,"line_start":77,"line_end":77,"column_start":5,"column_end":23},"name":"InvalidGlobalUsage","qualname":"::valid::interface::EntryPointError::InvalidGlobalUsage","value":"EntryPointError::InvalidGlobalUsage(Handle<crate::GlobalVariable>, GlobalUse)","parent":{"krate":0,"index":5663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Global variable {0:?} is used incorrectly as {1:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150690,"byte_end":1150752,"line_start":76,"line_end":76,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5700},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150887,"byte_end":1150903,"line_start":79,"line_end":79,"column_start":5,"column_end":21},"name":"BindingCollision","qualname":"::valid::interface::EntryPointError::BindingCollision","value":"EntryPointError::BindingCollision(Handle<crate::GlobalVariable>)","parent":{"krate":0,"index":5663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Bindings for {0:?} conflict with other resource\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150823,"byte_end":1150882,"line_start":78,"line_end":78,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5703},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150983,"byte_end":1150991,"line_start":81,"line_end":81,"column_start":5,"column_end":13},"name":"Argument","qualname":"::valid::interface::EntryPointError::Argument","value":"EntryPointError::Argument(u32, VaryingError)","parent":{"krate":0,"index":5663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Argument {0} varying error\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150940,"byte_end":1150978,"line_start":80,"line_end":80,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5707},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1151052,"byte_end":1151058,"line_start":83,"line_end":83,"column_start":5,"column_end":11},"name":"Result","qualname":"::valid::interface::EntryPointError::Result","value":"EntryPointError::Result(VaryingError)","parent":{"krate":0,"index":5663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1151026,"byte_end":1151047,"line_start":82,"line_end":82,"column_start":5,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":5710},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1151165,"byte_end":1151192,"line_start":85,"line_end":85,"column_start":5,"column_end":32},"name":"InvalidIntegerInterpolation","qualname":"::valid::interface::EntryPointError::InvalidIntegerInterpolation","value":"EntryPointError::InvalidIntegerInterpolation { location }","parent":{"krate":0,"index":5663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Location {location} interpolation of an integer has to be flat\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1151086,"byte_end":1151160,"line_start":84,"line_end":84,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5712},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1151242,"byte_end":1151250,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Function","qualname":"::valid::interface::EntryPointError::Function","value":"EntryPointError::Function(FunctionError)","parent":{"krate":0,"index":5663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1151216,"byte_end":1151237,"line_start":86,"line_end":86,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":5663},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1150283,"byte_end":1150298,"line_start":65,"line_end":65,"column_start":10,"column_end":25},"name":"EntryPointError","qualname":"::valid::interface::EntryPointError","value":"pub enum EntryPointError {\n    Conflict,\n    UnexpectedEarlyDepthTest,\n    UnexpectedWorkgroupSize,\n    OutOfRangeWorkgroupSize,\n    ForbiddenStageOperations,\n    InvalidGlobalUsage(Handle<crate::GlobalVariable>, GlobalUse),\n    BindingCollision(Handle<crate::GlobalVariable>),\n    Argument(u32, VaryingError),\n    Result(VaryingError),\n    InvalidIntegerInterpolation {\n            location: u32,\n        },\n    Function(FunctionError),\n}","parent":null,"children":[{"krate":0,"index":5686},{"krate":0,"index":5688},{"krate":0,"index":5690},{"krate":0,"index":5692},{"krate":0,"index":5694},{"krate":0,"index":5696},{"krate":0,"index":5700},{"krate":0,"index":5703},{"krate":0,"index":5707},{"krate":0,"index":5710},{"krate":0,"index":5712}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5715},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1171365,"byte_end":1171374,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"TypeFlags","qualname":"::valid::r#type::TypeFlags","value":"TypeFlags {  }","parent":null,"children":[{"krate":0,"index":5716}],"decl_id":null,"docs":" Flags associated with [`Type`]s by [`Validator`].","sig":null,"attributes":[{"value":"repr(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":14472355,"byte_end":14472364,"line_start":362,"line_end":362,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":5754},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1171695,"byte_end":1171699,"line_start":21,"line_end":21,"column_start":15,"column_end":19},"name":"DATA","qualname":"::valid::r#type::TypeFlags::DATA","value":"Self","parent":{"krate":0,"index":5753},"children":[],"decl_id":null,"docs":" Can be used for data variables.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5755},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1172369,"byte_end":1172374,"line_start":36,"line_end":36,"column_start":15,"column_end":20},"name":"SIZED","qualname":"::valid::r#type::TypeFlags::SIZED","value":"Self","parent":{"krate":0,"index":5753},"children":[],"decl_id":null,"docs":" The data type has a size known by pipeline creation time.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5756},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1172440,"byte_end":1172444,"line_start":39,"line_end":39,"column_start":15,"column_end":19},"name":"COPY","qualname":"::valid::r#type::TypeFlags::COPY","value":"Self","parent":{"krate":0,"index":5753},"children":[],"decl_id":null,"docs":" The data can be copied around.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5757},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1172741,"byte_end":1172753,"line_start":46,"line_end":46,"column_start":15,"column_end":27},"name":"IO_SHAREABLE","qualname":"::valid::r#type::TypeFlags::IO_SHAREABLE","value":"Self","parent":{"krate":0,"index":5753},"children":[],"decl_id":null,"docs":" Can be be used for user-defined IO between pipeline stages.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5758},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1172831,"byte_end":1172845,"line_start":49,"line_end":49,"column_start":15,"column_end":29},"name":"HOST_SHAREABLE","qualname":"::valid::r#type::TypeFlags::HOST_SHAREABLE","value":"Self","parent":{"krate":0,"index":5753},"children":[],"decl_id":null,"docs":" Can be used for host-shareable structures.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5759},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1172929,"byte_end":1172937,"line_start":52,"line_end":52,"column_start":15,"column_end":23},"name":"ARGUMENT","qualname":"::valid::r#type::TypeFlags::ARGUMENT","value":"Self","parent":{"krate":0,"index":5753},"children":[],"decl_id":null,"docs":" This type can be passed as a function argument.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5760},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1173290,"byte_end":1173303,"line_start":61,"line_end":61,"column_start":15,"column_end":28},"name":"CONSTRUCTIBLE","qualname":"::valid::r#type::TypeFlags::CONSTRUCTIBLE","value":"Self","parent":{"krate":0,"index":5753},"children":[],"decl_id":null,"docs":" A WGSL [constructible] type.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":5848},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1173495,"byte_end":1173506,"line_start":68,"line_end":68,"column_start":5,"column_end":16},"name":"ArrayStride","qualname":"::valid::r#type::Disalignment::ArrayStride","value":"Disalignment::ArrayStride { stride, alignment }","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The array stride {stride} is not a multiple of the required alignment {alignment}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1173397,"byte_end":1173490,"line_start":67,"line_end":67,"column_start":5,"column_end":98}}]},{"kind":"StructVariant","id":{"krate":0,"index":5851},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1173646,"byte_end":1173656,"line_start":70,"line_end":70,"column_start":5,"column_end":15},"name":"StructSpan","qualname":"::valid::r#type::Disalignment::StructSpan","value":"Disalignment::StructSpan { span, alignment }","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The struct span {span}, is not a multiple of the required alignment {alignment}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1173550,"byte_end":1173641,"line_start":69,"line_end":69,"column_start":5,"column_end":96}}]},{"kind":"StructVariant","id":{"krate":0,"index":5854},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1173813,"byte_end":1173825,"line_start":72,"line_end":72,"column_start":5,"column_end":17},"name":"MemberOffset","qualname":"::valid::r#type::Disalignment::MemberOffset","value":"Disalignment::MemberOffset { index, offset, alignment }","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The struct member[{index}] offset {offset} is not a multiple of the required alignment {alignment}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1173698,"byte_end":1173808,"line_start":71,"line_end":71,"column_start":5,"column_end":115}}]},{"kind":"StructVariant","id":{"krate":0,"index":5858},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1173997,"byte_end":1174020,"line_start":78,"line_end":78,"column_start":5,"column_end":28},"name":"MemberOffsetAfterStruct","qualname":"::valid::r#type::Disalignment::MemberOffsetAfterStruct","value":"Disalignment::MemberOffsetAfterStruct { index, offset, expected }","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The struct member[{index}] offset {offset} must be at least {expected}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1173910,"byte_end":1173992,"line_start":77,"line_end":77,"column_start":5,"column_end":87}}]},{"kind":"StructVariant","id":{"krate":0,"index":5862},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174165,"byte_end":1174178,"line_start":84,"line_end":84,"column_start":5,"column_end":18},"name":"UnsizedMember","qualname":"::valid::r#type::Disalignment::UnsizedMember","value":"Disalignment::UnsizedMember { index }","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The struct member[{index}] is not statically sized\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174098,"byte_end":1174160,"line_start":83,"line_end":83,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5864},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174246,"byte_end":1174262,"line_start":86,"line_end":86,"column_start":5,"column_end":21},"name":"NonHostShareable","qualname":"::valid::r#type::Disalignment::NonHostShareable","value":"Disalignment::NonHostShareable","parent":{"krate":0,"index":5832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The type is not host-shareable\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174199,"byte_end":1174241,"line_start":85,"line_end":85,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":5832},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1173378,"byte_end":1173390,"line_start":66,"line_end":66,"column_start":10,"column_end":22},"name":"Disalignment","qualname":"::valid::r#type::Disalignment","value":"pub enum Disalignment {\n    ArrayStride {\n            stride: u32,\n            alignment: Alignment,\n        },\n    StructSpan {\n            span: u32,\n            alignment: Alignment,\n        },\n    MemberOffset {\n            index: u32,\n            offset: u32,\n            alignment: Alignment,\n        },\n    MemberOffsetAfterStruct {\n            index: u32,\n            offset: u32,\n            expected: u32,\n        },\n    UnsizedMember {\n            index: u32,\n        },\n    NonHostShareable,\n}","parent":null,"children":[{"krate":0,"index":5848},{"krate":0,"index":5851},{"krate":0,"index":5854},{"krate":0,"index":5858},{"krate":0,"index":5862},{"krate":0,"index":5864}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5887},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174360,"byte_end":1174369,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"BadHandle","qualname":"::valid::r#type::TypeError::BadHandle","value":"TypeError::BadHandle(BadHandle)","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174334,"byte_end":1174355,"line_start":91,"line_end":91,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5890},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174454,"byte_end":1174466,"line_start":94,"line_end":94,"column_start":5,"column_end":17},"name":"InvalidWidth","qualname":"::valid::r#type::TypeError::InvalidWidth","value":"TypeError::InvalidWidth(crate::ScalarKind, crate::Bytes)","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The {0:?} scalar width {1} is not supported\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174394,"byte_end":1174449,"line_start":93,"line_end":93,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5894},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174579,"byte_end":1174597,"line_start":96,"line_end":96,"column_start":5,"column_end":23},"name":"InvalidAtomicWidth","qualname":"::valid::r#type::TypeError::InvalidAtomicWidth","value":"TypeError::InvalidAtomicWidth(crate::ScalarKind, crate::Bytes)","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The {0:?} scalar width {1} is not supported for an atomic\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174505,"byte_end":1174574,"line_start":95,"line_end":95,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5898},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174694,"byte_end":1174708,"line_start":98,"line_end":98,"column_start":5,"column_end":19},"name":"UnresolvedBase","qualname":"::valid::r#type::TypeError::UnresolvedBase","value":"TypeError::UnresolvedBase(Handle<crate::Type>)","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The base handle {0:?} can not be resolved\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174636,"byte_end":1174689,"line_start":97,"line_end":97,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5901},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174789,"byte_end":1174807,"line_start":100,"line_end":100,"column_start":5,"column_end":23},"name":"InvalidPointerBase","qualname":"::valid::r#type::TypeError::InvalidPointerBase","value":"TypeError::InvalidPointerBase(Handle<crate::Type>)","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Invalid type for pointer target {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174735,"byte_end":1174784,"line_start":99,"line_end":99,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":5904},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174934,"byte_end":1174957,"line_start":102,"line_end":102,"column_start":5,"column_end":28},"name":"InvalidPointerToUnsized","qualname":"::valid::r#type::TypeError::InvalidPointerToUnsized","value":"TypeError::InvalidPointerToUnsized { base, space }","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Unsized types like {base:?} must be in the `Storage` address space, not `{space:?}`\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174834,"byte_end":1174929,"line_start":101,"line_end":101,"column_start":5,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5907},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175090,"byte_end":1175101,"line_start":107,"line_end":107,"column_start":5,"column_end":16},"name":"InvalidData","qualname":"::valid::r#type::TypeError::InvalidData","value":"TypeError::InvalidData(Handle<crate::Type>)","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Expected data type, found {0:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175042,"byte_end":1175085,"line_start":106,"line_end":106,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5910},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175185,"byte_end":1175205,"line_start":109,"line_end":109,"column_start":5,"column_end":25},"name":"InvalidArrayBaseType","qualname":"::valid::r#type::TypeError::InvalidArrayBaseType","value":"TypeError::InvalidArrayBaseType(Handle<crate::Type>)","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Base type {0:?} for the array is invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175128,"byte_end":1175180,"line_start":108,"line_end":108,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5913},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175301,"byte_end":1175325,"line_start":111,"line_end":111,"column_start":5,"column_end":29},"name":"InvalidArraySizeConstant","qualname":"::valid::r#type::TypeError::InvalidArraySizeConstant","value":"TypeError::InvalidArraySizeConstant(Handle<crate::Constant>)","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The constant {0:?} can not be used for an array size\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175232,"byte_end":1175296,"line_start":110,"line_end":110,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5916},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175443,"byte_end":1175476,"line_start":113,"line_end":113,"column_start":5,"column_end":38},"name":"UnsupportedSpecializedArrayLength","qualname":"::valid::r#type::TypeError::UnsupportedSpecializedArrayLength","value":"TypeError::UnsupportedSpecializedArrayLength(Handle<crate::Constant>)","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The constant {0:?} is specialized, and cannot be used as an array size\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175356,"byte_end":1175438,"line_start":112,"line_end":112,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5919},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175574,"byte_end":1175596,"line_start":115,"line_end":115,"column_start":5,"column_end":27},"name":"NonPositiveArrayLength","qualname":"::valid::r#type::TypeError::NonPositiveArrayLength","value":"TypeError::NonPositiveArrayLength(Handle<crate::Constant>)","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Array type {0:?} must have a length of one or more\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175507,"byte_end":1175569,"line_start":114,"line_end":114,"column_start":5,"column_end":67}}]},{"kind":"StructVariant","id":{"krate":0,"index":5922},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175704,"byte_end":1175722,"line_start":117,"line_end":117,"column_start":5,"column_end":23},"name":"InvalidArrayStride","qualname":"::valid::r#type::TypeError::InvalidArrayStride","value":"TypeError::InvalidArrayStride { stride, expected }","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Array stride {stride} does not match the expected {expected}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175627,"byte_end":1175699,"line_start":116,"line_end":116,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5925},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175830,"byte_end":1175849,"line_start":119,"line_end":119,"column_start":5,"column_end":24},"name":"InvalidDynamicArray","qualname":"::valid::r#type::TypeError::InvalidDynamicArray","value":"TypeError::InvalidDynamicArray(String, Handle<crate::Type>)","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Field '{0}' can't be dynamically-sized, has type {1:?}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175759,"byte_end":1175825,"line_start":118,"line_end":118,"column_start":5,"column_end":71}}]},{"kind":"StructVariant","id":{"krate":0,"index":5929},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175967,"byte_end":1175980,"line_start":121,"line_end":121,"column_start":5,"column_end":18},"name":"MemberOverlap","qualname":"::valid::r#type::TypeError::MemberOverlap","value":"TypeError::MemberOverlap { index, offset }","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Structure member[{index}] at {offset} overlaps the previous member\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1175884,"byte_end":1175962,"line_start":120,"line_end":120,"column_start":5,"column_end":83}}]},{"kind":"StructVariant","id":{"krate":0,"index":5932},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1176144,"byte_end":1176161,"line_start":125,"line_end":125,"column_start":5,"column_end":22},"name":"MemberOutOfBounds","qualname":"::valid::r#type::TypeError::MemberOutOfBounds","value":"TypeError::MemberOutOfBounds { index, offset, size, span }","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Structure member[{index}] at {offset} and size {size} crosses the structure boundary of size {span}\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1176014,"byte_end":1176139,"line_start":122,"line_end":124,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5937},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1176316,"byte_end":1176327,"line_start":132,"line_end":132,"column_start":5,"column_end":16},"name":"EmptyStruct","qualname":"::valid::r#type::TypeError::EmptyStruct","value":"TypeError::EmptyStruct","parent":{"krate":0,"index":5866},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Structure types must have at least one member\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1176254,"byte_end":1176311,"line_start":131,"line_end":131,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":5866},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1174318,"byte_end":1174327,"line_start":90,"line_end":90,"column_start":10,"column_end":19},"name":"TypeError","qualname":"::valid::r#type::TypeError","value":"pub enum TypeError {\n    BadHandle(BadHandle),\n    InvalidWidth(crate::ScalarKind, crate::Bytes),\n    InvalidAtomicWidth(crate::ScalarKind, crate::Bytes),\n    UnresolvedBase(Handle<crate::Type>),\n    InvalidPointerBase(Handle<crate::Type>),\n    InvalidPointerToUnsized {\n            base: Handle<crate::Type>,\n            space: crate::AddressSpace,\n        },\n    InvalidData(Handle<crate::Type>),\n    InvalidArrayBaseType(Handle<crate::Type>),\n    InvalidArraySizeConstant(Handle<crate::Constant>),\n    UnsupportedSpecializedArrayLength(Handle<crate::Constant>),\n    NonPositiveArrayLength(Handle<crate::Constant>),\n    InvalidArrayStride {\n            stride: u32,\n            expected: u32,\n        },\n    InvalidDynamicArray(String, Handle<crate::Type>),\n    MemberOverlap {\n            index: u32,\n            offset: u32,\n        },\n    MemberOutOfBounds {\n            index: u32,\n            offset: u32,\n            size: u32,\n            span: u32,\n        },\n    EmptyStruct,\n}","parent":null,"children":[{"krate":0,"index":5887},{"krate":0,"index":5890},{"krate":0,"index":5894},{"krate":0,"index":5898},{"krate":0,"index":5901},{"krate":0,"index":5904},{"krate":0,"index":5907},{"krate":0,"index":5910},{"krate":0,"index":5913},{"krate":0,"index":5916},{"krate":0,"index":5919},{"krate":0,"index":5922},{"krate":0,"index":5925},{"krate":0,"index":5929},{"krate":0,"index":5932},{"krate":0,"index":5937}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5947},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":971066,"byte_end":971081,"line_start":53,"line_end":53,"column_start":16,"column_end":31},"name":"ValidationFlags","qualname":"::valid::ValidationFlags","value":"ValidationFlags {  }","parent":null,"children":[{"krate":0,"index":5948}],"decl_id":null,"docs":" Validation flags.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":5984},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":971164,"byte_end":971175,"line_start":56,"line_end":56,"column_start":15,"column_end":26},"name":"EXPRESSIONS","qualname":"::valid::ValidationFlags::EXPRESSIONS","value":"Self","parent":{"krate":0,"index":5983},"children":[],"decl_id":null,"docs":" Expressions.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":14477574,"byte_end":14477592,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5985},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":971277,"byte_end":971283,"line_start":59,"line_end":59,"column_start":15,"column_end":21},"name":"BLOCKS","qualname":"::valid::ValidationFlags::BLOCKS","value":"Self","parent":{"krate":0,"index":5983},"children":[],"decl_id":null,"docs":" Statements and blocks of them.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":14477574,"byte_end":14477592,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5986},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":971413,"byte_end":971436,"line_start":62,"line_end":62,"column_start":15,"column_end":38},"name":"CONTROL_FLOW_UNIFORMITY","qualname":"::valid::ValidationFlags::CONTROL_FLOW_UNIFORMITY","value":"Self","parent":{"krate":0,"index":5983},"children":[],"decl_id":null,"docs":" Uniformity of control flow for operations that require it.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":14477574,"byte_end":14477592,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5987},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":971541,"byte_end":971555,"line_start":65,"line_end":65,"column_start":15,"column_end":29},"name":"STRUCT_LAYOUTS","qualname":"::valid::ValidationFlags::STRUCT_LAYOUTS","value":"Self","parent":{"krate":0,"index":5983},"children":[],"decl_id":null,"docs":" Host-shareable structure layouts.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":14477574,"byte_end":14477592,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":5988},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":971637,"byte_end":971646,"line_start":68,"line_end":68,"column_start":15,"column_end":24},"name":"CONSTANTS","qualname":"::valid::ValidationFlags::CONSTANTS","value":"Self","parent":{"krate":0,"index":5983},"children":[],"decl_id":null,"docs":" Constants.\n","sig":null,"attributes":[{"value":"cfg(feature = \"validate\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":14477574,"byte_end":14477592,"line_start":520,"line_end":520,"column_start":19,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":6056},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":971998,"byte_end":972010,"line_start":84,"line_end":84,"column_start":16,"column_end":28},"name":"Capabilities","qualname":"::valid::Capabilities","value":"Capabilities {  }","parent":null,"children":[{"krate":0,"index":6057}],"decl_id":null,"docs":" Allowed IR capabilities.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\bitflags-1.3.2\\src\\lib.rs","byte_start":14472355,"byte_end":14472364,"line_start":362,"line_end":362,"column_start":11,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":6096},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":972086,"byte_end":972099,"line_start":86,"line_end":86,"column_start":15,"column_end":28},"name":"PUSH_CONSTANT","qualname":"::valid::Capabilities::PUSH_CONSTANT","value":"Self","parent":{"krate":0,"index":6095},"children":[],"decl_id":null,"docs":" Support for [`AddressSpace:PushConstant`].\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6097},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":972162,"byte_end":972169,"line_start":88,"line_end":88,"column_start":15,"column_end":22},"name":"FLOAT64","qualname":"::valid::Capabilities::FLOAT64","value":"Self","parent":{"krate":0,"index":6095},"children":[],"decl_id":null,"docs":" Float values with width = 8.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6098},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":972243,"byte_end":972258,"line_start":90,"line_end":90,"column_start":15,"column_end":30},"name":"PRIMITIVE_INDEX","qualname":"::valid::Capabilities::PRIMITIVE_INDEX","value":"Self","parent":{"krate":0,"index":6095},"children":[],"decl_id":null,"docs":" Support for [`Builtin:PrimitiveIndex`].\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6099},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":972372,"byte_end":972433,"line_start":92,"line_end":92,"column_start":15,"column_end":76},"name":"SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","qualname":"::valid::Capabilities::SAMPLED_TEXTURE_AND_STORAGE_BUFFER_ARRAY_NON_UNIFORM_INDEXING","value":"Self","parent":{"krate":0,"index":6095},"children":[],"decl_id":null,"docs":" Support for non-uniform indexing of sampled textures and storage buffer arrays.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6100},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":972547,"byte_end":972608,"line_start":94,"line_end":94,"column_start":15,"column_end":76},"name":"UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","qualname":"::valid::Capabilities::UNIFORM_BUFFER_AND_STORAGE_TEXTURE_ARRAY_NON_UNIFORM_INDEXING","value":"Self","parent":{"krate":0,"index":6095},"children":[],"decl_id":null,"docs":" Support for non-uniform indexing of uniform buffers and storage texture arrays.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6101},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":972689,"byte_end":972717,"line_start":96,"line_end":96,"column_start":15,"column_end":43},"name":"SAMPLER_NON_UNIFORM_INDEXING","qualname":"::valid::Capabilities::SAMPLER_NON_UNIFORM_INDEXING","value":"Self","parent":{"krate":0,"index":6095},"children":[],"decl_id":null,"docs":" Support for non-uniform indexing of samplers.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6102},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":972791,"byte_end":972804,"line_start":98,"line_end":98,"column_start":15,"column_end":28},"name":"CLIP_DISTANCE","qualname":"::valid::Capabilities::CLIP_DISTANCE","value":"Self","parent":{"krate":0,"index":6095},"children":[],"decl_id":null,"docs":" Support for [`Builtin::ClipDistance`].\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6103},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":972878,"byte_end":972891,"line_start":100,"line_end":100,"column_start":15,"column_end":28},"name":"CULL_DISTANCE","qualname":"::valid::Capabilities::CULL_DISTANCE","value":"Self","parent":{"krate":0,"index":6095},"children":[],"decl_id":null,"docs":" Support for [`Builtin::CullDistance`].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6178},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":973106,"byte_end":973118,"line_start":108,"line_end":108,"column_start":16,"column_end":28},"name":"ShaderStages","qualname":"::valid::ShaderStages","value":"ShaderStages {  }","parent":null,"children":[{"krate":0,"index":6179}],"decl_id":null,"docs":" Validation flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6213},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":973139,"byte_end":973145,"line_start":109,"line_end":109,"column_start":15,"column_end":21},"name":"VERTEX","qualname":"::valid::ShaderStages::VERTEX","value":"Self","parent":{"krate":0,"index":6212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6214},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":973167,"byte_end":973175,"line_start":110,"line_end":110,"column_start":15,"column_end":23},"name":"FRAGMENT","qualname":"::valid::ShaderStages::FRAGMENT","value":"Self","parent":{"krate":0,"index":6212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6215},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":973197,"byte_end":973204,"line_start":111,"line_end":111,"column_start":15,"column_end":22},"name":"COMPUTE","qualname":"::valid::ShaderStages::COMPUTE","value":"Self","parent":{"krate":0,"index":6212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6275},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":973375,"byte_end":973385,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"ModuleInfo","qualname":"::valid::ModuleInfo","value":"ModuleInfo {  }","parent":null,"children":[{"krate":0,"index":6276},{"krate":0,"index":6277}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6280},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":973701,"byte_end":973710,"line_start":131,"line_end":131,"column_start":12,"column_end":21},"name":"Validator","qualname":"::valid::Validator","value":"Validator {  }","parent":null,"children":[{"krate":0,"index":6281},{"krate":0,"index":6282},{"krate":0,"index":6283},{"krate":0,"index":6284},{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6287},{"krate":0,"index":6288},{"krate":0,"index":6289}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6308},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974146,"byte_end":974155,"line_start":147,"line_end":147,"column_start":5,"column_end":14},"name":"BadHandle","qualname":"::valid::ConstantError::BadHandle","value":"ConstantError::BadHandle(BadHandle)","parent":{"krate":0,"index":6292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974120,"byte_end":974141,"line_start":146,"line_end":146,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6311},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974232,"byte_end":974243,"line_start":149,"line_end":149,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::valid::ConstantError::InvalidType","value":"ConstantError::InvalidType","parent":{"krate":0,"index":6292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The type doesn't match the constant\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974180,"byte_end":974227,"line_start":148,"line_end":148,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6313},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974312,"byte_end":974331,"line_start":151,"line_end":151,"column_start":5,"column_end":24},"name":"UnresolvedComponent","qualname":"::valid::ConstantError::UnresolvedComponent","value":"ConstantError::UnresolvedComponent(Handle<crate::Constant>)","parent":{"krate":0,"index":6292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The component handle {0:?} can not be resolved\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974249,"byte_end":974307,"line_start":150,"line_end":150,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6316},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974426,"byte_end":974440,"line_start":153,"line_end":153,"column_start":5,"column_end":19},"name":"UnresolvedSize","qualname":"::valid::ConstantError::UnresolvedSize","value":"ConstantError::UnresolvedSize(Handle<crate::Constant>)","parent":{"krate":0,"index":6292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"The array size handle {0:?} can not be resolved\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974362,"byte_end":974421,"line_start":152,"line_end":152,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6319},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974497,"byte_end":974504,"line_start":155,"line_end":155,"column_start":5,"column_end":12},"name":"Compose","qualname":"::valid::ConstantError::Compose","value":"ConstantError::Compose(ComposeError)","parent":{"krate":0,"index":6292},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974471,"byte_end":974492,"line_start":154,"line_end":154,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":6292},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974100,"byte_end":974113,"line_start":145,"line_end":145,"column_start":10,"column_end":23},"name":"ConstantError","qualname":"::valid::ConstantError","value":"pub enum ConstantError {\n    BadHandle(BadHandle),\n    InvalidType,\n    UnresolvedComponent(Handle<crate::Constant>),\n    UnresolvedSize(Handle<crate::Constant>),\n    Compose(ComposeError),\n}","parent":null,"children":[{"krate":0,"index":6308},{"krate":0,"index":6311},{"krate":0,"index":6313},{"krate":0,"index":6316},{"krate":0,"index":6319}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6343},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974630,"byte_end":974638,"line_start":161,"line_end":161,"column_start":5,"column_end":13},"name":"Layouter","qualname":"::valid::ValidationError::Layouter","value":"ValidationError::Layouter(LayoutError)","parent":{"krate":0,"index":6322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974604,"byte_end":974625,"line_start":160,"line_end":160,"column_start":5,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":6346},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974717,"byte_end":974721,"line_start":163,"line_end":163,"column_start":5,"column_end":9},"name":"Type","qualname":"::valid::ValidationError::Type","value":"ValidationError::Type { handle, name, error }","parent":{"krate":0,"index":6322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Type {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974665,"byte_end":974712,"line_start":162,"line_end":162,"column_start":5,"column_end":52}}]},{"kind":"StructVariant","id":{"krate":0,"index":6350},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974894,"byte_end":974902,"line_start":170,"line_end":170,"column_start":5,"column_end":13},"name":"Constant","qualname":"::valid::ValidationError::Constant","value":"ValidationError::Constant { handle, name, error }","parent":{"krate":0,"index":6322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Constant {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974838,"byte_end":974889,"line_start":169,"line_end":169,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":6354},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":975090,"byte_end":975104,"line_start":177,"line_end":177,"column_start":5,"column_end":19},"name":"GlobalVariable","qualname":"::valid::ValidationError::GlobalVariable","value":"ValidationError::GlobalVariable { handle, name, error }","parent":{"krate":0,"index":6322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Global variable {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":975027,"byte_end":975085,"line_start":176,"line_end":176,"column_start":5,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":6358},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":975297,"byte_end":975305,"line_start":184,"line_end":184,"column_start":5,"column_end":13},"name":"Function","qualname":"::valid::ValidationError::Function","value":"ValidationError::Function { handle, name, error }","parent":{"krate":0,"index":6322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Function {handle:?} '{name}' is invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":975241,"byte_end":975292,"line_start":183,"line_end":183,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":6362},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":975489,"byte_end":975499,"line_start":191,"line_end":191,"column_start":5,"column_end":15},"name":"EntryPoint","qualname":"::valid::ValidationError::EntryPoint","value":"ValidationError::EntryPoint { stage, name, error }","parent":{"krate":0,"index":6322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Entry point {name} at {stage:?} is invalid\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":975430,"byte_end":975484,"line_start":190,"line_end":190,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6366},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":975656,"byte_end":975665,"line_start":198,"line_end":198,"column_start":5,"column_end":14},"name":"Corrupted","qualname":"::valid::ValidationError::Corrupted","value":"ValidationError::Corrupted","parent":{"krate":0,"index":6322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Module is corrupted\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":975620,"byte_end":975651,"line_start":197,"line_end":197,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":6322},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":974582,"byte_end":974597,"line_start":159,"line_end":159,"column_start":10,"column_end":25},"name":"ValidationError","qualname":"::valid::ValidationError","value":"pub enum ValidationError {\n    Layouter(LayoutError),\n    Type {\n            handle: Handle<crate::Type>,\n            name: String,\n            error: TypeError,\n        },\n    Constant {\n            handle: Handle<crate::Constant>,\n            name: String,\n            error: ConstantError,\n        },\n    GlobalVariable {\n            handle: Handle<crate::GlobalVariable>,\n            name: String,\n            error: GlobalVariableError,\n        },\n    Function {\n            handle: Handle<crate::Function>,\n            name: String,\n            error: FunctionError,\n        },\n    EntryPoint {\n            stage: crate::ShaderStage,\n            name: String,\n            error: EntryPointError,\n        },\n    Corrupted,\n}","parent":null,"children":[{"krate":0,"index":6343},{"krate":0,"index":6346},{"krate":0,"index":6350},{"krate":0,"index":6354},{"krate":0,"index":6358},{"krate":0,"index":6362},{"krate":0,"index":6366}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":977173,"byte_end":977176,"line_start":248,"line_end":248,"column_start":12,"column_end":15},"name":"new","qualname":"<Validator>::new","value":"pub fn new(ValidationFlags, Capabilities) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new validator instance.\n","sig":null,"attributes":[{"value":"/ Construct a new validator instance.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":977122,"byte_end":977161,"line_start":247,"line_end":247,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":977674,"byte_end":977679,"line_start":263,"line_end":263,"column_start":12,"column_end":17},"name":"reset","qualname":"<Validator>::reset","value":"pub fn reset(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reset the validator internals\n","sig":null,"attributes":[{"value":"/ Reset the validator internals","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":977629,"byte_end":977662,"line_start":262,"line_end":262,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":979526,"byte_end":979534,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"validate","qualname":"<Validator>::validate","value":"pub fn validate(&mut Self, &crate::Module)\n-> Result<ModuleInfo, WithSpan<ValidationError>>","parent":null,"children":[],"decl_id":null,"docs":" Check the given module to be valid.\n","sig":null,"attributes":[{"value":"/ Check the given module to be valid.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":979475,"byte_end":979514,"line_start":313,"line_end":313,"column_start":5,"column_end":44}}]},{"kind":"Const","id":{"krate":0,"index":3172},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9710,"byte_end":9720,"line_start":223,"line_end":223,"column_start":11,"column_end":21},"name":"BOOL_WIDTH","qualname":"::BOOL_WIDTH","value":"Bytes","parent":null,"children":[],"decl_id":null,"docs":" Width of a boolean type, in bytes.\n","sig":null,"attributes":[{"value":"/ Width of a boolean type, in bytes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9661,"byte_end":9699,"line_start":222,"line_end":222,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":3173},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9805,"byte_end":9816,"line_start":226,"line_end":226,"column_start":10,"column_end":21},"name":"FastHashMap","qualname":"::FastHashMap","value":"rustc_hash::FxHashMap<K, T>","parent":null,"children":[],"decl_id":null,"docs":" Hash map that is faster but not resilient to DoS attacks.\n","sig":null,"attributes":[{"value":"/ Hash map that is faster but not resilient to DoS attacks.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9734,"byte_end":9795,"line_start":225,"line_end":225,"column_start":1,"column_end":62}}]},{"kind":"Type","id":{"krate":0,"index":3176},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9925,"byte_end":9936,"line_start":228,"line_end":228,"column_start":10,"column_end":21},"name":"FastHashSet","qualname":"::FastHashSet","value":"rustc_hash::FxHashSet<K>","parent":null,"children":[],"decl_id":null,"docs":" Hash set that is faster but not resilient to DoS attacks.\n","sig":null,"attributes":[{"value":"/ Hash set that is faster but not resilient to DoS attacks.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9854,"byte_end":9915,"line_start":227,"line_end":227,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":6368},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":11149,"byte_end":11163,"line_start":254,"line_end":254,"column_start":12,"column_end":26},"name":"EarlyDepthTest","qualname":"::EarlyDepthTest","value":"EarlyDepthTest {  }","parent":null,"children":[{"krate":0,"index":6369}],"decl_id":null,"docs":" Early fragment tests.","sig":null,"attributes":[{"value":"/ Early fragment tests.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10105,"byte_end":10130,"line_start":233,"line_end":233,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10131,"byte_end":10134,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ In a standard situation, if a driver determines that it is possible to switch on early depth test, it will.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10135,"byte_end":10246,"line_start":235,"line_end":235,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10247,"byte_end":10250,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ Typical situations when early depth test is switched off:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10251,"byte_end":10312,"line_start":237,"line_end":237,"column_start":1,"column_end":62}},{"value":"/   - Calling `discard` in a shader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10313,"byte_end":10351,"line_start":238,"line_end":238,"column_start":1,"column_end":39}},{"value":"/   - Writing to the depth buffer, unless ConservativeDepth is enabled.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10352,"byte_end":10425,"line_start":239,"line_end":239,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10426,"byte_end":10429,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ To use in a shader:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10430,"byte_end":10453,"line_start":241,"line_end":241,"column_start":1,"column_end":24}},{"value":"/   - GLSL: `layout(early_fragment_tests) in;`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10454,"byte_end":10502,"line_start":242,"line_end":242,"column_start":1,"column_end":49}},{"value":"/   - HLSL: `Attribute earlydepthstencil`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10503,"byte_end":10546,"line_start":243,"line_end":243,"column_start":1,"column_end":44}},{"value":"/   - SPIR-V: `ExecutionMode EarlyFragmentTests`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10547,"byte_end":10597,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10598,"byte_end":10601,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ For more, see:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10602,"byte_end":10620,"line_start":246,"line_end":246,"column_start":1,"column_end":19}},{"value":"/   - <https://www.khronos.org/opengl/wiki/Early_Fragment_Test#Explicit_specification>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10621,"byte_end":10709,"line_start":247,"line_end":247,"column_start":1,"column_end":89}},{"value":"/   - <https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/sm5-attributes-earlydepthstencil>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10710,"byte_end":10812,"line_start":248,"line_end":248,"column_start":1,"column_end":103}},{"value":"/   - <https://www.khronos.org/registry/SPIR-V/specs/unified1/SPIRV.html#Execution_Mode>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":10813,"byte_end":10903,"line_start":249,"line_end":249,"column_start":1,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6390},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":12260,"byte_end":12272,"line_start":275,"line_end":275,"column_start":5,"column_end":17},"name":"GreaterEqual","qualname":"::ConservativeDepth::GreaterEqual","value":"ConservativeDepth::GreaterEqual","parent":{"krate":0,"index":6389},"children":[],"decl_id":null,"docs":" Shader may rewrite depth only with a value greater than calculated.\n","sig":null,"attributes":[{"value":"/ Shader may rewrite depth only with a value greater than calculated.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":12184,"byte_end":12255,"line_start":274,"line_end":274,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6392},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":12384,"byte_end":12393,"line_start":278,"line_end":278,"column_start":5,"column_end":14},"name":"LessEqual","qualname":"::ConservativeDepth::LessEqual","value":"ConservativeDepth::LessEqual","parent":{"krate":0,"index":6389},"children":[],"decl_id":null,"docs":" Shader may rewrite depth smaller than one that would have been written without the modification.\n","sig":null,"attributes":[{"value":"/ Shader may rewrite depth smaller than one that would have been written without the modification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":12279,"byte_end":12379,"line_start":277,"line_end":277,"column_start":5,"column_end":105}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6394},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":12444,"byte_end":12453,"line_start":281,"line_end":281,"column_start":5,"column_end":14},"name":"Unchanged","qualname":"::ConservativeDepth::Unchanged","value":"ConservativeDepth::Unchanged","parent":{"krate":0,"index":6389},"children":[],"decl_id":null,"docs":" Shader may not rewrite depth value.\n","sig":null,"attributes":[{"value":"/ Shader may not rewrite depth value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":12400,"byte_end":12439,"line_start":280,"line_end":280,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":6389},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":12160,"byte_end":12177,"line_start":273,"line_end":273,"column_start":10,"column_end":27},"name":"ConservativeDepth","qualname":"::ConservativeDepth","value":"pub enum ConservativeDepth { GreaterEqual, LessEqual, Unchanged, }","parent":null,"children":[{"krate":0,"index":6390},{"krate":0,"index":6392},{"krate":0,"index":6394}],"decl_id":null,"docs":" Enables adjusting depth without disabling early Z.","sig":null,"attributes":[{"value":"/ Enables adjusting depth without disabling early Z.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":11213,"byte_end":11267,"line_start":257,"line_end":257,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":11268,"byte_end":11271,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ To use in a shader:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":11272,"byte_end":11295,"line_start":259,"line_end":259,"column_start":1,"column_end":24}},{"value":"/   - GLSL: `layout (depth_<greater/less/unchanged/any>) out float gl_FragDepth;`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":11296,"byte_end":11379,"line_start":260,"line_end":260,"column_start":1,"column_end":84}},{"value":"/     - `depth_any` option behaves as if the layout qualifier was not present.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":11380,"byte_end":11460,"line_start":261,"line_end":261,"column_start":1,"column_end":81}},{"value":"/   - HLSL: `SV_DepthGreaterEqual`/`SV_DepthLessEqual`/`SV_Depth`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":11461,"byte_end":11528,"line_start":262,"line_end":262,"column_start":1,"column_end":68}},{"value":"/   - SPIR-V: `ExecutionMode Depth<Greater/Less/Unchanged>`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":11529,"byte_end":11590,"line_start":263,"line_end":263,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":11591,"byte_end":11594,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ For more, see:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":11595,"byte_end":11613,"line_start":265,"line_end":265,"column_start":1,"column_end":19}},{"value":"/   - <https://www.khronos.org/registry/OpenGL/extensions/ARB/ARB_conservative_depth.txt>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":11614,"byte_end":11705,"line_start":266,"line_end":266,"column_start":1,"column_end":92}},{"value":"/   - <https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-semantics#system-value-semantics>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":11706,"byte_end":11825,"line_start":267,"line_end":267,"column_start":1,"column_end":120}},{"value":"/   - <https://www.khronos.org/registry/SPIR-V/specs/unified1/SPIRV.html#Execution_Mode>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":11826,"byte_end":11916,"line_start":268,"line_end":268,"column_start":1,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6415},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":12812,"byte_end":12818,"line_start":291,"line_end":291,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::ShaderStage::Vertex","value":"ShaderStage::Vertex","parent":{"krate":0,"index":6414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6417},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":12824,"byte_end":12832,"line_start":292,"line_end":292,"column_start":5,"column_end":13},"name":"Fragment","qualname":"::ShaderStage::Fragment","value":"ShaderStage::Fragment","parent":{"krate":0,"index":6414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6419},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":12838,"byte_end":12845,"line_start":293,"line_end":293,"column_start":5,"column_end":12},"name":"Compute","qualname":"::ShaderStage::Compute","value":"ShaderStage::Compute","parent":{"krate":0,"index":6414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6414},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":12794,"byte_end":12805,"line_start":290,"line_end":290,"column_start":10,"column_end":21},"name":"ShaderStage","qualname":"::ShaderStage","value":"pub enum ShaderStage { Vertex, Fragment, Compute, }","parent":null,"children":[{"krate":0,"index":6415},{"krate":0,"index":6417},{"krate":0,"index":6419}],"decl_id":null,"docs":" Stage of the programmable pipeline.\n","sig":null,"attributes":[{"value":"/ Stage of the programmable pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":12458,"byte_end":12497,"line_start":284,"line_end":284,"column_start":1,"column_end":40}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":12732,"byte_end":12754,"line_start":289,"line_end":289,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6440},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13172,"byte_end":13180,"line_start":303,"line_end":303,"column_start":5,"column_end":13},"name":"Function","qualname":"::AddressSpace::Function","value":"AddressSpace::Function","parent":{"krate":0,"index":6439},"children":[],"decl_id":null,"docs":" Function locals.\n","sig":null,"attributes":[{"value":"/ Function locals.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13147,"byte_end":13167,"line_start":302,"line_end":302,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6442},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13233,"byte_end":13240,"line_start":305,"line_end":305,"column_start":5,"column_end":12},"name":"Private","qualname":"::AddressSpace::Private","value":"AddressSpace::Private","parent":{"krate":0,"index":6439},"children":[],"decl_id":null,"docs":" Private data, per invocation, mutable.\n","sig":null,"attributes":[{"value":"/ Private data, per invocation, mutable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13186,"byte_end":13228,"line_start":304,"line_end":304,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6444},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13286,"byte_end":13295,"line_start":307,"line_end":307,"column_start":5,"column_end":14},"name":"WorkGroup","qualname":"::AddressSpace::WorkGroup","value":"AddressSpace::WorkGroup","parent":{"krate":0,"index":6439},"children":[],"decl_id":null,"docs":" Workgroup shared data, mutable.\n","sig":null,"attributes":[{"value":"/ Workgroup shared data, mutable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13246,"byte_end":13281,"line_start":306,"line_end":306,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6446},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13330,"byte_end":13337,"line_start":309,"line_end":309,"column_start":5,"column_end":12},"name":"Uniform","qualname":"::AddressSpace::Uniform","value":"AddressSpace::Uniform","parent":{"krate":0,"index":6439},"children":[],"decl_id":null,"docs":" Uniform buffer data.\n","sig":null,"attributes":[{"value":"/ Uniform buffer data.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13301,"byte_end":13325,"line_start":308,"line_end":308,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":6448},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13393,"byte_end":13400,"line_start":311,"line_end":311,"column_start":5,"column_end":12},"name":"Storage","qualname":"::AddressSpace::Storage","value":"AddressSpace::Storage { access }","parent":{"krate":0,"index":6439},"children":[],"decl_id":null,"docs":" Storage buffer data, potentially mutable.\n","sig":null,"attributes":[{"value":"/ Storage buffer data, potentially mutable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13343,"byte_end":13388,"line_start":310,"line_end":310,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6450},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13485,"byte_end":13491,"line_start":313,"line_end":313,"column_start":5,"column_end":11},"name":"Handle","qualname":"::AddressSpace::Handle","value":"AddressSpace::Handle","parent":{"krate":0,"index":6439},"children":[],"decl_id":null,"docs":" Opaque handles, such as samplers and images.\n","sig":null,"attributes":[{"value":"/ Opaque handles, such as samplers and images.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13432,"byte_end":13480,"line_start":312,"line_end":312,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6452},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13521,"byte_end":13533,"line_start":315,"line_end":315,"column_start":5,"column_end":17},"name":"PushConstant","qualname":"::AddressSpace::PushConstant","value":"AddressSpace::PushConstant","parent":{"krate":0,"index":6439},"children":[],"decl_id":null,"docs":" Push constants.\n","sig":null,"attributes":[{"value":"/ Push constants.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13497,"byte_end":13516,"line_start":314,"line_end":314,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":6439},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13128,"byte_end":13140,"line_start":301,"line_end":301,"column_start":10,"column_end":22},"name":"AddressSpace","qualname":"::AddressSpace","value":"pub enum AddressSpace {\n    Function,\n    Private,\n    WorkGroup,\n    Uniform,\n    Storage {\n            access: StorageAccess,\n        },\n    Handle,\n    PushConstant,\n}","parent":null,"children":[{"krate":0,"index":6440},{"krate":0,"index":6442},{"krate":0,"index":6444},{"krate":0,"index":6446},{"krate":0,"index":6448},{"krate":0,"index":6450},{"krate":0,"index":6452}],"decl_id":null,"docs":" Addressing space of variables.\n","sig":null,"attributes":[{"value":"/ Addressing space of variables.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":12850,"byte_end":12884,"line_start":296,"line_end":296,"column_start":1,"column_end":35}}]},{"kind":"StructVariant","id":{"krate":0,"index":6474},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13828,"byte_end":13836,"line_start":324,"line_end":324,"column_start":5,"column_end":13},"name":"Position","qualname":"::BuiltIn::Position","value":"BuiltIn::Position { invariant }","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6476},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13862,"byte_end":13871,"line_start":325,"line_end":325,"column_start":5,"column_end":14},"name":"ViewIndex","qualname":"::BuiltIn::ViewIndex","value":"BuiltIn::ViewIndex","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6478},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13891,"byte_end":13903,"line_start":327,"line_end":327,"column_start":5,"column_end":17},"name":"BaseInstance","qualname":"::BuiltIn::BaseInstance","value":"BuiltIn::BaseInstance","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6480},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13909,"byte_end":13919,"line_start":328,"line_end":328,"column_start":5,"column_end":15},"name":"BaseVertex","qualname":"::BuiltIn::BaseVertex","value":"BuiltIn::BaseVertex","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6482},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13925,"byte_end":13937,"line_start":329,"line_end":329,"column_start":5,"column_end":17},"name":"ClipDistance","qualname":"::BuiltIn::ClipDistance","value":"BuiltIn::ClipDistance","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6484},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13943,"byte_end":13955,"line_start":330,"line_end":330,"column_start":5,"column_end":17},"name":"CullDistance","qualname":"::BuiltIn::CullDistance","value":"BuiltIn::CullDistance","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6486},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13961,"byte_end":13974,"line_start":331,"line_end":331,"column_start":5,"column_end":18},"name":"InstanceIndex","qualname":"::BuiltIn::InstanceIndex","value":"BuiltIn::InstanceIndex","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6488},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13980,"byte_end":13989,"line_start":332,"line_end":332,"column_start":5,"column_end":14},"name":"PointSize","qualname":"::BuiltIn::PointSize","value":"BuiltIn::PointSize","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6490},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13995,"byte_end":14006,"line_start":333,"line_end":333,"column_start":5,"column_end":16},"name":"VertexIndex","qualname":"::BuiltIn::VertexIndex","value":"BuiltIn::VertexIndex","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6492},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14028,"byte_end":14037,"line_start":335,"line_end":335,"column_start":5,"column_end":14},"name":"FragDepth","qualname":"::BuiltIn::FragDepth","value":"BuiltIn::FragDepth","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6494},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14043,"byte_end":14054,"line_start":336,"line_end":336,"column_start":5,"column_end":16},"name":"FrontFacing","qualname":"::BuiltIn::FrontFacing","value":"BuiltIn::FrontFacing","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6496},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14060,"byte_end":14074,"line_start":337,"line_end":337,"column_start":5,"column_end":19},"name":"PrimitiveIndex","qualname":"::BuiltIn::PrimitiveIndex","value":"BuiltIn::PrimitiveIndex","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6498},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14080,"byte_end":14091,"line_start":338,"line_end":338,"column_start":5,"column_end":16},"name":"SampleIndex","qualname":"::BuiltIn::SampleIndex","value":"BuiltIn::SampleIndex","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6500},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14097,"byte_end":14107,"line_start":339,"line_end":339,"column_start":5,"column_end":15},"name":"SampleMask","qualname":"::BuiltIn::SampleMask","value":"BuiltIn::SampleMask","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6502},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14128,"byte_end":14146,"line_start":341,"line_end":341,"column_start":5,"column_end":23},"name":"GlobalInvocationId","qualname":"::BuiltIn::GlobalInvocationId","value":"BuiltIn::GlobalInvocationId","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6504},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14152,"byte_end":14169,"line_start":342,"line_end":342,"column_start":5,"column_end":22},"name":"LocalInvocationId","qualname":"::BuiltIn::LocalInvocationId","value":"BuiltIn::LocalInvocationId","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6506},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14175,"byte_end":14195,"line_start":343,"line_end":343,"column_start":5,"column_end":25},"name":"LocalInvocationIndex","qualname":"::BuiltIn::LocalInvocationIndex","value":"BuiltIn::LocalInvocationIndex","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6508},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14201,"byte_end":14212,"line_start":344,"line_end":344,"column_start":5,"column_end":16},"name":"WorkGroupId","qualname":"::BuiltIn::WorkGroupId","value":"BuiltIn::WorkGroupId","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6510},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14218,"byte_end":14231,"line_start":345,"line_end":345,"column_start":5,"column_end":18},"name":"WorkGroupSize","qualname":"::BuiltIn::WorkGroupSize","value":"BuiltIn::WorkGroupSize","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6512},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14237,"byte_end":14250,"line_start":346,"line_end":346,"column_start":5,"column_end":18},"name":"NumWorkGroups","qualname":"::BuiltIn::NumWorkGroups","value":"BuiltIn::NumWorkGroups","parent":{"krate":0,"index":6473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6473},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13814,"byte_end":13821,"line_start":323,"line_end":323,"column_start":10,"column_end":17},"name":"BuiltIn","qualname":"::BuiltIn","value":"pub enum BuiltIn {\n    Position {\n            invariant: bool,\n        },\n    ViewIndex,\n    BaseInstance,\n    BaseVertex,\n    ClipDistance,\n    CullDistance,\n    InstanceIndex,\n    PointSize,\n    VertexIndex,\n    FragDepth,\n    FrontFacing,\n    PrimitiveIndex,\n    SampleIndex,\n    SampleMask,\n    GlobalInvocationId,\n    LocalInvocationId,\n    LocalInvocationIndex,\n    WorkGroupId,\n    WorkGroupSize,\n    NumWorkGroups,\n}","parent":null,"children":[{"krate":0,"index":6474},{"krate":0,"index":6476},{"krate":0,"index":6478},{"krate":0,"index":6480},{"krate":0,"index":6482},{"krate":0,"index":6484},{"krate":0,"index":6486},{"krate":0,"index":6488},{"krate":0,"index":6490},{"krate":0,"index":6492},{"krate":0,"index":6494},{"krate":0,"index":6496},{"krate":0,"index":6498},{"krate":0,"index":6500},{"krate":0,"index":6502},{"krate":0,"index":6504},{"krate":0,"index":6506},{"krate":0,"index":6508},{"krate":0,"index":6510},{"krate":0,"index":6512}],"decl_id":null,"docs":" Built-in inputs and outputs.\n","sig":null,"attributes":[{"value":"/ Built-in inputs and outputs.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":13538,"byte_end":13570,"line_start":318,"line_end":318,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":3179},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14296,"byte_end":14301,"line_start":350,"line_end":350,"column_start":10,"column_end":15},"name":"Bytes","qualname":"::Bytes","value":"u8","parent":null,"children":[],"decl_id":null,"docs":" Number of bytes per scalar.\n","sig":null,"attributes":[{"value":"/ Number of bytes per scalar.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14255,"byte_end":14286,"line_start":349,"line_end":349,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6534},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14637,"byte_end":14639,"line_start":360,"line_end":360,"column_start":5,"column_end":7},"name":"Bi","qualname":"::VectorSize::Bi","value":"VectorSize::Bi","parent":{"krate":0,"index":6533},"children":[],"decl_id":null,"docs":" 2D vector\n","sig":null,"attributes":[{"value":"/ 2D vector","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14619,"byte_end":14632,"line_start":359,"line_end":359,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6537},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14667,"byte_end":14670,"line_start":362,"line_end":362,"column_start":5,"column_end":8},"name":"Tri","qualname":"::VectorSize::Tri","value":"VectorSize::Tri","parent":{"krate":0,"index":6533},"children":[],"decl_id":null,"docs":" 3D vector\n","sig":null,"attributes":[{"value":"/ 3D vector","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14649,"byte_end":14662,"line_start":361,"line_end":361,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6540},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14698,"byte_end":14702,"line_start":364,"line_end":364,"column_start":5,"column_end":9},"name":"Quad","qualname":"::VectorSize::Quad","value":"VectorSize::Quad","parent":{"krate":0,"index":6533},"children":[],"decl_id":null,"docs":" 4D vector\n","sig":null,"attributes":[{"value":"/ 4D vector","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14680,"byte_end":14693,"line_start":363,"line_end":363,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":6533},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14602,"byte_end":14612,"line_start":358,"line_end":358,"column_start":10,"column_end":20},"name":"VectorSize","qualname":"::VectorSize","value":"pub enum VectorSize { Bi = , Tri = , Quad = , }","parent":null,"children":[{"krate":0,"index":6534},{"krate":0,"index":6537},{"krate":0,"index":6540}],"decl_id":null,"docs":" Number of components in a vector.\n","sig":null,"attributes":[{"value":"/ Number of components in a vector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14309,"byte_end":14346,"line_start":352,"line_end":352,"column_start":1,"column_end":38}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14347,"byte_end":14358,"line_start":353,"line_end":353,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6562},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15045,"byte_end":15049,"line_start":375,"line_end":375,"column_start":5,"column_end":9},"name":"Sint","qualname":"::ScalarKind::Sint","value":"ScalarKind::Sint","parent":{"krate":0,"index":6561},"children":[],"decl_id":null,"docs":" Signed integer type.\n","sig":null,"attributes":[{"value":"/ Signed integer type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15016,"byte_end":15040,"line_start":374,"line_end":374,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6564},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15086,"byte_end":15090,"line_start":377,"line_end":377,"column_start":5,"column_end":9},"name":"Uint","qualname":"::ScalarKind::Uint","value":"ScalarKind::Uint","parent":{"krate":0,"index":6561},"children":[],"decl_id":null,"docs":" Unsigned integer type.\n","sig":null,"attributes":[{"value":"/ Unsigned integer type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15055,"byte_end":15081,"line_start":376,"line_end":376,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6566},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15125,"byte_end":15130,"line_start":379,"line_end":379,"column_start":5,"column_end":10},"name":"Float","qualname":"::ScalarKind::Float","value":"ScalarKind::Float","parent":{"krate":0,"index":6561},"children":[],"decl_id":null,"docs":" Floating point type.\n","sig":null,"attributes":[{"value":"/ Floating point type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15096,"byte_end":15120,"line_start":378,"line_end":378,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6568},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15158,"byte_end":15162,"line_start":381,"line_end":381,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ScalarKind::Bool","value":"ScalarKind::Bool","parent":{"krate":0,"index":6561},"children":[],"decl_id":null,"docs":" Boolean type.\n","sig":null,"attributes":[{"value":"/ Boolean type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15136,"byte_end":15153,"line_start":380,"line_end":380,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":6561},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14999,"byte_end":15009,"line_start":373,"line_end":373,"column_start":10,"column_end":20},"name":"ScalarKind","qualname":"::ScalarKind","value":"pub enum ScalarKind { Sint, Uint, Float, Bool, }","parent":null,"children":[{"krate":0,"index":6562},{"krate":0,"index":6564},{"krate":0,"index":6566},{"krate":0,"index":6568}],"decl_id":null,"docs":" Primitive type for a scalar.\n","sig":null,"attributes":[{"value":"/ Primitive type for a scalar.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14711,"byte_end":14743,"line_start":367,"line_end":367,"column_start":1,"column_end":33}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":14744,"byte_end":14755,"line_start":368,"line_end":368,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6589},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15496,"byte_end":15504,"line_start":392,"line_end":392,"column_start":5,"column_end":13},"name":"Constant","qualname":"::ArraySize::Constant","value":"ArraySize::Constant(Handle<Constant>)","parent":{"krate":0,"index":6588},"children":[],"decl_id":null,"docs":" The array size is constant.\n","sig":null,"attributes":[{"value":"/ The array size is constant.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15460,"byte_end":15491,"line_start":391,"line_end":391,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6592},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15574,"byte_end":15581,"line_start":394,"line_end":394,"column_start":5,"column_end":12},"name":"Dynamic","qualname":"::ArraySize::Dynamic","value":"ArraySize::Dynamic","parent":{"krate":0,"index":6588},"children":[],"decl_id":null,"docs":" The array size can change at runtime.\n","sig":null,"attributes":[{"value":"/ The array size can change at runtime.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15528,"byte_end":15569,"line_start":393,"line_end":393,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":6588},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15444,"byte_end":15453,"line_start":390,"line_end":390,"column_start":10,"column_end":19},"name":"ArraySize","qualname":"::ArraySize","value":"pub enum ArraySize { Constant(Handle<Constant>), Dynamic, }","parent":null,"children":[{"krate":0,"index":6589},{"krate":0,"index":6592}],"decl_id":null,"docs":" Size of an array.\n","sig":null,"attributes":[{"value":"/ Size of an array.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15167,"byte_end":15188,"line_start":384,"line_end":384,"column_start":1,"column_end":22}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15189,"byte_end":15200,"line_start":385,"line_end":385,"column_start":1,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6614},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16024,"byte_end":16035,"line_start":405,"line_end":405,"column_start":5,"column_end":16},"name":"Perspective","qualname":"::Interpolation::Perspective","value":"Interpolation::Perspective","parent":{"krate":0,"index":6613},"children":[],"decl_id":null,"docs":" The value will be interpolated in a perspective-correct fashion.\n Also known as \"smooth\" in glsl.\n","sig":null,"attributes":[{"value":"/ The value will be interpolated in a perspective-correct fashion.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15911,"byte_end":15979,"line_start":403,"line_end":403,"column_start":5,"column_end":73}},{"value":"/ Also known as \"smooth\" in glsl.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15984,"byte_end":16019,"line_start":404,"line_end":404,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6616},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16181,"byte_end":16187,"line_start":409,"line_end":409,"column_start":5,"column_end":11},"name":"Linear","qualname":"::Interpolation::Linear","value":"Interpolation::Linear","parent":{"krate":0,"index":6613},"children":[],"decl_id":null,"docs":" Indicates that linear, non-perspective, correct\n interpolation must be used.\n Also known as \"no_perspective\" in glsl.\n","sig":null,"attributes":[{"value":"/ Indicates that linear, non-perspective, correct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16041,"byte_end":16092,"line_start":406,"line_end":406,"column_start":5,"column_end":56}},{"value":"/ interpolation must be used.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16097,"byte_end":16128,"line_start":407,"line_end":407,"column_start":5,"column_end":36}},{"value":"/ Also known as \"no_perspective\" in glsl.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16133,"byte_end":16176,"line_start":408,"line_end":408,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6618},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16252,"byte_end":16256,"line_start":411,"line_end":411,"column_start":5,"column_end":9},"name":"Flat","qualname":"::Interpolation::Flat","value":"Interpolation::Flat","parent":{"krate":0,"index":6613},"children":[],"decl_id":null,"docs":" Indicates that no interpolation will be performed.\n","sig":null,"attributes":[{"value":"/ Indicates that no interpolation will be performed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16193,"byte_end":16247,"line_start":410,"line_end":410,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":6613},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15891,"byte_end":15904,"line_start":402,"line_end":402,"column_start":10,"column_end":23},"name":"Interpolation","qualname":"::Interpolation","value":"pub enum Interpolation { Perspective, Linear, Flat, }","parent":null,"children":[{"krate":0,"index":6614},{"krate":0,"index":6616},{"krate":0,"index":6618}],"decl_id":null,"docs":" The interpolation qualifier of a binding or struct field.\n","sig":null,"attributes":[{"value":"/ The interpolation qualifier of a binding or struct field.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":15586,"byte_end":15647,"line_start":397,"line_end":397,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6639},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16635,"byte_end":16641,"line_start":421,"line_end":421,"column_start":5,"column_end":11},"name":"Center","qualname":"::Sampling::Center","value":"Sampling::Center","parent":{"krate":0,"index":6638},"children":[],"decl_id":null,"docs":" Interpolate the value at the center of the pixel.\n","sig":null,"attributes":[{"value":"/ Interpolate the value at the center of the pixel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16577,"byte_end":16630,"line_start":420,"line_end":420,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6641},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16859,"byte_end":16867,"line_start":426,"line_end":426,"column_start":5,"column_end":13},"name":"Centroid","qualname":"::Sampling::Centroid","value":"Sampling::Centroid","parent":{"krate":0,"index":6638},"children":[],"decl_id":null,"docs":" Interpolate the value at a point that lies within all samples covered by\n the fragment within the current primitive. In multisampling, use a\n single value for all samples in the primitive.\n","sig":null,"attributes":[{"value":"/ Interpolate the value at a point that lies within all samples covered by","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16648,"byte_end":16724,"line_start":423,"line_end":423,"column_start":5,"column_end":81}},{"value":"/ the fragment within the current primitive. In multisampling, use a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16729,"byte_end":16799,"line_start":424,"line_end":424,"column_start":5,"column_end":75}},{"value":"/ single value for all samples in the primitive.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16804,"byte_end":16854,"line_start":425,"line_end":425,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6643},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16999,"byte_end":17005,"line_start":430,"line_end":430,"column_start":5,"column_end":11},"name":"Sample","qualname":"::Sampling::Sample","value":"Sampling::Sample","parent":{"krate":0,"index":6638},"children":[],"decl_id":null,"docs":" Interpolate the value at each sample location. In multisampling, invoke\n the fragment shader once per sample.\n","sig":null,"attributes":[{"value":"/ Interpolate the value at each sample location. In multisampling, invoke","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16874,"byte_end":16949,"line_start":428,"line_end":428,"column_start":5,"column_end":80}},{"value":"/ the fragment shader once per sample.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16954,"byte_end":16994,"line_start":429,"line_end":429,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":6638},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16562,"byte_end":16570,"line_start":419,"line_end":419,"column_start":10,"column_end":18},"name":"Sampling","qualname":"::Sampling","value":"pub enum Sampling { Center, Centroid, Sample, }","parent":null,"children":[{"krate":0,"index":6639},{"krate":0,"index":6641},{"krate":0,"index":6643}],"decl_id":null,"docs":" The sampling qualifiers of a binding or struct field.\n","sig":null,"attributes":[{"value":"/ The sampling qualifiers of a binding or struct field.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":16261,"byte_end":16318,"line_start":414,"line_end":414,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":6663},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17348,"byte_end":17360,"line_start":439,"line_end":439,"column_start":12,"column_end":24},"name":"StructMember","qualname":"::StructMember","value":"StructMember { name, ty, binding, offset }","parent":null,"children":[{"krate":0,"index":6664},{"krate":0,"index":6665},{"krate":0,"index":6666},{"krate":0,"index":6667}],"decl_id":null,"docs":" Member of a user-defined structure.\n","sig":null,"attributes":[{"value":"/ Member of a user-defined structure.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17010,"byte_end":17049,"line_start":433,"line_end":433,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6664},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17371,"byte_end":17375,"line_start":440,"line_end":440,"column_start":9,"column_end":13},"name":"name","qualname":"::StructMember::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6665},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17428,"byte_end":17430,"line_start":442,"line_end":442,"column_start":9,"column_end":11},"name":"ty","qualname":"::StructMember::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":6663},"children":[],"decl_id":null,"docs":" Type of the field.\n","sig":null,"attributes":[{"value":"/ Type of the field.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17397,"byte_end":17419,"line_start":441,"line_end":441,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":6666},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17500,"byte_end":17507,"line_start":444,"line_end":444,"column_start":9,"column_end":16},"name":"binding","qualname":"::StructMember::binding","value":"std::option::Option<Binding>","parent":{"krate":0,"index":6663},"children":[],"decl_id":null,"docs":" For I/O structs, defines the binding.\n","sig":null,"attributes":[{"value":"/ For I/O structs, defines the binding.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17450,"byte_end":17491,"line_start":443,"line_end":443,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":6667},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17585,"byte_end":17591,"line_start":446,"line_end":446,"column_start":9,"column_end":15},"name":"offset","qualname":"::StructMember::offset","value":"u32","parent":{"krate":0,"index":6663},"children":[],"decl_id":null,"docs":" Offset from the beginning from the struct.\n","sig":null,"attributes":[{"value":"/ Offset from the beginning from the struct.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17530,"byte_end":17576,"line_start":445,"line_end":445,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6683},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17925,"byte_end":17927,"line_start":456,"line_end":456,"column_start":5,"column_end":7},"name":"D1","qualname":"::ImageDimension::D1","value":"ImageDimension::D1","parent":{"krate":0,"index":6682},"children":[],"decl_id":null,"docs":" 1D image\n","sig":null,"attributes":[{"value":"/ 1D image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17908,"byte_end":17920,"line_start":455,"line_end":455,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6685},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17950,"byte_end":17952,"line_start":458,"line_end":458,"column_start":5,"column_end":7},"name":"D2","qualname":"::ImageDimension::D2","value":"ImageDimension::D2","parent":{"krate":0,"index":6682},"children":[],"decl_id":null,"docs":" 2D image\n","sig":null,"attributes":[{"value":"/ 2D image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17933,"byte_end":17945,"line_start":457,"line_end":457,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6687},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17975,"byte_end":17977,"line_start":460,"line_end":460,"column_start":5,"column_end":7},"name":"D3","qualname":"::ImageDimension::D3","value":"ImageDimension::D3","parent":{"krate":0,"index":6682},"children":[],"decl_id":null,"docs":" 3D image\n","sig":null,"attributes":[{"value":"/ 3D image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17958,"byte_end":17970,"line_start":459,"line_end":459,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6689},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18000,"byte_end":18004,"line_start":462,"line_end":462,"column_start":5,"column_end":9},"name":"Cube","qualname":"::ImageDimension::Cube","value":"ImageDimension::Cube","parent":{"krate":0,"index":6682},"children":[],"decl_id":null,"docs":" Cube map\n","sig":null,"attributes":[{"value":"/ Cube map","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17983,"byte_end":17995,"line_start":461,"line_end":461,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":6682},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17887,"byte_end":17901,"line_start":454,"line_end":454,"column_start":10,"column_end":24},"name":"ImageDimension","qualname":"::ImageDimension","value":"pub enum ImageDimension { D1, D2, D3, Cube, }","parent":null,"children":[{"krate":0,"index":6683},{"krate":0,"index":6685},{"krate":0,"index":6687},{"krate":0,"index":6689}],"decl_id":null,"docs":" The number of dimensions an image has.\n","sig":null,"attributes":[{"value":"/ The number of dimensions an image has.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":17601,"byte_end":17643,"line_start":449,"line_end":449,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":6711},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18282,"byte_end":18295,"line_start":471,"line_end":471,"column_start":16,"column_end":29},"name":"StorageAccess","qualname":"::StorageAccess","value":"StorageAccess {  }","parent":null,"children":[{"krate":0,"index":6712}],"decl_id":null,"docs":" Flags describing an image.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6745},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18375,"byte_end":18379,"line_start":473,"line_end":473,"column_start":15,"column_end":19},"name":"LOAD","qualname":"::StorageAccess::LOAD","value":"Self","parent":{"krate":0,"index":6744},"children":[],"decl_id":null,"docs":" Storage can be used as a source for load ops.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":6746},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18460,"byte_end":18465,"line_start":475,"line_end":475,"column_start":15,"column_end":20},"name":"STORE","qualname":"::StorageAccess::STORE","value":"Self","parent":{"krate":0,"index":6744},"children":[],"decl_id":null,"docs":" Storage can be used as a target for store ops.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6804},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18792,"byte_end":18799,"line_start":486,"line_end":486,"column_start":5,"column_end":12},"name":"R8Unorm","qualname":"::StorageFormat::R8Unorm","value":"StorageFormat::R8Unorm","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6806},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18805,"byte_end":18812,"line_start":487,"line_end":487,"column_start":5,"column_end":12},"name":"R8Snorm","qualname":"::StorageFormat::R8Snorm","value":"StorageFormat::R8Snorm","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6808},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18818,"byte_end":18824,"line_start":488,"line_end":488,"column_start":5,"column_end":11},"name":"R8Uint","qualname":"::StorageFormat::R8Uint","value":"StorageFormat::R8Uint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6810},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18830,"byte_end":18836,"line_start":489,"line_end":489,"column_start":5,"column_end":11},"name":"R8Sint","qualname":"::StorageFormat::R8Sint","value":"StorageFormat::R8Sint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6812},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18865,"byte_end":18872,"line_start":492,"line_end":492,"column_start":5,"column_end":12},"name":"R16Uint","qualname":"::StorageFormat::R16Uint","value":"StorageFormat::R16Uint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6814},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18878,"byte_end":18885,"line_start":493,"line_end":493,"column_start":5,"column_end":12},"name":"R16Sint","qualname":"::StorageFormat::R16Sint","value":"StorageFormat::R16Sint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6816},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18891,"byte_end":18899,"line_start":494,"line_end":494,"column_start":5,"column_end":13},"name":"R16Float","qualname":"::StorageFormat::R16Float","value":"StorageFormat::R16Float","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6818},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18905,"byte_end":18913,"line_start":495,"line_end":495,"column_start":5,"column_end":13},"name":"Rg8Unorm","qualname":"::StorageFormat::Rg8Unorm","value":"StorageFormat::Rg8Unorm","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6820},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18919,"byte_end":18927,"line_start":496,"line_end":496,"column_start":5,"column_end":13},"name":"Rg8Snorm","qualname":"::StorageFormat::Rg8Snorm","value":"StorageFormat::Rg8Snorm","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6822},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18933,"byte_end":18940,"line_start":497,"line_end":497,"column_start":5,"column_end":12},"name":"Rg8Uint","qualname":"::StorageFormat::Rg8Uint","value":"StorageFormat::Rg8Uint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6824},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18946,"byte_end":18953,"line_start":498,"line_end":498,"column_start":5,"column_end":12},"name":"Rg8Sint","qualname":"::StorageFormat::Rg8Sint","value":"StorageFormat::Rg8Sint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6826},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18982,"byte_end":18989,"line_start":501,"line_end":501,"column_start":5,"column_end":12},"name":"R32Uint","qualname":"::StorageFormat::R32Uint","value":"StorageFormat::R32Uint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6828},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18995,"byte_end":19002,"line_start":502,"line_end":502,"column_start":5,"column_end":12},"name":"R32Sint","qualname":"::StorageFormat::R32Sint","value":"StorageFormat::R32Sint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6830},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19008,"byte_end":19016,"line_start":503,"line_end":503,"column_start":5,"column_end":13},"name":"R32Float","qualname":"::StorageFormat::R32Float","value":"StorageFormat::R32Float","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6832},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19022,"byte_end":19030,"line_start":504,"line_end":504,"column_start":5,"column_end":13},"name":"Rg16Uint","qualname":"::StorageFormat::Rg16Uint","value":"StorageFormat::Rg16Uint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6834},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19036,"byte_end":19044,"line_start":505,"line_end":505,"column_start":5,"column_end":13},"name":"Rg16Sint","qualname":"::StorageFormat::Rg16Sint","value":"StorageFormat::Rg16Sint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6836},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19050,"byte_end":19059,"line_start":506,"line_end":506,"column_start":5,"column_end":14},"name":"Rg16Float","qualname":"::StorageFormat::Rg16Float","value":"StorageFormat::Rg16Float","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6838},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19065,"byte_end":19075,"line_start":507,"line_end":507,"column_start":5,"column_end":15},"name":"Rgba8Unorm","qualname":"::StorageFormat::Rgba8Unorm","value":"StorageFormat::Rgba8Unorm","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6840},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19081,"byte_end":19091,"line_start":508,"line_end":508,"column_start":5,"column_end":15},"name":"Rgba8Snorm","qualname":"::StorageFormat::Rgba8Snorm","value":"StorageFormat::Rgba8Snorm","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6842},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19097,"byte_end":19106,"line_start":509,"line_end":509,"column_start":5,"column_end":14},"name":"Rgba8Uint","qualname":"::StorageFormat::Rgba8Uint","value":"StorageFormat::Rgba8Uint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6844},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19112,"byte_end":19121,"line_start":510,"line_end":510,"column_start":5,"column_end":14},"name":"Rgba8Sint","qualname":"::StorageFormat::Rgba8Sint","value":"StorageFormat::Rgba8Sint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6846},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19157,"byte_end":19169,"line_start":513,"line_end":513,"column_start":5,"column_end":17},"name":"Rgb10a2Unorm","qualname":"::StorageFormat::Rgb10a2Unorm","value":"StorageFormat::Rgb10a2Unorm","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6848},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19175,"byte_end":19187,"line_start":514,"line_end":514,"column_start":5,"column_end":17},"name":"Rg11b10Float","qualname":"::StorageFormat::Rg11b10Float","value":"StorageFormat::Rg11b10Float","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6850},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19216,"byte_end":19224,"line_start":517,"line_end":517,"column_start":5,"column_end":13},"name":"Rg32Uint","qualname":"::StorageFormat::Rg32Uint","value":"StorageFormat::Rg32Uint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6852},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19230,"byte_end":19238,"line_start":518,"line_end":518,"column_start":5,"column_end":13},"name":"Rg32Sint","qualname":"::StorageFormat::Rg32Sint","value":"StorageFormat::Rg32Sint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6854},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19244,"byte_end":19253,"line_start":519,"line_end":519,"column_start":5,"column_end":14},"name":"Rg32Float","qualname":"::StorageFormat::Rg32Float","value":"StorageFormat::Rg32Float","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6856},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19259,"byte_end":19269,"line_start":520,"line_end":520,"column_start":5,"column_end":15},"name":"Rgba16Uint","qualname":"::StorageFormat::Rgba16Uint","value":"StorageFormat::Rgba16Uint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6858},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19275,"byte_end":19285,"line_start":521,"line_end":521,"column_start":5,"column_end":15},"name":"Rgba16Sint","qualname":"::StorageFormat::Rgba16Sint","value":"StorageFormat::Rgba16Sint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6860},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19291,"byte_end":19302,"line_start":522,"line_end":522,"column_start":5,"column_end":16},"name":"Rgba16Float","qualname":"::StorageFormat::Rgba16Float","value":"StorageFormat::Rgba16Float","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6862},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19332,"byte_end":19342,"line_start":525,"line_end":525,"column_start":5,"column_end":15},"name":"Rgba32Uint","qualname":"::StorageFormat::Rgba32Uint","value":"StorageFormat::Rgba32Uint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6864},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19348,"byte_end":19358,"line_start":526,"line_end":526,"column_start":5,"column_end":15},"name":"Rgba32Sint","qualname":"::StorageFormat::Rgba32Sint","value":"StorageFormat::Rgba32Sint","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6866},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19364,"byte_end":19375,"line_start":527,"line_end":527,"column_start":5,"column_end":16},"name":"Rgba32Float","qualname":"::StorageFormat::Rgba32Float","value":"StorageFormat::Rgba32Float","parent":{"krate":0,"index":6803},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6803},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18751,"byte_end":18764,"line_start":484,"line_end":484,"column_start":10,"column_end":23},"name":"StorageFormat","qualname":"::StorageFormat","value":"pub enum StorageFormat {\n    R8Unorm,\n    R8Snorm,\n    R8Uint,\n    R8Sint,\n    R16Uint,\n    R16Sint,\n    R16Float,\n    Rg8Unorm,\n    Rg8Snorm,\n    Rg8Uint,\n    Rg8Sint,\n    R32Uint,\n    R32Sint,\n    R32Float,\n    Rg16Uint,\n    Rg16Sint,\n    Rg16Float,\n    Rgba8Unorm,\n    Rgba8Snorm,\n    Rgba8Uint,\n    Rgba8Sint,\n    Rgb10a2Unorm,\n    Rg11b10Float,\n    Rg32Uint,\n    Rg32Sint,\n    Rg32Float,\n    Rgba16Uint,\n    Rgba16Sint,\n    Rgba16Float,\n    Rgba32Uint,\n    Rgba32Sint,\n    Rgba32Float,\n}","parent":null,"children":[{"krate":0,"index":6804},{"krate":0,"index":6806},{"krate":0,"index":6808},{"krate":0,"index":6810},{"krate":0,"index":6812},{"krate":0,"index":6814},{"krate":0,"index":6816},{"krate":0,"index":6818},{"krate":0,"index":6820},{"krate":0,"index":6822},{"krate":0,"index":6824},{"krate":0,"index":6826},{"krate":0,"index":6828},{"krate":0,"index":6830},{"krate":0,"index":6832},{"krate":0,"index":6834},{"krate":0,"index":6836},{"krate":0,"index":6838},{"krate":0,"index":6840},{"krate":0,"index":6842},{"krate":0,"index":6844},{"krate":0,"index":6846},{"krate":0,"index":6848},{"krate":0,"index":6850},{"krate":0,"index":6852},{"krate":0,"index":6854},{"krate":0,"index":6856},{"krate":0,"index":6858},{"krate":0,"index":6860},{"krate":0,"index":6862},{"krate":0,"index":6864},{"krate":0,"index":6866}],"decl_id":null,"docs":" Image storage format.\n","sig":null,"attributes":[{"value":"/ Image storage format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":18482,"byte_end":18507,"line_start":479,"line_end":479,"column_start":1,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":6887},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19704,"byte_end":19711,"line_start":537,"line_end":537,"column_start":5,"column_end":12},"name":"Sampled","qualname":"::ImageClass::Sampled","value":"ImageClass::Sampled { kind, multi }","parent":{"krate":0,"index":6886},"children":[],"decl_id":null,"docs":" Regular sampled image.\n","sig":null,"attributes":[{"value":"/ Regular sampled image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19673,"byte_end":19699,"line_start":536,"line_end":536,"column_start":5,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":6890},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":20008,"byte_end":20013,"line_start":547,"line_end":547,"column_start":5,"column_end":10},"name":"Depth","qualname":"::ImageClass::Depth","value":"ImageClass::Depth { multi }","parent":{"krate":0,"index":6886},"children":[],"decl_id":null,"docs":" Depth comparison image.\n","sig":null,"attributes":[{"value":"/ Depth comparison image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19976,"byte_end":20003,"line_start":546,"line_end":546,"column_start":5,"column_end":32}}]},{"kind":"StructVariant","id":{"krate":0,"index":6892},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":20110,"byte_end":20117,"line_start":552,"line_end":552,"column_start":5,"column_end":12},"name":"Storage","qualname":"::ImageClass::Storage","value":"ImageClass::Storage { format, access }","parent":{"krate":0,"index":6886},"children":[],"decl_id":null,"docs":" Storage image.\n","sig":null,"attributes":[{"value":"/ Storage image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":20087,"byte_end":20105,"line_start":551,"line_end":551,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":6886},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19656,"byte_end":19666,"line_start":535,"line_end":535,"column_start":10,"column_end":20},"name":"ImageClass","qualname":"::ImageClass","value":"pub enum ImageClass {\n    Sampled {\n            kind: ScalarKind,\n            multi: bool,\n        },\n    Depth {\n            multi: bool,\n        },\n    Storage {\n            format: StorageFormat,\n            access: StorageAccess,\n        },\n}","parent":null,"children":[{"krate":0,"index":6887},{"krate":0,"index":6890},{"krate":0,"index":6892}],"decl_id":null,"docs":" Sub-class of the image type.\n","sig":null,"attributes":[{"value":"/ Sub-class of the image type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":19380,"byte_end":19412,"line_start":530,"line_end":530,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":6914},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":20447,"byte_end":20451,"line_start":563,"line_end":563,"column_start":12,"column_end":16},"name":"Type","qualname":"::Type","value":"Type { name, inner }","parent":null,"children":[{"krate":0,"index":6915},{"krate":0,"index":6916}],"decl_id":null,"docs":" A data type declared in the module.\n","sig":null,"attributes":[{"value":"/ A data type declared in the module.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":20192,"byte_end":20231,"line_start":558,"line_end":558,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":6915},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":20500,"byte_end":20504,"line_start":565,"line_end":565,"column_start":9,"column_end":13},"name":"name","qualname":"::Type::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6914},"children":[],"decl_id":null,"docs":" The name of the type, if any.\n","sig":null,"attributes":[{"value":"/ The name of the type, if any.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":20458,"byte_end":20491,"line_start":564,"line_end":564,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":6916},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":20592,"byte_end":20597,"line_start":567,"line_end":567,"column_start":9,"column_end":14},"name":"inner","qualname":"::Type::inner","value":"TypeInner","parent":{"krate":0,"index":6914},"children":[],"decl_id":null,"docs":" Inner structure that depends on the kind of the type.\n","sig":null,"attributes":[{"value":"/ Inner structure that depends on the kind of the type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":20526,"byte_end":20583,"line_start":566,"line_end":566,"column_start":5,"column_end":62}}]},{"kind":"StructVariant","id":{"krate":0,"index":6930},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":20962,"byte_end":20968,"line_start":577,"line_end":577,"column_start":5,"column_end":11},"name":"Scalar","qualname":"::TypeInner::Scalar","value":"TypeInner::Scalar { kind, width }","parent":{"krate":0,"index":6929},"children":[],"decl_id":null,"docs":" Number of integral or floating-point kind.\n","sig":null,"attributes":[{"value":"/ Number of integral or floating-point kind.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":20911,"byte_end":20957,"line_start":576,"line_end":576,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":6933},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21036,"byte_end":21042,"line_start":579,"line_end":579,"column_start":5,"column_end":11},"name":"Vector","qualname":"::TypeInner::Vector","value":"TypeInner::Vector { size, kind, width }","parent":{"krate":0,"index":6929},"children":[],"decl_id":null,"docs":" Vector of numbers.\n","sig":null,"attributes":[{"value":"/ Vector of numbers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21009,"byte_end":21031,"line_start":578,"line_end":578,"column_start":5,"column_end":27}}]},{"kind":"StructVariant","id":{"krate":0,"index":6937},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21156,"byte_end":21162,"line_start":585,"line_end":585,"column_start":5,"column_end":11},"name":"Matrix","qualname":"::TypeInner::Matrix","value":"TypeInner::Matrix { columns, rows, width }","parent":{"krate":0,"index":6929},"children":[],"decl_id":null,"docs":" Matrix of floats.\n","sig":null,"attributes":[{"value":"/ Matrix of floats.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21130,"byte_end":21151,"line_start":584,"line_end":584,"column_start":5,"column_end":26}}]},{"kind":"StructVariant","id":{"krate":0,"index":6941},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21276,"byte_end":21282,"line_start":591,"line_end":591,"column_start":5,"column_end":11},"name":"Atomic","qualname":"::TypeInner::Atomic","value":"TypeInner::Atomic { kind, width }","parent":{"krate":0,"index":6929},"children":[],"decl_id":null,"docs":" Atomic scalar.\n","sig":null,"attributes":[{"value":"/ Atomic scalar.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21253,"byte_end":21271,"line_start":590,"line_end":590,"column_start":5,"column_end":23}}]},{"kind":"StructVariant","id":{"krate":0,"index":6944},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22589,"byte_end":22596,"line_start":618,"line_end":618,"column_start":5,"column_end":12},"name":"Pointer","qualname":"::TypeInner::Pointer","value":"TypeInner::Pointer { base, space }","parent":{"krate":0,"index":6929},"children":[],"decl_id":null,"docs":" Pointer to another type.","sig":null,"attributes":[{"value":"/ Pointer to another type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21323,"byte_end":21351,"line_start":592,"line_end":592,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21356,"byte_end":21359,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ Pointers to scalars and vectors should be treated as equivalent to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21364,"byte_end":21434,"line_start":594,"line_end":594,"column_start":5,"column_end":75}},{"value":"/ [`ValuePointer`] types. Use the [`TypeInner::equivalent`] method to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21439,"byte_end":21510,"line_start":595,"line_end":595,"column_start":5,"column_end":76}},{"value":"/ compare types in a way that treats pointers correctly.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21515,"byte_end":21573,"line_start":596,"line_end":596,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21578,"byte_end":21581,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ## Pointers to non-`SIZED` types","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21586,"byte_end":21622,"line_start":598,"line_end":598,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21627,"byte_end":21630,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ The `base` type of a pointer may be a non-[`SIZED`] type like a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21635,"byte_end":21702,"line_start":600,"line_end":600,"column_start":5,"column_end":72}},{"value":"/ dynamically-sized [`Array`], or a [`Struct`] whose last member is a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21707,"byte_end":21778,"line_start":601,"line_end":601,"column_start":5,"column_end":76}},{"value":"/ dynamically sized array. Such pointers occur as the types of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21783,"byte_end":21847,"line_start":602,"line_end":602,"column_start":5,"column_end":69}},{"value":"/ [`GlobalVariable`] or [`AccessIndex`] expressions referring to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21852,"byte_end":21918,"line_start":603,"line_end":603,"column_start":5,"column_end":71}},{"value":"/ dynamically-sized arrays.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21923,"byte_end":21952,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21957,"byte_end":21960,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ However, among pointers to non-`SIZED` types, only pointers to `Struct`s","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":21965,"byte_end":22041,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ are [`DATA`]. Pointers to dynamically sized `Array`s cannot be passed as","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22046,"byte_end":22122,"line_start":607,"line_end":607,"column_start":5,"column_end":81}},{"value":"/ arguments, stored in variables, or held in arrays or structures. Their","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22127,"byte_end":22201,"line_start":608,"line_end":608,"column_start":5,"column_end":79}},{"value":"/ only use is as the types of `AccessIndex` expressions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22206,"byte_end":22264,"line_start":609,"line_end":609,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22269,"byte_end":22272,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ [`SIZED`]: valid::TypeFlags::SIZED","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22277,"byte_end":22315,"line_start":611,"line_end":611,"column_start":5,"column_end":43}},{"value":"/ [`DATA`]: valid::TypeFlags::DATA","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22320,"byte_end":22356,"line_start":612,"line_end":612,"column_start":5,"column_end":41}},{"value":"/ [`Array`]: TypeInner::Array","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22361,"byte_end":22392,"line_start":613,"line_end":613,"column_start":5,"column_end":36}},{"value":"/ [`Struct`]: TypeInner::Struct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22397,"byte_end":22430,"line_start":614,"line_end":614,"column_start":5,"column_end":38}},{"value":"/ [`ValuePointer`]: TypeInner::ValuePointer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22435,"byte_end":22480,"line_start":615,"line_end":615,"column_start":5,"column_end":50}},{"value":"/ [`GlobalVariable`]: Expression::GlobalVariable","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22485,"byte_end":22535,"line_start":616,"line_end":616,"column_start":5,"column_end":55}},{"value":"/ [`AccessIndex`]: Expression::AccessIndex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22540,"byte_end":22584,"line_start":617,"line_end":617,"column_start":5,"column_end":49}}]},{"kind":"StructVariant","id":{"krate":0,"index":6947},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23262,"byte_end":23274,"line_start":635,"line_end":635,"column_start":5,"column_end":17},"name":"ValuePointer","qualname":"::TypeInner::ValuePointer","value":"TypeInner::ValuePointer { size, kind, width, space }","parent":{"krate":0,"index":6929},"children":[],"decl_id":null,"docs":" Pointer to a scalar or vector.","sig":null,"attributes":[{"value":"/ Pointer to a scalar or vector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22668,"byte_end":22702,"line_start":623,"line_end":623,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22707,"byte_end":22710,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ A `ValuePointer` type is equivalent to a `Pointer` whose `base` is a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22715,"byte_end":22787,"line_start":625,"line_end":625,"column_start":5,"column_end":77}},{"value":"/ `Scalar` or `Vector` type. This is for use in [`TypeResolution::Value`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22792,"byte_end":22867,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ variants; see the documentation for [`TypeResolution`] for details.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22872,"byte_end":22943,"line_start":627,"line_end":627,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22948,"byte_end":22951,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Use the [`TypeInner::equivalent`] method to compare types that could be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":22956,"byte_end":23031,"line_start":629,"line_end":629,"column_start":5,"column_end":80}},{"value":"/ pointers, to ensure that `Pointer` and `ValuePointer` types are","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23036,"byte_end":23103,"line_start":630,"line_end":630,"column_start":5,"column_end":72}},{"value":"/ recognized as equivalent.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23108,"byte_end":23137,"line_start":631,"line_end":631,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23142,"byte_end":23145,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ [`TypeResolution`]: proc::TypeResolution","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23150,"byte_end":23194,"line_start":633,"line_end":633,"column_start":5,"column_end":49}},{"value":"/ [`TypeResolution::Value`]: proc::TypeResolution::Value","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23199,"byte_end":23257,"line_start":634,"line_end":634,"column_start":5,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":6952},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24535,"byte_end":24540,"line_start":667,"line_end":667,"column_start":5,"column_end":10},"name":"Array","qualname":"::TypeInner::Array","value":"TypeInner::Array { base, size, stride }","parent":{"krate":0,"index":6929},"children":[],"decl_id":null,"docs":" Homogenous list of elements.","sig":null,"attributes":[{"value":"/ Homogenous list of elements.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23400,"byte_end":23432,"line_start":642,"line_end":642,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23437,"byte_end":23440,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ The `base` type must be a [`SIZED`], [`DATA`] type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23445,"byte_end":23500,"line_start":644,"line_end":644,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23505,"byte_end":23508,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ## Dynamically sized arrays","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23513,"byte_end":23544,"line_start":646,"line_end":646,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23549,"byte_end":23552,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ An `Array` is [`SIZED`] unless its `size` is [`Dynamic`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23557,"byte_end":23618,"line_start":648,"line_end":648,"column_start":5,"column_end":66}},{"value":"/ Dynamically-sized arrays may only appear in a few situations:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23623,"byte_end":23688,"line_start":649,"line_end":649,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23693,"byte_end":23696,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ -   They may appear as the type of a [`GlobalVariable`], or as the last","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23701,"byte_end":23776,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/     member of a [`Struct`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23781,"byte_end":23812,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23817,"byte_end":23820,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ -   They may appear as the base type of a [`Pointer`]. An","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23825,"byte_end":23886,"line_start":654,"line_end":654,"column_start":5,"column_end":66}},{"value":"/     [`AccessIndex`] expression referring to a struct's final","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23891,"byte_end":23955,"line_start":655,"line_end":655,"column_start":5,"column_end":69}},{"value":"/     unsized array member would have such a pointer type. However, such","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":23960,"byte_end":24034,"line_start":656,"line_end":656,"column_start":5,"column_end":79}},{"value":"/     pointer types may only appear as the types of such intermediate","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24039,"byte_end":24110,"line_start":657,"line_end":657,"column_start":5,"column_end":76}},{"value":"/     expressions. They are not [`DATA`], and cannot be stored in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24115,"byte_end":24182,"line_start":658,"line_end":658,"column_start":5,"column_end":72}},{"value":"/     variables, held in arrays or structs, or passed as parameters.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24187,"byte_end":24257,"line_start":659,"line_end":659,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24262,"byte_end":24265,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ [`SIZED`]: crate::valid::TypeFlags::SIZED","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24270,"byte_end":24315,"line_start":661,"line_end":661,"column_start":5,"column_end":50}},{"value":"/ [`DATA`]: crate::valid::TypeFlags::DATA","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24320,"byte_end":24363,"line_start":662,"line_end":662,"column_start":5,"column_end":48}},{"value":"/ [`Dynamic`]: ArraySize::Dynamic","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24368,"byte_end":24403,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/ [`Struct`]: TypeInner::Struct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24408,"byte_end":24441,"line_start":664,"line_end":664,"column_start":5,"column_end":38}},{"value":"/ [`Pointer`]: TypeInner::Pointer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24446,"byte_end":24481,"line_start":665,"line_end":665,"column_start":5,"column_end":40}},{"value":"/ [`AccessIndex`]: Expression::AccessIndex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24486,"byte_end":24530,"line_start":666,"line_end":666,"column_start":5,"column_end":49}}]},{"kind":"StructVariant","id":{"krate":0,"index":6956},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25186,"byte_end":25192,"line_start":687,"line_end":687,"column_start":5,"column_end":11},"name":"Struct","qualname":"::TypeInner::Struct","value":"TypeInner::Struct { members, span }","parent":{"krate":0,"index":6929},"children":[],"decl_id":null,"docs":" User-defined structure.","sig":null,"attributes":[{"value":"/ User-defined structure.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24629,"byte_end":24656,"line_start":673,"line_end":673,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24661,"byte_end":24664,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ There must always be at least one member.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24669,"byte_end":24714,"line_start":675,"line_end":675,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24719,"byte_end":24722,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ A `Struct` type is [`DATA`], and the types of its members must be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24727,"byte_end":24796,"line_start":677,"line_end":677,"column_start":5,"column_end":74}},{"value":"/ `DATA` as well.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24801,"byte_end":24820,"line_start":678,"line_end":678,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24825,"byte_end":24828,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ Member types must be [`SIZED`], except for the final member of a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24833,"byte_end":24901,"line_start":680,"line_end":680,"column_start":5,"column_end":73}},{"value":"/ struct, which may be a dynamically sized [`Array`]. The","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24906,"byte_end":24965,"line_start":681,"line_end":681,"column_start":5,"column_end":64}},{"value":"/ `Struct` type itself is `SIZED` when all its members are `SIZED`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":24970,"byte_end":25039,"line_start":682,"line_end":682,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25044,"byte_end":25047,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ [`DATA`]: crate::valid::TypeFlags::DATA","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25052,"byte_end":25095,"line_start":684,"line_end":684,"column_start":5,"column_end":48}},{"value":"/ [`SIZED`]: crate::valid::TypeFlags::SIZED","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25100,"byte_end":25145,"line_start":685,"line_end":685,"column_start":5,"column_end":50}},{"value":"/ [`Array`]: TypeInner::Array","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25150,"byte_end":25181,"line_start":686,"line_end":686,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":6959},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25354,"byte_end":25359,"line_start":693,"line_end":693,"column_start":5,"column_end":10},"name":"Image","qualname":"::TypeInner::Image","value":"TypeInner::Image { dim, arrayed, class }","parent":{"krate":0,"index":6929},"children":[],"decl_id":null,"docs":" Possibly multidimensional array of texels.\n","sig":null,"attributes":[{"value":"/ Possibly multidimensional array of texels.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25303,"byte_end":25349,"line_start":692,"line_end":692,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":6963},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25559,"byte_end":25566,"line_start":700,"line_end":700,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::TypeInner::Sampler","value":"TypeInner::Sampler { comparison }","parent":{"krate":0,"index":6929},"children":[],"decl_id":null,"docs":" Can be used to sample values from images.\n","sig":null,"attributes":[{"value":"/ Can be used to sample values from images.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25509,"byte_end":25554,"line_start":699,"line_end":699,"column_start":5,"column_end":50}}]},{"kind":"StructVariant","id":{"krate":0,"index":6965},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27958,"byte_end":27970,"line_start":743,"line_end":743,"column_start":5,"column_end":17},"name":"BindingArray","qualname":"::TypeInner::BindingArray","value":"TypeInner::BindingArray { base, size }","parent":{"krate":0,"index":6929},"children":[],"decl_id":null,"docs":" Array of bindings.","sig":null,"attributes":[{"value":"/ Array of bindings.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25594,"byte_end":25616,"line_start":702,"line_end":702,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25621,"byte_end":25624,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ A `BindingArray` represents an array where each element draws its value","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25629,"byte_end":25704,"line_start":704,"line_end":704,"column_start":5,"column_end":80}},{"value":"/ from a separate bound resource. The array's element type `base` may be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25709,"byte_end":25783,"line_start":705,"line_end":705,"column_start":5,"column_end":79}},{"value":"/ [`Image`], [`Sampler`], or any type that would be permitted for a global","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25788,"byte_end":25864,"line_start":706,"line_end":706,"column_start":5,"column_end":81}},{"value":"/ in the [`Uniform`] or [`Storage`] address spaces. Only global variables","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25869,"byte_end":25944,"line_start":707,"line_end":707,"column_start":5,"column_end":80}},{"value":"/ may be binding arrays; on the host side, their values are provided by","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":25949,"byte_end":26022,"line_start":708,"line_end":708,"column_start":5,"column_end":78}},{"value":"/ [`TextureViewArray`], [`SamplerArray`], or [`BufferArray`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26027,"byte_end":26089,"line_start":709,"line_end":709,"column_start":5,"column_end":67}},{"value":"/ bindings.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26094,"byte_end":26107,"line_start":710,"line_end":710,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26112,"byte_end":26115,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ Since each element comes from a distinct resource, a binding array of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26120,"byte_end":26193,"line_start":712,"line_end":712,"column_start":5,"column_end":78}},{"value":"/ images could have images of varying sizes (but not varying dimensions;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26198,"byte_end":26272,"line_start":713,"line_end":713,"column_start":5,"column_end":79}},{"value":"/ they must all have the same `Image` type). Or, a binding array of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26277,"byte_end":26346,"line_start":714,"line_end":714,"column_start":5,"column_end":74}},{"value":"/ buffers could have elements that are dynamically sized arrays, each with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26351,"byte_end":26427,"line_start":715,"line_end":715,"column_start":5,"column_end":81}},{"value":"/ a different length.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26432,"byte_end":26455,"line_start":716,"line_end":716,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26460,"byte_end":26463,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ Binding arrays are not [`DATA`]. This means that all binding array","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26468,"byte_end":26538,"line_start":718,"line_end":718,"column_start":5,"column_end":75}},{"value":"/ globals must be placed in the [`Handle`] address space. Referring to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26543,"byte_end":26615,"line_start":719,"line_end":719,"column_start":5,"column_end":77}},{"value":"/ such a global produces a `BindingArray` value directly; there are never","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26620,"byte_end":26695,"line_start":720,"line_end":720,"column_start":5,"column_end":80}},{"value":"/ pointers to binding arrays. The only operation permitted on","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26700,"byte_end":26763,"line_start":721,"line_end":721,"column_start":5,"column_end":68}},{"value":"/ `BindingArray` values is indexing, which yields the element by value,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26768,"byte_end":26841,"line_start":722,"line_end":722,"column_start":5,"column_end":78}},{"value":"/ not a pointer to the element. (This means that buffer array contents","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26846,"byte_end":26918,"line_start":723,"line_end":723,"column_start":5,"column_end":77}},{"value":"/ cannot be stored to; [naga#1864] covers lifting this restriction.)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26923,"byte_end":26993,"line_start":724,"line_end":724,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":26998,"byte_end":27001,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ Unlike textures and samplers, binding arrays are not [`ARGUMENT`], so","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27006,"byte_end":27079,"line_start":726,"line_end":726,"column_start":5,"column_end":78}},{"value":"/ they cannot be passed as arguments to functions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27084,"byte_end":27136,"line_start":727,"line_end":727,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27141,"byte_end":27144,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ Naga's WGSL front end supports binding arrays with the type syntax","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27149,"byte_end":27219,"line_start":729,"line_end":729,"column_start":5,"column_end":75}},{"value":"/ `binding_array<T, N>`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27224,"byte_end":27250,"line_start":730,"line_end":730,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27255,"byte_end":27258,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ [`Image`]: TypeInner::Image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27263,"byte_end":27294,"line_start":732,"line_end":732,"column_start":5,"column_end":36}},{"value":"/ [`Sampler`]: TypeInner::Sampler","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27299,"byte_end":27334,"line_start":733,"line_end":733,"column_start":5,"column_end":40}},{"value":"/ [`Uniform`]: AddressSpace::Uniform","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27339,"byte_end":27377,"line_start":734,"line_end":734,"column_start":5,"column_end":43}},{"value":"/ [`Storage`]: AddressSpace::Storage","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27382,"byte_end":27420,"line_start":735,"line_end":735,"column_start":5,"column_end":43}},{"value":"/ [`TextureViewArray`]: https://docs.rs/wgpu/latest/wgpu/enum.BindingResource.html#variant.TextureViewArray","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27425,"byte_end":27534,"line_start":736,"line_end":736,"column_start":5,"column_end":114}},{"value":"/ [`SamplerArray`]: https://docs.rs/wgpu/latest/wgpu/enum.BindingResource.html#variant.SamplerArray","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27539,"byte_end":27640,"line_start":737,"line_end":737,"column_start":5,"column_end":106}},{"value":"/ [`BufferArray`]: https://docs.rs/wgpu/latest/wgpu/enum.BindingResource.html#variant.BufferArray","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27645,"byte_end":27744,"line_start":738,"line_end":738,"column_start":5,"column_end":104}},{"value":"/ [`DATA`]: crate::valid::TypeFlags::DATA","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27749,"byte_end":27792,"line_start":739,"line_end":739,"column_start":5,"column_end":48}},{"value":"/ [`Handle`]: AddressSpace::Handle","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27797,"byte_end":27833,"line_start":740,"line_end":740,"column_start":5,"column_end":41}},{"value":"/ [`ARGUMENT`]: crate::valid::TypeFlags::ARGUMENT","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27838,"byte_end":27889,"line_start":741,"line_end":741,"column_start":5,"column_end":56}},{"value":"/ [naga#1864]: https://github.com/gfx-rs/naga/issues/1864","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":27894,"byte_end":27953,"line_start":742,"line_end":742,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":6929},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":20895,"byte_end":20904,"line_start":575,"line_end":575,"column_start":10,"column_end":19},"name":"TypeInner","qualname":"::TypeInner","value":"pub enum TypeInner {\n    Scalar {\n            kind: ScalarKind,\n            width: Bytes,\n        },\n    Vector {\n            size: VectorSize,\n            kind: ScalarKind,\n            width: Bytes,\n        },\n    Matrix {\n            columns: VectorSize,\n            rows: VectorSize,\n            width: Bytes,\n        },\n    Atomic {\n            kind: ScalarKind,\n            width: Bytes,\n        },\n    Pointer {\n            base: Handle<Type>,\n            space: AddressSpace,\n        },\n    ValuePointer {\n            size: Option<VectorSize>,\n            kind: ScalarKind,\n            width: Bytes,\n            space: AddressSpace,\n        },\n    Array {\n            base: Handle<Type>,\n            size: ArraySize,\n            stride: u32,\n        },\n    Struct {\n            members: Vec<StructMember>,\n            span: u32,\n        },\n    Image {\n            dim: ImageDimension,\n            arrayed: bool,\n            class: ImageClass,\n        },\n    Sampler {\n            comparison: bool,\n        },\n    BindingArray {\n            base: Handle<Type>,\n            size: ArraySize,\n        },\n}","parent":null,"children":[{"krate":0,"index":6930},{"krate":0,"index":6933},{"krate":0,"index":6937},{"krate":0,"index":6941},{"krate":0,"index":6944},{"krate":0,"index":6947},{"krate":0,"index":6952},{"krate":0,"index":6956},{"krate":0,"index":6959},{"krate":0,"index":6963},{"krate":0,"index":6965}],"decl_id":null,"docs":" Enum with additional information, depending on the kind of type.\n","sig":null,"attributes":[{"value":"/ Enum with additional information, depending on the kind of type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":20613,"byte_end":20681,"line_start":570,"line_end":570,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":6980},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":28240,"byte_end":28248,"line_start":751,"line_end":751,"column_start":12,"column_end":20},"name":"Constant","qualname":"::Constant","value":"Constant { name, specialization, inner }","parent":null,"children":[{"krate":0,"index":6981},{"krate":0,"index":6982},{"krate":0,"index":6983}],"decl_id":null,"docs":" Constant value.\n","sig":null,"attributes":[{"value":"/ Constant value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":28015,"byte_end":28034,"line_start":746,"line_end":746,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":6981},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":28259,"byte_end":28263,"line_start":752,"line_end":752,"column_start":9,"column_end":13},"name":"name","qualname":"::Constant::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6982},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":28289,"byte_end":28303,"line_start":753,"line_end":753,"column_start":9,"column_end":23},"name":"specialization","qualname":"::Constant::specialization","value":"std::option::Option<u32>","parent":{"krate":0,"index":6980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6983},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":28326,"byte_end":28331,"line_start":754,"line_end":754,"column_start":9,"column_end":14},"name":"inner","qualname":"::Constant::inner","value":"ConstantInner","parent":{"krate":0,"index":6980},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6991},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":28633,"byte_end":28637,"line_start":763,"line_end":763,"column_start":5,"column_end":9},"name":"Sint","qualname":"::ScalarValue::Sint","value":"ScalarValue::Sint(i64)","parent":{"krate":0,"index":6990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6994},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":28648,"byte_end":28652,"line_start":764,"line_end":764,"column_start":5,"column_end":9},"name":"Uint","qualname":"::ScalarValue::Uint","value":"ScalarValue::Uint(u64)","parent":{"krate":0,"index":6990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6997},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":28663,"byte_end":28668,"line_start":765,"line_end":765,"column_start":5,"column_end":10},"name":"Float","qualname":"::ScalarValue::Float","value":"ScalarValue::Float(f64)","parent":{"krate":0,"index":6990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7000},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":28679,"byte_end":28683,"line_start":766,"line_end":766,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ScalarValue::Bool","value":"ScalarValue::Bool(bool)","parent":{"krate":0,"index":6990},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6990},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":28615,"byte_end":28626,"line_start":762,"line_end":762,"column_start":10,"column_end":21},"name":"ScalarValue","qualname":"::ScalarValue","value":"pub enum ScalarValue { Sint(i64), Uint(u64), Float(f64), Bool(bool), }","parent":null,"children":[{"krate":0,"index":6991},{"krate":0,"index":6994},{"krate":0,"index":6997},{"krate":0,"index":7000}],"decl_id":null,"docs":" A literal scalar value, used in constants.\n","sig":null,"attributes":[{"value":"/ A literal scalar value, used in constants.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":28351,"byte_end":28397,"line_start":757,"line_end":757,"column_start":1,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":7011},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":28987,"byte_end":28993,"line_start":775,"line_end":775,"column_start":5,"column_end":11},"name":"Scalar","qualname":"::ConstantInner::Scalar","value":"ConstantInner::Scalar { width, value }","parent":{"krate":0,"index":7010},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7014},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29057,"byte_end":29066,"line_start":779,"line_end":779,"column_start":5,"column_end":14},"name":"Composite","qualname":"::ConstantInner::Composite","value":"ConstantInner::Composite { ty, components }","parent":{"krate":0,"index":7010},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7010},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":28967,"byte_end":28980,"line_start":774,"line_end":774,"column_start":10,"column_end":23},"name":"ConstantInner","qualname":"::ConstantInner","value":"pub enum ConstantInner {\n    Scalar {\n            width: Bytes,\n            value: ScalarValue,\n        },\n    Composite {\n            ty: Handle<Type>,\n            components: Vec<Handle<Constant>>,\n        },\n}","parent":null,"children":[{"krate":0,"index":7011},{"krate":0,"index":7014}],"decl_id":null,"docs":" Additional information, dependent on the kind of constant.\n","sig":null,"attributes":[{"value":"/ Additional information, dependent on the kind of constant.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":28694,"byte_end":28756,"line_start":769,"line_end":769,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7026},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29475,"byte_end":29482,"line_start":792,"line_end":792,"column_start":5,"column_end":12},"name":"BuiltIn","qualname":"::Binding::BuiltIn","value":"Binding::BuiltIn(BuiltIn)","parent":{"krate":0,"index":7025},"children":[],"decl_id":null,"docs":" Built-in shader variable.\n","sig":null,"attributes":[{"value":"/ Built-in shader variable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29441,"byte_end":29470,"line_start":791,"line_end":791,"column_start":5,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":7029},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":30271,"byte_end":30279,"line_start":810,"line_end":810,"column_start":5,"column_end":13},"name":"Location","qualname":"::Binding::Location","value":"Binding::Location { location, interpolation, sampling }","parent":{"krate":0,"index":7025},"children":[],"decl_id":null,"docs":" Indexed location.","sig":null,"attributes":[{"value":"/ Indexed location.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29498,"byte_end":29519,"line_start":794,"line_end":794,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29524,"byte_end":29527,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Values passed from the [`Vertex`] stage to the [`Fragment`] stage must","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29532,"byte_end":29606,"line_start":796,"line_end":796,"column_start":5,"column_end":79}},{"value":"/ have their `interpolation` defaulted (i.e. not `None`) by the front end","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29611,"byte_end":29686,"line_start":797,"line_end":797,"column_start":5,"column_end":80}},{"value":"/ as appropriate for that language.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29691,"byte_end":29728,"line_start":798,"line_end":798,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29733,"byte_end":29736,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ For other stages, we permit interpolations even though they're ignored.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29741,"byte_end":29816,"line_start":800,"line_end":800,"column_start":5,"column_end":80}},{"value":"/ When a front end is parsing a struct type, it usually doesn't know what","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29821,"byte_end":29896,"line_start":801,"line_end":801,"column_start":5,"column_end":80}},{"value":"/ stages will be using it for IO, so it's easiest if it can apply the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29901,"byte_end":29972,"line_start":802,"line_end":802,"column_start":5,"column_end":76}},{"value":"/ defaults to anything with a `Location` binding, just in case.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29977,"byte_end":30042,"line_start":803,"line_end":803,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":30047,"byte_end":30050,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ For anything other than floating-point scalars and vectors, the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":30055,"byte_end":30122,"line_start":805,"line_end":805,"column_start":5,"column_end":72}},{"value":"/ interpolation must be `Flat`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":30127,"byte_end":30160,"line_start":806,"line_end":806,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":30165,"byte_end":30168,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ [`Vertex`]: crate::ShaderStage::Vertex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":30173,"byte_end":30215,"line_start":808,"line_end":808,"column_start":5,"column_end":47}},{"value":"/ [`Fragment`]: crate::ShaderStage::Fragment","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":30220,"byte_end":30266,"line_start":809,"line_end":809,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":7025},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29427,"byte_end":29434,"line_start":790,"line_end":790,"column_start":10,"column_end":17},"name":"Binding","qualname":"::Binding","value":"pub enum Binding {\n    BuiltIn(BuiltIn),\n    Location {\n            location: u32,\n            interpolation: Option<Interpolation>,\n            sampling: Option<Sampling>,\n        },\n}","parent":null,"children":[{"krate":0,"index":7026},{"krate":0,"index":7029}],"decl_id":null,"docs":" Describes how an input/output variable is to be bound.\n","sig":null,"attributes":[{"value":"/ Describes how an input/output variable is to be bound.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":29148,"byte_end":29206,"line_start":785,"line_end":785,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":7047},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":30691,"byte_end":30706,"line_start":822,"line_end":822,"column_start":12,"column_end":27},"name":"ResourceBinding","qualname":"::ResourceBinding","value":"ResourceBinding { group, binding }","parent":null,"children":[{"krate":0,"index":7048},{"krate":0,"index":7049}],"decl_id":null,"docs":" Pipeline binding information for global resources.\n","sig":null,"attributes":[{"value":"/ Pipeline binding information for global resources.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":30397,"byte_end":30451,"line_start":817,"line_end":817,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":7048},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":30747,"byte_end":30752,"line_start":824,"line_end":824,"column_start":9,"column_end":14},"name":"group","qualname":"::ResourceBinding::group","value":"u32","parent":{"krate":0,"index":7047},"children":[],"decl_id":null,"docs":" The bind group index.\n","sig":null,"attributes":[{"value":"/ The bind group index.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":30713,"byte_end":30738,"line_start":823,"line_end":823,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":7049},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":30808,"byte_end":30815,"line_start":826,"line_end":826,"column_start":9,"column_end":16},"name":"binding","qualname":"::ResourceBinding::binding","value":"u32","parent":{"krate":0,"index":7047},"children":[],"decl_id":null,"docs":" Binding number within the group.\n","sig":null,"attributes":[{"value":"/ Binding number within the group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":30763,"byte_end":30799,"line_start":825,"line_end":825,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":7068},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31075,"byte_end":31089,"line_start":834,"line_end":834,"column_start":12,"column_end":26},"name":"GlobalVariable","qualname":"::GlobalVariable","value":"GlobalVariable { name, space, binding, ty, init }","parent":null,"children":[{"krate":0,"index":7069},{"krate":0,"index":7070},{"krate":0,"index":7071},{"krate":0,"index":7072},{"krate":0,"index":7073}],"decl_id":null,"docs":" Variable defined at module level.\n","sig":null,"attributes":[{"value":"/ Variable defined at module level.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":30825,"byte_end":30862,"line_start":829,"line_end":829,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":7069},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31138,"byte_end":31142,"line_start":836,"line_end":836,"column_start":9,"column_end":13},"name":"name","qualname":"::GlobalVariable::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7068},"children":[],"decl_id":null,"docs":" Name of the variable, if any.\n","sig":null,"attributes":[{"value":"/ Name of the variable, if any.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31096,"byte_end":31129,"line_start":835,"line_end":835,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":7070},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31211,"byte_end":31216,"line_start":838,"line_end":838,"column_start":9,"column_end":14},"name":"space","qualname":"::GlobalVariable::space","value":"AddressSpace","parent":{"krate":0,"index":7068},"children":[],"decl_id":null,"docs":" How this variable is to be stored.\n","sig":null,"attributes":[{"value":"/ How this variable is to be stored.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31164,"byte_end":31202,"line_start":837,"line_end":837,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":7071},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31290,"byte_end":31297,"line_start":840,"line_end":840,"column_start":9,"column_end":16},"name":"binding","qualname":"::GlobalVariable::binding","value":"std::option::Option<ResourceBinding>","parent":{"krate":0,"index":7068},"children":[],"decl_id":null,"docs":" For resources, defines the binding point.\n","sig":null,"attributes":[{"value":"/ For resources, defines the binding point.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31236,"byte_end":31281,"line_start":839,"line_end":839,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":7072},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31367,"byte_end":31369,"line_start":842,"line_end":842,"column_start":9,"column_end":11},"name":"ty","qualname":"::GlobalVariable::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":7068},"children":[],"decl_id":null,"docs":" The type of this variable.\n","sig":null,"attributes":[{"value":"/ The type of this variable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31328,"byte_end":31358,"line_start":841,"line_end":841,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":7073},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31434,"byte_end":31438,"line_start":844,"line_end":844,"column_start":9,"column_end":13},"name":"init","qualname":"::GlobalVariable::init","value":"std::option::Option<arena::Handle<Constant>>","parent":{"krate":0,"index":7068},"children":[],"decl_id":null,"docs":" Initial value for this variable.\n","sig":null,"attributes":[{"value":"/ Initial value for this variable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31389,"byte_end":31425,"line_start":843,"line_end":843,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":7082},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31710,"byte_end":31723,"line_start":852,"line_end":852,"column_start":12,"column_end":25},"name":"LocalVariable","qualname":"::LocalVariable","value":"LocalVariable { name, ty, init }","parent":null,"children":[{"krate":0,"index":7083},{"krate":0,"index":7084},{"krate":0,"index":7085}],"decl_id":null,"docs":" Variable defined at function level.\n","sig":null,"attributes":[{"value":"/ Variable defined at function level.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31469,"byte_end":31508,"line_start":847,"line_end":847,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":7083},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31772,"byte_end":31776,"line_start":854,"line_end":854,"column_start":9,"column_end":13},"name":"name","qualname":"::LocalVariable::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7082},"children":[],"decl_id":null,"docs":" Name of the variable, if any.\n","sig":null,"attributes":[{"value":"/ Name of the variable, if any.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31730,"byte_end":31763,"line_start":853,"line_end":853,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":7084},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31837,"byte_end":31839,"line_start":856,"line_end":856,"column_start":9,"column_end":11},"name":"ty","qualname":"::LocalVariable::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":7082},"children":[],"decl_id":null,"docs":" The type of this variable.\n","sig":null,"attributes":[{"value":"/ The type of this variable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31798,"byte_end":31828,"line_start":855,"line_end":855,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":7085},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31904,"byte_end":31908,"line_start":858,"line_end":858,"column_start":9,"column_end":13},"name":"init","qualname":"::LocalVariable::init","value":"std::option::Option<arena::Handle<Constant>>","parent":{"krate":0,"index":7082},"children":[],"decl_id":null,"docs":" Initial value for this variable.\n","sig":null,"attributes":[{"value":"/ Initial value for this variable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31859,"byte_end":31895,"line_start":857,"line_end":857,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7091},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32255,"byte_end":32261,"line_start":867,"line_end":867,"column_start":5,"column_end":11},"name":"Negate","qualname":"::UnaryOperator::Negate","value":"UnaryOperator::Negate","parent":{"krate":0,"index":7090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7093},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32267,"byte_end":32270,"line_start":868,"line_end":868,"column_start":5,"column_end":8},"name":"Not","qualname":"::UnaryOperator::Not","value":"UnaryOperator::Not","parent":{"krate":0,"index":7090},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7090},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32235,"byte_end":32248,"line_start":866,"line_end":866,"column_start":10,"column_end":23},"name":"UnaryOperator","qualname":"::UnaryOperator","value":"pub enum UnaryOperator { Negate, Not, }","parent":null,"children":[{"krate":0,"index":7091},{"krate":0,"index":7093}],"decl_id":null,"docs":" Operation that can be applied on a single value.\n","sig":null,"attributes":[{"value":"/ Operation that can be applied on a single value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":31939,"byte_end":31991,"line_start":861,"line_end":861,"column_start":1,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7114},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32588,"byte_end":32591,"line_start":877,"line_end":877,"column_start":5,"column_end":8},"name":"Add","qualname":"::BinaryOperator::Add","value":"BinaryOperator::Add","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7116},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32597,"byte_end":32605,"line_start":878,"line_end":878,"column_start":5,"column_end":13},"name":"Subtract","qualname":"::BinaryOperator::Subtract","value":"BinaryOperator::Subtract","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7118},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32611,"byte_end":32619,"line_start":879,"line_end":879,"column_start":5,"column_end":13},"name":"Multiply","qualname":"::BinaryOperator::Multiply","value":"BinaryOperator::Multiply","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7120},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32625,"byte_end":32631,"line_start":880,"line_end":880,"column_start":5,"column_end":11},"name":"Divide","qualname":"::BinaryOperator::Divide","value":"BinaryOperator::Divide","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7122},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32704,"byte_end":32710,"line_start":882,"line_end":882,"column_start":5,"column_end":11},"name":"Modulo","qualname":"::BinaryOperator::Modulo","value":"BinaryOperator::Modulo","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":" Equivalent of the WGSL's `%` operator or SPIR-V's `OpFRem`\n","sig":null,"attributes":[{"value":"/ Equivalent of the WGSL's `%` operator or SPIR-V's `OpFRem`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32637,"byte_end":32699,"line_start":881,"line_end":881,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7124},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32716,"byte_end":32721,"line_start":883,"line_end":883,"column_start":5,"column_end":10},"name":"Equal","qualname":"::BinaryOperator::Equal","value":"BinaryOperator::Equal","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7126},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32727,"byte_end":32735,"line_start":884,"line_end":884,"column_start":5,"column_end":13},"name":"NotEqual","qualname":"::BinaryOperator::NotEqual","value":"BinaryOperator::NotEqual","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7128},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32741,"byte_end":32745,"line_start":885,"line_end":885,"column_start":5,"column_end":9},"name":"Less","qualname":"::BinaryOperator::Less","value":"BinaryOperator::Less","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7130},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32751,"byte_end":32760,"line_start":886,"line_end":886,"column_start":5,"column_end":14},"name":"LessEqual","qualname":"::BinaryOperator::LessEqual","value":"BinaryOperator::LessEqual","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7132},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32766,"byte_end":32773,"line_start":887,"line_end":887,"column_start":5,"column_end":12},"name":"Greater","qualname":"::BinaryOperator::Greater","value":"BinaryOperator::Greater","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7134},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32779,"byte_end":32791,"line_start":888,"line_end":888,"column_start":5,"column_end":17},"name":"GreaterEqual","qualname":"::BinaryOperator::GreaterEqual","value":"BinaryOperator::GreaterEqual","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7136},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32797,"byte_end":32800,"line_start":889,"line_end":889,"column_start":5,"column_end":8},"name":"And","qualname":"::BinaryOperator::And","value":"BinaryOperator::And","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7138},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32806,"byte_end":32817,"line_start":890,"line_end":890,"column_start":5,"column_end":16},"name":"ExclusiveOr","qualname":"::BinaryOperator::ExclusiveOr","value":"BinaryOperator::ExclusiveOr","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7140},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32823,"byte_end":32834,"line_start":891,"line_end":891,"column_start":5,"column_end":16},"name":"InclusiveOr","qualname":"::BinaryOperator::InclusiveOr","value":"BinaryOperator::InclusiveOr","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7142},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32840,"byte_end":32850,"line_start":892,"line_end":892,"column_start":5,"column_end":15},"name":"LogicalAnd","qualname":"::BinaryOperator::LogicalAnd","value":"BinaryOperator::LogicalAnd","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7144},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32856,"byte_end":32865,"line_start":893,"line_end":893,"column_start":5,"column_end":14},"name":"LogicalOr","qualname":"::BinaryOperator::LogicalOr","value":"BinaryOperator::LogicalOr","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7146},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32871,"byte_end":32880,"line_start":894,"line_end":894,"column_start":5,"column_end":14},"name":"ShiftLeft","qualname":"::BinaryOperator::ShiftLeft","value":"BinaryOperator::ShiftLeft","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7148},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32948,"byte_end":32958,"line_start":896,"line_end":896,"column_start":5,"column_end":15},"name":"ShiftRight","qualname":"::BinaryOperator::ShiftRight","value":"BinaryOperator::ShiftRight","parent":{"krate":0,"index":7113},"children":[],"decl_id":null,"docs":" Right shift carries the sign of signed integers only.\n","sig":null,"attributes":[{"value":"/ Right shift carries the sign of signed integers only.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32886,"byte_end":32943,"line_start":895,"line_end":895,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":7113},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32567,"byte_end":32581,"line_start":876,"line_end":876,"column_start":10,"column_end":24},"name":"BinaryOperator","qualname":"::BinaryOperator","value":"pub enum BinaryOperator {\n    Add,\n    Subtract,\n    Multiply,\n    Divide,\n    Modulo,\n    Equal,\n    NotEqual,\n    Less,\n    LessEqual,\n    Greater,\n    GreaterEqual,\n    And,\n    ExclusiveOr,\n    InclusiveOr,\n    LogicalAnd,\n    LogicalOr,\n    ShiftLeft,\n    ShiftRight,\n}","parent":null,"children":[{"krate":0,"index":7114},{"krate":0,"index":7116},{"krate":0,"index":7118},{"krate":0,"index":7120},{"krate":0,"index":7122},{"krate":0,"index":7124},{"krate":0,"index":7126},{"krate":0,"index":7128},{"krate":0,"index":7130},{"krate":0,"index":7132},{"krate":0,"index":7134},{"krate":0,"index":7136},{"krate":0,"index":7138},{"krate":0,"index":7140},{"krate":0,"index":7142},{"krate":0,"index":7144},{"krate":0,"index":7146},{"krate":0,"index":7148}],"decl_id":null,"docs":" Operation that can be applied on two values.\n","sig":null,"attributes":[{"value":"/ Operation that can be applied on two values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32275,"byte_end":32323,"line_start":871,"line_end":871,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7169},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33381,"byte_end":33384,"line_start":908,"line_end":908,"column_start":5,"column_end":8},"name":"Add","qualname":"::AtomicFunction::Add","value":"AtomicFunction::Add","parent":{"krate":0,"index":7168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7171},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33390,"byte_end":33398,"line_start":909,"line_end":909,"column_start":5,"column_end":13},"name":"Subtract","qualname":"::AtomicFunction::Subtract","value":"AtomicFunction::Subtract","parent":{"krate":0,"index":7168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7173},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33404,"byte_end":33407,"line_start":910,"line_end":910,"column_start":5,"column_end":8},"name":"And","qualname":"::AtomicFunction::And","value":"AtomicFunction::And","parent":{"krate":0,"index":7168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7175},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33413,"byte_end":33424,"line_start":911,"line_end":911,"column_start":5,"column_end":16},"name":"ExclusiveOr","qualname":"::AtomicFunction::ExclusiveOr","value":"AtomicFunction::ExclusiveOr","parent":{"krate":0,"index":7168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7177},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33430,"byte_end":33441,"line_start":912,"line_end":912,"column_start":5,"column_end":16},"name":"InclusiveOr","qualname":"::AtomicFunction::InclusiveOr","value":"AtomicFunction::InclusiveOr","parent":{"krate":0,"index":7168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7179},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33447,"byte_end":33450,"line_start":913,"line_end":913,"column_start":5,"column_end":8},"name":"Min","qualname":"::AtomicFunction::Min","value":"AtomicFunction::Min","parent":{"krate":0,"index":7168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7181},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33456,"byte_end":33459,"line_start":914,"line_end":914,"column_start":5,"column_end":8},"name":"Max","qualname":"::AtomicFunction::Max","value":"AtomicFunction::Max","parent":{"krate":0,"index":7168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7183},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33465,"byte_end":33473,"line_start":915,"line_end":915,"column_start":5,"column_end":13},"name":"Exchange","qualname":"::AtomicFunction::Exchange","value":"AtomicFunction::Exchange { compare }","parent":{"krate":0,"index":7168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7168},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33360,"byte_end":33374,"line_start":907,"line_end":907,"column_start":10,"column_end":24},"name":"AtomicFunction","qualname":"::AtomicFunction","value":"pub enum AtomicFunction {\n    Add,\n    Subtract,\n    And,\n    ExclusiveOr,\n    InclusiveOr,\n    Min,\n    Max,\n    Exchange {\n            compare: Option<Handle<Expression>>,\n        },\n}","parent":null,"children":[{"krate":0,"index":7169},{"krate":0,"index":7171},{"krate":0,"index":7173},{"krate":0,"index":7175},{"krate":0,"index":7177},{"krate":0,"index":7179},{"krate":0,"index":7181},{"krate":0,"index":7183}],"decl_id":null,"docs":" Function on an atomic value.","sig":null,"attributes":[{"value":"/ Function on an atomic value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32963,"byte_end":32995,"line_start":899,"line_end":899,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":32996,"byte_end":32999,"line_start":900,"line_end":900,"column_start":1,"column_end":4}},{"value":"/ Note: these do not include load/store, which use the existing","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33000,"byte_end":33065,"line_start":901,"line_end":901,"column_start":1,"column_end":66}},{"value":"/ [`Expression::Load`] and [`Statement::Store`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33066,"byte_end":33116,"line_start":902,"line_end":902,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7205},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33825,"byte_end":33826,"line_start":924,"line_end":924,"column_start":5,"column_end":6},"name":"X","qualname":"::DerivativeAxis::X","value":"DerivativeAxis::X","parent":{"krate":0,"index":7204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7207},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33832,"byte_end":33833,"line_start":925,"line_end":925,"column_start":5,"column_end":6},"name":"Y","qualname":"::DerivativeAxis::Y","value":"DerivativeAxis::Y","parent":{"krate":0,"index":7204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7209},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33839,"byte_end":33844,"line_start":926,"line_end":926,"column_start":5,"column_end":10},"name":"Width","qualname":"::DerivativeAxis::Width","value":"DerivativeAxis::Width","parent":{"krate":0,"index":7204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7204},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33804,"byte_end":33818,"line_start":923,"line_end":923,"column_start":10,"column_end":24},"name":"DerivativeAxis","qualname":"::DerivativeAxis","value":"pub enum DerivativeAxis { X, Y, Width, }","parent":null,"children":[{"krate":0,"index":7205},{"krate":0,"index":7207},{"krate":0,"index":7209}],"decl_id":null,"docs":" Axis on which to compute a derivative.\n","sig":null,"attributes":[{"value":"/ Axis on which to compute a derivative.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33518,"byte_end":33560,"line_start":918,"line_end":918,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7230},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34183,"byte_end":34186,"line_start":935,"line_end":935,"column_start":5,"column_end":8},"name":"All","qualname":"::RelationalFunction::All","value":"RelationalFunction::All","parent":{"krate":0,"index":7229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7232},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34192,"byte_end":34195,"line_start":936,"line_end":936,"column_start":5,"column_end":8},"name":"Any","qualname":"::RelationalFunction::Any","value":"RelationalFunction::Any","parent":{"krate":0,"index":7229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7234},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34201,"byte_end":34206,"line_start":937,"line_end":937,"column_start":5,"column_end":10},"name":"IsNan","qualname":"::RelationalFunction::IsNan","value":"RelationalFunction::IsNan","parent":{"krate":0,"index":7229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7236},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34212,"byte_end":34217,"line_start":938,"line_end":938,"column_start":5,"column_end":10},"name":"IsInf","qualname":"::RelationalFunction::IsInf","value":"RelationalFunction::IsInf","parent":{"krate":0,"index":7229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7238},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34223,"byte_end":34231,"line_start":939,"line_end":939,"column_start":5,"column_end":13},"name":"IsFinite","qualname":"::RelationalFunction::IsFinite","value":"RelationalFunction::IsFinite","parent":{"krate":0,"index":7229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7240},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34237,"byte_end":34245,"line_start":940,"line_end":940,"column_start":5,"column_end":13},"name":"IsNormal","qualname":"::RelationalFunction::IsNormal","value":"RelationalFunction::IsNormal","parent":{"krate":0,"index":7229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7229},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34158,"byte_end":34176,"line_start":934,"line_end":934,"column_start":10,"column_end":28},"name":"RelationalFunction","qualname":"::RelationalFunction","value":"pub enum RelationalFunction { All, Any, IsNan, IsInf, IsFinite, IsNormal, }","parent":null,"children":[{"krate":0,"index":7230},{"krate":0,"index":7232},{"krate":0,"index":7234},{"krate":0,"index":7236},{"krate":0,"index":7238},{"krate":0,"index":7240}],"decl_id":null,"docs":" Built-in shader function for testing relation between values.\n","sig":null,"attributes":[{"value":"/ Built-in shader function for testing relation between values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":33849,"byte_end":33914,"line_start":929,"line_end":929,"column_start":1,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7261},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34569,"byte_end":34572,"line_start":950,"line_end":950,"column_start":5,"column_end":8},"name":"Abs","qualname":"::MathFunction::Abs","value":"MathFunction::Abs","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7263},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34578,"byte_end":34581,"line_start":951,"line_end":951,"column_start":5,"column_end":8},"name":"Min","qualname":"::MathFunction::Min","value":"MathFunction::Min","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7265},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34587,"byte_end":34590,"line_start":952,"line_end":952,"column_start":5,"column_end":8},"name":"Max","qualname":"::MathFunction::Max","value":"MathFunction::Max","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7267},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34596,"byte_end":34601,"line_start":953,"line_end":953,"column_start":5,"column_end":10},"name":"Clamp","qualname":"::MathFunction::Clamp","value":"MathFunction::Clamp","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7269},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34627,"byte_end":34630,"line_start":955,"line_end":955,"column_start":5,"column_end":8},"name":"Cos","qualname":"::MathFunction::Cos","value":"MathFunction::Cos","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7271},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34636,"byte_end":34640,"line_start":956,"line_end":956,"column_start":5,"column_end":9},"name":"Cosh","qualname":"::MathFunction::Cosh","value":"MathFunction::Cosh","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7273},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34646,"byte_end":34649,"line_start":957,"line_end":957,"column_start":5,"column_end":8},"name":"Sin","qualname":"::MathFunction::Sin","value":"MathFunction::Sin","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7275},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34655,"byte_end":34659,"line_start":958,"line_end":958,"column_start":5,"column_end":9},"name":"Sinh","qualname":"::MathFunction::Sinh","value":"MathFunction::Sinh","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7277},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34665,"byte_end":34668,"line_start":959,"line_end":959,"column_start":5,"column_end":8},"name":"Tan","qualname":"::MathFunction::Tan","value":"MathFunction::Tan","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7279},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34674,"byte_end":34678,"line_start":960,"line_end":960,"column_start":5,"column_end":9},"name":"Tanh","qualname":"::MathFunction::Tanh","value":"MathFunction::Tanh","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7281},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34684,"byte_end":34688,"line_start":961,"line_end":961,"column_start":5,"column_end":9},"name":"Acos","qualname":"::MathFunction::Acos","value":"MathFunction::Acos","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7283},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34694,"byte_end":34698,"line_start":962,"line_end":962,"column_start":5,"column_end":9},"name":"Asin","qualname":"::MathFunction::Asin","value":"MathFunction::Asin","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7285},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34704,"byte_end":34708,"line_start":963,"line_end":963,"column_start":5,"column_end":9},"name":"Atan","qualname":"::MathFunction::Atan","value":"MathFunction::Atan","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7287},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34714,"byte_end":34719,"line_start":964,"line_end":964,"column_start":5,"column_end":10},"name":"Atan2","qualname":"::MathFunction::Atan2","value":"MathFunction::Atan2","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7289},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34725,"byte_end":34730,"line_start":965,"line_end":965,"column_start":5,"column_end":10},"name":"Asinh","qualname":"::MathFunction::Asinh","value":"MathFunction::Asinh","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7291},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34736,"byte_end":34741,"line_start":966,"line_end":966,"column_start":5,"column_end":10},"name":"Acosh","qualname":"::MathFunction::Acosh","value":"MathFunction::Acosh","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7293},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34747,"byte_end":34752,"line_start":967,"line_end":967,"column_start":5,"column_end":10},"name":"Atanh","qualname":"::MathFunction::Atanh","value":"MathFunction::Atanh","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7295},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34758,"byte_end":34765,"line_start":968,"line_end":968,"column_start":5,"column_end":12},"name":"Radians","qualname":"::MathFunction::Radians","value":"MathFunction::Radians","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7297},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34771,"byte_end":34778,"line_start":969,"line_end":969,"column_start":5,"column_end":12},"name":"Degrees","qualname":"::MathFunction::Degrees","value":"MathFunction::Degrees","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7299},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34805,"byte_end":34809,"line_start":971,"line_end":971,"column_start":5,"column_end":9},"name":"Ceil","qualname":"::MathFunction::Ceil","value":"MathFunction::Ceil","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7301},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34815,"byte_end":34820,"line_start":972,"line_end":972,"column_start":5,"column_end":10},"name":"Floor","qualname":"::MathFunction::Floor","value":"MathFunction::Floor","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7303},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34826,"byte_end":34831,"line_start":973,"line_end":973,"column_start":5,"column_end":10},"name":"Round","qualname":"::MathFunction::Round","value":"MathFunction::Round","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7305},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34837,"byte_end":34842,"line_start":974,"line_end":974,"column_start":5,"column_end":10},"name":"Fract","qualname":"::MathFunction::Fract","value":"MathFunction::Fract","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7307},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34848,"byte_end":34853,"line_start":975,"line_end":975,"column_start":5,"column_end":10},"name":"Trunc","qualname":"::MathFunction::Trunc","value":"MathFunction::Trunc","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7309},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34859,"byte_end":34863,"line_start":976,"line_end":976,"column_start":5,"column_end":9},"name":"Modf","qualname":"::MathFunction::Modf","value":"MathFunction::Modf","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7311},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34869,"byte_end":34874,"line_start":977,"line_end":977,"column_start":5,"column_end":10},"name":"Frexp","qualname":"::MathFunction::Frexp","value":"MathFunction::Frexp","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7313},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34880,"byte_end":34885,"line_start":978,"line_end":978,"column_start":5,"column_end":10},"name":"Ldexp","qualname":"::MathFunction::Ldexp","value":"MathFunction::Ldexp","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7315},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34907,"byte_end":34910,"line_start":980,"line_end":980,"column_start":5,"column_end":8},"name":"Exp","qualname":"::MathFunction::Exp","value":"MathFunction::Exp","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7317},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34916,"byte_end":34920,"line_start":981,"line_end":981,"column_start":5,"column_end":9},"name":"Exp2","qualname":"::MathFunction::Exp2","value":"MathFunction::Exp2","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7319},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34926,"byte_end":34929,"line_start":982,"line_end":982,"column_start":5,"column_end":8},"name":"Log","qualname":"::MathFunction::Log","value":"MathFunction::Log","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7321},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34935,"byte_end":34939,"line_start":983,"line_end":983,"column_start":5,"column_end":9},"name":"Log2","qualname":"::MathFunction::Log2","value":"MathFunction::Log2","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7323},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34945,"byte_end":34948,"line_start":984,"line_end":984,"column_start":5,"column_end":8},"name":"Pow","qualname":"::MathFunction::Pow","value":"MathFunction::Pow","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7325},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34970,"byte_end":34973,"line_start":986,"line_end":986,"column_start":5,"column_end":8},"name":"Dot","qualname":"::MathFunction::Dot","value":"MathFunction::Dot","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7327},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34979,"byte_end":34984,"line_start":987,"line_end":987,"column_start":5,"column_end":10},"name":"Outer","qualname":"::MathFunction::Outer","value":"MathFunction::Outer","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7329},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34990,"byte_end":34995,"line_start":988,"line_end":988,"column_start":5,"column_end":10},"name":"Cross","qualname":"::MathFunction::Cross","value":"MathFunction::Cross","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7331},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35001,"byte_end":35009,"line_start":989,"line_end":989,"column_start":5,"column_end":13},"name":"Distance","qualname":"::MathFunction::Distance","value":"MathFunction::Distance","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7333},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35015,"byte_end":35021,"line_start":990,"line_end":990,"column_start":5,"column_end":11},"name":"Length","qualname":"::MathFunction::Length","value":"MathFunction::Length","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7335},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35027,"byte_end":35036,"line_start":991,"line_end":991,"column_start":5,"column_end":14},"name":"Normalize","qualname":"::MathFunction::Normalize","value":"MathFunction::Normalize","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7337},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35042,"byte_end":35053,"line_start":992,"line_end":992,"column_start":5,"column_end":16},"name":"FaceForward","qualname":"::MathFunction::FaceForward","value":"MathFunction::FaceForward","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7339},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35059,"byte_end":35066,"line_start":993,"line_end":993,"column_start":5,"column_end":12},"name":"Reflect","qualname":"::MathFunction::Reflect","value":"MathFunction::Reflect","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7341},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35072,"byte_end":35079,"line_start":994,"line_end":994,"column_start":5,"column_end":12},"name":"Refract","qualname":"::MathFunction::Refract","value":"MathFunction::Refract","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7343},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35106,"byte_end":35110,"line_start":996,"line_end":996,"column_start":5,"column_end":9},"name":"Sign","qualname":"::MathFunction::Sign","value":"MathFunction::Sign","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7345},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35116,"byte_end":35119,"line_start":997,"line_end":997,"column_start":5,"column_end":8},"name":"Fma","qualname":"::MathFunction::Fma","value":"MathFunction::Fma","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7347},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35125,"byte_end":35128,"line_start":998,"line_end":998,"column_start":5,"column_end":8},"name":"Mix","qualname":"::MathFunction::Mix","value":"MathFunction::Mix","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7349},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35134,"byte_end":35138,"line_start":999,"line_end":999,"column_start":5,"column_end":9},"name":"Step","qualname":"::MathFunction::Step","value":"MathFunction::Step","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7351},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35144,"byte_end":35154,"line_start":1000,"line_end":1000,"column_start":5,"column_end":15},"name":"SmoothStep","qualname":"::MathFunction::SmoothStep","value":"MathFunction::SmoothStep","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7353},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35160,"byte_end":35164,"line_start":1001,"line_end":1001,"column_start":5,"column_end":9},"name":"Sqrt","qualname":"::MathFunction::Sqrt","value":"MathFunction::Sqrt","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7355},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35170,"byte_end":35181,"line_start":1002,"line_end":1002,"column_start":5,"column_end":16},"name":"InverseSqrt","qualname":"::MathFunction::InverseSqrt","value":"MathFunction::InverseSqrt","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7357},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35187,"byte_end":35194,"line_start":1003,"line_end":1003,"column_start":5,"column_end":12},"name":"Inverse","qualname":"::MathFunction::Inverse","value":"MathFunction::Inverse","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7359},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35200,"byte_end":35209,"line_start":1004,"line_end":1004,"column_start":5,"column_end":14},"name":"Transpose","qualname":"::MathFunction::Transpose","value":"MathFunction::Transpose","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7361},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35215,"byte_end":35226,"line_start":1005,"line_end":1005,"column_start":5,"column_end":16},"name":"Determinant","qualname":"::MathFunction::Determinant","value":"MathFunction::Determinant","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7363},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35244,"byte_end":35256,"line_start":1007,"line_end":1007,"column_start":5,"column_end":17},"name":"CountOneBits","qualname":"::MathFunction::CountOneBits","value":"MathFunction::CountOneBits","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7365},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35262,"byte_end":35273,"line_start":1008,"line_end":1008,"column_start":5,"column_end":16},"name":"ReverseBits","qualname":"::MathFunction::ReverseBits","value":"MathFunction::ReverseBits","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7367},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35279,"byte_end":35290,"line_start":1009,"line_end":1009,"column_start":5,"column_end":16},"name":"ExtractBits","qualname":"::MathFunction::ExtractBits","value":"MathFunction::ExtractBits","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7369},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35296,"byte_end":35306,"line_start":1010,"line_end":1010,"column_start":5,"column_end":15},"name":"InsertBits","qualname":"::MathFunction::InsertBits","value":"MathFunction::InsertBits","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7371},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35312,"byte_end":35319,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12},"name":"FindLsb","qualname":"::MathFunction::FindLsb","value":"MathFunction::FindLsb","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7373},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35325,"byte_end":35332,"line_start":1012,"line_end":1012,"column_start":5,"column_end":12},"name":"FindMsb","qualname":"::MathFunction::FindMsb","value":"MathFunction::FindMsb","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7375},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35358,"byte_end":35370,"line_start":1014,"line_end":1014,"column_start":5,"column_end":17},"name":"Pack4x8snorm","qualname":"::MathFunction::Pack4x8snorm","value":"MathFunction::Pack4x8snorm","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7377},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35376,"byte_end":35388,"line_start":1015,"line_end":1015,"column_start":5,"column_end":17},"name":"Pack4x8unorm","qualname":"::MathFunction::Pack4x8unorm","value":"MathFunction::Pack4x8unorm","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7379},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35394,"byte_end":35407,"line_start":1016,"line_end":1016,"column_start":5,"column_end":18},"name":"Pack2x16snorm","qualname":"::MathFunction::Pack2x16snorm","value":"MathFunction::Pack2x16snorm","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7381},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35413,"byte_end":35426,"line_start":1017,"line_end":1017,"column_start":5,"column_end":18},"name":"Pack2x16unorm","qualname":"::MathFunction::Pack2x16unorm","value":"MathFunction::Pack2x16unorm","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7383},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35432,"byte_end":35445,"line_start":1018,"line_end":1018,"column_start":5,"column_end":18},"name":"Pack2x16float","qualname":"::MathFunction::Pack2x16float","value":"MathFunction::Pack2x16float","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7385},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35473,"byte_end":35487,"line_start":1020,"line_end":1020,"column_start":5,"column_end":19},"name":"Unpack4x8snorm","qualname":"::MathFunction::Unpack4x8snorm","value":"MathFunction::Unpack4x8snorm","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7387},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35493,"byte_end":35507,"line_start":1021,"line_end":1021,"column_start":5,"column_end":19},"name":"Unpack4x8unorm","qualname":"::MathFunction::Unpack4x8unorm","value":"MathFunction::Unpack4x8unorm","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7389},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35513,"byte_end":35528,"line_start":1022,"line_end":1022,"column_start":5,"column_end":20},"name":"Unpack2x16snorm","qualname":"::MathFunction::Unpack2x16snorm","value":"MathFunction::Unpack2x16snorm","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7391},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35534,"byte_end":35549,"line_start":1023,"line_end":1023,"column_start":5,"column_end":20},"name":"Unpack2x16unorm","qualname":"::MathFunction::Unpack2x16unorm","value":"MathFunction::Unpack2x16unorm","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7393},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35555,"byte_end":35570,"line_start":1024,"line_end":1024,"column_start":5,"column_end":20},"name":"Unpack2x16float","qualname":"::MathFunction::Unpack2x16float","value":"MathFunction::Unpack2x16float","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7260},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34532,"byte_end":34544,"line_start":948,"line_end":948,"column_start":10,"column_end":22},"name":"MathFunction","qualname":"::MathFunction","value":"pub enum MathFunction {\n    Abs,\n    Min,\n    Max,\n    Clamp,\n    Cos,\n    Cosh,\n    Sin,\n    Sinh,\n    Tan,\n    Tanh,\n    Acos,\n    Asin,\n    Atan,\n    Atan2,\n    Asinh,\n    Acosh,\n    Atanh,\n    Radians,\n    Degrees,\n    Ceil,\n    Floor,\n    Round,\n    Fract,\n    Trunc,\n    Modf,\n    Frexp,\n    Ldexp,\n    Exp,\n    Exp2,\n    Log,\n    Log2,\n    Pow,\n    Dot,\n    Outer,\n    Cross,\n    Distance,\n    Length,\n    Normalize,\n    FaceForward,\n    Reflect,\n    Refract,\n    Sign,\n    Fma,\n    Mix,\n    Step,\n    SmoothStep,\n    Sqrt,\n    InverseSqrt,\n    Inverse,\n    Transpose,\n    Determinant,\n    CountOneBits,\n    ReverseBits,\n    ExtractBits,\n    InsertBits,\n    FindLsb,\n    FindMsb,\n    Pack4x8snorm,\n    Pack4x8unorm,\n    Pack2x16snorm,\n    Pack2x16unorm,\n    Pack2x16float,\n    Unpack4x8snorm,\n    Unpack4x8unorm,\n    Unpack2x16snorm,\n    Unpack2x16unorm,\n    Unpack2x16float,\n}","parent":null,"children":[{"krate":0,"index":7261},{"krate":0,"index":7263},{"krate":0,"index":7265},{"krate":0,"index":7267},{"krate":0,"index":7269},{"krate":0,"index":7271},{"krate":0,"index":7273},{"krate":0,"index":7275},{"krate":0,"index":7277},{"krate":0,"index":7279},{"krate":0,"index":7281},{"krate":0,"index":7283},{"krate":0,"index":7285},{"krate":0,"index":7287},{"krate":0,"index":7289},{"krate":0,"index":7291},{"krate":0,"index":7293},{"krate":0,"index":7295},{"krate":0,"index":7297},{"krate":0,"index":7299},{"krate":0,"index":7301},{"krate":0,"index":7303},{"krate":0,"index":7305},{"krate":0,"index":7307},{"krate":0,"index":7309},{"krate":0,"index":7311},{"krate":0,"index":7313},{"krate":0,"index":7315},{"krate":0,"index":7317},{"krate":0,"index":7319},{"krate":0,"index":7321},{"krate":0,"index":7323},{"krate":0,"index":7325},{"krate":0,"index":7327},{"krate":0,"index":7329},{"krate":0,"index":7331},{"krate":0,"index":7333},{"krate":0,"index":7335},{"krate":0,"index":7337},{"krate":0,"index":7339},{"krate":0,"index":7341},{"krate":0,"index":7343},{"krate":0,"index":7345},{"krate":0,"index":7347},{"krate":0,"index":7349},{"krate":0,"index":7351},{"krate":0,"index":7353},{"krate":0,"index":7355},{"krate":0,"index":7357},{"krate":0,"index":7359},{"krate":0,"index":7361},{"krate":0,"index":7363},{"krate":0,"index":7365},{"krate":0,"index":7367},{"krate":0,"index":7369},{"krate":0,"index":7371},{"krate":0,"index":7373},{"krate":0,"index":7375},{"krate":0,"index":7377},{"krate":0,"index":7379},{"krate":0,"index":7381},{"krate":0,"index":7383},{"krate":0,"index":7385},{"krate":0,"index":7387},{"krate":0,"index":7389},{"krate":0,"index":7391},{"krate":0,"index":7393}],"decl_id":null,"docs":" Built-in shader function for math.\n","sig":null,"attributes":[{"value":"/ Built-in shader function for math.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":34250,"byte_end":34288,"line_start":943,"line_end":943,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7414},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35863,"byte_end":35867,"line_start":1033,"line_end":1033,"column_start":5,"column_end":9},"name":"Auto","qualname":"::SampleLevel::Auto","value":"SampleLevel::Auto","parent":{"krate":0,"index":7413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7416},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35873,"byte_end":35877,"line_start":1034,"line_end":1034,"column_start":5,"column_end":9},"name":"Zero","qualname":"::SampleLevel::Zero","value":"SampleLevel::Zero","parent":{"krate":0,"index":7413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7418},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35883,"byte_end":35888,"line_start":1035,"line_end":1035,"column_start":5,"column_end":10},"name":"Exact","qualname":"::SampleLevel::Exact","value":"SampleLevel::Exact(Handle<Expression>)","parent":{"krate":0,"index":7413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7421},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35914,"byte_end":35918,"line_start":1036,"line_end":1036,"column_start":5,"column_end":9},"name":"Bias","qualname":"::SampleLevel::Bias","value":"SampleLevel::Bias(Handle<Expression>)","parent":{"krate":0,"index":7413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7424},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35944,"byte_end":35952,"line_start":1037,"line_end":1037,"column_start":5,"column_end":13},"name":"Gradient","qualname":"::SampleLevel::Gradient","value":"SampleLevel::Gradient { x, y }","parent":{"krate":0,"index":7413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7413},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35845,"byte_end":35856,"line_start":1032,"line_end":1032,"column_start":10,"column_end":21},"name":"SampleLevel","qualname":"::SampleLevel","value":"pub enum SampleLevel {\n    Auto,\n    Zero,\n    Exact(Handle<Expression>),\n    Bias(Handle<Expression>),\n    Gradient {\n            x: Handle<Expression>,\n            y: Handle<Expression>,\n        },\n}","parent":null,"children":[{"krate":0,"index":7414},{"krate":0,"index":7416},{"krate":0,"index":7418},{"krate":0,"index":7421},{"krate":0,"index":7424}],"decl_id":null,"docs":" Sampling modifier to control the level of detail.\n","sig":null,"attributes":[{"value":"/ Sampling modifier to control the level of detail.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":35575,"byte_end":35628,"line_start":1027,"line_end":1027,"column_start":1,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":7437},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36333,"byte_end":36337,"line_start":1050,"line_end":1050,"column_start":5,"column_end":9},"name":"Size","qualname":"::ImageQuery::Size","value":"ImageQuery::Size { level }","parent":{"krate":0,"index":7436},"children":[],"decl_id":null,"docs":" Get the size at the specified level.\n","sig":null,"attributes":[{"value":"/ Get the size at the specified level.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36288,"byte_end":36328,"line_start":1049,"line_end":1049,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7439},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36488,"byte_end":36497,"line_start":1055,"line_end":1055,"column_start":5,"column_end":14},"name":"NumLevels","qualname":"::ImageQuery::NumLevels","value":"ImageQuery::NumLevels","parent":{"krate":0,"index":7436},"children":[],"decl_id":null,"docs":" Get the number of mipmap levels.\n","sig":null,"attributes":[{"value":"/ Get the number of mipmap levels.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36447,"byte_end":36483,"line_start":1054,"line_end":1054,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7441},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36543,"byte_end":36552,"line_start":1057,"line_end":1057,"column_start":5,"column_end":14},"name":"NumLayers","qualname":"::ImageQuery::NumLayers","value":"ImageQuery::NumLayers","parent":{"krate":0,"index":7436},"children":[],"decl_id":null,"docs":" Get the number of array layers.\n","sig":null,"attributes":[{"value":"/ Get the number of array layers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36503,"byte_end":36538,"line_start":1056,"line_end":1056,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7443},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36593,"byte_end":36603,"line_start":1059,"line_end":1059,"column_start":5,"column_end":15},"name":"NumSamples","qualname":"::ImageQuery::NumSamples","value":"ImageQuery::NumSamples","parent":{"krate":0,"index":7436},"children":[],"decl_id":null,"docs":" Get the number of samples.\n","sig":null,"attributes":[{"value":"/ Get the number of samples.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36558,"byte_end":36588,"line_start":1058,"line_end":1058,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":7436},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36271,"byte_end":36281,"line_start":1048,"line_end":1048,"column_start":10,"column_end":20},"name":"ImageQuery","qualname":"::ImageQuery","value":"pub enum ImageQuery {\n    Size {\n            level: Option<Handle<Expression>>,\n        },\n    NumLevels,\n    NumLayers,\n    NumSamples,\n}","parent":null,"children":[{"krate":0,"index":7437},{"krate":0,"index":7439},{"krate":0,"index":7441},{"krate":0,"index":7443}],"decl_id":null,"docs":" Type of an image query.\n","sig":null,"attributes":[{"value":"/ Type of an image query.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36027,"byte_end":36054,"line_start":1043,"line_end":1043,"column_start":1,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7455},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36925,"byte_end":36926,"line_start":1070,"line_end":1070,"column_start":5,"column_end":6},"name":"X","qualname":"::SwizzleComponent::X","value":"SwizzleComponent::X","parent":{"krate":0,"index":7454},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36917,"byte_end":36920,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7458},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36944,"byte_end":36945,"line_start":1072,"line_end":1072,"column_start":5,"column_end":6},"name":"Y","qualname":"::SwizzleComponent::Y","value":"SwizzleComponent::Y","parent":{"krate":0,"index":7454},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36936,"byte_end":36939,"line_start":1071,"line_end":1071,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7461},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36963,"byte_end":36964,"line_start":1074,"line_end":1074,"column_start":5,"column_end":6},"name":"Z","qualname":"::SwizzleComponent::Z","value":"SwizzleComponent::Z","parent":{"krate":0,"index":7454},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36955,"byte_end":36958,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7464},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36982,"byte_end":36983,"line_start":1076,"line_end":1076,"column_start":5,"column_end":6},"name":"W","qualname":"::SwizzleComponent::W","value":"SwizzleComponent::W","parent":{"krate":0,"index":7454},"children":[],"decl_id":null,"docs":"\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36974,"byte_end":36977,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}}]},{"kind":"Enum","id":{"krate":0,"index":7454},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36894,"byte_end":36910,"line_start":1068,"line_end":1068,"column_start":10,"column_end":26},"name":"SwizzleComponent","qualname":"::SwizzleComponent","value":"pub enum SwizzleComponent { X = , Y = , Z = , W = , }","parent":null,"children":[{"krate":0,"index":7455},{"krate":0,"index":7458},{"krate":0,"index":7461},{"krate":0,"index":7464}],"decl_id":null,"docs":" Component selection for a vector swizzle.\n","sig":null,"attributes":[{"value":"/ Component selection for a vector swizzle.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36608,"byte_end":36653,"line_start":1062,"line_end":1062,"column_start":1,"column_end":46}},{"value":"repr(u8)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":36654,"byte_end":36665,"line_start":1063,"line_end":1063,"column_start":1,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7479},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":37260,"byte_end":37267,"line_start":1085,"line_end":1085,"column_start":16,"column_end":23},"name":"Barrier","qualname":"::Barrier","value":"Barrier {  }","parent":null,"children":[{"krate":0,"index":7480}],"decl_id":null,"docs":" Memory barrier flags.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7513},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":37355,"byte_end":37362,"line_start":1087,"line_end":1087,"column_start":15,"column_end":22},"name":"STORAGE","qualname":"::Barrier::STORAGE","value":"Self","parent":{"krate":0,"index":7512},"children":[],"decl_id":null,"docs":" Barrier affects all `AddressSpace::Storage` accesses.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":7514},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":37452,"byte_end":37462,"line_start":1089,"line_end":1089,"column_start":15,"column_end":25},"name":"WORK_GROUP","qualname":"::Barrier::WORK_GROUP","value":"Self","parent":{"krate":0,"index":7512},"children":[],"decl_id":null,"docs":" Barrier affects all `AddressSpace::WorkGroup` accesses.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7572},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40114,"byte_end":40120,"line_start":1148,"line_end":1148,"column_start":5,"column_end":11},"name":"Access","qualname":"::Expression::Access","value":"Expression::Access { base, index }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Array access with a computed index.","sig":null,"attributes":[{"value":"/ Array access with a computed index.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":37866,"byte_end":37905,"line_start":1102,"line_end":1102,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":37910,"byte_end":37913,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ ## Typing rules","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":37918,"byte_end":37937,"line_start":1104,"line_end":1104,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":37942,"byte_end":37945,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ The `base` operand must be some composite type: [`Vector`], [`Matrix`],","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":37950,"byte_end":38025,"line_start":1106,"line_end":1106,"column_start":5,"column_end":80}},{"value":"/ [`Array`], a [`Pointer`] to one of those, or a [`ValuePointer`] with a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38030,"byte_end":38104,"line_start":1107,"line_end":1107,"column_start":5,"column_end":79}},{"value":"/ `size`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38109,"byte_end":38120,"line_start":1108,"line_end":1108,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38125,"byte_end":38128,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ The `index` operand must be an integer, signed or unsigned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38133,"byte_end":38196,"line_start":1110,"line_end":1110,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38201,"byte_end":38204,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ Indexing a [`Vector`] or [`Array`] produces a value of its element type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38209,"byte_end":38285,"line_start":1112,"line_end":1112,"column_start":5,"column_end":81}},{"value":"/ Indexing a [`Matrix`] produces a [`Vector`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38290,"byte_end":38338,"line_start":1113,"line_end":1113,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38343,"byte_end":38346,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ Indexing a [`Pointer`] to any of the above produces a pointer to the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38351,"byte_end":38423,"line_start":1115,"line_end":1115,"column_start":5,"column_end":77}},{"value":"/ element/component type, in the same [`space`]. In the case of [`Array`],","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38428,"byte_end":38504,"line_start":1116,"line_end":1116,"column_start":5,"column_end":81}},{"value":"/ the result is an actual [`Pointer`], but for vectors and matrices, there","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38509,"byte_end":38585,"line_start":1117,"line_end":1117,"column_start":5,"column_end":81}},{"value":"/ may not be any type in the arena representing the component's type, so","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38590,"byte_end":38664,"line_start":1118,"line_end":1118,"column_start":5,"column_end":79}},{"value":"/ those produce [`ValuePointer`] types equivalent to the appropriate","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38669,"byte_end":38739,"line_start":1119,"line_end":1119,"column_start":5,"column_end":75}},{"value":"/ [`Pointer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38744,"byte_end":38760,"line_start":1120,"line_end":1120,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38765,"byte_end":38768,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ ## Dynamic indexing restrictions","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38773,"byte_end":38809,"line_start":1122,"line_end":1122,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38814,"byte_end":38817,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ To accommodate restrictions in some of the shader languages that Naga","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38822,"byte_end":38895,"line_start":1124,"line_end":1124,"column_start":5,"column_end":78}},{"value":"/ targets, it is not permitted to subscript a matrix or array with a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38900,"byte_end":38970,"line_start":1125,"line_end":1125,"column_start":5,"column_end":75}},{"value":"/ dynamically computed index unless that matrix or array appears behind a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":38975,"byte_end":39050,"line_start":1126,"line_end":1126,"column_start":5,"column_end":80}},{"value":"/ pointer. In other words, if the inner type of `base` is [`Array`] or","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39055,"byte_end":39127,"line_start":1127,"line_end":1127,"column_start":5,"column_end":77}},{"value":"/ [`Matrix`], then `index` must be a constant. But if the type of `base`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39132,"byte_end":39206,"line_start":1128,"line_end":1128,"column_start":5,"column_end":79}},{"value":"/ is a [`Pointer`] to an array or matrix or a [`ValuePointer`] with a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39211,"byte_end":39282,"line_start":1129,"line_end":1129,"column_start":5,"column_end":76}},{"value":"/ `size`, then the index may be any expression of integer type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39287,"byte_end":39352,"line_start":1130,"line_end":1130,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39357,"byte_end":39360,"line_start":1131,"line_end":1131,"column_start":5,"column_end":8}},{"value":"/ You can use the [`Expression::is_dynamic_index`] method to determine","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39365,"byte_end":39437,"line_start":1132,"line_end":1132,"column_start":5,"column_end":77}},{"value":"/ whether a given index expression requires matrix or array base operands","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39442,"byte_end":39517,"line_start":1133,"line_end":1133,"column_start":5,"column_end":80}},{"value":"/ to be behind a pointer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39522,"byte_end":39549,"line_start":1134,"line_end":1134,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39554,"byte_end":39557,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ (It would be simpler to always require the use of `AccessIndex` when","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39562,"byte_end":39634,"line_start":1136,"line_end":1136,"column_start":5,"column_end":77}},{"value":"/ subscripting arrays and matrices that are not behind pointers, but to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39639,"byte_end":39712,"line_start":1137,"line_end":1137,"column_start":5,"column_end":78}},{"value":"/ accommodate existing front ends, Naga also permits `Access`, with a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39717,"byte_end":39788,"line_start":1138,"line_end":1138,"column_start":5,"column_end":76}},{"value":"/ restricted `index`.)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39793,"byte_end":39817,"line_start":1139,"line_end":1139,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39822,"byte_end":39825,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ [`Vector`]: TypeInner::Vector","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39830,"byte_end":39863,"line_start":1141,"line_end":1141,"column_start":5,"column_end":38}},{"value":"/ [`Matrix`]: TypeInner::Matrix","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39868,"byte_end":39901,"line_start":1142,"line_end":1142,"column_start":5,"column_end":38}},{"value":"/ [`Array`]: TypeInner::Array","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39906,"byte_end":39937,"line_start":1143,"line_end":1143,"column_start":5,"column_end":36}},{"value":"/ [`Pointer`]: TypeInner::Pointer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39942,"byte_end":39977,"line_start":1144,"line_end":1144,"column_start":5,"column_end":40}},{"value":"/ [`space`]: TypeInner::Pointer::space","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":39982,"byte_end":40022,"line_start":1145,"line_end":1145,"column_start":5,"column_end":45}},{"value":"/ [`ValuePointer`]: TypeInner::ValuePointer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40027,"byte_end":40072,"line_start":1146,"line_end":1146,"column_start":5,"column_end":50}},{"value":"/ [`Float`]: ScalarKind::Float","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40077,"byte_end":40109,"line_start":1147,"line_end":1147,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":7575},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40369,"byte_end":40380,"line_start":1156,"line_end":1156,"column_start":5,"column_end":16},"name":"AccessIndex","qualname":"::Expression::AccessIndex","value":"Expression::AccessIndex { base, index }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Access the same types as [`Access`], plus [`Struct`] with a known index.","sig":null,"attributes":[{"value":"/ Access the same types as [`Access`], plus [`Struct`] with a known index.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40203,"byte_end":40279,"line_start":1152,"line_end":1152,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40284,"byte_end":40287,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ [`Access`]: Expression::Access","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40292,"byte_end":40326,"line_start":1154,"line_end":1154,"column_start":5,"column_end":39}},{"value":"/ [`Struct`]: TypeInner::Struct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40331,"byte_end":40364,"line_start":1155,"line_end":1155,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7578},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40472,"byte_end":40480,"line_start":1161,"line_end":1161,"column_start":5,"column_end":13},"name":"Constant","qualname":"::Expression::Constant","value":"Expression::Constant(Handle<Constant>)","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Constant value.\n","sig":null,"attributes":[{"value":"/ Constant value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40448,"byte_end":40467,"line_start":1160,"line_end":1160,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":7581},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40540,"byte_end":40545,"line_start":1163,"line_end":1163,"column_start":5,"column_end":10},"name":"Splat","qualname":"::Expression::Splat","value":"Expression::Splat { size, value }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Splat scalar into a vector.\n","sig":null,"attributes":[{"value":"/ Splat scalar into a vector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40504,"byte_end":40535,"line_start":1162,"line_end":1162,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":7584},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40644,"byte_end":40651,"line_start":1168,"line_end":1168,"column_start":5,"column_end":12},"name":"Swizzle","qualname":"::Expression::Swizzle","value":"Expression::Swizzle { size, vector, pattern }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Vector swizzle.\n","sig":null,"attributes":[{"value":"/ Vector swizzle.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40620,"byte_end":40639,"line_start":1167,"line_end":1167,"column_start":5,"column_end":24}}]},{"kind":"StructVariant","id":{"krate":0,"index":7589},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40797,"byte_end":40804,"line_start":1174,"line_end":1174,"column_start":5,"column_end":12},"name":"Compose","qualname":"::Expression::Compose","value":"Expression::Compose { ty, components }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Composite expression.\n","sig":null,"attributes":[{"value":"/ Composite expression.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40767,"byte_end":40792,"line_start":1173,"line_end":1173,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7592},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41244,"byte_end":41260,"line_start":1187,"line_end":1187,"column_start":5,"column_end":21},"name":"FunctionArgument","qualname":"::Expression::FunctionArgument","value":"Expression::FunctionArgument(u32)","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Reference a function parameter, by its index.","sig":null,"attributes":[{"value":"/ Reference a function parameter, by its index.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40890,"byte_end":40939,"line_start":1179,"line_end":1179,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40944,"byte_end":40947,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ A `FunctionArgument` expression evaluates to a pointer to the argument's","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":40952,"byte_end":41028,"line_start":1181,"line_end":1181,"column_start":5,"column_end":81}},{"value":"/ value. You must use a [`Load`] expression to retrieve its value, or a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41033,"byte_end":41106,"line_start":1182,"line_end":1182,"column_start":5,"column_end":78}},{"value":"/ [`Store`] statement to assign it a new value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41111,"byte_end":41160,"line_start":1183,"line_end":1183,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41165,"byte_end":41168,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ [`Load`]: Expression::Load","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41173,"byte_end":41203,"line_start":1185,"line_end":1185,"column_start":5,"column_end":35}},{"value":"/ [`Store`]: Statement::Store","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41208,"byte_end":41239,"line_start":1186,"line_end":1186,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7595},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41944,"byte_end":41958,"line_start":1203,"line_end":1203,"column_start":5,"column_end":19},"name":"GlobalVariable","qualname":"::Expression::GlobalVariable","value":"Expression::GlobalVariable(Handle<GlobalVariable>)","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Reference a global variable.","sig":null,"attributes":[{"value":"/ Reference a global variable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41272,"byte_end":41304,"line_start":1189,"line_end":1189,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41309,"byte_end":41312,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ If the given `GlobalVariable`'s [`space`] is [`AddressSpace::Handle`],","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41317,"byte_end":41391,"line_start":1191,"line_end":1191,"column_start":5,"column_end":79}},{"value":"/ then the variable stores some opaque type like a sampler or an image,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41396,"byte_end":41469,"line_start":1192,"line_end":1192,"column_start":5,"column_end":78}},{"value":"/ and a `GlobalVariable` expression referring to it produces the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41474,"byte_end":41540,"line_start":1193,"line_end":1193,"column_start":5,"column_end":71}},{"value":"/ variable's value directly.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41545,"byte_end":41575,"line_start":1194,"line_end":1194,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41580,"byte_end":41583,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ For any other address space, a `GlobalVariable` expression produces a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41588,"byte_end":41661,"line_start":1196,"line_end":1196,"column_start":5,"column_end":78}},{"value":"/ pointer to the variable's value. You must use a [`Load`] expression to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41666,"byte_end":41740,"line_start":1197,"line_end":1197,"column_start":5,"column_end":79}},{"value":"/ retrieve its value, or a [`Store`] statement to assign it a new value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41745,"byte_end":41819,"line_start":1198,"line_end":1198,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41824,"byte_end":41827,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ [`space`]: GlobalVariable::space","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41832,"byte_end":41868,"line_start":1200,"line_end":1200,"column_start":5,"column_end":41}},{"value":"/ [`Load`]: Expression::Load","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41873,"byte_end":41903,"line_start":1201,"line_end":1201,"column_start":5,"column_end":35}},{"value":"/ [`Store`]: Statement::Store","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41908,"byte_end":41939,"line_start":1202,"line_end":1202,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7598},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":42279,"byte_end":42292,"line_start":1210,"line_end":1210,"column_start":5,"column_end":18},"name":"LocalVariable","qualname":"::Expression::LocalVariable","value":"Expression::LocalVariable(Handle<LocalVariable>)","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Reference a local variable.","sig":null,"attributes":[{"value":"/ Reference a local variable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":41989,"byte_end":42020,"line_start":1205,"line_end":1205,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":42025,"byte_end":42028,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ A `LocalVariable` expression evaluates to a pointer to the variable's value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":42033,"byte_end":42113,"line_start":1207,"line_end":1207,"column_start":5,"column_end":85}},{"value":"/ You must use a [`Load`](Expression::Load) expression to retrieve its value,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":42118,"byte_end":42197,"line_start":1208,"line_end":1208,"column_start":5,"column_end":84}},{"value":"/ or a [`Store`](Statement::Store) statement to assign it a new value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":42202,"byte_end":42274,"line_start":1209,"line_end":1209,"column_start":5,"column_end":77}}]},{"kind":"StructVariant","id":{"krate":0,"index":7601},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":42499,"byte_end":42503,"line_start":1216,"line_end":1216,"column_start":5,"column_end":9},"name":"Load","qualname":"::Expression::Load","value":"Expression::Load { pointer }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Load a value indirectly.","sig":null,"attributes":[{"value":"/ Load a value indirectly.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":42322,"byte_end":42350,"line_start":1212,"line_end":1212,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":42355,"byte_end":42358,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ For [`TypeInner::Atomic`] the result is a corresponding scalar.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":42363,"byte_end":42430,"line_start":1214,"line_end":1214,"column_start":5,"column_end":72}},{"value":"/ For other types behind the pointer<T>, the result is T.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":42435,"byte_end":42494,"line_start":1215,"line_end":1215,"column_start":5,"column_end":64}}]},{"kind":"StructVariant","id":{"krate":0,"index":7603},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":42597,"byte_end":42608,"line_start":1218,"line_end":1218,"column_start":5,"column_end":16},"name":"ImageSample","qualname":"::Expression::ImageSample","value":"Expression::ImageSample { image, sampler, gather, coordinate, array_index, offset, level, depth_ref }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Sample a point from a sampled or a depth image.\n","sig":null,"attributes":[{"value":"/ Sample a point from a sampled or a depth image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":42541,"byte_end":42592,"line_start":1217,"line_end":1217,"column_start":5,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":7612},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43709,"byte_end":43718,"line_start":1246,"line_end":1246,"column_start":5,"column_end":14},"name":"ImageLoad","qualname":"::Expression::ImageLoad","value":"Expression::ImageLoad { image, coordinate, array_index, sample, level }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Load a texel from an image.","sig":null,"attributes":[{"value":"/ Load a texel from an image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43042,"byte_end":43073,"line_start":1231,"line_end":1231,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43078,"byte_end":43081,"line_start":1232,"line_end":1232,"column_start":5,"column_end":8}},{"value":"/ For most images, this returns a four-element vector of the same","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43086,"byte_end":43153,"line_start":1233,"line_end":1233,"column_start":5,"column_end":72}},{"value":"/ [`ScalarKind`] as the image. If the format of the image does not have","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43158,"byte_end":43231,"line_start":1234,"line_end":1234,"column_start":5,"column_end":78}},{"value":"/ four components, default values are provided: the first three components","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43236,"byte_end":43312,"line_start":1235,"line_end":1235,"column_start":5,"column_end":81}},{"value":"/ (typically R, G, and B) default to zero, and the final component","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43317,"byte_end":43385,"line_start":1236,"line_end":1236,"column_start":5,"column_end":73}},{"value":"/ (typically alpha) defaults to one.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43390,"byte_end":43428,"line_start":1237,"line_end":1237,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43433,"byte_end":43436,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ However, if the image's [`class`] is [`Depth`], then this returns a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43441,"byte_end":43512,"line_start":1239,"line_end":1239,"column_start":5,"column_end":76}},{"value":"/ [`Float`] scalar value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43517,"byte_end":43544,"line_start":1240,"line_end":1240,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43549,"byte_end":43552,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ [`ScalarKind`]: ScalarKind","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43557,"byte_end":43587,"line_start":1242,"line_end":1242,"column_start":5,"column_end":35}},{"value":"/ [`class`]: TypeInner::Image::class","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43592,"byte_end":43630,"line_start":1243,"line_end":1243,"column_start":5,"column_end":43}},{"value":"/ [`Depth`]: ImageClass::Depth","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43635,"byte_end":43667,"line_start":1244,"line_end":1244,"column_start":5,"column_end":37}},{"value":"/ [`Float`]: ScalarKind::Float","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":43672,"byte_end":43704,"line_start":1245,"line_end":1245,"column_start":5,"column_end":37}}]},{"kind":"StructVariant","id":{"krate":0,"index":7618},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":45900,"byte_end":45910,"line_start":1298,"line_end":1298,"column_start":5,"column_end":15},"name":"ImageQuery","qualname":"::Expression::ImageQuery","value":"Expression::ImageQuery { image, query }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Query information from an image.\n","sig":null,"attributes":[{"value":"/ Query information from an image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":45859,"byte_end":45895,"line_start":1297,"line_end":1297,"column_start":5,"column_end":41}}]},{"kind":"StructVariant","id":{"krate":0,"index":7621},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":46019,"byte_end":46024,"line_start":1303,"line_end":1303,"column_start":5,"column_end":10},"name":"Unary","qualname":"::Expression::Unary","value":"Expression::Unary { op, expr }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Apply an unary operator.\n","sig":null,"attributes":[{"value":"/ Apply an unary operator.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":45986,"byte_end":46014,"line_start":1302,"line_end":1302,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":7624},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":46132,"byte_end":46138,"line_start":1308,"line_end":1308,"column_start":5,"column_end":11},"name":"Binary","qualname":"::Expression::Binary","value":"Expression::Binary { op, left, right }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Apply a binary operator.\n","sig":null,"attributes":[{"value":"/ Apply a binary operator.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":46099,"byte_end":46127,"line_start":1307,"line_end":1307,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":7628},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":46447,"byte_end":46453,"line_start":1317,"line_end":1317,"column_start":5,"column_end":11},"name":"Select","qualname":"::Expression::Select","value":"Expression::Select { condition, accept, reject }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Select between two values based on a condition.","sig":null,"attributes":[{"value":"/ Select between two values based on a condition.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":46249,"byte_end":46300,"line_start":1313,"line_end":1313,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":46305,"byte_end":46308,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ Note that, because expressions have no side effects, it is unobservable","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":46313,"byte_end":46388,"line_start":1315,"line_end":1315,"column_start":5,"column_end":80}},{"value":"/ whether the non-selected branch is evaluated.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":46393,"byte_end":46442,"line_start":1316,"line_end":1316,"column_start":5,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":7632},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":46652,"byte_end":46662,"line_start":1324,"line_end":1324,"column_start":5,"column_end":15},"name":"Derivative","qualname":"::Expression::Derivative","value":"Expression::Derivative { axis, expr }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Compute the derivative on an axis.\n","sig":null,"attributes":[{"value":"/ Compute the derivative on an axis.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":46609,"byte_end":46647,"line_start":1323,"line_end":1323,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":7635},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":46796,"byte_end":46806,"line_start":1330,"line_end":1330,"column_start":5,"column_end":15},"name":"Relational","qualname":"::Expression::Relational","value":"Expression::Relational { fun, argument }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Call a relational function.\n","sig":null,"attributes":[{"value":"/ Call a relational function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":46760,"byte_end":46791,"line_start":1329,"line_end":1329,"column_start":5,"column_end":36}}]},{"kind":"StructVariant","id":{"krate":0,"index":7638},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":46920,"byte_end":46924,"line_start":1335,"line_end":1335,"column_start":5,"column_end":9},"name":"Math","qualname":"::Expression::Math","value":"Expression::Math { fun, arg, arg1, arg2, arg3 }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Call a math function\n","sig":null,"attributes":[{"value":"/ Call a math function","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":46891,"byte_end":46915,"line_start":1334,"line_end":1334,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":7644},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":47168,"byte_end":47170,"line_start":1343,"line_end":1343,"column_start":5,"column_end":7},"name":"As","qualname":"::Expression::As","value":"Expression::As { expr, kind, convert }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Cast a simple type to another kind.\n","sig":null,"attributes":[{"value":"/ Cast a simple type to another kind.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":47124,"byte_end":47163,"line_start":1342,"line_end":1342,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7648},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":47518,"byte_end":47528,"line_start":1353,"line_end":1353,"column_start":5,"column_end":15},"name":"CallResult","qualname":"::Expression::CallResult","value":"Expression::CallResult(Handle<Function>)","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Result of calling another function.\n","sig":null,"attributes":[{"value":"/ Result of calling another function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":47474,"byte_end":47513,"line_start":1352,"line_end":1352,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":7651},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":47591,"byte_end":47603,"line_start":1355,"line_end":1355,"column_start":5,"column_end":17},"name":"AtomicResult","qualname":"::Expression::AtomicResult","value":"Expression::AtomicResult { kind, width, comparison }","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Result of an atomic operation.\n","sig":null,"attributes":[{"value":"/ Result of an atomic operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":47552,"byte_end":47586,"line_start":1354,"line_end":1354,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7655},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":47987,"byte_end":47998,"line_start":1365,"line_end":1365,"column_start":5,"column_end":16},"name":"ArrayLength","qualname":"::Expression::ArrayLength","value":"Expression::ArrayLength(Handle<Expression>)","parent":{"krate":0,"index":7571},"children":[],"decl_id":null,"docs":" Get the length of an array.\n The expression must resolve to a pointer to an array with a dynamic size.","sig":null,"attributes":[{"value":"/ Get the length of an array.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":47691,"byte_end":47722,"line_start":1360,"line_end":1360,"column_start":5,"column_end":36}},{"value":"/ The expression must resolve to a pointer to an array with a dynamic size.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":47727,"byte_end":47804,"line_start":1361,"line_end":1361,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":47809,"byte_end":47812,"line_start":1362,"line_end":1362,"column_start":5,"column_end":8}},{"value":"/ This doesn't match the semantics of spirv's `OpArrayLength`, which must be passed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":47817,"byte_end":47902,"line_start":1363,"line_end":1363,"column_start":5,"column_end":90}},{"value":"/ a pointer to a structure containing a runtime array in its' last field.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":47907,"byte_end":47982,"line_start":1364,"line_end":1364,"column_start":5,"column_end":80}}]},{"kind":"Enum","id":{"krate":0,"index":7571},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":37849,"byte_end":37859,"line_start":1101,"line_end":1101,"column_start":10,"column_end":20},"name":"Expression","qualname":"::Expression","value":"pub enum Expression {\n    Access {\n            base: Handle<Expression>,\n            index: Handle<Expression>,\n        },\n    AccessIndex {\n            base: Handle<Expression>,\n            index: u32,\n        },\n    Constant(Handle<Constant>),\n    Splat {\n            size: VectorSize,\n            value: Handle<Expression>,\n        },\n    Swizzle {\n            size: VectorSize,\n            vector: Handle<Expression>,\n            pattern: [SwizzleComponent; ],\n        },\n    Compose {\n            ty: Handle<Type>,\n            components: Vec<Handle<Expression>>,\n        },\n    FunctionArgument(u32),\n    GlobalVariable(Handle<GlobalVariable>),\n    LocalVariable(Handle<LocalVariable>),\n    Load {\n            pointer: Handle<Expression>,\n        },\n    ImageSample {\n            image: Handle<Expression>,\n            sampler: Handle<Expression>,\n            gather: Option<SwizzleComponent>,\n            coordinate: Handle<Expression>,\n            array_index: Option<Handle<Expression>>,\n            offset: Option<Handle<Constant>>,\n            level: SampleLevel,\n            depth_ref: Option<Handle<Expression>>,\n        },\n    ImageLoad {\n            image: Handle<Expression>,\n            coordinate: Handle<Expression>,\n            array_index: Option<Handle<Expression>>,\n            sample: Option<Handle<Expression>>,\n            level: Option<Handle<Expression>>,\n        },\n    ImageQuery {\n            image: Handle<Expression>,\n            query: ImageQuery,\n        },\n    Unary {\n            op: UnaryOperator,\n            expr: Handle<Expression>,\n        },\n    Binary {\n            op: BinaryOperator,\n            left: Handle<Expression>,\n            right: Handle<Expression>,\n        },\n    Select {\n            condition: Handle<Expression>,\n            accept: Handle<Expression>,\n            reject: Handle<Expression>,\n        },\n    Derivative {\n            axis: DerivativeAxis,\n            expr: Handle<Expression>,\n        },\n    Relational {\n            fun: RelationalFunction,\n            argument: Handle<Expression>,\n        },\n    Math {\n            fun: MathFunction,\n            arg: Handle<Expression>,\n            arg1: Option<Handle<Expression>>,\n            arg2: Option<Handle<Expression>>,\n            arg3: Option<Handle<Expression>>,\n        },\n    As {\n            expr: Handle<Expression>,\n            kind: ScalarKind,\n            convert: Option<Bytes>,\n        },\n    CallResult(Handle<Function>),\n    AtomicResult {\n            kind: ScalarKind,\n            width: Bytes,\n            comparison: bool,\n        },\n    ArrayLength(Handle<Expression>),\n}","parent":null,"children":[{"krate":0,"index":7572},{"krate":0,"index":7575},{"krate":0,"index":7578},{"krate":0,"index":7581},{"krate":0,"index":7584},{"krate":0,"index":7589},{"krate":0,"index":7592},{"krate":0,"index":7595},{"krate":0,"index":7598},{"krate":0,"index":7601},{"krate":0,"index":7603},{"krate":0,"index":7612},{"krate":0,"index":7618},{"krate":0,"index":7621},{"krate":0,"index":7624},{"krate":0,"index":7628},{"krate":0,"index":7632},{"krate":0,"index":7635},{"krate":0,"index":7638},{"krate":0,"index":7644},{"krate":0,"index":7648},{"krate":0,"index":7651},{"krate":0,"index":7655}],"decl_id":null,"docs":" An expression that can be evaluated to obtain a value.","sig":null,"attributes":[{"value":"/ An expression that can be evaluated to obtain a value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":37479,"byte_end":37537,"line_start":1093,"line_end":1093,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":37538,"byte_end":37541,"line_start":1094,"line_end":1094,"column_start":1,"column_end":4}},{"value":"/ This is a Single Static Assignment (SSA) scheme similar to SPIR-V.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":37542,"byte_end":37612,"line_start":1095,"line_end":1095,"column_start":1,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7663},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":48373,"byte_end":48380,"line_start":1377,"line_end":1377,"column_start":5,"column_end":12},"name":"Integer","qualname":"::SwitchValue::Integer","value":"SwitchValue::Integer(i32)","parent":{"krate":0,"index":7662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7666},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":48391,"byte_end":48398,"line_start":1378,"line_end":1378,"column_start":5,"column_end":12},"name":"Default","qualname":"::SwitchValue::Default","value":"SwitchValue::Default","parent":{"krate":0,"index":7662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7662},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":48355,"byte_end":48366,"line_start":1376,"line_end":1376,"column_start":10,"column_end":21},"name":"SwitchValue","qualname":"::SwitchValue","value":"pub enum SwitchValue { Integer(i32), Default, }","parent":null,"children":[{"krate":0,"index":7663},{"krate":0,"index":7666}],"decl_id":null,"docs":" The value of the switch case.\n","sig":null,"attributes":[{"value":"/ The value of the switch case.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":48046,"byte_end":48079,"line_start":1370,"line_end":1370,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":7672},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":48715,"byte_end":48725,"line_start":1387,"line_end":1387,"column_start":12,"column_end":22},"name":"SwitchCase","qualname":"::SwitchCase","value":"SwitchCase { value, body, fall_through }","parent":null,"children":[{"krate":0,"index":7673},{"krate":0,"index":7674},{"krate":0,"index":7675}],"decl_id":null,"docs":" A case for a switch statement.\n","sig":null,"attributes":[{"value":"/ A case for a switch statement.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":48403,"byte_end":48437,"line_start":1381,"line_end":1381,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":7673},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":48791,"byte_end":48796,"line_start":1389,"line_end":1389,"column_start":9,"column_end":14},"name":"value","qualname":"::SwitchCase::value","value":"SwitchValue","parent":{"krate":0,"index":7672},"children":[],"decl_id":null,"docs":" Value, upon which the case is considered true.\n","sig":null,"attributes":[{"value":"/ Value, upon which the case is considered true.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":48732,"byte_end":48782,"line_start":1388,"line_end":1388,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":7674},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":48845,"byte_end":48849,"line_start":1391,"line_end":1391,"column_start":9,"column_end":13},"name":"body","qualname":"::SwitchCase::body","value":"block::Block","parent":{"krate":0,"index":7672},"children":[],"decl_id":null,"docs":" Body of the case.\n","sig":null,"attributes":[{"value":"/ Body of the case.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":48815,"byte_end":48836,"line_start":1390,"line_end":1390,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":7675},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":48960,"byte_end":48972,"line_start":1394,"line_end":1394,"column_start":9,"column_end":21},"name":"fall_through","qualname":"::SwitchCase::fall_through","value":"bool","parent":{"krate":0,"index":7672},"children":[],"decl_id":null,"docs":" If true, the control flow continues to the next case in the list,\n or default.\n","sig":null,"attributes":[{"value":"/ If true, the control flow continues to the next case in the list,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":48862,"byte_end":48931,"line_start":1392,"line_end":1392,"column_start":5,"column_end":74}},{"value":"/ or default.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":48936,"byte_end":48951,"line_start":1393,"line_end":1393,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7681},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":49635,"byte_end":49639,"line_start":1410,"line_end":1410,"column_start":5,"column_end":9},"name":"Emit","qualname":"::Statement::Emit","value":"Statement::Emit(Range<Expression>)","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" Emit a range of expressions, visible to all statements that follow in this block.","sig":null,"attributes":[{"value":"/ Emit a range of expressions, visible to all statements that follow in this block.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":49411,"byte_end":49496,"line_start":1405,"line_end":1405,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":49501,"byte_end":49504,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ See the [module-level documentation][emit] for details.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":49509,"byte_end":49568,"line_start":1407,"line_end":1407,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":49573,"byte_end":49576,"line_start":1408,"line_end":1408,"column_start":5,"column_end":8}},{"value":"/ [emit]: index.html#expression-evaluation-time","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":49581,"byte_end":49630,"line_start":1409,"line_end":1409,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7684},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":49737,"byte_end":49742,"line_start":1412,"line_end":1412,"column_start":5,"column_end":10},"name":"Block","qualname":"::Statement::Block","value":"Statement::Block(Block)","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" A block containing more statements, to be executed sequentially.\n","sig":null,"attributes":[{"value":"/ A block containing more statements, to be executed sequentially.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":49664,"byte_end":49732,"line_start":1411,"line_end":1411,"column_start":5,"column_end":73}}]},{"kind":"StructVariant","id":{"krate":0,"index":7687},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":49842,"byte_end":49844,"line_start":1414,"line_end":1414,"column_start":5,"column_end":7},"name":"If","qualname":"::Statement::If","value":"Statement::If { condition, accept, reject }","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" Conditionally executes one of two blocks, based on the value of the condition.\n","sig":null,"attributes":[{"value":"/ Conditionally executes one of two blocks, based on the value of the condition.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":49755,"byte_end":49837,"line_start":1413,"line_end":1413,"column_start":5,"column_end":87}}]},{"kind":"StructVariant","id":{"krate":0,"index":7691},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50041,"byte_end":50047,"line_start":1420,"line_end":1420,"column_start":5,"column_end":11},"name":"Switch","qualname":"::Statement::Switch","value":"Statement::Switch { selector, cases }","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" Conditionally executes one of multiple blocks, based on the value of the selector.\n","sig":null,"attributes":[{"value":"/ Conditionally executes one of multiple blocks, based on the value of the selector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":49950,"byte_end":50036,"line_start":1419,"line_end":1419,"column_start":5,"column_end":91}}]},{"kind":"StructVariant","id":{"krate":0,"index":7694},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51590,"byte_end":51594,"line_start":1454,"line_end":1454,"column_start":5,"column_end":9},"name":"Loop","qualname":"::Statement::Loop","value":"Statement::Loop { body, continuing, break_if }","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" Executes a block repeatedly.","sig":null,"attributes":[{"value":"/ Executes a block repeatedly.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50138,"byte_end":50170,"line_start":1425,"line_end":1425,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50175,"byte_end":50178,"line_start":1426,"line_end":1426,"column_start":5,"column_end":8}},{"value":"/ Each iteration of the loop executes the `body` block, followed by the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50183,"byte_end":50256,"line_start":1427,"line_end":1427,"column_start":5,"column_end":78}},{"value":"/ `continuing` block.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50261,"byte_end":50284,"line_start":1428,"line_end":1428,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50289,"byte_end":50292,"line_start":1429,"line_end":1429,"column_start":5,"column_end":8}},{"value":"/ Executing a [`Break`], [`Return`] or [`Kill`] statement exits the loop.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50297,"byte_end":50372,"line_start":1430,"line_end":1430,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50377,"byte_end":50380,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ A [`Continue`] statement in `body` jumps to the `continuing` block. The","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50385,"byte_end":50460,"line_start":1432,"line_end":1432,"column_start":5,"column_end":80}},{"value":"/ `continuing` block is meant to be used to represent structures like the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50465,"byte_end":50540,"line_start":1433,"line_end":1433,"column_start":5,"column_end":80}},{"value":"/ third expression of a C-style `for` loop head, to which `continue`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50545,"byte_end":50615,"line_start":1434,"line_end":1434,"column_start":5,"column_end":75}},{"value":"/ statements in the loop's body jump.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50620,"byte_end":50659,"line_start":1435,"line_end":1435,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50664,"byte_end":50667,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ The `continuing` block and its substatements must not contain `Return`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50672,"byte_end":50746,"line_start":1437,"line_end":1437,"column_start":5,"column_end":79}},{"value":"/ or `Kill` statements, or any `Break` or `Continue` statements targeting","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50751,"byte_end":50826,"line_start":1438,"line_end":1438,"column_start":5,"column_end":80}},{"value":"/ this loop. (It may have `Break` and `Continue` statements targeting","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50831,"byte_end":50902,"line_start":1439,"line_end":1439,"column_start":5,"column_end":76}},{"value":"/ loops or switches nested within the `continuing` block.)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50907,"byte_end":50967,"line_start":1440,"line_end":1440,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50972,"byte_end":50975,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ If present, `break_if` is an expression which is evaluated after the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":50980,"byte_end":51052,"line_start":1442,"line_end":1442,"column_start":5,"column_end":77}},{"value":"/ continuing block. If its value is true, control continues after the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51057,"byte_end":51128,"line_start":1443,"line_end":1443,"column_start":5,"column_end":76}},{"value":"/ `Loop` statement, rather than branching back to the top of body as","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51133,"byte_end":51203,"line_start":1444,"line_end":1444,"column_start":5,"column_end":75}},{"value":"/ usual. The `break_if` expression corresponds to a \"break if\" statement","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51208,"byte_end":51282,"line_start":1445,"line_end":1445,"column_start":5,"column_end":79}},{"value":"/ in WGSL, or a loop whose back edge is an `OpBranchConditional`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51287,"byte_end":51353,"line_start":1446,"line_end":1446,"column_start":5,"column_end":71}},{"value":"/ instruction in SPIR-V.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51358,"byte_end":51384,"line_start":1447,"line_end":1447,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51389,"byte_end":51392,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ [`Break`]: Statement::Break","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51397,"byte_end":51428,"line_start":1449,"line_end":1449,"column_start":5,"column_end":36}},{"value":"/ [`Continue`]: Statement::Continue","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51433,"byte_end":51470,"line_start":1450,"line_end":1450,"column_start":5,"column_end":42}},{"value":"/ [`Kill`]: Statement::Kill","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51475,"byte_end":51504,"line_start":1451,"line_end":1451,"column_start":5,"column_end":34}},{"value":"/ [`Return`]: Statement::Return","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51509,"byte_end":51542,"line_start":1452,"line_end":1452,"column_start":5,"column_end":38}},{"value":"/ [`break if`]: Self::Loop::break_if","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51547,"byte_end":51585,"line_start":1453,"line_end":1453,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7698},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52034,"byte_end":52039,"line_start":1468,"line_end":1468,"column_start":5,"column_end":10},"name":"Break","qualname":"::Statement::Break","value":"Statement::Break","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" Exits the innermost enclosing [`Loop`] or [`Switch`].","sig":null,"attributes":[{"value":"/ Exits the innermost enclosing [`Loop`] or [`Switch`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51703,"byte_end":51760,"line_start":1460,"line_end":1460,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51765,"byte_end":51768,"line_start":1461,"line_end":1461,"column_start":5,"column_end":8}},{"value":"/ A `Break` statement may only appear within a [`Loop`] or [`Switch`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51773,"byte_end":51844,"line_start":1462,"line_end":1462,"column_start":5,"column_end":76}},{"value":"/ statement. It may not break out of a [`Loop`] from within the loop's","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51849,"byte_end":51921,"line_start":1463,"line_end":1463,"column_start":5,"column_end":77}},{"value":"/ `continuing` block.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51926,"byte_end":51949,"line_start":1464,"line_end":1464,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51954,"byte_end":51957,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ [`Loop`]: Statement::Loop","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51962,"byte_end":51991,"line_start":1466,"line_end":1466,"column_start":5,"column_end":34}},{"value":"/ [`Switch`]: Statement::Switch","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":51996,"byte_end":52029,"line_start":1467,"line_end":1467,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7700},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52365,"byte_end":52373,"line_start":1477,"line_end":1477,"column_start":5,"column_end":13},"name":"Continue","qualname":"::Statement::Continue","value":"Statement::Continue","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" Skips to the `continuing` block of the innermost enclosing [`Loop`].","sig":null,"attributes":[{"value":"/ Skips to the `continuing` block of the innermost enclosing [`Loop`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52046,"byte_end":52118,"line_start":1470,"line_end":1470,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52123,"byte_end":52126,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ A `Continue` statement may only appear within the `body` block of the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52131,"byte_end":52204,"line_start":1472,"line_end":1472,"column_start":5,"column_end":78}},{"value":"/ innermost enclosing [`Loop`] statement. It must not appear within that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52209,"byte_end":52283,"line_start":1473,"line_end":1473,"column_start":5,"column_end":79}},{"value":"/ loop's `continuing` block.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52288,"byte_end":52318,"line_start":1474,"line_end":1474,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52323,"byte_end":52326,"line_start":1475,"line_end":1475,"column_start":5,"column_end":8}},{"value":"/ [`Loop`]: Statement::Loop","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52331,"byte_end":52360,"line_start":1476,"line_end":1476,"column_start":5,"column_end":34}}]},{"kind":"StructVariant","id":{"krate":0,"index":7702},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52594,"byte_end":52600,"line_start":1485,"line_end":1485,"column_start":5,"column_end":11},"name":"Return","qualname":"::Statement::Return","value":"Statement::Return { value }","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" Returns from the function (possibly with a value).","sig":null,"attributes":[{"value":"/ Returns from the function (possibly with a value).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52380,"byte_end":52434,"line_start":1479,"line_end":1479,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52439,"byte_end":52442,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ `Return` statements are forbidden within the `continuing` block of a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52447,"byte_end":52519,"line_start":1481,"line_end":1481,"column_start":5,"column_end":77}},{"value":"/ [`Loop`] statement.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52524,"byte_end":52547,"line_start":1482,"line_end":1482,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52552,"byte_end":52555,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ [`Loop`]: Statement::Loop","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52560,"byte_end":52589,"line_start":1484,"line_end":1484,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7704},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52843,"byte_end":52847,"line_start":1493,"line_end":1493,"column_start":5,"column_end":9},"name":"Kill","qualname":"::Statement::Kill","value":"Statement::Kill","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" Aborts the current shader execution.","sig":null,"attributes":[{"value":"/ Aborts the current shader execution.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52645,"byte_end":52685,"line_start":1487,"line_end":1487,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52690,"byte_end":52693,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ `Kill` statements are forbidden within the `continuing` block of a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52698,"byte_end":52768,"line_start":1489,"line_end":1489,"column_start":5,"column_end":75}},{"value":"/ [`Loop`] statement.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52773,"byte_end":52796,"line_start":1490,"line_end":1490,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52801,"byte_end":52804,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ [`Loop`]: Statement::Loop","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52809,"byte_end":52838,"line_start":1492,"line_end":1492,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":7706},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53051,"byte_end":53058,"line_start":1498,"line_end":1498,"column_start":5,"column_end":12},"name":"Barrier","qualname":"::Statement::Barrier","value":"Statement::Barrier(Barrier)","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" Synchronize invocations within the work group.\n The `Barrier` flags control which memory accesses should be synchronized.\n If empty, this becomes purely an execution barrier.\n","sig":null,"attributes":[{"value":"/ Synchronize invocations within the work group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52854,"byte_end":52904,"line_start":1495,"line_end":1495,"column_start":5,"column_end":55}},{"value":"/ The `Barrier` flags control which memory accesses should be synchronized.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52909,"byte_end":52986,"line_start":1496,"line_end":1496,"column_start":5,"column_end":82}},{"value":"/ If empty, this becomes purely an execution barrier.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":52991,"byte_end":53046,"line_start":1497,"line_end":1497,"column_start":5,"column_end":60}}]},{"kind":"StructVariant","id":{"krate":0,"index":7709},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53519,"byte_end":53524,"line_start":1509,"line_end":1509,"column_start":5,"column_end":10},"name":"Store","qualname":"::Statement::Store","value":"Statement::Store { pointer, value }","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" Stores a value at an address.","sig":null,"attributes":[{"value":"/ Stores a value at an address.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53073,"byte_end":53106,"line_start":1499,"line_end":1499,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53111,"byte_end":53114,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ For [`TypeInner::Atomic`] type behind the pointer, the value","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53119,"byte_end":53183,"line_start":1501,"line_end":1501,"column_start":5,"column_end":69}},{"value":"/ has to be a corresponding scalar.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53188,"byte_end":53225,"line_start":1502,"line_end":1502,"column_start":5,"column_end":42}},{"value":"/ For other types behind the pointer<T>, the value is T.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53230,"byte_end":53288,"line_start":1503,"line_end":1503,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53293,"byte_end":53296,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ This statement is a barrier for any operations on the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53301,"byte_end":53358,"line_start":1505,"line_end":1505,"column_start":5,"column_end":62}},{"value":"/ `Expression::LocalVariable` or `Expression::GlobalVariable`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53363,"byte_end":53426,"line_start":1506,"line_end":1506,"column_start":5,"column_end":68}},{"value":"/ that is the destination of an access chain, started","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53431,"byte_end":53486,"line_start":1507,"line_end":1507,"column_start":5,"column_end":60}},{"value":"/ from the `pointer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53491,"byte_end":53514,"line_start":1508,"line_end":1508,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":7712},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":54185,"byte_end":54195,"line_start":1525,"line_end":1525,"column_start":5,"column_end":15},"name":"ImageStore","qualname":"::Statement::ImageStore","value":"Statement::ImageStore { image, coordinate, array_index, value }","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" Stores a texel value to an image.","sig":null,"attributes":[{"value":"/ Stores a texel value to an image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53610,"byte_end":53647,"line_start":1513,"line_end":1513,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53652,"byte_end":53655,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ The `image`, `coordinate`, and `array_index` fields have the same","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53660,"byte_end":53729,"line_start":1515,"line_end":1515,"column_start":5,"column_end":74}},{"value":"/ meanings as the corresponding operands of an [`ImageLoad`] expression;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53734,"byte_end":53808,"line_start":1516,"line_end":1516,"column_start":5,"column_end":79}},{"value":"/ see that documentation for details. Storing into multisampled images or","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53813,"byte_end":53888,"line_start":1517,"line_end":1517,"column_start":5,"column_end":80}},{"value":"/ images with mipmaps is not supported, so there are no `level` or","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53893,"byte_end":53961,"line_start":1518,"line_end":1518,"column_start":5,"column_end":73}},{"value":"/ `sample` operands.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53966,"byte_end":53988,"line_start":1519,"line_end":1519,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":53993,"byte_end":53996,"line_start":1520,"line_end":1520,"column_start":5,"column_end":8}},{"value":"/ This statement is a barrier for any operations on the corresponding","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":54001,"byte_end":54072,"line_start":1521,"line_end":1521,"column_start":5,"column_end":76}},{"value":"/ [`Expression::GlobalVariable`] for this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":54077,"byte_end":54127,"line_start":1522,"line_end":1522,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":54132,"byte_end":54135,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ [`ImageLoad`]: Expression::ImageLoad","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":54140,"byte_end":54180,"line_start":1524,"line_end":1524,"column_start":5,"column_end":45}}]},{"kind":"StructVariant","id":{"krate":0,"index":7717},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":54393,"byte_end":54399,"line_start":1532,"line_end":1532,"column_start":5,"column_end":11},"name":"Atomic","qualname":"::Statement::Atomic","value":"Statement::Atomic { pointer, fun, value, result }","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" Atomic function.\n","sig":null,"attributes":[{"value":"/ Atomic function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":54368,"byte_end":54388,"line_start":1531,"line_end":1531,"column_start":5,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":7722},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55054,"byte_end":55058,"line_start":1549,"line_end":1549,"column_start":5,"column_end":9},"name":"Call","qualname":"::Statement::Call","value":"Statement::Call { function, arguments, result }","parent":{"krate":0,"index":7680},"children":[],"decl_id":null,"docs":" Calls a function.","sig":null,"attributes":[{"value":"/ Calls a function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":54826,"byte_end":54847,"line_start":1544,"line_end":1544,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":54852,"byte_end":54855,"line_start":1545,"line_end":1545,"column_start":5,"column_end":8}},{"value":"/ If the `result` is `Some`, the corresponding expression has to be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":54860,"byte_end":54929,"line_start":1546,"line_end":1546,"column_start":5,"column_end":74}},{"value":"/ `Expression::CallResult`, and this statement serves as a barrier for any","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":54934,"byte_end":55010,"line_start":1547,"line_end":1547,"column_start":5,"column_end":81}},{"value":"/ operations on that expression.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55015,"byte_end":55049,"line_start":1548,"line_end":1548,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":7680},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":49395,"byte_end":49404,"line_start":1404,"line_end":1404,"column_start":10,"column_end":19},"name":"Statement","qualname":"::Statement","value":"pub enum Statement {\n    Emit(Range<Expression>),\n    Block(Block),\n    If {\n            condition: Handle<Expression>,\n            accept: Block,\n            reject: Block,\n        },\n    Switch {\n            selector: Handle<Expression>,\n            cases: Vec<SwitchCase>,\n        },\n    Loop {\n            body: Block,\n            continuing: Block,\n            break_if: Option<Handle<Expression>>,\n        },\n    Break,\n    Continue,\n    Return {\n            value: Option<Handle<Expression>>,\n        },\n    Kill,\n    Barrier(Barrier),\n    Store {\n            pointer: Handle<Expression>,\n            value: Handle<Expression>,\n        },\n    ImageStore {\n            image: Handle<Expression>,\n            coordinate: Handle<Expression>,\n            array_index: Option<Handle<Expression>>,\n            value: Handle<Expression>,\n        },\n    Atomic {\n            pointer: Handle<Expression>,\n            fun: AtomicFunction,\n            value: Handle<Expression>,\n            result: Handle<Expression>,\n        },\n    Call {\n            function: Handle<Function>,\n            arguments: Vec<Handle<Expression>>,\n            result: Option<Handle<Expression>>,\n        },\n}","parent":null,"children":[{"krate":0,"index":7681},{"krate":0,"index":7684},{"krate":0,"index":7687},{"krate":0,"index":7691},{"krate":0,"index":7694},{"krate":0,"index":7698},{"krate":0,"index":7700},{"krate":0,"index":7702},{"krate":0,"index":7704},{"krate":0,"index":7706},{"krate":0,"index":7709},{"krate":0,"index":7712},{"krate":0,"index":7717},{"krate":0,"index":7722}],"decl_id":null,"docs":" Instructions which make up an executable block.\n","sig":null,"attributes":[{"value":"/ Instructions which make up an executable block.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":49068,"byte_end":49119,"line_start":1398,"line_end":1398,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":7730},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55421,"byte_end":55437,"line_start":1561,"line_end":1561,"column_start":12,"column_end":28},"name":"FunctionArgument","qualname":"::FunctionArgument","value":"FunctionArgument { name, ty, binding }","parent":null,"children":[{"krate":0,"index":7731},{"krate":0,"index":7732},{"krate":0,"index":7733}],"decl_id":null,"docs":" A function argument.\n","sig":null,"attributes":[{"value":"/ A function argument.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55195,"byte_end":55219,"line_start":1556,"line_end":1556,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":7731},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55486,"byte_end":55490,"line_start":1563,"line_end":1563,"column_start":9,"column_end":13},"name":"name","qualname":"::FunctionArgument::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7730},"children":[],"decl_id":null,"docs":" Name of the argument, if any.\n","sig":null,"attributes":[{"value":"/ Name of the argument, if any.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55444,"byte_end":55477,"line_start":1562,"line_end":1562,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":7732},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55546,"byte_end":55548,"line_start":1565,"line_end":1565,"column_start":9,"column_end":11},"name":"ty","qualname":"::FunctionArgument::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":7730},"children":[],"decl_id":null,"docs":" Type of the argument.\n","sig":null,"attributes":[{"value":"/ Type of the argument.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55512,"byte_end":55537,"line_start":1564,"line_end":1564,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":7733},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55665,"byte_end":55672,"line_start":1568,"line_end":1568,"column_start":9,"column_end":16},"name":"binding","qualname":"::FunctionArgument::binding","value":"std::option::Option<Binding>","parent":{"krate":0,"index":7730},"children":[],"decl_id":null,"docs":" For entry points, an argument has to have a binding\n unless it's a structure.\n","sig":null,"attributes":[{"value":"/ For entry points, an argument has to have a binding","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55568,"byte_end":55623,"line_start":1566,"line_end":1566,"column_start":5,"column_end":60}},{"value":"/ unless it's a structure.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55628,"byte_end":55656,"line_start":1567,"line_end":1567,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":7738},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55918,"byte_end":55932,"line_start":1576,"line_end":1576,"column_start":12,"column_end":26},"name":"FunctionResult","qualname":"::FunctionResult","value":"FunctionResult { ty, binding }","parent":null,"children":[{"krate":0,"index":7739},{"krate":0,"index":7740}],"decl_id":null,"docs":" A function result.\n","sig":null,"attributes":[{"value":"/ A function result.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55694,"byte_end":55716,"line_start":1571,"line_end":1571,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":7739},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55971,"byte_end":55973,"line_start":1578,"line_end":1578,"column_start":9,"column_end":11},"name":"ty","qualname":"::FunctionResult::ty","value":"arena::Handle<Type>","parent":{"krate":0,"index":7738},"children":[],"decl_id":null,"docs":" Type of the result.\n","sig":null,"attributes":[{"value":"/ Type of the result.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55939,"byte_end":55962,"line_start":1577,"line_end":1577,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":7740},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56089,"byte_end":56096,"line_start":1581,"line_end":1581,"column_start":9,"column_end":16},"name":"binding","qualname":"::FunctionResult::binding","value":"std::option::Option<Binding>","parent":{"krate":0,"index":7738},"children":[],"decl_id":null,"docs":" For entry points, the result has to have a binding\n unless it's a structure.\n","sig":null,"attributes":[{"value":"/ For entry points, the result has to have a binding","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":55993,"byte_end":56047,"line_start":1579,"line_end":1579,"column_start":5,"column_end":59}},{"value":"/ unless it's a structure.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56052,"byte_end":56080,"line_start":1580,"line_end":1580,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":7745},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56359,"byte_end":56367,"line_start":1589,"line_end":1589,"column_start":12,"column_end":20},"name":"Function","qualname":"::Function","value":"Function { name, arguments, result, local_variables, expressions, named_expressions, body }","parent":null,"children":[{"krate":0,"index":7746},{"krate":0,"index":7747},{"krate":0,"index":7748},{"krate":0,"index":7749},{"krate":0,"index":7750},{"krate":0,"index":7751},{"krate":0,"index":7752}],"decl_id":null,"docs":" A function defined in the module.\n","sig":null,"attributes":[{"value":"/ A function defined in the module.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56118,"byte_end":56155,"line_start":1584,"line_end":1584,"column_start":1,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":7746},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56416,"byte_end":56420,"line_start":1591,"line_end":1591,"column_start":9,"column_end":13},"name":"name","qualname":"::Function::name","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":7745},"children":[],"decl_id":null,"docs":" Name of the function, if any.\n","sig":null,"attributes":[{"value":"/ Name of the function, if any.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56374,"byte_end":56407,"line_start":1590,"line_end":1590,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":7747},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56491,"byte_end":56500,"line_start":1593,"line_end":1593,"column_start":9,"column_end":18},"name":"arguments","qualname":"::Function::arguments","value":"std::vec::Vec<FunctionArgument>","parent":{"krate":0,"index":7745},"children":[],"decl_id":null,"docs":" Information about function argument.\n","sig":null,"attributes":[{"value":"/ Information about function argument.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56442,"byte_end":56482,"line_start":1592,"line_end":1592,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":7748},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56578,"byte_end":56584,"line_start":1595,"line_end":1595,"column_start":9,"column_end":15},"name":"result","qualname":"::Function::result","value":"std::option::Option<FunctionResult>","parent":{"krate":0,"index":7745},"children":[],"decl_id":null,"docs":" The result of this function, if any.\n","sig":null,"attributes":[{"value":"/ The result of this function, if any.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56529,"byte_end":56569,"line_start":1594,"line_end":1594,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":7749},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56676,"byte_end":56691,"line_start":1597,"line_end":1597,"column_start":9,"column_end":24},"name":"local_variables","qualname":"::Function::local_variables","value":"arena::Arena<LocalVariable>","parent":{"krate":0,"index":7745},"children":[],"decl_id":null,"docs":" Local variables defined and used in the function.\n","sig":null,"attributes":[{"value":"/ Local variables defined and used in the function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56614,"byte_end":56667,"line_start":1596,"line_end":1596,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":7750},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56872,"byte_end":56883,"line_start":1602,"line_end":1602,"column_start":9,"column_end":20},"name":"expressions","qualname":"::Function::expressions","value":"arena::Arena<Expression>","parent":{"krate":0,"index":7745},"children":[],"decl_id":null,"docs":" Expressions used inside this function.","sig":null,"attributes":[{"value":"/ Expressions used inside this function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56719,"byte_end":56761,"line_start":1598,"line_end":1598,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56766,"byte_end":56769,"line_start":1599,"line_end":1599,"column_start":5,"column_end":8}},{"value":"/ An `Expression` must occur before all other `Expression`s that use its","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56774,"byte_end":56848,"line_start":1600,"line_end":1600,"column_start":5,"column_end":79}},{"value":"/ value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56853,"byte_end":56863,"line_start":1601,"line_end":1601,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":7751},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56975,"byte_end":56992,"line_start":1604,"line_end":1604,"column_start":9,"column_end":26},"name":"named_expressions","qualname":"::Function::named_expressions","value":"std::collections::HashMap<arena::Handle<Expression>, std::string::String, std::hash::BuildHasherDefault<rustc_hash::FxHasher>>","parent":{"krate":0,"index":7745},"children":[],"decl_id":null,"docs":" Map of expressions that have associated variable names\n","sig":null,"attributes":[{"value":"/ Map of expressions that have associated variable names","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":56908,"byte_end":56966,"line_start":1603,"line_end":1603,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":7752},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57087,"byte_end":57091,"line_start":1606,"line_end":1606,"column_start":9,"column_end":13},"name":"body","qualname":"::Function::body","value":"block::Block","parent":{"krate":0,"index":7745},"children":[],"decl_id":null,"docs":" Block of instructions comprising the body of the function.\n","sig":null,"attributes":[{"value":"/ Block of instructions comprising the body of the function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57016,"byte_end":57078,"line_start":1605,"line_end":1605,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":7757},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59470,"byte_end":59480,"line_start":1653,"line_end":1653,"column_start":12,"column_end":22},"name":"EntryPoint","qualname":"::EntryPoint","value":"EntryPoint { name, stage, early_depth_test, workgroup_size, function }","parent":null,"children":[{"krate":0,"index":7758},{"krate":0,"index":7759},{"krate":0,"index":7760},{"krate":0,"index":7761},{"krate":0,"index":7763}],"decl_id":null,"docs":" The main function for a pipeline stage.","sig":null,"attributes":[{"value":"/ The main function for a pipeline stage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57103,"byte_end":57146,"line_start":1609,"line_end":1609,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57147,"byte_end":57150,"line_start":1610,"line_end":1610,"column_start":1,"column_end":4}},{"value":"/ An [`EntryPoint`] is a [`Function`] that serves as the main function for a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57151,"byte_end":57229,"line_start":1611,"line_end":1611,"column_start":1,"column_end":79}},{"value":"/ graphics or compute pipeline stage. For example, an `EntryPoint` whose","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57230,"byte_end":57304,"line_start":1612,"line_end":1612,"column_start":1,"column_end":75}},{"value":"/ [`stage`] is [`ShaderStage::Vertex`] can serve as a graphics pipeline's","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57305,"byte_end":57380,"line_start":1613,"line_end":1613,"column_start":1,"column_end":76}},{"value":"/ vertex shader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57381,"byte_end":57399,"line_start":1614,"line_end":1614,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57400,"byte_end":57403,"line_start":1615,"line_end":1615,"column_start":1,"column_end":4}},{"value":"/ Since an entry point is called directly by the graphics or compute pipeline,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57404,"byte_end":57484,"line_start":1616,"line_end":1616,"column_start":1,"column_end":81}},{"value":"/ not by other WGSL functions, you must specify what the pipeline should pass","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57485,"byte_end":57564,"line_start":1617,"line_end":1617,"column_start":1,"column_end":80}},{"value":"/ as the entry point's arguments, and what values it will return. For example,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57565,"byte_end":57645,"line_start":1618,"line_end":1618,"column_start":1,"column_end":81}},{"value":"/ a vertex shader needs a vertex's attributes as its arguments, but if it's","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57646,"byte_end":57723,"line_start":1619,"line_end":1619,"column_start":1,"column_end":78}},{"value":"/ used for instanced draw calls, it will also want to know the instance id.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57724,"byte_end":57801,"line_start":1620,"line_end":1620,"column_start":1,"column_end":78}},{"value":"/ The vertex shader's return value will usually include an output vertex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57802,"byte_end":57876,"line_start":1621,"line_end":1621,"column_start":1,"column_end":75}},{"value":"/ position, and possibly other attributes to be interpolated and passed along","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57877,"byte_end":57956,"line_start":1622,"line_end":1622,"column_start":1,"column_end":80}},{"value":"/ to a fragment shader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57957,"byte_end":57982,"line_start":1623,"line_end":1623,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57983,"byte_end":57986,"line_start":1624,"line_end":1624,"column_start":1,"column_end":4}},{"value":"/ To specify this, the arguments and result of an `EntryPoint`'s [`function`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":57987,"byte_end":58066,"line_start":1625,"line_end":1625,"column_start":1,"column_end":80}},{"value":"/ must each have a [`Binding`], or be structs whose members all have","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58067,"byte_end":58137,"line_start":1626,"line_end":1626,"column_start":1,"column_end":71}},{"value":"/ `Binding`s. This associates every value passed to or returned from the entry","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58138,"byte_end":58218,"line_start":1627,"line_end":1627,"column_start":1,"column_end":81}},{"value":"/ point with either a [`BuiltIn`] or a [`Location`]:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58219,"byte_end":58273,"line_start":1628,"line_end":1628,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58274,"byte_end":58277,"line_start":1629,"line_end":1629,"column_start":1,"column_end":4}},{"value":"/ -   A [`BuiltIn`] has special semantics, usually specific to its pipeline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58278,"byte_end":58355,"line_start":1630,"line_end":1630,"column_start":1,"column_end":78}},{"value":"/     stage. For example, the result of a vertex shader can include a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58356,"byte_end":58427,"line_start":1631,"line_end":1631,"column_start":1,"column_end":72}},{"value":"/     [`BuiltIn::Position`] value, which determines the position of a vertex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58428,"byte_end":58506,"line_start":1632,"line_end":1632,"column_start":1,"column_end":79}},{"value":"/     of a rendered primitive. Or, a compute shader might take an argument","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58507,"byte_end":58583,"line_start":1633,"line_end":1633,"column_start":1,"column_end":77}},{"value":"/     whose binding is [`BuiltIn::WorkGroupSize`], through which the compute","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58584,"byte_end":58662,"line_start":1634,"line_end":1634,"column_start":1,"column_end":79}},{"value":"/     pipeline would pass the number of invocations in your workgroup.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58663,"byte_end":58735,"line_start":1635,"line_end":1635,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58736,"byte_end":58739,"line_start":1636,"line_end":1636,"column_start":1,"column_end":4}},{"value":"/ -   A [`Location`] indicates user-defined IO to be passed from one pipeline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58740,"byte_end":58819,"line_start":1637,"line_end":1637,"column_start":1,"column_end":80}},{"value":"/     stage to the next. For example, a vertex shader might also produce a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58820,"byte_end":58896,"line_start":1638,"line_end":1638,"column_start":1,"column_end":77}},{"value":"/     `uv` texture location as a user-defined IO value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58897,"byte_end":58954,"line_start":1639,"line_end":1639,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58955,"byte_end":58958,"line_start":1640,"line_end":1640,"column_start":1,"column_end":4}},{"value":"/ In other words, the pipeline stage's input and output interface are","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":58959,"byte_end":59030,"line_start":1641,"line_end":1641,"column_start":1,"column_end":72}},{"value":"/ determined by the bindings of the arguments and result of the `EntryPoint`'s","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59031,"byte_end":59111,"line_start":1642,"line_end":1642,"column_start":1,"column_end":81}},{"value":"/ [`function`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59112,"byte_end":59129,"line_start":1643,"line_end":1643,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59130,"byte_end":59133,"line_start":1644,"line_end":1644,"column_start":1,"column_end":4}},{"value":"/ [`Function`]: crate::Function","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59134,"byte_end":59167,"line_start":1645,"line_end":1645,"column_start":1,"column_end":34}},{"value":"/ [`Location`]: Binding::Location","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59168,"byte_end":59203,"line_start":1646,"line_end":1646,"column_start":1,"column_end":36}},{"value":"/ [`function`]: EntryPoint::function","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59204,"byte_end":59242,"line_start":1647,"line_end":1647,"column_start":1,"column_end":39}},{"value":"/ [`stage`]: EntryPoint::stage","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59243,"byte_end":59275,"line_start":1648,"line_end":1648,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":7758},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59633,"byte_end":59637,"line_start":1657,"line_end":1657,"column_start":9,"column_end":13},"name":"name","qualname":"::EntryPoint::name","value":"std::string::String","parent":{"krate":0,"index":7757},"children":[],"decl_id":null,"docs":" Name of this entry point, visible externally.","sig":null,"attributes":[{"value":"/ Name of this entry point, visible externally.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59487,"byte_end":59536,"line_start":1654,"line_end":1654,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59541,"byte_end":59544,"line_start":1655,"line_end":1655,"column_start":5,"column_end":8}},{"value":"/ Entry point names for a given `stage` must be distinct within a module.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59549,"byte_end":59624,"line_start":1656,"line_end":1656,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":7759},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59677,"byte_end":59682,"line_start":1659,"line_end":1659,"column_start":9,"column_end":14},"name":"stage","qualname":"::EntryPoint::stage","value":"ShaderStage","parent":{"krate":0,"index":7757},"children":[],"decl_id":null,"docs":" Shader stage.\n","sig":null,"attributes":[{"value":"/ Shader stage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59651,"byte_end":59668,"line_start":1658,"line_end":1658,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":7760},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59751,"byte_end":59767,"line_start":1661,"line_end":1661,"column_start":9,"column_end":25},"name":"early_depth_test","qualname":"::EntryPoint::early_depth_test","value":"std::option::Option<EarlyDepthTest>","parent":{"krate":0,"index":7757},"children":[],"decl_id":null,"docs":" Early depth test for fragment stages.\n","sig":null,"attributes":[{"value":"/ Early depth test for fragment stages.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59701,"byte_end":59742,"line_start":1660,"line_end":1660,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":7761},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59843,"byte_end":59857,"line_start":1663,"line_end":1663,"column_start":9,"column_end":23},"name":"workgroup_size","qualname":"::EntryPoint::workgroup_size","value":"[u32; 3]","parent":{"krate":0,"index":7757},"children":[],"decl_id":null,"docs":" Workgroup size for compute stages\n","sig":null,"attributes":[{"value":"/ Workgroup size for compute stages","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59797,"byte_end":59834,"line_start":1662,"line_end":1662,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":7763},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59908,"byte_end":59916,"line_start":1665,"line_end":1665,"column_start":9,"column_end":17},"name":"function","qualname":"::EntryPoint::function","value":"Function","parent":{"krate":0,"index":7757},"children":[],"decl_id":null,"docs":" The entrance function.\n","sig":null,"attributes":[{"value":"/ The entrance function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59873,"byte_end":59899,"line_start":1664,"line_end":1664,"column_start":5,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":7766},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60620,"byte_end":60626,"line_start":1683,"line_end":1683,"column_start":12,"column_end":18},"name":"Module","qualname":"::Module","value":"Module { types, constants, global_variables, functions, entry_points }","parent":null,"children":[{"krate":0,"index":7767},{"krate":0,"index":7768},{"krate":0,"index":7769},{"krate":0,"index":7770},{"krate":0,"index":7771}],"decl_id":null,"docs":" Shader module.","sig":null,"attributes":[{"value":"/ Shader module.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59931,"byte_end":59949,"line_start":1668,"line_end":1668,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59950,"byte_end":59953,"line_start":1669,"line_end":1669,"column_start":1,"column_end":4}},{"value":"/ A module is a set of constants, global variables and functions, as well as","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":59954,"byte_end":60032,"line_start":1670,"line_end":1670,"column_start":1,"column_end":79}},{"value":"/ the types required to define them.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60033,"byte_end":60071,"line_start":1671,"line_end":1671,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60072,"byte_end":60075,"line_start":1672,"line_end":1672,"column_start":1,"column_end":4}},{"value":"/ Some functions are marked as entry points, to be used in a certain shader stage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60076,"byte_end":60160,"line_start":1673,"line_end":1673,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60161,"byte_end":60164,"line_start":1674,"line_end":1674,"column_start":1,"column_end":4}},{"value":"/ To create a new module, use the `Default` implementation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60165,"byte_end":60226,"line_start":1675,"line_end":1675,"column_start":1,"column_end":62}},{"value":"/ Alternatively, you can load an existing shader using one of the [available front ends][front].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60227,"byte_end":60325,"line_start":1676,"line_end":1676,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60326,"byte_end":60329,"line_start":1677,"line_end":1677,"column_start":1,"column_end":4}},{"value":"/ When finished, you can export modules using one of the [available backends][back].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60330,"byte_end":60416,"line_start":1678,"line_end":1678,"column_start":1,"column_end":87}}]},{"kind":"Field","id":{"krate":0,"index":7767},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60689,"byte_end":60694,"line_start":1685,"line_end":1685,"column_start":9,"column_end":14},"name":"types","qualname":"::Module::types","value":"arena::UniqueArena<Type>","parent":{"krate":0,"index":7766},"children":[],"decl_id":null,"docs":" Arena for the types defined in this module.\n","sig":null,"attributes":[{"value":"/ Arena for the types defined in this module.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60633,"byte_end":60680,"line_start":1684,"line_end":1684,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":7768},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60779,"byte_end":60788,"line_start":1687,"line_end":1687,"column_start":9,"column_end":18},"name":"constants","qualname":"::Module::constants","value":"arena::Arena<Constant>","parent":{"krate":0,"index":7766},"children":[],"decl_id":null,"docs":" Arena for the constants defined in this module.\n","sig":null,"attributes":[{"value":"/ Arena for the constants defined in this module.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60719,"byte_end":60770,"line_start":1686,"line_end":1686,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":7769},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60878,"byte_end":60894,"line_start":1689,"line_end":1689,"column_start":9,"column_end":25},"name":"global_variables","qualname":"::Module::global_variables","value":"arena::Arena<GlobalVariable>","parent":{"krate":0,"index":7766},"children":[],"decl_id":null,"docs":" Arena for the global variables defined in this module.\n","sig":null,"attributes":[{"value":"/ Arena for the global variables defined in this module.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60811,"byte_end":60869,"line_start":1688,"line_end":1688,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":7770},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":61108,"byte_end":61117,"line_start":1694,"line_end":1694,"column_start":9,"column_end":18},"name":"functions","qualname":"::Module::functions","value":"arena::Arena<Function>","parent":{"krate":0,"index":7766},"children":[],"decl_id":null,"docs":" Arena for the functions defined in this module.","sig":null,"attributes":[{"value":"/ Arena for the functions defined in this module.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60923,"byte_end":60974,"line_start":1690,"line_end":1690,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60979,"byte_end":60982,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ Each function must appear in this arena strictly before all its callers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":60987,"byte_end":61063,"line_start":1692,"line_end":1692,"column_start":5,"column_end":81}},{"value":"/ Recursion is not supported.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":61068,"byte_end":61099,"line_start":1693,"line_end":1693,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":7771},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":61166,"byte_end":61178,"line_start":1696,"line_end":1696,"column_start":9,"column_end":21},"name":"entry_points","qualname":"::Module::entry_points","value":"std::vec::Vec<EntryPoint>","parent":{"krate":0,"index":7766},"children":[],"decl_id":null,"docs":" Entry points.\n","sig":null,"attributes":[{"value":"/ Entry points.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":61140,"byte_end":61157,"line_start":1695,"line_end":1695,"column_start":5,"column_end":22}}]}],"impls":[{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62344,"byte_end":62350,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62503,"byte_end":62509,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62539,"byte_end":62545,"line_start":45,"line_end":45,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62650,"byte_end":62656,"line_start":51,"line_end":51,"column_start":16,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62687,"byte_end":62693,"line_start":53,"line_end":53,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62831,"byte_end":62837,"line_start":59,"line_end":59,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62958,"byte_end":62964,"line_start":65,"line_end":65,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":63115,"byte_end":63121,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":63230,"byte_end":63236,"line_start":77,"line_end":77,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":64760,"byte_end":64765,"line_start":128,"line_end":128,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":64931,"byte_end":64936,"line_start":137,"line_end":137,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":65115,"byte_end":65120,"line_start":143,"line_end":143,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":66186,"byte_end":66191,"line_start":176,"line_end":176,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":66288,"byte_end":66293,"line_start":182,"line_end":182,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":66427,"byte_end":66432,"line_start":188,"line_end":188,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":71046,"byte_end":71051,"line_start":340,"line_end":340,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":71206,"byte_end":71211,"line_start":347,"line_end":347,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":71357,"byte_end":71362,"line_start":353,"line_end":353,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":73846,"byte_end":73857,"line_start":428,"line_end":428,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":75242,"byte_end":75253,"line_start":478,"line_end":478,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":77495,"byte_end":77506,"line_start":541,"line_end":541,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":77621,"byte_end":77632,"line_start":547,"line_end":547,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":77792,"byte_end":77803,"line_start":553,"line_end":553,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\conv.rs","byte_start":96838,"byte_end":96848,"line_start":7,"line_end":7,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\conv.rs","byte_start":97741,"byte_end":97750,"line_start":35,"line_end":35,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\conv.rs","byte_start":100750,"byte_end":100763,"line_start":116,"line_end":116,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\conv.rs","byte_start":101931,"byte_end":101938,"line_start":152,"line_end":152,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\conv.rs","byte_start":103672,"byte_end":103685,"line_start":189,"line_end":189,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\conv.rs","byte_start":104261,"byte_end":104269,"line_start":202,"line_end":202,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\conv.rs","byte_start":104592,"byte_end":104606,"line_start":213,"line_end":213,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\help.rs","byte_start":107957,"byte_end":107967,"line_start":102,"line_end":102,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\help.rs","byte_start":108396,"byte_end":108402,"line_start":115,"line_end":115,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\storage.rs","byte_start":153386,"byte_end":153392,"line_start":40,"line_end":40,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\writer.rs","byte_start":171441,"byte_end":171453,"line_start":59,"line_end":59,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\writer.rs","byte_start":171865,"byte_end":171871,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":497},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":92247,"byte_end":92258,"line_start":136,"line_end":136,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":92460,"byte_end":92471,"line_start":146,"line_end":146,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":92684,"byte_end":92698,"line_start":156,"line_end":156,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":94031,"byte_end":94038,"line_start":194,"line_end":194,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":94289,"byte_end":94296,"line_start":205,"line_end":205,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":96048,"byte_end":96055,"line_start":255,"line_end":255,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\block.rs","byte_start":315263,"byte_end":315269,"line_start":62,"line_end":62,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\block.rs","byte_start":319416,"byte_end":319428,"line_start":186,"line_end":186,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\helpers.rs","byte_start":406312,"byte_end":406324,"line_start":52,"line_end":52,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":727}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":412482,"byte_end":412486,"line_start":108,"line_end":108,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":413843,"byte_end":413847,"line_start":147,"line_end":147,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":415482,"byte_end":415487,"line_start":207,"line_end":207,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":416148,"byte_end":416160,"line_start":233,"line_end":233,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":820},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\index.rs","byte_start":451843,"byte_end":451855,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\instructions.rs","byte_start":468918,"byte_end":468929,"line_start":19,"line_end":19,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\instructions.rs","byte_start":495635,"byte_end":495646,"line_start":946,"line_end":946,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\instructions.rs","byte_start":497184,"byte_end":497187,"line_start":986,"line_end":986,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\layout.rs","byte_start":497666,"byte_end":497680,"line_start":8,"line_end":8,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1029},{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\layout.rs","byte_start":498300,"byte_end":498314,"line_start":28,"line_end":28,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1033}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\layout.rs","byte_start":498595,"byte_end":498608,"line_start":40,"line_end":40,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\layout.rs","byte_start":499356,"byte_end":499369,"line_start":56,"line_end":56,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1038}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\layout.rs","byte_start":500077,"byte_end":500088,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\layout.rs","byte_start":501329,"byte_end":501340,"line_start":118,"line_end":118,"column_start":6,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\recyclable.rs","byte_start":505879,"byte_end":505882,"line_start":34,"line_end":34,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\recyclable.rs","byte_start":506021,"byte_end":506028,"line_start":41,"line_end":41,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\recyclable.rs","byte_start":506170,"byte_end":506177,"line_start":48,"line_end":48,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\recyclable.rs","byte_start":506314,"byte_end":506322,"line_start":55,"line_end":55,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\selection.rs","byte_start":509634,"byte_end":509643,"line_start":87,"line_end":87,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\selection.rs","byte_start":515650,"byte_end":515654,"line_start":234,"line_end":234,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1099}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\writer.rs","byte_start":517090,"byte_end":517098,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1222}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\writer.rs","byte_start":517757,"byte_end":517763,"line_start":42,"line_end":42,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1259},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1279},{"krate":0,"index":1285},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1297},{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":292429,"byte_end":292440,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":293256,"byte_end":293261,"line_start":106,"line_end":106,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":293937,"byte_end":293945,"line_start":140,"line_end":140,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1350},{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":295437,"byte_end":295451,"line_start":186,"line_end":186,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":301143,"byte_end":301153,"line_start":328,"line_end":328,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":303368,"byte_end":303385,"line_start":409,"line_end":409,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":303546,"byte_end":303563,"line_start":415,"line_end":415,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1361},{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":303854,"byte_end":303871,"line_start":425,"line_end":425,"column_start":51,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1364}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":304140,"byte_end":304157,"line_start":434,"line_end":434,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":306017,"byte_end":306031,"line_start":477,"line_end":477,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":307462,"byte_end":307474,"line_start":532,"line_end":532,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311736,"byte_end":311743,"line_start":655,"line_end":655,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":80521,"byte_end":80526,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":80626,"byte_end":80631,"line_start":34,"line_end":34,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":81669,"byte_end":81680,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":84219,"byte_end":84229,"line_start":122,"line_end":122,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":86727,"byte_end":86736,"line_start":187,"line_end":187,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":86943,"byte_end":86952,"line_start":196,"line_end":196,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":581126,"byte_end":581131,"line_start":16,"line_end":16,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":583800,"byte_end":583805,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1489},{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":583923,"byte_end":583928,"line_start":116,"line_end":116,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1492}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":584520,"byte_end":584525,"line_start":141,"line_end":141,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1499}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":588601,"byte_end":588608,"line_start":5,"line_end":5,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1503}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\construction.rs","byte_start":787530,"byte_end":787545,"line_start":43,"line_end":43,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\construction.rs","byte_start":788485,"byte_end":788500,"line_start":70,"line_end":70,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\construction.rs","byte_start":795916,"byte_end":795926,"line_start":282,"line_end":282,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1624}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\lexer.rs","byte_start":822464,"byte_end":822469,"line_start":168,"line_end":168,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1694},{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1698},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":838733,"byte_end":838739,"line_start":20,"line_end":20,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":843471,"byte_end":843484,"line_start":150,"line_end":150,"column_start":14,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1761},{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595461,"byte_end":595466,"line_start":167,"line_end":167,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1878}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":613063,"byte_end":613076,"line_start":473,"line_end":473,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1880}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":614532,"byte_end":614541,"line_start":513,"line_end":513,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":622451,"byte_end":622461,"line_start":730,"line_end":730,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1891}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":623082,"byte_end":623093,"line_start":749,"line_end":749,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":623927,"byte_end":623943,"line_start":769,"line_end":769,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1917},{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":625796,"byte_end":625813,"line_start":828,"line_end":828,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":636221,"byte_end":636236,"line_start":1097,"line_end":1097,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":636524,"byte_end":636535,"line_start":1111,"line_end":1111,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1968},{"krate":0,"index":1972},{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638843,"byte_end":638856,"line_start":1189,"line_end":1189,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1979},{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":641957,"byte_end":641967,"line_start":1276,"line_end":1276,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1993},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":644227,"byte_end":644237,"line_start":1338,"line_end":1338,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2006}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":644387,"byte_end":644397,"line_start":1344,"line_end":1344,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2008}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":644692,"byte_end":644698,"line_start":1357,"line_end":1357,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2022},{"krate":0,"index":2025},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":2034},{"krate":0,"index":2037},{"krate":0,"index":2042},{"krate":0,"index":2044},{"krate":0,"index":2046},{"krate":0,"index":2048},{"krate":0,"index":2053},{"krate":0,"index":2057},{"krate":0,"index":2059},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2075},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":2095},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2102},{"krate":0,"index":2104},{"krate":0,"index":2110},{"krate":0,"index":2113},{"krate":0,"index":2116},{"krate":0,"index":2131},{"krate":0,"index":2133},{"krate":0,"index":2135},{"krate":0,"index":2137},{"krate":0,"index":2139},{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":785849,"byte_end":785866,"line_start":4564,"line_end":4564,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2148},{"krate":0,"index":2149}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":786052,"byte_end":786069,"line_start":4574,"line_end":4574,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2151},{"krate":0,"index":2152}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":786278,"byte_end":786295,"line_start":4585,"line_end":4585,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":585151,"byte_end":585158,"line_start":28,"line_end":28,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2182},{"krate":0,"index":2183}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":586051,"byte_end":586064,"line_start":57,"line_end":57,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":586401,"byte_end":586409,"line_start":72,"line_end":72,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2191},{"krate":0,"index":2193}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":588387,"byte_end":588395,"line_start":130,"line_end":130,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2196},{"krate":0,"index":2197}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884773,"byte_end":884790,"line_start":127,"line_end":127,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2217}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884871,"byte_end":884890,"line_start":133,"line_end":133,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2219},{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":893198,"byte_end":893210,"line_start":329,"line_end":329,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894426,"byte_end":894435,"line_start":359,"line_end":359,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":896749,"byte_end":896758,"line_start":416,"line_end":416,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2234}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":898014,"byte_end":898023,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2269}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":899447,"byte_end":899456,"line_start":52,"line_end":52,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2271}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":899592,"byte_end":899601,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":899727,"byte_end":899736,"line_start":66,"line_end":66,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2276},{"krate":0,"index":2277}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900026,"byte_end":900035,"line_start":75,"line_end":75,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2279}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900590,"byte_end":900600,"line_start":94,"line_end":94,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2281}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":901476,"byte_end":901484,"line_start":118,"line_end":118,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2283},{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902299,"byte_end":902315,"line_start":144,"line_end":144,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2286}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902438,"byte_end":902446,"line_start":150,"line_end":150,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907835,"byte_end":907840,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2311},{"krate":0,"index":2316},{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2323}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":922673,"byte_end":922687,"line_start":99,"line_end":99,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2353},{"krate":0,"index":2354}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":923203,"byte_end":923217,"line_start":116,"line_end":116,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2357}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":924327,"byte_end":924340,"line_start":151,"line_end":151,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2362}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926438,"byte_end":926452,"line_start":211,"line_end":211,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862531,"byte_end":862541,"line_start":19,"line_end":19,"column_start":44,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2438}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":863958,"byte_end":863969,"line_start":59,"line_end":59,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":864302,"byte_end":864312,"line_start":70,"line_end":70,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":864589,"byte_end":864598,"line_start":81,"line_end":81,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2456},{"krate":0,"index":2460},{"krate":0,"index":2461}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":869232,"byte_end":869244,"line_start":208,"line_end":208,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":869773,"byte_end":869785,"line_start":223,"line_end":223,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2472}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":872261,"byte_end":872271,"line_start":306,"line_end":306,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2474},{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873580,"byte_end":873588,"line_start":341,"line_end":341,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2477}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":874715,"byte_end":874726,"line_start":368,"line_end":368,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2479}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":874959,"byte_end":874967,"line_start":377,"line_end":377,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2481}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":876404,"byte_end":876411,"line_start":408,"line_end":408,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2486}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":876714,"byte_end":876725,"line_start":418,"line_end":418,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":877100,"byte_end":877111,"line_start":429,"line_end":429,"column_start":20,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":877147,"byte_end":877158,"line_start":430,"line_end":430,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":877464,"byte_end":877480,"line_start":441,"line_end":441,"column_start":13,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2494},{"krate":0,"index":2496},{"krate":0,"index":2497}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":877938,"byte_end":877948,"line_start":462,"line_end":462,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2499},{"krate":0,"index":2500}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":957281,"byte_end":957285,"line_start":12,"line_end":12,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":959551,"byte_end":959555,"line_start":79,"line_end":79,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960828,"byte_end":960836,"line_start":118,"line_end":118,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2537}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":961149,"byte_end":961157,"line_start":137,"line_end":137,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2540}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":961285,"byte_end":961293,"line_start":146,"line_end":146,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2546},{"krate":0,"index":2548},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":965360,"byte_end":965365,"line_start":268,"line_end":268,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2574}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":965490,"byte_end":965501,"line_start":274,"line_end":274,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2577}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":965618,"byte_end":965619,"line_start":280,"line_end":280,"column_start":21,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":966603,"byte_end":966609,"line_start":316,"line_end":316,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2598},{"krate":0,"index":2599}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":985274,"byte_end":985284,"line_start":52,"line_end":52,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2654}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":986089,"byte_end":986107,"line_start":80,"line_end":80,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2659},{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":986570,"byte_end":986588,"line_start":96,"line_end":96,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2662},{"krate":0,"index":2663}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":988246,"byte_end":988260,"line_start":148,"line_end":148,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2665}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":988937,"byte_end":988953,"line_start":171,"line_end":171,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":992806,"byte_end":992818,"line_start":258,"line_end":258,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":993387,"byte_end":993399,"line_start":277,"line_end":277,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2673},{"krate":0,"index":2674}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":993604,"byte_end":993616,"line_start":284,"line_end":284,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":2677}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":994276,"byte_end":994288,"line_start":303,"line_end":303,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682},{"krate":0,"index":2685},{"krate":0,"index":2706}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":1021804,"byte_end":1021814,"line_start":929,"line_end":929,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2712},{"krate":0,"index":2713}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1043033,"byte_end":1043055,"line_start":132,"line_end":132,"column_start":10,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2777}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1043422,"byte_end":1043431,"line_start":146,"line_end":146,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2779}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1113518,"byte_end":1113530,"line_start":179,"line_end":179,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2867},{"krate":0,"index":2869},{"krate":0,"index":2870},{"krate":0,"index":2871},{"krate":0,"index":2872},{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1115693,"byte_end":1115702,"line_start":247,"line_end":247,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2876},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2897},{"krate":0,"index":2898},{"krate":0,"index":2899}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1151941,"byte_end":1151955,"line_start":112,"line_end":112,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2978}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1162100,"byte_end":1162109,"line_start":357,"line_end":357,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2982},{"krate":0,"index":2987}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1178117,"byte_end":1178125,"line_start":187,"line_end":187,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3023},{"krate":0,"index":3024}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1178552,"byte_end":1178561,"line_start":205,"line_end":205,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3028}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":971681,"byte_end":971696,"line_start":72,"line_end":72,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3126}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":973507,"byte_end":973517,"line_start":123,"line_end":123,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3128},{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":975682,"byte_end":975691,"line_start":201,"line_end":201,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3131},{"krate":0,"index":3132}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":977106,"byte_end":977115,"line_start":246,"line_end":246,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9278,"byte_end":9282,"line_start":204,"line_end":204,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":158}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":80144,"byte_end":80148,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":159}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":80227,"byte_end":80230,"line_start":15,"line_end":15,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":588}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9303,"byte_end":9308,"line_start":206,"line_end":206,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1500}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":584856,"byte_end":584860,"line_start":12,"line_end":12,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1504}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9318,"byte_end":9326,"line_start":207,"line_end":207,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":2198}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\keywords\\mod.rs","byte_start":854104,"byte_end":854108,"line_start":6,"line_end":6,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2199}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9336,"byte_end":9340,"line_start":208,"line_end":208,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2201}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862060,"byte_end":862065,"line_start":5,"line_end":5,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2202}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\lib.rs","byte_start":9360,"byte_end":9365,"line_start":210,"line_end":210,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2603}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62344,"byte_end":62350,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62503,"byte_end":62509,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":3034}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62539,"byte_end":62545,"line_start":45,"line_end":45,"column_start":23,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62650,"byte_end":62656,"line_start":51,"line_end":51,"column_start":16,"column_end":22},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62687,"byte_end":62693,"line_start":53,"line_end":53,"column_start":24,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2722}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62831,"byte_end":62837,"line_start":59,"line_end":59,"column_start":17,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2711}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":62958,"byte_end":62964,"line_start":65,"line_end":65,"column_start":24,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":63115,"byte_end":63121,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":63230,"byte_end":63236,"line_start":77,"line_end":77,"column_start":9,"column_end":15},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":64760,"byte_end":64765,"line_start":128,"line_end":128,"column_start":19,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":64931,"byte_end":64936,"line_start":137,"line_end":137,"column_start":24,"column_end":29},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":65115,"byte_end":65120,"line_start":143,"line_end":143,"column_start":22,"column_end":27},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":66186,"byte_end":66191,"line_start":176,"line_end":176,"column_start":21,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":66288,"byte_end":66293,"line_start":182,"line_end":182,"column_start":36,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":66427,"byte_end":66432,"line_start":188,"line_end":188,"column_start":9,"column_end":14},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":80},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":71046,"byte_end":71051,"line_start":340,"line_end":340,"column_start":35,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":71206,"byte_end":71211,"line_start":347,"line_end":347,"column_start":38,"column_end":43},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":3331}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":71357,"byte_end":71362,"line_start":353,"line_end":353,"column_start":34,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":80},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":73846,"byte_end":73857,"line_start":428,"line_end":428,"column_start":9,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":75242,"byte_end":75253,"line_start":478,"line_end":478,"column_start":26,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":77495,"byte_end":77506,"line_start":541,"line_end":541,"column_start":21,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":77621,"byte_end":77632,"line_start":547,"line_end":547,"column_start":54,"column_end":65},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\arena.rs","byte_start":77792,"byte_end":77803,"line_start":553,"line_end":553,"column_start":35,"column_end":46},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":127},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\conv.rs","byte_start":96838,"byte_end":96848,"line_start":7,"line_end":7,"column_start":13,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":6561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\conv.rs","byte_start":97741,"byte_end":97750,"line_start":35,"line_end":35,"column_start":13,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":6929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\conv.rs","byte_start":100750,"byte_end":100763,"line_start":116,"line_end":116,"column_start":13,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":6803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\conv.rs","byte_start":101931,"byte_end":101938,"line_start":152,"line_end":152,"column_start":13,"column_end":20},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":6473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\conv.rs","byte_start":103672,"byte_end":103685,"line_start":189,"line_end":189,"column_start":13,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":6613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\conv.rs","byte_start":104261,"byte_end":104269,"line_start":202,"line_end":202,"column_start":13,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":6638},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\conv.rs","byte_start":104592,"byte_end":104606,"line_start":213,"line_end":213,"column_start":13,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":7168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\help.rs","byte_start":107957,"byte_end":107967,"line_start":102,"line_end":102,"column_start":34,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3314},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\help.rs","byte_start":108396,"byte_end":108402,"line_start":115,"line_end":115,"column_start":27,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\storage.rs","byte_start":153386,"byte_end":153392,"line_start":40,"line_end":40,"column_start":28,"column_end":34},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\writer.rs","byte_start":171441,"byte_end":171453,"line_start":59,"line_end":59,"column_start":6,"column_end":18},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3352},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\writer.rs","byte_start":171865,"byte_end":171871,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":92247,"byte_end":92258,"line_start":136,"line_end":136,"column_start":6,"column_end":17},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3405},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":92460,"byte_end":92471,"line_start":146,"line_end":146,"column_start":13,"column_end":24},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":6414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":92684,"byte_end":92698,"line_start":156,"line_end":156,"column_start":13,"column_end":27},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":6682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":94031,"byte_end":94038,"line_start":194,"line_end":194,"column_start":18,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3443},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":94289,"byte_end":94296,"line_start":205,"line_end":205,"column_start":6,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3443},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\hlsl\\mod.rs","byte_start":96048,"byte_end":96055,"line_start":255,"line_end":255,"column_start":6,"column_end":13},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\block.rs","byte_start":315263,"byte_end":315269,"line_start":62,"line_end":62,"column_start":6,"column_end":12},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\block.rs","byte_start":319416,"byte_end":319428,"line_start":186,"line_end":186,"column_start":10,"column_end":22},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\helpers.rs","byte_start":406312,"byte_end":406324,"line_start":52,"line_end":52,"column_start":13,"column_end":25},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":6439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":412482,"byte_end":412486,"line_start":108,"line_end":108,"column_start":6,"column_end":10},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":413843,"byte_end":413847,"line_start":147,"line_end":147,"column_start":17,"column_end":21},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":774},"to":{"krate":0,"index":769}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":415482,"byte_end":415487,"line_start":207,"line_end":207,"column_start":17,"column_end":22},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":785},"to":{"krate":0,"index":769}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\image.rs","byte_start":416148,"byte_end":416160,"line_start":233,"line_end":233,"column_start":10,"column_end":22},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\index.rs","byte_start":451843,"byte_end":451855,"line_start":35,"line_end":35,"column_start":10,"column_end":22},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\instructions.rs","byte_start":468918,"byte_end":468929,"line_start":19,"line_end":19,"column_start":13,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\instructions.rs","byte_start":495635,"byte_end":495646,"line_start":946,"line_end":946,"column_start":44,"column_end":55},"kind":{"Impl":{"id":57}},"from":{"krate":18,"index":2104},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\instructions.rs","byte_start":497184,"byte_end":497187,"line_start":986,"line_end":986,"column_start":45,"column_end":48},"kind":{"Impl":{"id":58}},"from":{"krate":18,"index":2005},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\layout.rs","byte_start":497666,"byte_end":497680,"line_start":8,"line_end":8,"column_start":6,"column_end":20},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\layout.rs","byte_start":498300,"byte_end":498314,"line_start":28,"line_end":28,"column_start":40,"column_end":54},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3507},"to":{"krate":0,"index":1049}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\layout.rs","byte_start":498595,"byte_end":498608,"line_start":40,"line_end":40,"column_start":6,"column_end":19},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\layout.rs","byte_start":499356,"byte_end":499369,"line_start":56,"line_end":56,"column_start":40,"column_end":53},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3515},"to":{"krate":0,"index":1049}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\layout.rs","byte_start":500077,"byte_end":500088,"line_start":74,"line_end":74,"column_start":6,"column_end":17},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\layout.rs","byte_start":501329,"byte_end":501340,"line_start":118,"line_end":118,"column_start":6,"column_end":17},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1322},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\recyclable.rs","byte_start":505879,"byte_end":505882,"line_start":34,"line_end":34,"column_start":24,"column_end":27},"kind":{"Impl":{"id":65}},"from":{"krate":5,"index":7089},"to":{"krate":0,"index":1049}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\recyclable.rs","byte_start":506021,"byte_end":506028,"line_start":41,"line_end":41,"column_start":55,"column_end":62},"kind":{"Impl":{"id":66}},"from":{"krate":1,"index":1200},"to":{"krate":0,"index":1049}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\recyclable.rs","byte_start":506170,"byte_end":506177,"line_start":48,"line_end":48,"column_start":52,"column_end":59},"kind":{"Impl":{"id":67}},"from":{"krate":1,"index":1917},"to":{"krate":0,"index":1049}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\recyclable.rs","byte_start":506314,"byte_end":506322,"line_start":55,"line_end":55,"column_start":50,"column_end":58},"kind":{"Impl":{"id":68}},"from":{"krate":5,"index":1392},"to":{"krate":0,"index":1049}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\selection.rs","byte_start":509634,"byte_end":509643,"line_start":87,"line_end":87,"column_start":25,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\selection.rs","byte_start":514995,"byte_end":515000,"line_start":216,"line_end":216,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":1096}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\selection.rs","byte_start":515650,"byte_end":515654,"line_start":234,"line_end":234,"column_start":21,"column_end":25},"kind":{"Impl":{"id":70}},"from":{"krate":18,"index":7},"to":{"krate":0,"index":1096}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\writer.rs","byte_start":517090,"byte_end":517098,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\writer.rs","byte_start":517757,"byte_end":517763,"line_start":42,"line_end":42,"column_start":6,"column_end":12},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":292429,"byte_end":292440,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3560},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":293256,"byte_end":293261,"line_start":106,"line_end":106,"column_start":6,"column_end":11},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":293937,"byte_end":293945,"line_start":140,"line_end":140,"column_start":6,"column_end":14},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":295437,"byte_end":295451,"line_start":186,"line_end":186,"column_start":6,"column_end":20},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":301143,"byte_end":301153,"line_start":328,"line_end":328,"column_start":26,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3736},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":303368,"byte_end":303385,"line_start":409,"line_end":409,"column_start":6,"column_end":23},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":303546,"byte_end":303563,"line_start":415,"line_end":415,"column_start":48,"column_end":65},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3784},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":303854,"byte_end":303871,"line_start":425,"line_end":425,"column_start":51,"column_end":68},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3784},"to":{"krate":2,"index":3331}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":304140,"byte_end":304157,"line_start":434,"line_end":434,"column_start":33,"column_end":50},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3784},"to":{"krate":0,"index":1049}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":306017,"byte_end":306031,"line_start":477,"line_end":477,"column_start":6,"column_end":20},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3788},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":307462,"byte_end":307474,"line_start":532,"line_end":532,"column_start":6,"column_end":18},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\spv\\mod.rs","byte_start":311736,"byte_end":311743,"line_start":655,"line_end":655,"column_start":18,"column_end":25},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3927},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":80521,"byte_end":80526,"line_start":28,"line_end":28,"column_start":6,"column_end":11},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":80626,"byte_end":80631,"line_start":34,"line_end":34,"column_start":28,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3954},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":81669,"byte_end":81680,"line_start":62,"line_end":62,"column_start":6,"column_end":17},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":84219,"byte_end":84229,"line_start":122,"line_end":122,"column_start":13,"column_end":23},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":7571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":86727,"byte_end":86736,"line_start":187,"line_end":187,"column_start":13,"column_end":22},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":6929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\back\\mod.rs","byte_start":86943,"byte_end":86952,"line_start":196,"line_end":196,"column_start":13,"column_end":22},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":7680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":581126,"byte_end":581131,"line_start":16,"line_end":16,"column_start":6,"column_end":11},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":583800,"byte_end":583805,"line_start":109,"line_end":109,"column_start":16,"column_end":21},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3960},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":583923,"byte_end":583928,"line_start":116,"line_end":116,"column_start":19,"column_end":24},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3960},"to":{"krate":2,"index":3255}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\block.rs","byte_start":584520,"byte_end":584525,"line_start":141,"line_end":141,"column_start":31,"column_end":36},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3960},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\interpolator.rs","byte_start":588601,"byte_end":588608,"line_start":5,"line_end":5,"column_start":13,"column_end":20},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":7025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\construction.rs","byte_start":787530,"byte_end":787545,"line_start":43,"line_end":43,"column_start":6,"column_end":21},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\construction.rs","byte_start":788485,"byte_end":788500,"line_start":70,"line_end":70,"column_start":6,"column_end":21},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\construction.rs","byte_start":795916,"byte_end":795926,"line_start":282,"line_end":282,"column_start":14,"column_end":24},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\lexer.rs","byte_start":822464,"byte_end":822469,"line_start":168,"line_end":168,"column_start":10,"column_end":15},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":838733,"byte_end":838739,"line_start":20,"line_end":20,"column_start":6,"column_end":12},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\number.rs","byte_start":843471,"byte_end":843484,"line_start":150,"line_end":150,"column_start":14,"column_end":27},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":595461,"byte_end":595466,"line_start":167,"line_end":167,"column_start":10,"column_end":15},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":4134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":613063,"byte_end":613076,"line_start":473,"line_end":473,"column_start":13,"column_end":26},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":6803},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":614532,"byte_end":614541,"line_start":513,"line_end":513,"column_start":13,"column_end":22},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":6929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":622451,"byte_end":622461,"line_start":730,"line_end":730,"column_start":13,"column_end":23},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":6561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":623082,"byte_end":623093,"line_start":749,"line_end":749,"column_start":36,"column_end":47},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3173},"to":{"krate":0,"index":1892}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":623927,"byte_end":623943,"line_start":769,"line_end":769,"column_start":17,"column_end":33},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":625796,"byte_end":625813,"line_start":828,"line_end":828,"column_start":10,"column_end":27},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":636221,"byte_end":636236,"line_start":1097,"line_end":1097,"column_start":6,"column_end":21},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":4294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":636524,"byte_end":636535,"line_start":1111,"line_end":1111,"column_start":6,"column_end":17},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":638843,"byte_end":638856,"line_start":1189,"line_end":1189,"column_start":6,"column_end":19},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4337},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":641957,"byte_end":641967,"line_start":1276,"line_end":1276,"column_start":6,"column_end":16},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4345},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":644227,"byte_end":644237,"line_start":1338,"line_end":1338,"column_start":28,"column_end":38},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4345},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":644387,"byte_end":644397,"line_start":1344,"line_end":1344,"column_start":28,"column_end":38},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4345},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":644692,"byte_end":644698,"line_start":1357,"line_end":1357,"column_start":6,"column_end":12},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":785849,"byte_end":785866,"line_start":4564,"line_end":4564,"column_start":6,"column_end":23},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":786052,"byte_end":786069,"line_start":4574,"line_end":4574,"column_start":16,"column_end":33},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2145},"to":{"krate":1,"index":4685}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\wgsl\\mod.rs","byte_start":786278,"byte_end":786295,"line_start":4585,"line_end":4585,"column_start":21,"column_end":38},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2145},"to":{"krate":22,"index":39}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":585151,"byte_end":585158,"line_start":28,"line_end":28,"column_start":6,"column_end":13},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":4353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":586051,"byte_end":586064,"line_start":57,"line_end":57,"column_start":13,"column_end":26},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":7010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":586401,"byte_end":586409,"line_start":72,"line_end":72,"column_start":6,"column_end":14},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\front\\mod.rs","byte_start":588387,"byte_end":588395,"line_start":130,"line_end":130,"column_start":48,"column_end":56},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4359},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884773,"byte_end":884790,"line_start":127,"line_end":127,"column_start":18,"column_end":35},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4365},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":884871,"byte_end":884890,"line_start":133,"line_end":133,"column_start":6,"column_end":25},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":4386},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":893198,"byte_end":893210,"line_start":329,"line_end":329,"column_start":6,"column_end":18},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":894426,"byte_end":894435,"line_start":359,"line_end":359,"column_start":13,"column_end":22},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":6929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\index.rs","byte_start":896749,"byte_end":896758,"line_start":416,"line_end":416,"column_start":13,"column_end":22},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":6588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":898014,"byte_end":898023,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":899447,"byte_end":899456,"line_start":52,"line_end":52,"column_start":18,"column_end":27},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":4446},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":899592,"byte_end":899601,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4446},"to":{"krate":2,"index":3101}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":899727,"byte_end":899736,"line_start":66,"line_end":66,"column_start":19,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4446},"to":{"krate":2,"index":3101}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900026,"byte_end":900035,"line_start":75,"line_end":75,"column_start":34,"column_end":43},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4446},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":900590,"byte_end":900600,"line_start":94,"line_end":94,"column_start":6,"column_end":16},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":4468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":901476,"byte_end":901484,"line_start":118,"line_end":118,"column_start":42,"column_end":50},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4483},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902299,"byte_end":902315,"line_start":144,"line_end":144,"column_start":6,"column_end":22},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\layouter.rs","byte_start":902438,"byte_end":902446,"line_start":150,"line_end":150,"column_start":6,"column_end":14},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\namer.rs","byte_start":907835,"byte_end":907840,"line_start":31,"line_end":31,"column_start":6,"column_end":11},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":922673,"byte_end":922687,"line_start":99,"line_end":99,"column_start":6,"column_end":20},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":923203,"byte_end":923217,"line_start":116,"line_end":116,"column_start":16,"column_end":30},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4603},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":924327,"byte_end":924340,"line_start":151,"line_end":151,"column_start":13,"column_end":26},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":7010},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\typifier.rs","byte_start":926438,"byte_end":926452,"line_start":211,"line_end":211,"column_start":10,"column_end":24},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2363},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":862531,"byte_end":862541,"line_start":19,"line_end":19,"column_start":44,"column_end":54},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":6561},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":863958,"byte_end":863969,"line_start":59,"line_end":59,"column_start":13,"column_end":24},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":6990},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":864302,"byte_end":864312,"line_start":70,"line_end":70,"column_start":13,"column_end":23},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":6561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":864589,"byte_end":864598,"line_start":81,"line_end":81,"column_start":13,"column_end":22},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":6929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":869232,"byte_end":869244,"line_start":208,"line_end":208,"column_start":13,"column_end":25},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":6439},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":869773,"byte_end":869785,"line_start":223,"line_end":223,"column_start":13,"column_end":25},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":7260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":872261,"byte_end":872271,"line_start":306,"line_end":306,"column_start":13,"column_end":23},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":7571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":873580,"byte_end":873588,"line_start":341,"line_end":341,"column_start":13,"column_end":21},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":7745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":874715,"byte_end":874726,"line_start":368,"line_end":368,"column_start":13,"column_end":24},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":7413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":874959,"byte_end":874967,"line_start":377,"line_end":377,"column_start":13,"column_end":21},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":6980},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":876404,"byte_end":876411,"line_start":408,"line_end":408,"column_start":13,"column_end":20},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":7025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":876714,"byte_end":876725,"line_start":418,"line_end":418,"column_start":27,"column_end":38},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":6990},"to":{"krate":2,"index":2675}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":877100,"byte_end":877111,"line_start":429,"line_end":429,"column_start":20,"column_end":31},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":6990},"to":{"krate":2,"index":2680}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":877147,"byte_end":877158,"line_start":430,"line_end":430,"column_start":33,"column_end":44},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":6990},"to":{"krate":2,"index":9809}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":877464,"byte_end":877480,"line_start":441,"line_end":441,"column_start":13,"column_end":29},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":7454},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\proc\\mod.rs","byte_start":877938,"byte_end":877948,"line_start":462,"line_end":462,"column_start":13,"column_end":23},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":6886},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":957281,"byte_end":957285,"line_start":12,"line_end":12,"column_start":6,"column_end":10},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":959551,"byte_end":959555,"line_start":79,"line_end":79,"column_start":29,"column_end":33},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4678},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":960828,"byte_end":960836,"line_start":118,"line_end":118,"column_start":26,"column_end":34},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4709},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":961149,"byte_end":961157,"line_start":137,"line_end":137,"column_start":19,"column_end":27},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4709},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":961285,"byte_end":961293,"line_start":146,"line_end":146,"column_start":9,"column_end":17},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":964357,"byte_end":964362,"line_start":242,"line_end":242,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":2560}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":965360,"byte_end":965365,"line_start":268,"line_end":268,"column_start":29,"column_end":34},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":80},"to":{"krate":0,"index":2568}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":965490,"byte_end":965501,"line_start":274,"line_end":274,"column_start":29,"column_end":40},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":127},"to":{"krate":0,"index":2568}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":965618,"byte_end":965619,"line_start":280,"line_end":280,"column_start":21,"column_end":22},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2579},"to":{"krate":0,"index":2560}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":966398,"byte_end":966403,"line_start":308,"line_end":308,"column_start":34,"column_end":39},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":2587}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\span.rs","byte_start":966603,"byte_end":966609,"line_start":316,"line_end":316,"column_start":42,"column_end":48},"kind":{"Impl":{"id":180}},"from":{"krate":2,"index":46098},"to":{"krate":0,"index":2587}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":985274,"byte_end":985284,"line_start":52,"line_end":52,"column_start":6,"column_end":16},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":986089,"byte_end":986107,"line_start":80,"line_end":80,"column_start":21,"column_end":39},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2655},"to":{"krate":2,"index":3155}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":986570,"byte_end":986588,"line_start":96,"line_end":96,"column_start":6,"column_end":24},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":988246,"byte_end":988260,"line_start":148,"line_end":148,"column_start":6,"column_end":20},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":5029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":988937,"byte_end":988953,"line_start":171,"line_end":171,"column_start":6,"column_end":22},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":5038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":992806,"byte_end":992818,"line_start":258,"line_end":258,"column_start":6,"column_end":18},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":5077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":993387,"byte_end":993399,"line_start":277,"line_end":277,"column_start":52,"column_end":64},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":5077},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":993604,"byte_end":993616,"line_start":284,"line_end":284,"column_start":48,"column_end":60},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":5077},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":994276,"byte_end":994288,"line_start":303,"line_end":303,"column_start":6,"column_end":18},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":5077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\analyzer.rs","byte_start":1021804,"byte_end":1021814,"line_start":929,"line_end":929,"column_start":6,"column_end":16},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":6275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1043033,"byte_end":1043055,"line_start":132,"line_end":132,"column_start":10,"column_end":32},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\expression.rs","byte_start":1043422,"byte_end":1043431,"line_start":146,"line_end":146,"column_start":13,"column_end":22},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":6280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1113518,"byte_end":1113530,"line_start":179,"line_end":179,"column_start":10,"column_end":22},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\function.rs","byte_start":1115693,"byte_end":1115702,"line_start":247,"line_end":247,"column_start":13,"column_end":22},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":6280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1151941,"byte_end":1151955,"line_start":112,"line_end":112,"column_start":6,"column_end":20},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\interface.rs","byte_start":1162100,"byte_end":1162109,"line_start":357,"line_end":357,"column_start":13,"column_end":22},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":6280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1178117,"byte_end":1178125,"line_start":187,"line_end":187,"column_start":6,"column_end":14},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":5939},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\type.rs","byte_start":1178552,"byte_end":1178561,"line_start":205,"line_end":205,"column_start":13,"column_end":22},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":6280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":971681,"byte_end":971696,"line_start":72,"line_end":72,"column_start":18,"column_end":33},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":5947},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":973507,"byte_end":973517,"line_start":123,"line_end":123,"column_start":46,"column_end":56},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":6275},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":975682,"byte_end":975691,"line_start":201,"line_end":201,"column_start":13,"column_end":22},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":6929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\naga-0.9.0\\src\\valid\\mod.rs","byte_start":977106,"byte_end":977115,"line_start":246,"line_end":246,"column_start":6,"column_end":15},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":6280},"to":{"krate":4294967295,"index":4294967295}}]}