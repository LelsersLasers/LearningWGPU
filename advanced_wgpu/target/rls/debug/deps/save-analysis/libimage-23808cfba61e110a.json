{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3","program":"C:\\Users\\milla\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","image","--edition=2018","C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"jpeg\"","--cfg","feature=\"png\"","-C","metadata=23808cfba61e110a","-C","extra-filename=-23808cfba61e110a","--out-dir","c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps","--extern","bytemuck=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libbytemuck-73a797f17c8a9b85.rmeta","--extern","byteorder=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libbyteorder-77d82841e8d9822e.rmeta","--extern","color_quant=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libcolor_quant-574e7c6c29cd6740.rmeta","--extern","jpeg=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libjpeg_decoder-fde3470e562670cd.rmeta","--extern","num_rational=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libnum_rational-be5a8a5854b90592.rmeta","--extern","num_traits=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libnum_traits-38693de2eacc0864.rmeta","--extern","png=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libpng-d148eb476c675a40.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\milla\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libimage-23808cfba61e110a.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[1024227252061925292,0]},"crate_root":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src","external_crates":[{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","num":14,"id":{"name":"num_traits","disambiguator":[15441111099474508518,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","num":15,"id":{"name":"jpeg_decoder","disambiguator":[1479161398398698020,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","num":16,"id":{"name":"num_rational","disambiguator":[11084066352784805801,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","num":17,"id":{"name":"num_integer","disambiguator":[909936803401979652,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","num":18,"id":{"name":"png","disambiguator":[11414280711835545029,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","num":19,"id":{"name":"bitflags","disambiguator":[906870646478561945,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","num":20,"id":{"name":"crc32fast","disambiguator":[2318731209867044845,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","num":21,"id":{"name":"cfg_if","disambiguator":[10169579803109374085,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","num":22,"id":{"name":"miniz_oxide","disambiguator":[3689517546075039511,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","num":23,"id":{"name":"adler","disambiguator":[16180761910858798220,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","num":24,"id":{"name":"deflate","disambiguator":[14741686930972142222,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","num":25,"id":{"name":"adler32","disambiguator":[6093285879585151405,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","num":26,"id":{"name":"byteorder","disambiguator":[6856623506392020765,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","num":27,"id":{"name":"color_quant","disambiguator":[2961336796861554545,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","num":28,"id":{"name":"bytemuck","disambiguator":[9235287423576104987,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","num":29,"id":{"name":"bytemuck_derive","disambiguator":[8788414257316514135,0]}}],"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":0,"byte_end":9235,"line_start":1,"line_end":277,"column_start":1,"column_end":46}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3487},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3983,"byte_end":3992,"line_start":104,"line_end":104,"column_start":24,"column_end":33},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3522},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3994,"byte_end":4011,"line_start":104,"line_end":104,"column_start":35,"column_end":52},"alias_span":null,"name":"ExtendedColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3808},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4038,"byte_end":4042,"line_start":106,"line_end":106,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3809},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4038,"byte_end":4042,"line_start":106,"line_end":106,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3866},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4044,"byte_end":4049,"line_start":106,"line_end":106,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3867},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4044,"byte_end":4049,"line_start":106,"line_end":106,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3779},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4051,"byte_end":4054,"line_start":106,"line_end":106,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3780},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4051,"byte_end":4054,"line_start":106,"line_end":106,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3837},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4056,"byte_end":4060,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3838},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4056,"byte_end":4060,"line_start":106,"line_end":106,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2977},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4087,"byte_end":4097,"line_start":108,"line_end":108,"column_start":24,"column_end":34},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4099,"byte_end":4110,"line_start":108,"line_end":108,"column_start":36,"column_end":47},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2732},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4142,"byte_end":4158,"line_start":111,"line_end":111,"column_start":5,"column_end":21},"alias_span":null,"name":"AnimationDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2756},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4164,"byte_end":4176,"line_start":112,"line_end":112,"column_start":5,"column_end":17},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2745},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4182,"byte_end":4198,"line_start":113,"line_end":113,"column_start":5,"column_end":21},"alias_span":null,"name":"GenericImageView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4204,"byte_end":4216,"line_start":114,"line_end":114,"column_start":5,"column_end":17},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2726},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4222,"byte_end":4238,"line_start":115,"line_end":115,"column_start":5,"column_end":21},"alias_span":null,"name":"ImageDecoderRect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4244,"byte_end":4256,"line_start":116,"line_end":116,"column_start":5,"column_end":17},"alias_span":null,"name":"ImageEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3949},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4262,"byte_end":4273,"line_start":117,"line_end":117,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3992},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4279,"byte_end":4296,"line_start":118,"line_end":118,"column_start":5,"column_end":22},"alias_span":null,"name":"ImageOutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4027},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4319,"byte_end":4325,"line_start":120,"line_end":120,"column_start":5,"column_end":11},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4012},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4331,"byte_end":4339,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"alias_span":null,"name":"Progress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4039},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4345,"byte_end":4353,"line_start":122,"line_end":122,"column_start":5,"column_end":13},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4389,"byte_end":4403,"line_start":126,"line_end":126,"column_start":5,"column_end":19},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2153},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4409,"byte_end":4418,"line_start":127,"line_end":127,"column_start":5,"column_end":14},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3456},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4443,"byte_end":4454,"line_start":129,"line_end":129,"column_start":5,"column_end":16},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2159},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4460,"byte_end":4471,"line_start":130,"line_end":130,"column_start":5,"column_end":16},"alias_span":null,"name":"Rgb32FImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4477,"byte_end":4485,"line_start":131,"line_end":131,"column_start":5,"column_end":13},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2160},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4491,"byte_end":4503,"line_start":132,"line_end":132,"column_start":5,"column_end":17},"alias_span":null,"name":"Rgba32FImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4509,"byte_end":4518,"line_start":133,"line_end":133,"column_start":5,"column_end":14},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4545,"byte_end":4556,"line_start":136,"line_end":136,"column_start":22,"column_end":33},"alias_span":null,"name":"FlatSamples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2834},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4593,"byte_end":4608,"line_start":139,"line_end":139,"column_start":25,"column_end":40},"alias_span":null,"name":"EncodableLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2921},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4610,"byte_end":4615,"line_start":139,"line_end":139,"column_start":42,"column_end":47},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2886},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4617,"byte_end":4635,"line_start":139,"line_end":139,"column_start":49,"column_end":67},"alias_span":null,"name":"PixelWithColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4637,"byte_end":4646,"line_start":139,"line_end":139,"column_start":69,"column_end":78},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4711,"byte_end":4727,"line_start":143,"line_end":143,"column_start":5,"column_end":21},"alias_span":null,"name":"image_dimensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2601},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4729,"byte_end":4745,"line_start":143,"line_end":143,"column_start":23,"column_end":39},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2602},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4747,"byte_end":4775,"line_start":143,"line_end":143,"column_start":41,"column_end":69},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2590},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4777,"byte_end":4781,"line_start":143,"line_end":143,"column_start":71,"column_end":75},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2594},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4783,"byte_end":4794,"line_start":143,"line_end":143,"column_start":77,"column_end":88},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2596},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4800,"byte_end":4823,"line_start":144,"line_end":144,"column_start":5,"column_end":28},"alias_span":null,"name":"save_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2598},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4825,"byte_end":4849,"line_start":144,"line_end":144,"column_start":30,"column_end":54},"alias_span":null,"name":"write_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4890,"byte_end":4902,"line_start":146,"line_end":146,"column_start":37,"column_end":49},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4904,"byte_end":4908,"line_start":146,"line_end":146,"column_start":51,"column_end":55},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3895},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4937,"byte_end":4949,"line_start":148,"line_end":148,"column_start":26,"column_end":38},"alias_span":null,"name":"DynamicImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3440},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4979,"byte_end":4984,"line_start":150,"line_end":150,"column_start":28,"column_end":33},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3433},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4986,"byte_end":4991,"line_start":150,"line_end":150,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":4993,"byte_end":4999,"line_start":150,"line_end":150,"column_start":42,"column_end":48},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2138},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5222,"byte_end":5235,"line_start":159,"line_end":159,"column_start":9,"column_end":22},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":1948},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5237,"byte_end":5252,"line_start":159,"line_end":159,"column_start":24,"column_end":39},"alias_span":null,"name":"EnumeratePixels","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5254,"byte_end":5272,"line_start":159,"line_end":159,"column_start":41,"column_end":59},"alias_span":null,"name":"EnumeratePixelsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":1971},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5274,"byte_end":5287,"line_start":159,"line_end":159,"column_start":61,"column_end":74},"alias_span":null,"name":"EnumerateRows","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":2013},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5289,"byte_end":5305,"line_start":159,"line_end":159,"column_start":76,"column_end":92},"alias_span":null,"name":"EnumerateRowsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":1850},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5315,"byte_end":5321,"line_start":160,"line_end":160,"column_start":9,"column_end":15},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5323,"byte_end":5332,"line_start":160,"line_end":160,"column_start":17,"column_end":26},"alias_span":null,"name":"PixelsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5334,"byte_end":5338,"line_start":160,"line_end":160,"column_start":28,"column_end":32},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":1924},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5340,"byte_end":5347,"line_start":160,"line_end":160,"column_start":34,"column_end":41},"alias_span":null,"name":"RowsMut","value":"","parent":{"krate":0,"index":215}},{"kind":"Use","ref_id":{"krate":0,"index":3109},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\math\\mod.rs","byte_start":26402,"byte_end":26406,"line_start":5,"line_end":5,"column_start":21,"column_end":25},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":244}},{"kind":"Use","ref_id":{"krate":0,"index":3134},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31469,"byte_end":31479,"line_start":7,"line_end":7,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3139},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31517,"byte_end":31527,"line_start":9,"line_end":9,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3140},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31517,"byte_end":31527,"line_start":9,"line_end":9,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3141},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31529,"byte_end":31537,"line_start":9,"line_end":9,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3142},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31529,"byte_end":31537,"line_start":9,"line_end":9,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3143},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31539,"byte_end":31547,"line_start":9,"line_end":9,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31539,"byte_end":31547,"line_start":9,"line_end":9,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3135},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31549,"byte_end":31556,"line_start":9,"line_end":9,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3136},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31549,"byte_end":31556,"line_start":9,"line_end":9,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3137},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31558,"byte_end":31566,"line_start":9,"line_end":9,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3138},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31558,"byte_end":31566,"line_start":9,"line_end":9,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31625,"byte_end":31640,"line_start":13,"line_end":13,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31642,"byte_end":31660,"line_start":13,"line_end":13,"column_start":22,"column_end":40},"alias_span":null,"name":"flip_horizontal_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31662,"byte_end":31686,"line_start":13,"line_end":13,"column_start":42,"column_end":66},"alias_span":null,"name":"flip_horizontal_in_place","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31688,"byte_end":31701,"line_start":13,"line_end":13,"column_start":68,"column_end":81},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31703,"byte_end":31719,"line_start":13,"line_end":13,"column_start":83,"column_end":99},"alias_span":null,"name":"flip_vertical_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31725,"byte_end":31747,"line_start":14,"line_end":14,"column_start":5,"column_end":27},"alias_span":null,"name":"flip_vertical_in_place","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31749,"byte_end":31758,"line_start":14,"line_end":14,"column_start":29,"column_end":38},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31760,"byte_end":31772,"line_start":14,"line_end":14,"column_start":40,"column_end":52},"alias_span":null,"name":"rotate180_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31774,"byte_end":31792,"line_start":14,"line_end":14,"column_start":54,"column_end":72},"alias_span":null,"name":"rotate180_in_place","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31794,"byte_end":31803,"line_start":14,"line_end":14,"column_start":74,"column_end":83},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31805,"byte_end":31817,"line_start":14,"line_end":14,"column_start":85,"column_end":97},"alias_span":null,"name":"rotate270_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31823,"byte_end":31831,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31833,"byte_end":31844,"line_start":15,"line_end":15,"column_start":15,"column_end":26},"alias_span":null,"name":"rotate90_in","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31892,"byte_end":31896,"line_start":19,"line_end":19,"column_start":24,"column_end":28},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31898,"byte_end":31907,"line_start":19,"line_end":19,"column_start":30,"column_end":39},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31909,"byte_end":31915,"line_start":19,"line_end":19,"column_start":41,"column_end":47},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31917,"byte_end":31926,"line_start":19,"line_end":19,"column_start":49,"column_end":58},"alias_span":null,"name":"thumbnail","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31928,"byte_end":31937,"line_start":19,"line_end":19,"column_start":60,"column_end":69},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31992,"byte_end":32000,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32002,"byte_end":32010,"line_start":23,"line_end":23,"column_start":15,"column_end":23},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32012,"byte_end":32018,"line_start":23,"line_end":23,"column_start":25,"column_end":31},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32020,"byte_end":32029,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32031,"byte_end":32046,"line_start":23,"line_end":23,"column_start":44,"column_end":59},"alias_span":null,"name":"grayscale_alpha","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32048,"byte_end":32067,"line_start":23,"line_end":23,"column_start":61,"column_end":80},"alias_span":null,"name":"grayscale_with_type","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32073,"byte_end":32098,"line_start":24,"line_end":24,"column_start":5,"column_end":30},"alias_span":null,"name":"grayscale_with_type_alpha","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32100,"byte_end":32109,"line_start":24,"line_end":24,"column_start":32,"column_end":41},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32111,"byte_end":32123,"line_start":24,"line_end":24,"column_start":43,"column_end":55},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32125,"byte_end":32131,"line_start":24,"line_end":24,"column_start":57,"column_end":63},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32133,"byte_end":32140,"line_start":24,"line_end":24,"column_start":65,"column_end":72},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":3130},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32133,"byte_end":32140,"line_start":24,"line_end":24,"column_start":65,"column_end":72},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32142,"byte_end":32150,"line_start":24,"line_end":24,"column_start":74,"column_end":82},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":257}},{"kind":"Use","ref_id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":110904,"byte_end":110910,"line_start":10,"line_end":10,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":710}},{"kind":"Use","ref_id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\mod.rs","byte_start":200165,"byte_end":200176,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JpegDecoder","value":"","parent":{"krate":0,"index":1141}},{"kind":"Use","ref_id":{"krate":0,"index":1371},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\mod.rs","byte_start":200202,"byte_end":200213,"line_start":11,"line_end":11,"column_start":25,"column_end":36},"alias_span":null,"name":"JpegEncoder","value":"","parent":{"krate":0,"index":1141}},{"kind":"Use","ref_id":{"krate":0,"index":3356},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\mod.rs","byte_start":200215,"byte_end":200227,"line_start":11,"line_end":11,"column_start":38,"column_end":50},"alias_span":null,"name":"PixelDensity","value":"","parent":{"krate":0,"index":1141}},{"kind":"Use","ref_id":{"krate":0,"index":3338},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\mod.rs","byte_start":200229,"byte_end":200245,"line_start":11,"line_end":11,"column_start":52,"column_end":68},"alias_span":null,"name":"PixelDensityUnit","value":"","parent":{"krate":0,"index":1141}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":0,"byte_end":9235,"line_start":1,"line_end":277,"column_start":1,"column_end":46},"name":"","qualname":"::","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":215},{"krate":0,"index":244},{"krate":0,"index":257},{"krate":0,"index":710},{"krate":0,"index":925},{"krate":0,"index":1140},{"krate":0,"index":1696},{"krate":0,"index":1749},{"krate":0,"index":2161},{"krate":0,"index":2329},{"krate":0,"index":2603},{"krate":0,"index":2804},{"krate":0,"index":2962},{"krate":0,"index":2976},{"krate":0,"index":4095}],"decl_id":null,"docs":" # Overview","sig":null,"attributes":[{"value":"/ # Overview","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":0,"byte_end":14,"line_start":1,"line_end":1,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":15,"byte_end":18,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate provides native rust implementations of image encoding and decoding as well as some","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":19,"byte_end":117,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"/ basic image manipulation functions. Additional documentation can currently also be found in the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":118,"byte_end":217,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ [README.md file which is most easily viewed on","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":218,"byte_end":268,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/ github](https://github.com/image-rs/image/blob/master/README.md).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":269,"byte_end":338,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":339,"byte_end":342,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ There are two core problems for which this library provides solutions: a unified interface for image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":343,"byte_end":447,"line_start":8,"line_end":8,"column_start":1,"column_end":105}},{"value":"/ encodings and simple generic buffers for their content. It's possible to use either feature","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":448,"byte_end":543,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ without the other. The focus is on a small and stable set of common operations that can be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":544,"byte_end":638,"line_start":10,"line_end":10,"column_start":1,"column_end":95}},{"value":"/ supplemented by other specialized crates. The library also prefers safe solutions with few","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":639,"byte_end":733,"line_start":11,"line_end":11,"column_start":1,"column_end":95}},{"value":"/ dependencies.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":734,"byte_end":751,"line_start":12,"line_end":12,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":752,"byte_end":755,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # High level API","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":756,"byte_end":776,"line_start":14,"line_end":14,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":777,"byte_end":780,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Load images using [`io::Reader`]:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":781,"byte_end":818,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":819,"byte_end":822,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":823,"byte_end":841,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ use std::io::Cursor;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":842,"byte_end":866,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ use image::io::Reader as ImageReader;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":867,"byte_end":908,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ # fn main() -> Result<(), image::ImageError> {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":909,"byte_end":959,"line_start":21,"line_end":21,"column_start":1,"column_end":51}},{"value":"/ # let bytes = vec![0u8];","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":960,"byte_end":988,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":989,"byte_end":992,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let img = ImageReader::open(\"myimage.png\")?.decode()?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":993,"byte_end":1051,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/ let img2 = ImageReader::new(Cursor::new(bytes)).with_guessed_format()?.decode()?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1052,"byte_end":1137,"line_start":25,"line_end":25,"column_start":1,"column_end":86}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1138,"byte_end":1150,"line_start":26,"line_end":26,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1151,"byte_end":1158,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1159,"byte_end":1166,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1167,"byte_end":1170,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ And save them using [`save`] or [`write_to`] methods:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1171,"byte_end":1228,"line_start":30,"line_end":30,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1229,"byte_end":1232,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1233,"byte_end":1251,"line_start":32,"line_end":32,"column_start":1,"column_end":19}},{"value":"/ # use std::io::{Write, Cursor};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1252,"byte_end":1287,"line_start":33,"line_end":33,"column_start":1,"column_end":36}},{"value":"/ # use image::ImageOutputFormat;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1288,"byte_end":1323,"line_start":34,"line_end":34,"column_start":1,"column_end":36}},{"value":"/ # use image::DynamicImage;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1324,"byte_end":1354,"line_start":35,"line_end":35,"column_start":1,"column_end":31}},{"value":"/ # #[cfg(feature = \"png\")]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1355,"byte_end":1384,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/ # fn main() -> Result<(), image::ImageError> {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1385,"byte_end":1435,"line_start":37,"line_end":37,"column_start":1,"column_end":51}},{"value":"/ # let img: DynamicImage = unimplemented!();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1436,"byte_end":1483,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ # let img2: DynamicImage = unimplemented!();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1484,"byte_end":1532,"line_start":39,"line_end":39,"column_start":1,"column_end":49}},{"value":"/ img.save(\"empty.jpg\")?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1533,"byte_end":1560,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1561,"byte_end":1564,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let mut bytes: Vec<u8> = Vec::new();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1565,"byte_end":1605,"line_start":42,"line_end":42,"column_start":1,"column_end":41}},{"value":"/ img2.write_to(&mut Cursor::new(&mut bytes), image::ImageOutputFormat::Png)?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1606,"byte_end":1686,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1687,"byte_end":1699,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1700,"byte_end":1707,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"png\"))] fn main() {}","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1708,"byte_end":1755,"line_start":46,"line_end":46,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1756,"byte_end":1763,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1764,"byte_end":1767,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ With default features, the crate includes support for [many common image formats](codecs/index.html#supported-formats).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1768,"byte_end":1891,"line_start":49,"line_end":49,"column_start":1,"column_end":124}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1892,"byte_end":1895,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`save`]: enum.DynamicImage.html#method.save","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1896,"byte_end":1944,"line_start":51,"line_end":51,"column_start":1,"column_end":49}},{"value":"/ [`write_to`]: enum.DynamicImage.html#method.write_to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":1945,"byte_end":2001,"line_start":52,"line_end":52,"column_start":1,"column_end":57}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2002,"byte_end":2043,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2044,"byte_end":2047,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Image buffers","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2048,"byte_end":2067,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2068,"byte_end":2071,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The two main types for storing images:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2072,"byte_end":2114,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"/ * [`ImageBuffer`] which holds statically typed image contents.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2115,"byte_end":2181,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/ * [`DynamicImage`] which is an enum over the supported ImageBuffer formats","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2182,"byte_end":2260,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"/     and supports conversions between them.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2261,"byte_end":2307,"line_start":60,"line_end":60,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2308,"byte_end":2311,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ As well as a few more specialized options:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2312,"byte_end":2358,"line_start":62,"line_end":62,"column_start":1,"column_end":47}},{"value":"/ * [`GenericImage`] trait for a mutable image buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2359,"byte_end":2415,"line_start":63,"line_end":63,"column_start":1,"column_end":57}},{"value":"/ * [`GenericImageView`] trait for read only references to a GenericImage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2416,"byte_end":2492,"line_start":64,"line_end":64,"column_start":1,"column_end":77}},{"value":"/ * [`flat`] module containing types for interoperability with generic channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2493,"byte_end":2573,"line_start":65,"line_end":65,"column_start":1,"column_end":81}},{"value":"/     matrices and foreign interfaces.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2574,"byte_end":2614,"line_start":66,"line_end":66,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2615,"byte_end":2618,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2619,"byte_end":2672,"line_start":68,"line_end":68,"column_start":1,"column_end":54}},{"value":"/ [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2673,"byte_end":2718,"line_start":69,"line_end":69,"column_start":1,"column_end":46}},{"value":"/ [`ImageBuffer`]: struct.ImageBuffer.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2719,"byte_end":2763,"line_start":70,"line_end":70,"column_start":1,"column_end":45}},{"value":"/ [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2764,"byte_end":2808,"line_start":71,"line_end":71,"column_start":1,"column_end":45}},{"value":"/ [`flat`]: flat/index.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2809,"byte_end":2838,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2839,"byte_end":2842,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ # Low level encoding/decoding API","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2843,"byte_end":2880,"line_start":74,"line_end":74,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2881,"byte_end":2884,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The [`ImageDecoder`] and [`ImageDecoderRect`] traits are implemented for many image file","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2885,"byte_end":2977,"line_start":76,"line_end":76,"column_start":1,"column_end":93}},{"value":"/ formats. They decode image data by directly on raw byte slices. Given an ImageDecoder, you can","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":2978,"byte_end":3076,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/ produce a DynamicImage via [`DynamicImage::from_decoder`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3077,"byte_end":3139,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3140,"byte_end":3143,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ [`ImageEncoder`] provides the analogous functionality for encoding image data.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3144,"byte_end":3226,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3227,"byte_end":3230,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ [`DynamicImage::from_decoder`]: enum.DynamicImage.html#method.from_decoder","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3231,"byte_end":3309,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ [`ImageDecoderRect`]: trait.ImageDecoderRect.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3310,"byte_end":3363,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/ [`ImageDecoder`]: trait.ImageDecoder.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3364,"byte_end":3409,"line_start":84,"line_end":84,"column_start":1,"column_end":46}},{"value":"/ [`ImageEncoder`]: trait.ImageEncoder.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3410,"byte_end":3455,"line_start":85,"line_end":85,"column_start":1,"column_end":46}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3456,"byte_end":3478,"line_start":86,"line_end":86,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3479,"byte_end":3510,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"deny(unreachable_pub)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3511,"byte_end":3536,"line_start":88,"line_end":88,"column_start":1,"column_end":26}},{"value":"deny(deprecated)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3537,"byte_end":3557,"line_start":89,"line_end":89,"column_start":1,"column_end":21}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3558,"byte_end":3596,"line_start":90,"line_end":90,"column_start":1,"column_end":39}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3694,"byte_end":3735,"line_start":93,"line_end":93,"column_start":1,"column_end":42}},{"value":"allow(clippy :: wrong_self_convention, clippy :: enum_variant_names)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":3776,"byte_end":3844,"line_start":95,"line_end":95,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":155},{"krate":0,"index":158},{"krate":0,"index":2977},{"krate":0,"index":2996},{"krate":0,"index":2998},{"krate":0,"index":3001},{"krate":0,"index":3003},{"krate":0,"index":3013},{"krate":0,"index":3015},{"krate":0,"index":3017},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3024},{"krate":0,"index":3027},{"krate":0,"index":3029},{"krate":0,"index":3032},{"krate":0,"index":3034},{"krate":0,"index":3044},{"krate":0,"index":3046},{"krate":0,"index":3048},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3055},{"krate":0,"index":3058},{"krate":0,"index":3060},{"krate":0,"index":3062},{"krate":0,"index":3064},{"krate":0,"index":3072},{"krate":0,"index":3074},{"krate":0,"index":3076},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3086},{"krate":0,"index":3098},{"krate":0,"index":3100},{"krate":0,"index":3102},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":170},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":213}],"decl_id":null,"docs":" Contains detailed error representation.","sig":null,"attributes":[{"value":"/ Contains detailed error representation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":9237,"byte_end":9280,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":9281,"byte_end":9284,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See the main [`ImageError`] which contains a variant for each specialized error type. The","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":9285,"byte_end":9378,"line_start":3,"line_end":3,"column_start":1,"column_end":94}},{"value":"/ subtypes used in each variant are opaque by design. They can be roughly inspected through their","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":9379,"byte_end":9478,"line_start":4,"line_end":4,"column_start":1,"column_end":100}},{"value":"/ respective `kind` methods which work similar to `std::io::Error::kind`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":9479,"byte_end":9554,"line_start":5,"line_end":5,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":9555,"byte_end":9558,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The error interface makes it possible to inspect the error of an underlying decoder or encoder,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":9559,"byte_end":9658,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ through the `Error::source` method. Note that this is not part of the stable interface and you","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":9659,"byte_end":9757,"line_start":8,"line_end":8,"column_start":1,"column_end":99}},{"value":"/ may not rely on a particular error value for a particular operation. This means mainly that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":9758,"byte_end":9853,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ `image` does not promise to remain on a particular version of its underlying decoders but if","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":9854,"byte_end":9950,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ you ensure to use the same version of the dependency (or at least of the error type) through","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":9951,"byte_end":10047,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ external means then you could inspect the error type in slightly more detail.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10048,"byte_end":10129,"line_start":12,"line_end":12,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10130,"byte_end":10133,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`ImageError`]: enum.ImageError.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10134,"byte_end":10174,"line_start":14,"line_end":14,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2978},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10847,"byte_end":10855,"line_start":33,"line_end":33,"column_start":5,"column_end":13},"name":"Decoding","qualname":"::error::ImageError::Decoding","value":"ImageError::Decoding(DecodingError)","parent":{"krate":0,"index":2977},"children":[],"decl_id":null,"docs":" An error was encountered while decoding.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10564,"byte_end":10608,"line_start":28,"line_end":28,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10613,"byte_end":10616,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This means that the input data did not conform to the specification of some image format,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10621,"byte_end":10714,"line_start":30,"line_end":30,"column_start":5,"column_end":98}},{"value":"/ or that no format could be determined, or that it did not match format specific","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10719,"byte_end":10802,"line_start":31,"line_end":31,"column_start":5,"column_end":88}},{"value":"/ requirements set by the caller.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10807,"byte_end":10842,"line_start":32,"line_end":32,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2981},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11241,"byte_end":11249,"line_start":41,"line_end":41,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::error::ImageError::Encoding","value":"ImageError::Encoding(EncodingError)","parent":{"krate":0,"index":2977},"children":[],"decl_id":null,"docs":" An error was encountered while encoding.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10877,"byte_end":10921,"line_start":35,"line_end":35,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10926,"byte_end":10929,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The input image can not be encoded with the chosen format, for example because the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10934,"byte_end":11020,"line_start":37,"line_end":37,"column_start":5,"column_end":91}},{"value":"/ specification has no representation for its color space or because a necessary conversion","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11025,"byte_end":11118,"line_start":38,"line_end":38,"column_start":5,"column_end":98}},{"value":"/ is ambiguous. In some cases it might also happen that the dimensions can not be used with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11123,"byte_end":11216,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ the format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11221,"byte_end":11236,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2984},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11489,"byte_end":11498,"line_start":47,"line_end":47,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::error::ImageError::Parameter","value":"ImageError::Parameter(ParameterError)","parent":{"krate":0,"index":2977},"children":[],"decl_id":null,"docs":" An error was encountered in input arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in input arguments.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11271,"byte_end":11319,"line_start":43,"line_end":43,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11324,"byte_end":11327,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This is a catch-all case for strictly internal operations such as scaling, conversions,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11332,"byte_end":11423,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ etc. that involve no external format specifications.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11428,"byte_end":11484,"line_start":46,"line_end":46,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2987},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11758,"byte_end":11764,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Limits","qualname":"::error::ImageError::Limits","value":"ImageError::Limits(LimitError)","parent":{"krate":0,"index":2977},"children":[],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11521,"byte_end":11598,"line_start":49,"line_end":49,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11603,"byte_end":11606,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Errors of this type are limits set by the user or environment, *not* inherent in a specific","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11611,"byte_end":11706,"line_start":51,"line_end":51,"column_start":5,"column_end":100}},{"value":"/ format or operation that was executed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11711,"byte_end":11753,"line_start":52,"line_end":52,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2990},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12102,"byte_end":12113,"line_start":61,"line_end":61,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ImageError::Unsupported","value":"ImageError::Unsupported(UnsupportedError)","parent":{"krate":0,"index":2977},"children":[],"decl_id":null,"docs":" An operation can not be completed by the chosen abstraction.","sig":null,"attributes":[{"value":"/ An operation can not be completed by the chosen abstraction.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11783,"byte_end":11847,"line_start":55,"line_end":55,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11852,"byte_end":11855,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ This means that it might be possible for the operation to succeed in general but","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11860,"byte_end":11944,"line_start":57,"line_end":57,"column_start":5,"column_end":89}},{"value":"/ * it requires a disabled feature,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11949,"byte_end":11986,"line_start":58,"line_end":58,"column_start":5,"column_end":42}},{"value":"/ * the implementation does not yet exist, or","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":11991,"byte_end":12038,"line_start":59,"line_end":59,"column_start":5,"column_end":52}},{"value":"/ * no abstraction for a lower level could be found.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12043,"byte_end":12097,"line_start":60,"line_end":60,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2993},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12204,"byte_end":12211,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":2977},"children":[],"decl_id":null,"docs":" An error occurred while interacting with the environment.\n","sig":null,"attributes":[{"value":"/ An error occurred while interacting with the environment.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12138,"byte_end":12199,"line_start":63,"line_end":63,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":2977},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10547,"byte_end":10557,"line_start":27,"line_end":27,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::error::ImageError","value":"pub enum ImageError {\n    Decoding(DecodingError),\n    Encoding(EncodingError),\n    Parameter(ParameterError),\n    Limits(LimitError),\n    Unsupported(UnsupportedError),\n    IoError(io::Error),\n}","parent":null,"children":[{"krate":0,"index":2978},{"krate":0,"index":2981},{"krate":0,"index":2984},{"krate":0,"index":2987},{"krate":0,"index":2990},{"krate":0,"index":2993}],"decl_id":null,"docs":" The generic error type for image operations.","sig":null,"attributes":[{"value":"/ The generic error type for image operations.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10289,"byte_end":10337,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10338,"byte_end":10341,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This high level enum allows, by variant matching, a rough separation of concerns between","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10342,"byte_end":10434,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/ underlying IO, the caller, format specifications, and the `image` implementation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":10435,"byte_end":10520,"line_start":25,"line_end":25,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":2998},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12443,"byte_end":12459,"line_start":73,"line_end":73,"column_start":12,"column_end":28},"name":"UnsupportedError","qualname":"::error::UnsupportedError","value":"UnsupportedError {  }","parent":null,"children":[{"krate":0,"index":2999},{"krate":0,"index":3000}],"decl_id":null,"docs":" The implementation for an operation was not provided.","sig":null,"attributes":[{"value":"/ The implementation for an operation was not provided.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12227,"byte_end":12284,"line_start":67,"line_end":67,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12285,"byte_end":12288,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ See the variant [`Unsupported`] for more documentation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12289,"byte_end":12348,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12349,"byte_end":12352,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ [`Unsupported`]: enum.ImageError.html#variant.Unsupported","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12353,"byte_end":12414,"line_start":71,"line_end":71,"column_start":1,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3004},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12716,"byte_end":12721,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Color","qualname":"::error::UnsupportedErrorKind::Color","value":"UnsupportedErrorKind::Color(ExtendedColorType)","parent":{"krate":0,"index":3003},"children":[],"decl_id":null,"docs":" The required color type can not be handled.\n","sig":null,"attributes":[{"value":"/ The required color type can not be handled.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12664,"byte_end":12711,"line_start":82,"line_end":82,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3007},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12788,"byte_end":12794,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::UnsupportedErrorKind::Format","value":"UnsupportedErrorKind::Format(ImageFormatHint)","parent":{"krate":0,"index":3003},"children":[],"decl_id":null,"docs":" An image format is not supported.\n","sig":null,"attributes":[{"value":"/ An image format is not supported.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12746,"byte_end":12783,"line_start":84,"line_end":84,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3010},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12938,"byte_end":12952,"line_start":88,"line_end":88,"column_start":5,"column_end":19},"name":"GenericFeature","qualname":"::error::UnsupportedErrorKind::GenericFeature","value":"UnsupportedErrorKind::GenericFeature(String)","parent":{"krate":0,"index":3003},"children":[],"decl_id":null,"docs":" Some feature specified by string.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ Some feature specified by string.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12817,"byte_end":12854,"line_start":86,"line_end":86,"column_start":5,"column_end":42}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12859,"byte_end":12933,"line_start":87,"line_end":87,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":3003},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12637,"byte_end":12657,"line_start":81,"line_end":81,"column_start":10,"column_end":30},"name":"UnsupportedErrorKind","qualname":"::error::UnsupportedErrorKind","value":"pub enum UnsupportedErrorKind {\n    Color(ExtendedColorType),\n    Format(ImageFormatHint),\n    GenericFeature(String),\n}","parent":null,"children":[{"krate":0,"index":3004},{"krate":0,"index":3007},{"krate":0,"index":3010}],"decl_id":null,"docs":" Details what feature is not supported.\n","sig":null,"attributes":[{"value":"/ Details what feature is not supported.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12526,"byte_end":12568,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12610,"byte_end":12627,"line_start":80,"line_end":80,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3024},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13258,"byte_end":13271,"line_start":98,"line_end":98,"column_start":12,"column_end":25},"name":"EncodingError","qualname":"::error::EncodingError","value":"EncodingError {  }","parent":null,"children":[{"krate":0,"index":3025},{"krate":0,"index":3026}],"decl_id":null,"docs":" An error was encountered while encoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while encoding an image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":12965,"byte_end":13018,"line_start":91,"line_end":91,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13019,"byte_end":13022,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Encoding`] variant. See its","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13023,"byte_end":13117,"line_start":93,"line_end":93,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13118,"byte_end":13157,"line_start":94,"line_end":94,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13158,"byte_end":13161,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Encoding`]: enum.ImageError.html#variant.Encoding","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13162,"byte_end":13229,"line_start":96,"line_end":96,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3029},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13652,"byte_end":13666,"line_start":110,"line_end":110,"column_start":12,"column_end":26},"name":"ParameterError","qualname":"::error::ParameterError","value":"ParameterError {  }","parent":null,"children":[{"krate":0,"index":3030},{"krate":0,"index":3031}],"decl_id":null,"docs":" An error was encountered in inputs arguments.","sig":null,"attributes":[{"value":"/ An error was encountered in inputs arguments.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13360,"byte_end":13409,"line_start":103,"line_end":103,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13410,"byte_end":13413,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Parameter`] variant. See its","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13414,"byte_end":13509,"line_start":105,"line_end":105,"column_start":1,"column_end":96}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13510,"byte_end":13549,"line_start":106,"line_end":106,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13550,"byte_end":13553,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Parameter`]: enum.ImageError.html#variant.Parameter","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13554,"byte_end":13623,"line_start":108,"line_end":108,"column_start":1,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3035},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13932,"byte_end":13949,"line_start":120,"line_end":120,"column_start":5,"column_end":22},"name":"DimensionMismatch","qualname":"::error::ParameterErrorKind::DimensionMismatch","value":"ParameterErrorKind::DimensionMismatch","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" The dimensions passed are wrong.\n","sig":null,"attributes":[{"value":"/ The dimensions passed are wrong.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13891,"byte_end":13927,"line_start":119,"line_end":119,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3037},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14047,"byte_end":14060,"line_start":122,"line_end":122,"column_start":5,"column_end":18},"name":"FailedAlready","qualname":"::error::ParameterErrorKind::FailedAlready","value":"ParameterErrorKind::FailedAlready","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" Repeated an operation for which error that could not be cloned was emitted already.\n","sig":null,"attributes":[{"value":"/ Repeated an operation for which error that could not be cloned was emitted already.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13955,"byte_end":14042,"line_start":121,"line_end":121,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3039},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14188,"byte_end":14195,"line_start":125,"line_end":125,"column_start":5,"column_end":12},"name":"Generic","qualname":"::error::ParameterErrorKind::Generic","value":"ParameterErrorKind::Generic(String)","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" A string describing the parameter.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[{"value":"/ A string describing the parameter.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14066,"byte_end":14104,"line_start":123,"line_end":123,"column_start":5,"column_end":43}},{"value":"/ This is discouraged and is likely to get deprecated (but not removed).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14109,"byte_end":14183,"line_start":124,"line_end":124,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3042},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14256,"byte_end":14266,"line_start":127,"line_end":127,"column_start":5,"column_end":15},"name":"NoMoreData","qualname":"::error::ParameterErrorKind::NoMoreData","value":"ParameterErrorKind::NoMoreData","parent":{"krate":0,"index":3034},"children":[],"decl_id":null,"docs":" The end of the image has been reached.\n","sig":null,"attributes":[{"value":"/ The end of the image has been reached.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14209,"byte_end":14251,"line_start":126,"line_end":126,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":3034},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13866,"byte_end":13884,"line_start":118,"line_end":118,"column_start":10,"column_end":28},"name":"ParameterErrorKind","qualname":"::error::ParameterErrorKind","value":"pub enum ParameterErrorKind {\n    DimensionMismatch,\n    FailedAlready,\n    Generic(String),\n    NoMoreData,\n}","parent":null,"children":[{"krate":0,"index":3035},{"krate":0,"index":3037},{"krate":0,"index":3039},{"krate":0,"index":3042}],"decl_id":null,"docs":" Details how a parameter is malformed.\n","sig":null,"attributes":[{"value":"/ Details how a parameter is malformed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13756,"byte_end":13797,"line_start":115,"line_end":115,"column_start":1,"column_end":42}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":13839,"byte_end":13856,"line_start":117,"line_end":117,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3055},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14564,"byte_end":14577,"line_start":137,"line_end":137,"column_start":12,"column_end":25},"name":"DecodingError","qualname":"::error::DecodingError","value":"DecodingError {  }","parent":null,"children":[{"krate":0,"index":3056},{"krate":0,"index":3057}],"decl_id":null,"docs":" An error was encountered while decoding an image.","sig":null,"attributes":[{"value":"/ An error was encountered while decoding an image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14271,"byte_end":14324,"line_start":130,"line_end":130,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14325,"byte_end":14328,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Decoding`] variant. See its","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14329,"byte_end":14423,"line_start":132,"line_end":132,"column_start":1,"column_end":95}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14424,"byte_end":14463,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14464,"byte_end":14467,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Decoding`]: enum.ImageError.html#variant.Decoding","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14468,"byte_end":14535,"line_start":135,"line_end":135,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":3060},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14977,"byte_end":14987,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"LimitError","qualname":"::error::LimitError","value":"LimitError {  }","parent":null,"children":[{"krate":0,"index":3061}],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[{"value":"/ Completing the operation would have required more resources than allowed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14666,"byte_end":14743,"line_start":142,"line_end":142,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14744,"byte_end":14747,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This is used as an opaque representation for the [`ImageError::Limits`] variant. See its","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14748,"byte_end":14840,"line_start":144,"line_end":144,"column_start":1,"column_end":93}},{"value":"/ documentation for more information.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14841,"byte_end":14880,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14881,"byte_end":14884,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ [`ImageError::Limits`]: enum.ImageError.html#variant.Limits","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":14885,"byte_end":14948,"line_start":147,"line_end":147,"column_start":1,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3065},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15537,"byte_end":15551,"line_start":163,"line_end":163,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::error::LimitErrorKind::DimensionError","value":"LimitErrorKind::DimensionError","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" The resulting image exceed dimension limits in either direction.\n","sig":null,"attributes":[{"value":"/ The resulting image exceed dimension limits in either direction.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15464,"byte_end":15532,"line_start":162,"line_end":162,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3067},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15635,"byte_end":15653,"line_start":165,"line_end":165,"column_start":5,"column_end":23},"name":"InsufficientMemory","qualname":"::error::LimitErrorKind::InsufficientMemory","value":"LimitErrorKind::InsufficientMemory","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" The operation would have performed an allocation larger than allowed.\n","sig":null,"attributes":[{"value":"/ The operation would have performed an allocation larger than allowed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15557,"byte_end":15630,"line_start":164,"line_end":164,"column_start":5,"column_end":78}}]},{"kind":"StructVariant","id":{"krate":0,"index":3069},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15732,"byte_end":15743,"line_start":167,"line_end":167,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::LimitErrorKind::Unsupported","value":"LimitErrorKind::Unsupported { limits, supported }","parent":{"krate":0,"index":3064},"children":[],"decl_id":null,"docs":" The specified strict limits are not supported for this operation\n","sig":null,"attributes":[{"value":"/ The specified strict limits are not supported for this operation","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15659,"byte_end":15727,"line_start":166,"line_end":166,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":3064},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15443,"byte_end":15457,"line_start":161,"line_end":161,"column_start":10,"column_end":24},"name":"LimitErrorKind","qualname":"::error::LimitErrorKind","value":"pub enum LimitErrorKind {\n    DimensionError,\n    InsufficientMemory,\n    Unsupported {\n            limits: crate::io::Limits,\n            supported: crate::io::LimitSupport,\n        },\n}","parent":null,"children":[{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3069}],"decl_id":null,"docs":" Indicates the limit that prevented an operation from completing.","sig":null,"attributes":[{"value":"/ Indicates the limit that prevented an operation from completing.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15058,"byte_end":15126,"line_start":154,"line_end":154,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15127,"byte_end":15130,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Note that this enumeration is not exhaustive and may in the future be extended to provide more","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15131,"byte_end":15229,"line_start":156,"line_end":156,"column_start":1,"column_end":99}},{"value":"/ detailed information or to incorporate other resources types.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15230,"byte_end":15295,"line_start":157,"line_end":157,"column_start":1,"column_end":66}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15341,"byte_end":15358,"line_start":159,"line_end":159,"column_start":1,"column_end":18}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15359,"byte_end":15397,"line_start":160,"line_end":160,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3087},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16083,"byte_end":16088,"line_start":180,"line_end":180,"column_start":5,"column_end":10},"name":"Exact","qualname":"::error::ImageFormatHint::Exact","value":"ImageFormatHint::Exact(ImageFormat)","parent":{"krate":0,"index":3086},"children":[],"decl_id":null,"docs":" The format is known exactly.\n","sig":null,"attributes":[{"value":"/ The format is known exactly.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16046,"byte_end":16078,"line_start":179,"line_end":179,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3090},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16156,"byte_end":16160,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"name":"Name","qualname":"::error::ImageFormatHint::Name","value":"ImageFormatHint::Name(String)","parent":{"krate":0,"index":3086},"children":[],"decl_id":null,"docs":" The format can be identified by a name.\n","sig":null,"attributes":[{"value":"/ The format can be identified by a name.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16108,"byte_end":16151,"line_start":182,"line_end":182,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3093},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16232,"byte_end":16245,"line_start":186,"line_end":186,"column_start":5,"column_end":18},"name":"PathExtension","qualname":"::error::ImageFormatHint::PathExtension","value":"ImageFormatHint::PathExtension(std::path::PathBuf)","parent":{"krate":0,"index":3086},"children":[],"decl_id":null,"docs":" A common path extension for the format is known.\n","sig":null,"attributes":[{"value":"/ A common path extension for the format is known.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16175,"byte_end":16227,"line_start":185,"line_end":185,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3096},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16332,"byte_end":16339,"line_start":189,"line_end":189,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::error::ImageFormatHint::Unknown","value":"ImageFormatHint::Unknown","parent":{"krate":0,"index":3086},"children":[],"decl_id":null,"docs":" The format is not known or could not be determined.\n","sig":null,"attributes":[{"value":"/ The format is not known or could not be determined.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16272,"byte_end":16327,"line_start":188,"line_end":188,"column_start":5,"column_end":60}}]},{"kind":"Enum","id":{"krate":0,"index":3086},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16024,"byte_end":16039,"line_start":178,"line_end":178,"column_start":10,"column_end":25},"name":"ImageFormatHint","qualname":"::error::ImageFormatHint","value":"pub enum ImageFormatHint {\n    Exact(ImageFormat),\n    Name(String),\n    PathExtension(std::path::PathBuf),\n    Unknown,\n}","parent":null,"children":[{"krate":0,"index":3087},{"krate":0,"index":3090},{"krate":0,"index":3093},{"krate":0,"index":3096}],"decl_id":null,"docs":" A best effort representation for image formats.\n","sig":null,"attributes":[{"value":"/ A best effort representation for image formats.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15904,"byte_end":15955,"line_start":175,"line_end":175,"column_start":1,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":15997,"byte_end":16014,"line_start":177,"line_end":177,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16590,"byte_end":16610,"line_start":197,"line_end":197,"column_start":12,"column_end":32},"name":"from_format_and_kind","qualname":"<UnsupportedError>::from_format_and_kind","value":"pub fn from_format_and_kind(ImageFormatHint, UnsupportedErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `UnsupportedError` for an image with details on the unsupported feature.","sig":null,"attributes":[{"value":"/ Create an `UnsupportedError` for an image with details on the unsupported feature.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16372,"byte_end":16458,"line_start":193,"line_end":193,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16463,"byte_end":16466,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ If the operation was not connected to a particular image format then the hint may be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16471,"byte_end":16559,"line_start":195,"line_end":195,"column_start":5,"column_end":93}},{"value":"/ `Unknown`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16564,"byte_end":16578,"line_start":196,"line_end":196,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16805,"byte_end":16809,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"kind","qualname":"<UnsupportedError>::kind","value":"pub fn kind(&Self) -> UnsupportedErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `UnsupportedErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `UnsupportedErrorKind` of the error.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16727,"byte_end":16793,"line_start":201,"line_end":201,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16948,"byte_end":16959,"line_start":207,"line_end":207,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<UnsupportedError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16880,"byte_end":16936,"line_start":206,"line_end":206,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":17151,"byte_end":17154,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodingError>::new","value":"pub fn new<impl Into<Box<dyn Error + Send + Sync>>: Into<Box<dyn Error +\nSend + Sync>>>(ImageFormatHint, impl Into<Box<dyn Error + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.\n","sig":null,"attributes":[{"value":"/ Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":17050,"byte_end":17139,"line_start":213,"line_end":213,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":17499,"byte_end":17515,"line_start":224,"line_end":224,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<DecodingError>::from_format_hint","value":"pub fn from_format_hint(ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create a `DecodingError` for an image format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":17343,"byte_end":17392,"line_start":221,"line_end":221,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":17397,"byte_end":17400,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":17405,"byte_end":17487,"line_start":223,"line_end":223,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":17714,"byte_end":17725,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<DecodingError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Returns the image format associated with this error.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":17646,"byte_end":17702,"line_start":231,"line_end":231,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":17918,"byte_end":17921,"line_start":239,"line_end":239,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodingError>::new","value":"pub fn new<impl Into<Box<dyn Error + Send + Sync>>: Into<Box<dyn Error +\nSend + Sync>>>(ImageFormatHint, impl Into<Box<dyn Error + Send + Sync>>)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.\n","sig":null,"attributes":[{"value":"/ Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":17816,"byte_end":17906,"line_start":238,"line_end":238,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18267,"byte_end":18283,"line_start":249,"line_end":249,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<EncodingError>::from_format_hint","value":"pub fn from_format_hint(ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` for an image format.","sig":null,"attributes":[{"value":"/ Create an `EncodingError` for an image format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18110,"byte_end":18160,"line_start":246,"line_end":246,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18165,"byte_end":18168,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The error will not contain any further information but is very easy to create.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18173,"byte_end":18255,"line_start":248,"line_end":248,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18481,"byte_end":18492,"line_start":257,"line_end":257,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<EncodingError>::format_hint","value":"pub fn format_hint(&Self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Return the image format associated with this error.\n","sig":null,"attributes":[{"value":"/ Return the image format associated with this error.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18414,"byte_end":18469,"line_start":256,"line_end":256,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18664,"byte_end":18673,"line_start":264,"line_end":264,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ParameterError>::from_kind","value":"pub fn from_kind(ParameterErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ParameterError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a `ParameterError` directly from a corresponding kind.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18584,"byte_end":18652,"line_start":263,"line_end":263,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18880,"byte_end":18884,"line_start":272,"line_end":272,"column_start":12,"column_end":16},"name":"kind","qualname":"<ParameterError>::kind","value":"pub fn kind(&Self) -> ParameterErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `ParameterErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `ParameterErrorKind` of the error.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18804,"byte_end":18868,"line_start":271,"line_end":271,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":19057,"byte_end":19066,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<LimitError>::from_kind","value":"pub fn from_kind(LimitErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a generic `LimitError` directly from a corresponding kind.\n","sig":null,"attributes":[{"value":"/ Construct a generic `LimitError` directly from a corresponding kind.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18973,"byte_end":19045,"line_start":278,"line_end":278,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":19210,"byte_end":19214,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"kind","qualname":"<LimitError>::kind","value":"pub fn kind(&Self) -> LimitErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `LimitErrorKind` of the error.\n","sig":null,"attributes":[{"value":"/ Returns the corresponding `LimitErrorKind` of the error.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":19138,"byte_end":19198,"line_start":283,"line_end":283,"column_start":5,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":20093,"byte_end":20104,"line_start":320,"line_end":320,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::error::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[{"value":"/ Result of an image decoding/encoding process","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":20035,"byte_end":20083,"line_start":319,"line_end":319,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5127,"byte_end":5133,"line_start":156,"line_end":156,"column_start":9,"column_end":15},"name":"buffer","qualname":"::buffer","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":229},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":241}],"decl_id":null,"docs":" Iterators and other auxiliary structure for the `ImageBuffer` type.\n","sig":null,"attributes":[{"value":"/ Iterators and other auxiliary structure for the `ImageBuffer` type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5047,"byte_end":5118,"line_start":155,"line_end":155,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\math\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\math\\mod.rs","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":251},{"krate":0,"index":254}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[{"value":"/ Mathematical helper functions and types.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\math\\mod.rs","byte_start":26315,"byte_end":26359,"line_start":1,"line_end":1,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3109},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\math\\rect.rs","byte_start":26578,"byte_end":26582,"line_start":3,"line_end":3,"column_start":12,"column_end":16},"name":"Rect","qualname":"::math::rect::Rect","value":"Rect { x, y, width, height }","parent":null,"children":[{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113}],"decl_id":null,"docs":" A Rectangle defined by its top left corner, width and height.\n","sig":null,"attributes":[{"value":"/ A Rectangle defined by its top left corner, width and height.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\math\\rect.rs","byte_start":26450,"byte_end":26515,"line_start":1,"line_end":1,"column_start":1,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3110},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\math\\rect.rs","byte_start":26642,"byte_end":26643,"line_start":5,"line_end":5,"column_start":9,"column_end":10},"name":"x","qualname":"::math::rect::Rect::x","value":"u32","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":" The x coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The x coordinate of the top left corner.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\math\\rect.rs","byte_start":26589,"byte_end":26633,"line_start":4,"line_end":4,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3111},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\math\\rect.rs","byte_start":26707,"byte_end":26708,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"y","qualname":"::math::rect::Rect::y","value":"u32","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":" The y coordinate of the top left corner.\n","sig":null,"attributes":[{"value":"/ The y coordinate of the top left corner.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\math\\rect.rs","byte_start":26654,"byte_end":26698,"line_start":6,"line_end":6,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3112},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\math\\rect.rs","byte_start":26754,"byte_end":26759,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"width","qualname":"::math::rect::Rect::width","value":"u32","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":" The rectangle's width.\n","sig":null,"attributes":[{"value":"/ The rectangle's width.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\math\\rect.rs","byte_start":26719,"byte_end":26745,"line_start":8,"line_end":8,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3113},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\math\\rect.rs","byte_start":26806,"byte_end":26812,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"height","qualname":"::math::rect::Rect::height","value":"u32","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":" The rectangle's height.\n","sig":null,"attributes":[{"value":"/ The rectangle's height.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\math\\rect.rs","byte_start":26770,"byte_end":26797,"line_start":10,"line_end":10,"column_start":5,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":304},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":448},{"krate":0,"index":562},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":702},{"krate":0,"index":707}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[{"value":"/ Image Processing Functions","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":31293,"byte_end":31323,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":47985,"byte_end":47993,"line_start":9,"line_end":9,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"pub fn rotate90<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":47936,"byte_end":47977,"line_start":8,"line_end":8,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":419},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":48325,"byte_end":48334,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"pub fn rotate180<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":48275,"byte_end":48317,"line_start":21,"line_end":21,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":421},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":48667,"byte_end":48676,"line_start":35,"line_end":35,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"pub fn rotate270<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":48617,"byte_end":48659,"line_start":34,"line_end":34,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":423},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":49064,"byte_end":49075,"line_start":48,"line_end":48,"column_start":8,"column_end":19},"name":"rotate90_in","qualname":"::imageops::affine::rotate90_in","value":"pub fn rotate90_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":48959,"byte_end":49056,"line_start":47,"line_end":47,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":49849,"byte_end":49861,"line_start":74,"line_end":74,"column_start":8,"column_end":20},"name":"rotate180_in","qualname":"::imageops::affine::rotate180_in","value":"pub fn rotate180_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":49743,"byte_end":49841,"line_start":73,"line_end":73,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":429},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":50644,"byte_end":50656,"line_start":100,"line_end":100,"column_start":8,"column_end":20},"name":"rotate270_in","qualname":"::imageops::affine::rotate270_in","value":"pub fn rotate270_in<I, Container>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":50538,"byte_end":50636,"line_start":99,"line_end":99,"column_start":1,"column_end":99}}]},{"kind":"Function","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":51362,"byte_end":51377,"line_start":126,"line_end":126,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"pub fn flip_horizontal<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":51324,"byte_end":51354,"line_start":125,"line_end":125,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":51702,"byte_end":51715,"line_start":139,"line_end":139,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"pub fn flip_vertical<I: GenericImageView>(&I)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[{"value":"/ Flip an image vertically","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":51666,"byte_end":51694,"line_start":138,"line_end":138,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":52097,"byte_end":52115,"line_start":152,"line_end":152,"column_start":8,"column_end":26},"name":"flip_horizontal_in","qualname":"::imageops::affine::flip_horizontal_in","value":"pub fn flip_horizontal_in<I,\nContainer>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":52002,"byte_end":52089,"line_start":151,"line_end":151,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":52876,"byte_end":52892,"line_start":178,"line_end":178,"column_start":8,"column_end":24},"name":"flip_vertical_in","qualname":"::imageops::affine::flip_vertical_in","value":"pub fn flip_vertical_in<I,\nContainer>(&I, &mut ImageBuffer<I::Pixel, Container>)\n-> crate::ImageResult<()> where I: GenericImageView, I::Pixel: 'static,\nContainer: std::ops::DerefMut<Target = [<I::Pixel as Pixel>::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[{"value":"/ Flip an image vertically and put the result into the destination [`ImageBuffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":52783,"byte_end":52868,"line_start":177,"line_end":177,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":53619,"byte_end":53637,"line_start":204,"line_end":204,"column_start":8,"column_end":26},"name":"rotate180_in_place","qualname":"::imageops::affine::rotate180_in_place","value":"pub fn rotate180_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise in place.\n","sig":null,"attributes":[{"value":"/ Rotate an image 180 degrees clockwise in place.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":53560,"byte_end":53611,"line_start":203,"line_end":203,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":54417,"byte_end":54441,"line_start":235,"line_end":235,"column_start":8,"column_end":32},"name":"flip_horizontal_in_place","qualname":"::imageops::affine::flip_horizontal_in_place","value":"pub fn flip_horizontal_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally in place.\n","sig":null,"attributes":[{"value":"/ Flip an image horizontally in place.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":54369,"byte_end":54409,"line_start":234,"line_end":234,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":54847,"byte_end":54869,"line_start":250,"line_end":250,"column_start":8,"column_end":30},"name":"flip_vertical_in_place","qualname":"::imageops::affine::flip_vertical_in_place","value":"pub fn flip_vertical_in_place<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically in place.\n","sig":null,"attributes":[{"value":"/ Flip an image vertically in place.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\affine.rs","byte_start":54801,"byte_end":54839,"line_start":249,"line_end":249,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":519},{"krate":0,"index":523},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":3129},{"krate":0,"index":3131},{"krate":0,"index":3133},{"krate":0,"index":537},{"krate":0,"index":543},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":559}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[{"value":"/ Functions for altering and converting the color of pixelbufs","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":59830,"byte_end":59894,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":493},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":60303,"byte_end":60312,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"pub fn grayscale<I: GenericImageView>(&I)\n-> ImageBuffer<Luma<Subpixel<I>>, Vec<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale. Alpha channel is discarded.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale. Alpha channel is discarded.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":60223,"byte_end":60295,"line_start":14,"line_end":14,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":495},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":60520,"byte_end":60535,"line_start":22,"line_end":22,"column_start":8,"column_end":23},"name":"grayscale_alpha","qualname":"::imageops::colorops::grayscale_alpha","value":"pub fn grayscale_alpha<I: GenericImageView>(&I)\n-> ImageBuffer<LumaA<Subpixel<I>>, Vec<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale. Alpha channel is preserved.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to grayscale. Alpha channel is preserved.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":60440,"byte_end":60512,"line_start":21,"line_end":21,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":60788,"byte_end":60807,"line_start":29,"line_end":29,"column_start":8,"column_end":27},"name":"grayscale_with_type","qualname":"::imageops::colorops::grayscale_with_type","value":"pub fn grayscale_with_type<NewPixel, I: GenericImageView>(&I)\n-> ImageBuffer<NewPixel, Vec<NewPixel::Subpixel>> where NewPixel: Pixel +\nFromColor<Luma<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is discarded.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is discarded.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":60670,"byte_end":60780,"line_start":28,"line_end":28,"column_start":1,"column_end":111}}]},{"kind":"Function","id":{"krate":0,"index":500},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":61397,"byte_end":61422,"line_start":49,"line_end":49,"column_start":8,"column_end":33},"name":"grayscale_with_type_alpha","qualname":"::imageops::colorops::grayscale_with_type_alpha","value":"pub fn grayscale_with_type_alpha<NewPixel, I: GenericImageView>(&I)\n-> ImageBuffer<NewPixel, Vec<NewPixel::Subpixel>> where NewPixel: Pixel +\nFromColor<LumaA<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is preserved.\n","sig":null,"attributes":[{"value":"/ Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is preserved.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":61279,"byte_end":61389,"line_start":48,"line_end":48,"column_start":1,"column_end":111}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":61994,"byte_end":62000,"line_start":70,"line_end":70,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"pub fn invert<I: GenericImage>(&mut I)","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[{"value":"/ Invert each pixel within the supplied image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":61901,"byte_end":61949,"line_start":68,"line_end":68,"column_start":1,"column_end":49}},{"value":"/ This function operates in place.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":61950,"byte_end":61986,"line_start":69,"line_end":69,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":62562,"byte_end":62570,"line_start":89,"line_end":89,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"pub fn contrast<I, P, S>(&I, f32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":62302,"byte_end":62348,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":62349,"byte_end":62408,"line_start":85,"line_end":85,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":62409,"byte_end":62493,"line_start":86,"line_end":86,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":62494,"byte_end":62497,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ *[See also `contrast_in_place`.][contrast_in_place]*","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":62498,"byte_end":62554,"line_start":88,"line_end":88,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":63562,"byte_end":63579,"line_start":123,"line_end":123,"column_start":8,"column_end":25},"name":"contrast_in_place","qualname":"::imageops::colorops::contrast_in_place","value":"pub fn contrast_in_place<I>(&mut I, f32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image in place.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.","sig":null,"attributes":[{"value":"/ Adjust the contrast of the supplied image in place.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":63311,"byte_end":63366,"line_start":118,"line_end":118,"column_start":1,"column_end":56}},{"value":"/ ```contrast``` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":63367,"byte_end":63426,"line_start":119,"line_end":119,"column_start":1,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":63427,"byte_end":63511,"line_start":120,"line_end":120,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":63512,"byte_end":63515,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ *[See also `contrast`.][contrast]*","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":63516,"byte_end":63554,"line_start":122,"line_end":122,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":64520,"byte_end":64528,"line_start":156,"line_end":156,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"pub fn brighten<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.","sig":null,"attributes":[{"value":"/ Brighten the supplied image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":64285,"byte_end":64317,"line_start":151,"line_end":151,"column_start":1,"column_end":33}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":64318,"byte_end":64374,"line_start":152,"line_end":152,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":64375,"byte_end":64451,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":64452,"byte_end":64455,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ *[See also `brighten_in_place`.][brighten_in_place]*","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":64456,"byte_end":64512,"line_start":155,"line_end":155,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":65456,"byte_end":65473,"line_start":189,"line_end":189,"column_start":8,"column_end":25},"name":"brighten_in_place","qualname":"::imageops::colorops::brighten_in_place","value":"pub fn brighten_in_place<I>(&mut I, i32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image in place.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.","sig":null,"attributes":[{"value":"/ Brighten the supplied image in place.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":65230,"byte_end":65271,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ ```value``` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":65272,"byte_end":65328,"line_start":185,"line_end":185,"column_start":1,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":65329,"byte_end":65405,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":65406,"byte_end":65409,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ *[See also `brighten`.][brighten]*","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":65410,"byte_end":65448,"line_start":188,"line_end":188,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":523},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":66475,"byte_end":66484,"line_start":222,"line_end":222,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"pub fn huerotate<I, P, S>(&I, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":66196,"byte_end":66230,"line_start":216,"line_end":216,"column_start":1,"column_end":35}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":66231,"byte_end":66282,"line_start":217,"line_end":217,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":66283,"byte_end":66352,"line_start":218,"line_end":218,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":66353,"byte_end":66404,"line_start":219,"line_end":219,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":66405,"byte_end":66408,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ *[See also `huerotate_in_place`.][huerotate_in_place]*","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":66409,"byte_end":66467,"line_start":221,"line_end":221,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":528},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":68702,"byte_end":68720,"line_start":288,"line_end":288,"column_start":8,"column_end":26},"name":"huerotate_in_place","qualname":"::imageops::colorops::huerotate_in_place","value":"pub fn huerotate_in_place<I>(&mut I, i32) where I: GenericImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image in place.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image in place.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":68432,"byte_end":68475,"line_start":282,"line_end":282,"column_start":1,"column_end":44}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":68476,"byte_end":68527,"line_start":283,"line_end":283,"column_start":1,"column_end":52}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":68528,"byte_end":68597,"line_start":284,"line_end":284,"column_start":1,"column_end":70}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":68598,"byte_end":68649,"line_start":285,"line_end":285,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":68650,"byte_end":68653,"line_start":286,"line_end":286,"column_start":1,"column_end":4}},{"value":"/ *[See also `huerotate`.][huerotate]*","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":68654,"byte_end":68694,"line_start":287,"line_end":287,"column_start":1,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":531},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":70694,"byte_end":70702,"line_start":351,"line_end":351,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[{"value":"/ A color map","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":70668,"byte_end":70683,"line_start":350,"line_end":350,"column_start":1,"column_end":16}}]},{"kind":"Type","id":{"krate":0,"index":532},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":70766,"byte_end":70771,"line_start":353,"line_end":353,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[{"value":"/ The color type on which the map operates on","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":70709,"byte_end":70756,"line_start":352,"line_end":352,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":70864,"byte_end":70872,"line_start":356,"line_end":356,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"pub fn index_of(&Self, &Self::Color) -> usize","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Returns the index of the closest match of `color`\n in the color map.\n","sig":null,"attributes":[{"value":"/ Returns the index of the closest match of `color`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":70777,"byte_end":70830,"line_start":354,"line_end":354,"column_start":5,"column_end":58}},{"value":"/ in the color map.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":70835,"byte_end":70856,"line_start":355,"line_end":355,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71080,"byte_end":71086,"line_start":359,"line_end":359,"column_start":8,"column_end":14},"name":"lookup","qualname":"::imageops::colorops::ColorMap::lookup","value":"pub fn lookup(&Self, usize) -> Option<Self::Color>","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Looks up color by index in the color map.  If `idx` is out of range for the color map, or\n ColorMap doesn't implement `lookup` `None` is returned.\n","sig":null,"attributes":[{"value":"/ Looks up color by index in the color map.  If `idx` is out of range for the color map, or","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":70915,"byte_end":71008,"line_start":357,"line_end":357,"column_start":5,"column_end":98}},{"value":"/ ColorMap doesn't implement `lookup` `None` is returned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71013,"byte_end":71072,"line_start":358,"line_end":358,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71267,"byte_end":71277,"line_start":364,"line_end":364,"column_start":8,"column_end":18},"name":"has_lookup","qualname":"::imageops::colorops::ColorMap::has_lookup","value":"pub fn has_lookup(&Self) -> bool","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Determine if this implementation of ColorMap overrides the default `lookup`.\n","sig":null,"attributes":[{"value":"/ Determine if this implementation of ColorMap overrides the default `lookup`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71179,"byte_end":71259,"line_start":363,"line_end":363,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71382,"byte_end":71391,"line_start":368,"line_end":368,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"pub fn map_color(&Self, &mut Self::Color)","parent":{"krate":0,"index":531},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[{"value":"/ Maps `color` to the closest color in the color map.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71319,"byte_end":71374,"line_start":367,"line_end":367,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72536,"byte_end":72543,"line_start":401,"line_end":401,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map","sig":null,"attributes":[{"value":"/ A bi-level color map","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71428,"byte_end":71452,"line_start":371,"line_end":371,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71453,"byte_end":71456,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71457,"byte_end":71471,"line_start":373,"line_end":373,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71472,"byte_end":71479,"line_start":374,"line_end":374,"column_start":1,"column_end":8}},{"value":"/ use image::imageops::colorops::{index_colors, BiLevel, ColorMap};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71480,"byte_end":71549,"line_start":375,"line_end":375,"column_start":1,"column_end":70}},{"value":"/ use image::{ImageBuffer, Luma};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71550,"byte_end":71585,"line_start":376,"line_end":376,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71586,"byte_end":71589,"line_start":377,"line_end":377,"column_start":1,"column_end":4}},{"value":"/ let (w, h) = (16, 16);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71590,"byte_end":71616,"line_start":378,"line_end":378,"column_start":1,"column_end":27}},{"value":"/ // Create an image with a smooth horizontal gradient from black (0) to white (255).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71617,"byte_end":71704,"line_start":379,"line_end":379,"column_start":1,"column_end":88}},{"value":"/ let gray = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> { [(255 * x / w) as u8].into() });","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71705,"byte_end":71800,"line_start":380,"line_end":380,"column_start":1,"column_end":96}},{"value":"/ // Mapping the gray image through the `BiLevel` filter should map gray pixels less than half","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71801,"byte_end":71897,"line_start":381,"line_end":381,"column_start":1,"column_end":97}},{"value":"/ // intensity (127) to black (0), and anything greater to white (255).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71898,"byte_end":71971,"line_start":382,"line_end":382,"column_start":1,"column_end":74}},{"value":"/ let cmap = BiLevel;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71972,"byte_end":71995,"line_start":383,"line_end":383,"column_start":1,"column_end":24}},{"value":"/ let palletized = index_colors(&gray, &cmap);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":71996,"byte_end":72044,"line_start":384,"line_end":384,"column_start":1,"column_end":49}},{"value":"/ let mapped = ImageBuffer::from_fn(w, h, |x, y| {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72045,"byte_end":72097,"line_start":385,"line_end":385,"column_start":1,"column_end":53}},{"value":"/     let p = palletized.get_pixel(x, y);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72098,"byte_end":72141,"line_start":386,"line_end":386,"column_start":1,"column_end":44}},{"value":"/     cmap.lookup(p.0[0] as usize)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72142,"byte_end":72178,"line_start":387,"line_end":387,"column_start":1,"column_end":37}},{"value":"/         .expect(\"indexed color out-of-range\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72179,"byte_end":72228,"line_start":388,"line_end":388,"column_start":1,"column_end":50}},{"value":"/ });","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72229,"byte_end":72236,"line_start":389,"line_end":389,"column_start":1,"column_end":8}},{"value":"/ // Create an black and white image of expected output.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72237,"byte_end":72295,"line_start":390,"line_end":390,"column_start":1,"column_end":59}},{"value":"/ let bw = ImageBuffer::from_fn(w, h, |x, y| -> Luma<u8> {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72296,"byte_end":72356,"line_start":391,"line_end":391,"column_start":1,"column_end":61}},{"value":"/     if x <= (w / 2) {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72357,"byte_end":72382,"line_start":392,"line_end":392,"column_start":1,"column_end":26}},{"value":"/         [0].into()","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72383,"byte_end":72405,"line_start":393,"line_end":393,"column_start":1,"column_end":23}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72406,"byte_end":72422,"line_start":394,"line_end":394,"column_start":1,"column_end":17}},{"value":"/         [255].into()","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72423,"byte_end":72447,"line_start":395,"line_end":395,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72448,"byte_end":72457,"line_start":396,"line_end":396,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72458,"byte_end":72465,"line_start":397,"line_end":397,"column_start":1,"column_end":8}},{"value":"/ assert_eq!(mapped, bw);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72466,"byte_end":72493,"line_start":398,"line_end":398,"column_start":1,"column_end":28}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72494,"byte_end":72501,"line_start":399,"line_end":399,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":74957,"byte_end":74963,"line_start":491,"line_end":491,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"pub fn dither<Pix, Map>(&mut ImageBuffer<Pix, Vec<u8>>, &Map) where\nMap: ColorMap<Color = Pix> + ?Sized, Pix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[{"value":"/ Reduces the colors of the image using the supplied `color_map` while applying","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":74805,"byte_end":74886,"line_start":489,"line_end":489,"column_start":1,"column_end":82}},{"value":"/ Floyd-Steinberg dithering to improve the visual conception","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":74887,"byte_end":74949,"line_start":490,"line_end":490,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":76517,"byte_end":76529,"line_start":529,"line_end":529,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"pub fn index_colors<Pix, Map>(&ImageBuffer<Pix, Vec<u8>>, &Map)\n-> ImageBuffer<Luma<u8>, Vec<u8>> where Map: ColorMap<Color = Pix> + ?Sized,\nPix: Pixel<Subpixel = u8> + 'static","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[{"value":"/ Reduces the colors using the supplied `color_map` and returns an image of the indices","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":76420,"byte_end":76509,"line_start":528,"line_end":528,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3135},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":83028,"byte_end":83035,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":3134},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[{"value":"/ Nearest Neighbor","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":83003,"byte_end":83023,"line_start":83,"line_end":83,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3137},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":83064,"byte_end":83072,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":3134},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[{"value":"/ Linear Filter","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":83042,"byte_end":83059,"line_start":86,"line_end":86,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3139},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":83100,"byte_end":83110,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":3134},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[{"value":"/ Cubic Filter","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":83079,"byte_end":83095,"line_start":89,"line_end":89,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3141},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":83141,"byte_end":83149,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":3134},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[{"value":"/ Gaussian Filter","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":83117,"byte_end":83136,"line_start":92,"line_end":92,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3143},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":83186,"byte_end":83194,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":3134},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[{"value":"/ Lanczos with window 3","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":83156,"byte_end":83181,"line_start":95,"line_end":95,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3134},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82986,"byte_end":82996,"line_start":82,"line_end":82,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"pub enum FilterType { Nearest, Triangle, CatmullRom, Gaussian, Lanczos3, }","parent":null,"children":[{"krate":0,"index":3135},{"krate":0,"index":3137},{"krate":0,"index":3139},{"krate":0,"index":3141},{"krate":0,"index":3143}],"decl_id":null,"docs":" Available Sampling Filters.","sig":null,"attributes":[{"value":"/ Available Sampling Filters.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":80544,"byte_end":80575,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":80576,"byte_end":80579,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":80580,"byte_end":80595,"line_start":17,"line_end":17,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":80596,"byte_end":80599,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ To test the different sampling filters on a real example, you can find two","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":80600,"byte_end":80678,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ examples called","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":80679,"byte_end":80698,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ [`scaledown`](https://github.com/image-rs/image/tree/master/examples/scaledown)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":80699,"byte_end":80782,"line_start":21,"line_end":21,"column_start":1,"column_end":84}},{"value":"/ and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":80783,"byte_end":80790,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ [`scaleup`](https://github.com/image-rs/image/tree/master/examples/scaleup)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":80791,"byte_end":80870,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ in the `examples` directory of the crate source code.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":80871,"byte_end":80928,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":80929,"byte_end":80932,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Here is a 3.58 MiB","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":80933,"byte_end":80955,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ [test image](https://github.com/image-rs/image/blob/master/examples/scaledown/test.jpg)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":80956,"byte_end":81047,"line_start":27,"line_end":27,"column_start":1,"column_end":92}},{"value":"/ that has been scaled down to 300x225 px:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81048,"byte_end":81092,"line_start":28,"line_end":28,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81093,"byte_end":81096,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ <!-- NOTE: To test new test images locally, replace the GitHub path with `../../../docs/` -->","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81097,"byte_end":81194,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ <div style=\"display: flex; flex-wrap: wrap; align-items: flex-start;\">","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81195,"byte_end":81269,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81270,"byte_end":81310,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-near.png\" title=\"Nearest\"><br>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81311,"byte_end":81449,"line_start":33,"line_end":33,"column_start":1,"column_end":139}},{"value":"/     Nearest Neighbor","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81450,"byte_end":81474,"line_start":34,"line_end":34,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81475,"byte_end":81487,"line_start":35,"line_end":35,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81488,"byte_end":81528,"line_start":36,"line_end":36,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-tri.png\" title=\"Triangle\"><br>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81529,"byte_end":81667,"line_start":37,"line_end":37,"column_start":1,"column_end":139}},{"value":"/     Linear: Triangle","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81668,"byte_end":81692,"line_start":38,"line_end":38,"column_start":1,"column_end":25}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81693,"byte_end":81705,"line_start":39,"line_end":39,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81706,"byte_end":81746,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-cmr.png\" title=\"CatmullRom\"><br>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81747,"byte_end":81887,"line_start":41,"line_end":41,"column_start":1,"column_end":141}},{"value":"/     Cubic: Catmull-Rom","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81888,"byte_end":81914,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81915,"byte_end":81927,"line_start":43,"line_end":43,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81928,"byte_end":81968,"line_start":44,"line_end":44,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-gauss.png\" title=\"Gaussian\"><br>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":81969,"byte_end":82109,"line_start":45,"line_end":45,"column_start":1,"column_end":141}},{"value":"/     Gaussian","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82110,"byte_end":82126,"line_start":46,"line_end":46,"column_start":1,"column_end":17}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82127,"byte_end":82139,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/   <div style=\"margin: 0 8px 8px 0;\">","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82140,"byte_end":82180,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/     <img src=\"https://raw.githubusercontent.com/image-rs/image/master/examples/scaledown/scaledown-test-lcz2.png\" title=\"Lanczos3\"><br>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82181,"byte_end":82320,"line_start":49,"line_end":49,"column_start":1,"column_end":140}},{"value":"/     Lanczos with window 3","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82321,"byte_end":82350,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/   </div>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82351,"byte_end":82363,"line_start":51,"line_end":51,"column_start":1,"column_end":13}},{"value":"/ </div>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82364,"byte_end":82374,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82375,"byte_end":82378,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Speed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82379,"byte_end":82391,"line_start":54,"line_end":54,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82392,"byte_end":82395,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Time required to create each of the examples above, tested on an Intel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82396,"byte_end":82470,"line_start":56,"line_end":56,"column_start":1,"column_end":75}},{"value":"/ i7-4770 CPU with Rust 1.37 in release mode:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82471,"byte_end":82518,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82519,"byte_end":82522,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ <table style=\"width: auto;\">","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82523,"byte_end":82555,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82556,"byte_end":82566,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"/     <th>Nearest</th>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82567,"byte_end":82591,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/     <td>31 ms</td>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82592,"byte_end":82614,"line_start":62,"line_end":62,"column_start":1,"column_end":23}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82615,"byte_end":82626,"line_start":63,"line_end":63,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82627,"byte_end":82637,"line_start":64,"line_end":64,"column_start":1,"column_end":11}},{"value":"/     <th>Triangle</th>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82638,"byte_end":82663,"line_start":65,"line_end":65,"column_start":1,"column_end":26}},{"value":"/     <td>414 ms</td>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82664,"byte_end":82687,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82688,"byte_end":82699,"line_start":67,"line_end":67,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82700,"byte_end":82710,"line_start":68,"line_end":68,"column_start":1,"column_end":11}},{"value":"/     <th>CatmullRom</th>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82711,"byte_end":82738,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/     <td>817 ms</td>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82739,"byte_end":82762,"line_start":70,"line_end":70,"column_start":1,"column_end":24}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82763,"byte_end":82774,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82775,"byte_end":82785,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     <th>Gaussian</th>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82786,"byte_end":82811,"line_start":73,"line_end":73,"column_start":1,"column_end":26}},{"value":"/     <td>1180 ms</td>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82812,"byte_end":82836,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82837,"byte_end":82848,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/   <tr>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82849,"byte_end":82859,"line_start":76,"line_end":76,"column_start":1,"column_end":11}},{"value":"/     <th>Lanczos3</th>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82860,"byte_end":82885,"line_start":77,"line_end":77,"column_start":1,"column_end":26}},{"value":"/     <td>1170 ms</td>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82886,"byte_end":82910,"line_start":78,"line_end":78,"column_start":1,"column_end":25}},{"value":"/   </tr>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82911,"byte_end":82922,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ </table>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":82923,"byte_end":82935,"line_start":80,"line_end":80,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":93461,"byte_end":93470,"line_start":424,"line_end":424,"column_start":8,"column_end":17},"name":"thumbnail","qualname":"::imageops::sample::thumbnail","value":"pub fn thumbnail<I, P, S>(&I, u32, u32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + Enlargeable + 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specific dimensions.","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specific dimensions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":92715,"byte_end":92772,"line_start":412,"line_end":412,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":92773,"byte_end":92776,"line_start":413,"line_end":413,"column_start":1,"column_end":4}},{"value":"/ For downscaling, this method uses a fast integer algorithm where each source pixel contributes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":92777,"byte_end":92875,"line_start":414,"line_end":414,"column_start":1,"column_end":99}},{"value":"/ to exactly one target pixel.  May give aliasing artifacts if new size is close to old size.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":92876,"byte_end":92971,"line_start":415,"line_end":415,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":92972,"byte_end":92975,"line_start":416,"line_end":416,"column_start":1,"column_end":4}},{"value":"/ In case the current width is smaller than the new width or similar for the height, another","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":92976,"byte_end":93070,"line_start":417,"line_end":417,"column_start":1,"column_end":95}},{"value":"/ strategy is used instead.  For each pixel in the output, a rectangular region of the input is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":93071,"byte_end":93168,"line_start":418,"line_end":418,"column_start":1,"column_end":98}},{"value":"/ determined, just as previously.  But when no input pixel is part of this region, the nearest","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":93169,"byte_end":93265,"line_start":419,"line_end":419,"column_start":1,"column_end":97}},{"value":"/ pixels are interpolated instead.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":93266,"byte_end":93302,"line_start":420,"line_end":420,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":93303,"byte_end":93306,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ For speed reasons, all interpolation is performed linearly over the colour values.  It will not","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":93307,"byte_end":93406,"line_start":422,"line_end":422,"column_start":1,"column_end":100}},{"value":"/ take the pixel colour spaces into account.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":93407,"byte_end":93453,"line_start":423,"line_end":423,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":101586,"byte_end":101595,"line_start":671,"line_end":671,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"pub fn filter3x3<I, P, S>(&I, &[f32]) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[{"value":"/ Perform a 3x3 box filter on the supplied image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":101463,"byte_end":101514,"line_start":669,"line_end":669,"column_start":1,"column_end":52}},{"value":"/ ```kernel``` is an array of the filter weights of length 9.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":101515,"byte_end":101578,"line_start":670,"line_end":670,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":104098,"byte_end":104104,"line_start":753,"line_end":753,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"pub fn resize<I: GenericImageView>(&I, u32, u32, FilterType)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static, <I::Pixel as Pixel>::Subpixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[{"value":"/ Resize the supplied image to the specified dimensions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":103925,"byte_end":103983,"line_start":750,"line_end":750,"column_start":1,"column_end":59}},{"value":"/ ```nwidth``` and ```nheight``` are the new dimensions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":103984,"byte_end":104042,"line_start":751,"line_end":751,"column_start":1,"column_end":59}},{"value":"/ ```filter``` is the sampling filter to use.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":104043,"byte_end":104090,"line_start":752,"line_end":752,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":105294,"byte_end":105298,"line_start":793,"line_end":793,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"pub fn blur<I: GenericImageView>(&I, f32)\n-> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>> where\nI::Pixel: 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on the supplied image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":105182,"byte_end":105233,"line_start":791,"line_end":791,"column_start":1,"column_end":52}},{"value":"/ ```sigma``` is a measure of how much to blur by.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":105234,"byte_end":105286,"line_start":792,"line_end":792,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":678},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":106213,"byte_end":106222,"line_start":821,"line_end":821,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"pub fn unsharpen<I, P, S>(&I, f32, i32) -> ImageBuffer<P, Vec<S>> where\nI: GenericImageView<Pixel = P>, P: Pixel<Subpixel = S> + 'static,\nS: Primitive + 'static","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for minimal brightness change that will be sharpened.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on the supplied image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":105925,"byte_end":105978,"line_start":816,"line_end":816,"column_start":1,"column_end":54}},{"value":"/ ```sigma``` is the amount to blur the image by.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":105979,"byte_end":106030,"line_start":817,"line_end":817,"column_start":1,"column_end":52}},{"value":"/ ```threshold``` is the threshold for minimal brightness change that will be sharpened.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":106031,"byte_end":106121,"line_start":818,"line_end":818,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":106122,"byte_end":106125,"line_start":819,"line_end":819,"column_start":1,"column_end":4}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":106126,"byte_end":106205,"line_start":820,"line_end":820,"column_start":1,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32405,"byte_end":32409,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"pub fn crop<I: GenericImageView>(&mut I, u32, u32, u32, u32)\n-> SubImage<&mut I>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n The coordinates set the position of the top left corner of the crop.\n","sig":null,"attributes":[{"value":"/ Return a mutable view into an image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32285,"byte_end":32324,"line_start":33,"line_end":33,"column_start":1,"column_end":40}},{"value":"/ The coordinates set the position of the top left corner of the crop.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32325,"byte_end":32397,"line_start":34,"line_end":34,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32776,"byte_end":32784,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"crop_imm","qualname":"::imageops::crop_imm","value":"pub fn crop_imm<I: GenericImageView>(&I, u32, u32, u32, u32) -> SubImage<&I>","parent":null,"children":[],"decl_id":null,"docs":" Return an immutable view into an image\n The coordinates set the position of the top left corner of the crop.\n","sig":null,"attributes":[{"value":"/ Return an immutable view into an image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32653,"byte_end":32695,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"/ The coordinates set the position of the top left corner of the crop.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32696,"byte_end":32768,"line_start":47,"line_end":47,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35568,"byte_end":35582,"line_start":132,"line_end":132,"column_start":8,"column_end":22},"name":"overlay_bounds","qualname":"::imageops::overlay_bounds","value":"pub fn overlay_bounds((u32, u32), (u32, u32), u32, u32) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Calculate the region that can be copied from top to bottom.","sig":null,"attributes":[{"value":"/ Calculate the region that can be copied from top to bottom.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":33396,"byte_end":33459,"line_start":77,"line_end":77,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":33460,"byte_end":33463,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ Given image size of bottom and top image, and a point at which we want to place the top image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":33464,"byte_end":33561,"line_start":79,"line_end":79,"column_start":1,"column_end":98}},{"value":"/ onto the bottom image, how large can we be? Have to wary of the following issues:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":33562,"byte_end":33647,"line_start":80,"line_end":80,"column_start":1,"column_end":86}},{"value":"/ * Top might be larger than bottom","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":33648,"byte_end":33685,"line_start":81,"line_end":81,"column_start":1,"column_end":38}},{"value":"/ * Overflows in the computation","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":33686,"byte_end":33720,"line_start":82,"line_end":82,"column_start":1,"column_end":35}},{"value":"/ * Coordinates could be completely out of bounds","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":33721,"byte_end":33772,"line_start":83,"line_end":83,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":33773,"byte_end":33776,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ The main idea is to make use of inequalities provided by the nature of `saturing_add` and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":33777,"byte_end":33870,"line_start":85,"line_end":85,"column_start":1,"column_end":94}},{"value":"/ `saturating_sub`. These intrinsically validate that all resulting coordinates will be in bounds","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":33871,"byte_end":33970,"line_start":86,"line_end":86,"column_start":1,"column_end":100}},{"value":"/ for both images.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":33971,"byte_end":33991,"line_start":87,"line_end":87,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":33992,"byte_end":33995,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ We want that all these coordinate accesses are safe:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":33996,"byte_end":34052,"line_start":89,"line_end":89,"column_start":1,"column_end":57}},{"value":"/ 1. `bottom.get_pixel(x + [0..x_range), y + [0..y_range))`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34053,"byte_end":34114,"line_start":90,"line_end":90,"column_start":1,"column_end":62}},{"value":"/ 2. `top.get_pixel([0..x_range), [0..y_range))`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34115,"byte_end":34165,"line_start":91,"line_end":91,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34166,"byte_end":34169,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Proof that the function provides the necessary bounds for width. Note that all unaugmented math","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34170,"byte_end":34269,"line_start":93,"line_end":93,"column_start":1,"column_end":100}},{"value":"/ operations are to be read in standard arithmetic, not integer arithmetic. Since no direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34270,"byte_end":34363,"line_start":94,"line_end":94,"column_start":1,"column_end":94}},{"value":"/ integer arithmetic occurs in the implementation, this is unambiguous.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34364,"byte_end":34437,"line_start":95,"line_end":95,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34438,"byte_end":34441,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34442,"byte_end":34453,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/ Three short notes/lemmata:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34454,"byte_end":34484,"line_start":98,"line_end":98,"column_start":1,"column_end":31}},{"value":"/ - Iff `(a - b) <= 0` then `a.saturating_sub(b) = 0`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34485,"byte_end":34540,"line_start":99,"line_end":99,"column_start":1,"column_end":56}},{"value":"/ - Iff `(a - b) >= 0` then `a.saturating_sub(b) = a - b`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34541,"byte_end":34600,"line_start":100,"line_end":100,"column_start":1,"column_end":60}},{"value":"/ - If  `a <= c` then `a.saturating_sub(b) <= c.saturating_sub(b)`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34601,"byte_end":34669,"line_start":101,"line_end":101,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34670,"byte_end":34673,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ 1.1 We show that if `bottom_width <= x`, then `x_range = 0` therefore `x + [0..x_range)` is empty.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34674,"byte_end":34776,"line_start":103,"line_end":103,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34777,"byte_end":34780,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34781,"byte_end":34792,"line_start":105,"line_end":105,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34793,"byte_end":34865,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ <= bottom_width.saturating_sub(x)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34866,"byte_end":34903,"line_start":107,"line_end":107,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34904,"byte_end":34907,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ bottom_width <= x","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34908,"byte_end":34929,"line_start":109,"line_end":109,"column_start":1,"column_end":22}},{"value":"/ <==> bottom_width - x <= 0","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34930,"byte_end":34960,"line_start":110,"line_end":110,"column_start":1,"column_end":31}},{"value":"/ <==> bottom_width.saturating_sub(x) = 0","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":34961,"byte_end":35004,"line_start":111,"line_end":111,"column_start":1,"column_end":44}},{"value":"/  ==> x_range <= 0","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35005,"byte_end":35026,"line_start":112,"line_end":112,"column_start":1,"column_end":22}},{"value":"/  ==> x_range  = 0","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35027,"byte_end":35048,"line_start":113,"line_end":113,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35049,"byte_end":35052,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ 1.2 If `x < bottom_width` then `x + x_range < bottom_width`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35053,"byte_end":35116,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35117,"byte_end":35120,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ x + x_range","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35121,"byte_end":35136,"line_start":117,"line_end":117,"column_start":1,"column_end":16}},{"value":"/ <= x + bottom_width.saturating_sub(x)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35137,"byte_end":35178,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/  = x + (bottom_width - x)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35179,"byte_end":35208,"line_start":119,"line_end":119,"column_start":1,"column_end":30}},{"value":"/  = bottom_width","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35209,"byte_end":35228,"line_start":120,"line_end":120,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35229,"byte_end":35232,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ 2. We show that `x_range <= top_width`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35233,"byte_end":35275,"line_start":122,"line_end":122,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35276,"byte_end":35279,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ x_range","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35280,"byte_end":35291,"line_start":124,"line_end":124,"column_start":1,"column_end":12}},{"value":"/  = (top_width.saturating_add(x).min(bottom_width)).saturating_sub(x)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35292,"byte_end":35364,"line_start":125,"line_end":125,"column_start":1,"column_end":73}},{"value":"/ <= top_width.saturating_add(x).saturating_sub(x)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35365,"byte_end":35417,"line_start":126,"line_end":126,"column_start":1,"column_end":53}},{"value":"/ <= (top_wdith + x).saturating_sub(x)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35418,"byte_end":35458,"line_start":127,"line_end":127,"column_start":1,"column_end":41}},{"value":"/  = top_width (due to `top_width >= 0` and `x >= 0`)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35459,"byte_end":35514,"line_start":128,"line_end":128,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35515,"byte_end":35522,"line_start":129,"line_end":129,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35523,"byte_end":35526,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Proof is the same for height.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":35527,"byte_end":35560,"line_start":131,"line_end":131,"column_start":1,"column_end":34}}]},{"kind":"Function","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":38887,"byte_end":38894,"line_start":215,"line_end":215,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"pub fn overlay<I, J>(&mut I, &J, i64, i64) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Overlay an image at a given coordinate (x, y)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":38830,"byte_end":38879,"line_start":214,"line_end":214,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":39999,"byte_end":40003,"line_start":250,"line_end":250,"column_start":8,"column_end":12},"name":"tile","qualname":"::imageops::tile","value":"pub fn tile<I, J>(&mut I, &J) where I: GenericImage, J: GenericImageView<Pixel\n= I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Tile an image by repeating it multiple times","sig":null,"attributes":[{"value":"/ Tile an image by repeating it multiple times","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":39681,"byte_end":39729,"line_start":238,"line_end":238,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":39730,"byte_end":39733,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":39734,"byte_end":39748,"line_start":240,"line_end":240,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":39749,"byte_end":39762,"line_start":241,"line_end":241,"column_start":1,"column_end":14}},{"value":"/ use image::{RgbaImage};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":39763,"byte_end":39790,"line_start":242,"line_end":242,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":39791,"byte_end":39794,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbaImage::new(1920, 1080);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":39795,"byte_end":39840,"line_start":244,"line_end":244,"column_start":1,"column_end":46}},{"value":"/ let tile = image::open(\"tile.png\").unwrap();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":39841,"byte_end":39889,"line_start":245,"line_end":245,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":39890,"byte_end":39893,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ image::imageops::tile(&mut img, &tile);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":39894,"byte_end":39937,"line_start":247,"line_end":247,"column_start":1,"column_end":44}},{"value":"/ img.save(\"tiled_wallpaper.png\").unwrap();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":39938,"byte_end":39983,"line_start":248,"line_end":248,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":39984,"byte_end":39991,"line_start":249,"line_end":249,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40776,"byte_end":40793,"line_start":276,"line_end":276,"column_start":8,"column_end":25},"name":"vertical_gradient","qualname":"::imageops::vertical_gradient","value":"pub fn vertical_gradient<S, P, I>(&mut I, &P, &P) where I: GenericImage<Pixel\n= P>, P: Pixel<Subpixel = S> + 'static, S: Primitive + Lerp + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the image with a linear vertical gradient","sig":null,"attributes":[{"value":"/ Fill the image with a linear vertical gradient","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40324,"byte_end":40374,"line_start":262,"line_end":262,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40375,"byte_end":40378,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ This function assumes a linear color space.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40379,"byte_end":40426,"line_start":264,"line_end":264,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40427,"byte_end":40430,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40431,"byte_end":40445,"line_start":266,"line_end":266,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40446,"byte_end":40459,"line_start":267,"line_end":267,"column_start":1,"column_end":14}},{"value":"/ use image::{Rgba, RgbaImage, Pixel};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40460,"byte_end":40500,"line_start":268,"line_end":268,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40501,"byte_end":40504,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbaImage::new(100, 100);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40505,"byte_end":40548,"line_start":270,"line_end":270,"column_start":1,"column_end":44}},{"value":"/ let start = Rgba::from_slice(&[0, 128, 0, 0]);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40549,"byte_end":40599,"line_start":271,"line_end":271,"column_start":1,"column_end":51}},{"value":"/ let end = Rgba::from_slice(&[255, 255, 255, 255]);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40600,"byte_end":40654,"line_start":272,"line_end":272,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40655,"byte_end":40658,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ image::imageops::vertical_gradient(&mut img, start, end);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40659,"byte_end":40720,"line_start":274,"line_end":274,"column_start":1,"column_end":62}},{"value":"/ img.save(\"vertical_gradient.png\").unwrap();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":40721,"byte_end":40768,"line_start":275,"line_end":275,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":702},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41795,"byte_end":41814,"line_start":309,"line_end":309,"column_start":8,"column_end":27},"name":"horizontal_gradient","qualname":"::imageops::horizontal_gradient","value":"pub fn horizontal_gradient<S, P, I>(&mut I, &P, &P) where\nI: GenericImage<Pixel = P>, P: Pixel<Subpixel = S> + 'static, S: Primitive +\nLerp + 'static","parent":null,"children":[],"decl_id":null,"docs":" Fill the image with a linear horizontal gradient","sig":null,"attributes":[{"value":"/ Fill the image with a linear horizontal gradient","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41337,"byte_end":41389,"line_start":295,"line_end":295,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41390,"byte_end":41393,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ This function assumes a linear color space.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41394,"byte_end":41441,"line_start":297,"line_end":297,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41442,"byte_end":41445,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41446,"byte_end":41460,"line_start":299,"line_end":299,"column_start":1,"column_end":15}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41461,"byte_end":41474,"line_start":300,"line_end":300,"column_start":1,"column_end":14}},{"value":"/ use image::{Rgba, RgbaImage, Pixel};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41475,"byte_end":41515,"line_start":301,"line_end":301,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41516,"byte_end":41519,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbaImage::new(100, 100);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41520,"byte_end":41563,"line_start":303,"line_end":303,"column_start":1,"column_end":44}},{"value":"/ let start = Rgba::from_slice(&[0, 128, 0, 0]);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41564,"byte_end":41614,"line_start":304,"line_end":304,"column_start":1,"column_end":51}},{"value":"/ let end = Rgba::from_slice(&[255, 255, 255, 255]);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41615,"byte_end":41669,"line_start":305,"line_end":305,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41670,"byte_end":41673,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ image::imageops::horizontal_gradient(&mut img, start, end);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41674,"byte_end":41737,"line_start":307,"line_end":307,"column_start":1,"column_end":64}},{"value":"/ img.save(\"horizontal_gradient.png\").unwrap();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":41738,"byte_end":41787,"line_start":308,"line_end":308,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":42428,"byte_end":42435,"line_start":329,"line_end":329,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"pub fn replace<I, J>(&mut I, &J, i64, i64) where I: GenericImage,\nJ: GenericImageView<Pixel = I::Pixel>","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[{"value":"/ Replace the contents of an image at a given coordinate (x, y)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":42355,"byte_end":42420,"line_start":328,"line_end":328,"column_start":1,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":710},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":827},{"krate":0,"index":910},{"krate":0,"index":3153},{"krate":0,"index":3155},{"krate":0,"index":3157},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3166},{"krate":0,"index":913},{"krate":0,"index":3169},{"krate":0,"index":3174},{"krate":0,"index":3176},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3185},{"krate":0,"index":915},{"krate":0,"index":917}],"decl_id":null,"docs":" Input and output of images.\n","sig":null,"attributes":[{"value":"/ Input and output of images.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":110731,"byte_end":110762,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":789},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":117679,"byte_end":117683,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"load","qualname":"::io::free_functions::load","value":"pub fn load<R: BufRead + Seek>(R, ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader.","sig":null,"attributes":[{"value":"/ Create a new image from a Reader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":117332,"byte_end":117369,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":117370,"byte_end":117373,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Assumes the reader is already buffered. For optimal performance,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":117374,"byte_end":117442,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ consider wrapping the reader with a `BufReader::new()`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":117443,"byte_end":117502,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":117503,"byte_end":117506,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":117507,"byte_end":117553,"line_start":31,"line_end":31,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":117554,"byte_end":117557,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":117558,"byte_end":117599,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":117600,"byte_end":117626,"line_start":34,"line_end":34,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":792},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":117859,"byte_end":117865,"line_start":41,"line_end":41,"column_start":10,"column_end":16},"name":"Result","qualname":"::io::free_functions::DecoderVisitor::Result","value":"type Result;","parent":{"krate":0,"index":791},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":127336,"byte_end":127348,"line_start":287,"line_end":287,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::io::free_functions::guess_format","value":"pub fn guess_format(&[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[{"value":"/ Guess image format from memory block","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":127075,"byte_end":127115,"line_start":282,"line_end":282,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":127116,"byte_end":127119,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format based on the Magic Bytes at the beginning.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":127120,"byte_end":127213,"line_start":284,"line_end":284,"column_start":1,"column_end":94}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":127214,"byte_end":127256,"line_start":285,"line_end":285,"column_start":1,"column_end":43}},{"value":"/ This is not to be trusted on the validity of the whole memory block","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":127257,"byte_end":127328,"line_start":286,"line_end":286,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":882},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129844,"byte_end":129850,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Reader","qualname":"::io::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886}],"decl_id":null,"docs":" A multi-format image reader.","sig":null,"attributes":[{"value":"/ A multi-format image reader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128102,"byte_end":128134,"line_start":12,"line_end":12,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128135,"byte_end":128138,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Wraps an input reader to facilitate automatic detection of an image's format, appropriate","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128139,"byte_end":128232,"line_start":14,"line_end":14,"column_start":1,"column_end":94}},{"value":"/ decoding method, and dispatches into the set of supported [`ImageDecoder`] implementations.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128233,"byte_end":128328,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128329,"byte_end":128332,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128333,"byte_end":128345,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128346,"byte_end":128349,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Opening a file, deducing the format based on the file path automatically, and trying to decode","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128350,"byte_end":128448,"line_start":19,"line_end":19,"column_start":1,"column_end":99}},{"value":"/ the image contained can be performed by constructing the reader and immediately consuming it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128449,"byte_end":128546,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128547,"byte_end":128550,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128551,"byte_end":128564,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/ # use image::ImageError;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128565,"byte_end":128593,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128594,"byte_end":128622,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128623,"byte_end":128666,"line_start":25,"line_end":25,"column_start":1,"column_end":44}},{"value":"/ let image = Reader::open(\"path/to/image.png\")?","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128667,"byte_end":128717,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/     .decode()?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128718,"byte_end":128737,"line_start":27,"line_end":27,"column_start":1,"column_end":20}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128738,"byte_end":128752,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128753,"byte_end":128760,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128761,"byte_end":128764,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ It is also possible to make a guess based on the content. This is especially handy if the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128765,"byte_end":128858,"line_start":31,"line_end":31,"column_start":1,"column_end":94}},{"value":"/ source is some blob in memory and you have constructed the reader in another way. Here is an","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128859,"byte_end":128955,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ example with a `pnm` black-and-white subformat that encodes its pixel matrix with ascii values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":128956,"byte_end":129055,"line_start":33,"line_end":33,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129056,"byte_end":129059,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129060,"byte_end":129067,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # use image::ImageError;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129068,"byte_end":129096,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"/ # use image::io::Reader;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129097,"byte_end":129125,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129126,"byte_end":129169,"line_start":38,"line_end":38,"column_start":1,"column_end":44}},{"value":"/ use std::io::Cursor;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129170,"byte_end":129194,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129195,"byte_end":129222,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129223,"byte_end":129226,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ let raw_data = b\"P1 2 2\\n\\","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129227,"byte_end":129257,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/     0 1\\n\\","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129258,"byte_end":129272,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/     1 0\\n\";","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129273,"byte_end":129288,"line_start":44,"line_end":44,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129289,"byte_end":129292,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Reader::new(Cursor::new(raw_data))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129293,"byte_end":129348,"line_start":46,"line_end":46,"column_start":1,"column_end":56}},{"value":"/     .with_guessed_format()","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129349,"byte_end":129379,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/     .expect(\"Cursor io never fails\");","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129380,"byte_end":129421,"line_start":48,"line_end":48,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(reader.format(), Some(ImageFormat::Pnm));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129422,"byte_end":129478,"line_start":49,"line_end":49,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129479,"byte_end":129482,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"pnm\")]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129483,"byte_end":129512,"line_start":51,"line_end":51,"column_start":1,"column_end":30}},{"value":"/ let image = reader.decode()?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129513,"byte_end":129546,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129547,"byte_end":129561,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129562,"byte_end":129569,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129570,"byte_end":129573,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ As a final fallback or if only a specific format must be used, the reader always allows manual","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129574,"byte_end":129672,"line_start":56,"line_end":56,"column_start":1,"column_end":99}},{"value":"/ specification of the supposed image format with [`set_format`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129673,"byte_end":129740,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129741,"byte_end":129744,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ [`set_format`]: #method.set_format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129745,"byte_end":129783,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ [`ImageDecoder`]: ../trait.ImageDecoder.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":129784,"byte_end":129832,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130587,"byte_end":130590,"line_start":81,"line_end":81,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"pub fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new image reader without a preset format.","sig":null,"attributes":[{"value":"/ Create a new image reader without a preset format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130085,"byte_end":130139,"line_start":71,"line_end":71,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130144,"byte_end":130147,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Assumes the reader is already buffered. For optimal performance,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130152,"byte_end":130220,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ consider wrapping the reader with a `BufReader::new()`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130225,"byte_end":130284,"line_start":74,"line_end":74,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130289,"byte_end":130292,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ It is possible to guess the format based on the content of the read object with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130297,"byte_end":130380,"line_start":76,"line_end":76,"column_start":5,"column_end":88}},{"value":"/ [`with_guessed_format`], or to set the format directly with [`set_format`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130385,"byte_end":130464,"line_start":77,"line_end":77,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130469,"byte_end":130472,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130477,"byte_end":130533,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"/ [`set_format`]: method.set_format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130538,"byte_end":130575,"line_start":80,"line_end":80,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130969,"byte_end":130980,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"with_format","qualname":"<Reader<R>>::with_format","value":"pub fn with_format(R, ImageFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a reader with specified format.","sig":null,"attributes":[{"value":"/ Construct a reader with specified format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130767,"byte_end":130812,"line_start":89,"line_end":89,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130817,"byte_end":130820,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Assumes the reader is already buffered. For optimal performance,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130825,"byte_end":130893,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ consider wrapping the reader with a `BufReader::new()`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130898,"byte_end":130957,"line_start":92,"line_end":92,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":131238,"byte_end":131244,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"format","qualname":"<Reader<R>>::format","value":"pub fn format(&Self) -> Option<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently determined format.\n","sig":null,"attributes":[{"value":"/ Get the currently determined format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":131186,"byte_end":131226,"line_start":101,"line_end":101,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":131379,"byte_end":131389,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"set_format","qualname":"<Reader<R>>::set_format","value":"pub fn set_format(&mut Self, ImageFormat)","parent":null,"children":[],"decl_id":null,"docs":" Supply the format as which to interpret the read image.\n","sig":null,"attributes":[{"value":"/ Supply the format as which to interpret the read image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":131308,"byte_end":131367,"line_start":106,"line_end":106,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":131719,"byte_end":131731,"line_start":115,"line_end":115,"column_start":12,"column_end":24},"name":"clear_format","qualname":"<Reader<R>>::clear_format","value":"pub fn clear_format(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the current information on the image format.","sig":null,"attributes":[{"value":"/ Remove the current information on the image format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":131471,"byte_end":131526,"line_start":111,"line_end":111,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":131531,"byte_end":131534,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Note that many operations require format information to be present and will return e.g. an","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":131539,"byte_end":131633,"line_start":113,"line_end":113,"column_start":5,"column_end":99}},{"value":"/ `ImageError::Unsupported` when the image format has not been set.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":131638,"byte_end":131707,"line_start":114,"line_end":114,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":131828,"byte_end":131837,"line_start":120,"line_end":120,"column_start":12,"column_end":21},"name":"no_limits","qualname":"<Reader<R>>::no_limits","value":"pub fn no_limits(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Disable all decoding limits.\n","sig":null,"attributes":[{"value":"/ Disable all decoding limits.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":131784,"byte_end":131816,"line_start":119,"line_end":119,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":131964,"byte_end":131970,"line_start":125,"line_end":125,"column_start":12,"column_end":18},"name":"limits","qualname":"<Reader<R>>::limits","value":"pub fn limits(&mut Self, super::Limits)","parent":null,"children":[],"decl_id":null,"docs":" Set a custom set of decoding limits.\n","sig":null,"attributes":[{"value":"/ Set a custom set of decoding limits.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":131912,"byte_end":131952,"line_start":124,"line_end":124,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":896},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132082,"byte_end":132092,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the reader.\n","sig":null,"attributes":[{"value":"/ Unwrap the reader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132048,"byte_end":132070,"line_start":129,"line_end":129,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132575,"byte_end":132579,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"open","qualname":"<Reader<BufReader<File>>>::open","value":"pub fn open<P>(P) -> io::Result<Self> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open a file to read, format will be guessed from path.","sig":null,"attributes":[{"value":"/ Open a file to read, format will be guessed from path.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132169,"byte_end":132227,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132232,"byte_end":132235,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ This will not attempt any io operation on the opened file.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132240,"byte_end":132302,"line_start":138,"line_end":138,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132307,"byte_end":132310,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ If you want to inspect the content for a better guess on the format, which does not depend","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132315,"byte_end":132409,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ on file extensions, follow this call with a call to [`with_guessed_format`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132414,"byte_end":132494,"line_start":141,"line_end":141,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132499,"byte_end":132502,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`with_guessed_format`]: #method.with_guessed_format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132507,"byte_end":132563,"line_start":143,"line_end":143,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":134259,"byte_end":134278,"line_start":189,"line_end":189,"column_start":12,"column_end":31},"name":"with_guessed_format","qualname":"<Reader<R>>::with_guessed_format","value":"pub fn with_guessed_format(Self) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Make a format guess based on the content, replacing it on success.","sig":null,"attributes":[{"value":"/ Make a format guess based on the content, replacing it on success.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132985,"byte_end":133055,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133060,"byte_end":133063,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Returns `Ok` with the guess if no io error occurs. Additionally, replaces the current","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133068,"byte_end":133157,"line_start":163,"line_end":163,"column_start":5,"column_end":94}},{"value":"/ format if the guess was successful. If the guess was unable to determine a format then","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133162,"byte_end":133252,"line_start":164,"line_end":164,"column_start":5,"column_end":95}},{"value":"/ the current format of the reader is unchanged.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133257,"byte_end":133307,"line_start":165,"line_end":165,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133312,"byte_end":133315,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the underlying reader fails. The format is unchanged. The error is a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133320,"byte_end":133412,"line_start":167,"line_end":167,"column_start":5,"column_end":97}},{"value":"/ `std::io::Error` and not `ImageError` since the only error case is an error when the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133417,"byte_end":133505,"line_start":168,"line_end":168,"column_start":5,"column_end":93}},{"value":"/ underlying reader seeks.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133510,"byte_end":133538,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133543,"byte_end":133546,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ When an error occurs, the reader may not have been properly reset and it is potentially","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133551,"byte_end":133642,"line_start":171,"line_end":171,"column_start":5,"column_end":96}},{"value":"/ hazardous to continue with more io.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133647,"byte_end":133686,"line_start":172,"line_end":172,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133691,"byte_end":133694,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ## Usage","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133699,"byte_end":133711,"line_start":174,"line_end":174,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133716,"byte_end":133719,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ This supplements the path based type deduction from [`open`](Reader::open) with content based deduction.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133724,"byte_end":133832,"line_start":176,"line_end":176,"column_start":5,"column_end":113}},{"value":"/ This is more common in Linux and UNIX operating systems and also helpful if the path can","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133837,"byte_end":133929,"line_start":177,"line_end":177,"column_start":5,"column_end":97}},{"value":"/ not be directly controlled.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133934,"byte_end":133965,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133970,"byte_end":133973,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133978,"byte_end":133991,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/ # use image::ImageError;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":133996,"byte_end":134024,"line_start":181,"line_end":181,"column_start":5,"column_end":33}},{"value":"/ # use image::io::Reader;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":134029,"byte_end":134057,"line_start":182,"line_end":182,"column_start":5,"column_end":33}},{"value":"/ # fn main() -> Result<(), ImageError> {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":134062,"byte_end":134105,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/ let image = Reader::open(\"image.unknown\")?","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":134110,"byte_end":134156,"line_start":184,"line_end":184,"column_start":5,"column_end":51}},{"value":"/     .with_guessed_format()?","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":134161,"byte_end":134192,"line_start":185,"line_end":185,"column_start":5,"column_end":36}},{"value":"/     .decode()?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":134197,"byte_end":134216,"line_start":186,"line_end":186,"column_start":5,"column_end":24}},{"value":"/ # Ok(()) }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":134221,"byte_end":134235,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":134240,"byte_end":134247,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":135246,"byte_end":135261,"line_start":216,"line_end":216,"column_start":12,"column_end":27},"name":"into_dimensions","qualname":"<Reader<R>>::into_dimensions","value":"pub fn into_dimensions(Self) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the image dimensions.","sig":null,"attributes":[{"value":"/ Read the image dimensions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":135033,"byte_end":135063,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":135068,"byte_end":135071,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":135076,"byte_end":135151,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":135156,"byte_end":135159,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":135164,"byte_end":135234,"line_start":215,"line_end":215,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":135655,"byte_end":135661,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<R>>::decode","value":"pub fn decode(Self) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Read the image (replaces `load`).","sig":null,"attributes":[{"value":"/ Read the image (replaces `load`).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":135435,"byte_end":135472,"line_start":221,"line_end":221,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":135477,"byte_end":135480,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Uses the current format to construct the correct reader for the format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":135485,"byte_end":135560,"line_start":223,"line_end":223,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":135565,"byte_end":135568,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ If no format was determined, returns an `ImageError::Unsupported`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":135573,"byte_end":135643,"line_start":225,"line_end":225,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":3153},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111058,"byte_end":111070,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"LimitSupport","qualname":"::io::LimitSupport","value":"LimitSupport {  }","parent":null,"children":[{"krate":0,"index":3154}],"decl_id":null,"docs":" Set of supported strict limits for a decoder.\n","sig":null,"attributes":[{"value":"/ Set of supported strict limits for a decoder.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":110913,"byte_end":110962,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111008,"byte_end":111046,"line_start":14,"line_end":14,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3169},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112613,"byte_end":112619,"line_start":50,"line_end":50,"column_start":12,"column_end":18},"name":"Limits","qualname":"::io::Limits","value":"Limits { max_image_width, max_image_height, max_alloc }","parent":null,"children":[{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3173}],"decl_id":null,"docs":" Resource limits for decoding.","sig":null,"attributes":[{"value":"/ Resource limits for decoding.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111243,"byte_end":111276,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111277,"byte_end":111280,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Limits can be either *strict* or *non-strict*. Non-strict limits are best-effort","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111281,"byte_end":111365,"line_start":29,"line_end":29,"column_start":1,"column_end":85}},{"value":"/ limits where the library does not guarantee that limit will not be exceeded. Do note","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111366,"byte_end":111454,"line_start":30,"line_end":30,"column_start":1,"column_end":89}},{"value":"/ that it is still considered a bug if a non-strict limit is exceeded, however as","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111455,"byte_end":111538,"line_start":31,"line_end":31,"column_start":1,"column_end":84}},{"value":"/ some of the underlying decoders do not support not support such limits one cannot","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111539,"byte_end":111624,"line_start":32,"line_end":32,"column_start":1,"column_end":86}},{"value":"/ rely on these limits being supported. For stric limits the library makes a stronger","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111625,"byte_end":111712,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ guarantee that the limit will not be exceeded. Exceeding a strict limit is considered","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111713,"byte_end":111802,"line_start":34,"line_end":34,"column_start":1,"column_end":90}},{"value":"/ a critical bug. If a decoder cannot guarantee that it will uphold a strict limit it","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111803,"byte_end":111890,"line_start":35,"line_end":35,"column_start":1,"column_end":88}},{"value":"/ *must* fail with `image::error::LimitErrorKind::Unsupported`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111891,"byte_end":111956,"line_start":36,"line_end":36,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111957,"byte_end":111960,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Currently the only strict limits supported are the `max_image_width` and `max_image_height`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111961,"byte_end":112056,"line_start":38,"line_end":38,"column_start":1,"column_end":96}},{"value":"/ limits, however more will be added in the future. [`LimitSupport`] will default to support","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112057,"byte_end":112151,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ being false and decoders should enable support for the limits they support in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112152,"byte_end":112233,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/ [`ImageDecoder::set_limits`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112234,"byte_end":112267,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112268,"byte_end":112271,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The limit check should only ever fail if a limit will be exceeded or an unsupported strict","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112272,"byte_end":112366,"line_start":43,"line_end":43,"column_start":1,"column_end":95}},{"value":"/ limit is used.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112367,"byte_end":112385,"line_start":44,"line_end":44,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112386,"byte_end":112389,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ [`LimitSupport`]: ./struct.LimitSupport.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112390,"byte_end":112438,"line_start":46,"line_end":46,"column_start":1,"column_end":49}},{"value":"/ [`ImageDecoder::set_limits`]: ../trait.ImageDecoder.html#method.set_limits","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112439,"byte_end":112517,"line_start":47,"line_end":47,"column_start":1,"column_end":79}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112563,"byte_end":112601,"line_start":49,"line_end":49,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3170},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112718,"byte_end":112733,"line_start":52,"line_end":52,"column_start":9,"column_end":24},"name":"max_image_width","qualname":"::io::Limits::max_image_width","value":"std::option::Option<u32>","parent":{"krate":0,"index":3169},"children":[],"decl_id":null,"docs":" The maximum allowed image width. This limit is strict. The default is no limit.\n","sig":null,"attributes":[{"value":"/ The maximum allowed image width. This limit is strict. The default is no limit.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112626,"byte_end":112709,"line_start":51,"line_end":51,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":3171},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112845,"byte_end":112861,"line_start":54,"line_end":54,"column_start":9,"column_end":25},"name":"max_image_height","qualname":"::io::Limits::max_image_height","value":"std::option::Option<u32>","parent":{"krate":0,"index":3169},"children":[],"decl_id":null,"docs":" The maximum allowed image height. This limit is strict. The default is no limit.\n","sig":null,"attributes":[{"value":"/ The maximum allowed image height. This limit is strict. The default is no limit.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112752,"byte_end":112836,"line_start":53,"line_end":53,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":3172},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":113109,"byte_end":113118,"line_start":58,"line_end":58,"column_start":9,"column_end":18},"name":"max_alloc","qualname":"::io::Limits::max_alloc","value":"std::option::Option<u64>","parent":{"krate":0,"index":3169},"children":[],"decl_id":null,"docs":" The maximum allowed sum of allocations allocated by the decoder at any one time exluding\n allocator overhead. This limit is non-strict by default and some decoders may ignore it.\n The default is 512MiB.\n","sig":null,"attributes":[{"value":"/ The maximum allowed sum of allocations allocated by the decoder at any one time exluding","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112880,"byte_end":112972,"line_start":55,"line_end":55,"column_start":5,"column_end":97}},{"value":"/ allocator overhead. This limit is non-strict by default and some decoders may ignore it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":112977,"byte_end":113069,"line_start":56,"line_end":56,"column_start":5,"column_end":97}},{"value":"/ The default is 512MiB.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":113074,"byte_end":113100,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":113457,"byte_end":113466,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"no_limits","qualname":"<Limits>::no_limits","value":"pub fn no_limits() -> Limits","parent":null,"children":[],"decl_id":null,"docs":" Disable all limits.\n","sig":null,"attributes":[{"value":"/ Disable all limits.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":113422,"byte_end":113445,"line_start":74,"line_end":74,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":113740,"byte_end":113753,"line_start":85,"line_end":85,"column_start":12,"column_end":25},"name":"check_support","qualname":"<Limits>::check_support","value":"pub fn check_support(&Self, &LimitSupport) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function checks that all currently set strict limits are supported.\n","sig":null,"attributes":[{"value":"/ This function checks that all currently set strict limits are supported.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":113652,"byte_end":113728,"line_start":84,"line_end":84,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":113965,"byte_end":113981,"line_start":91,"line_end":91,"column_start":12,"column_end":28},"name":"check_dimensions","qualname":"<Limits>::check_dimensions","value":"pub fn check_dimensions(&Self, u32, u32) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function checks the `max_image_width` and `max_image_height` limits given\n the image width and height.\n","sig":null,"attributes":[{"value":"/ This function checks the `max_image_width` and `max_image_height` limits given","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":113835,"byte_end":113917,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ the image width and height.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":113922,"byte_end":113953,"line_start":90,"line_end":90,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":114761,"byte_end":114768,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"reserve","qualname":"<Limits>::reserve","value":"pub fn reserve(&mut Self, u64) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function checks that the current limit allows for reserving the set amount\n of bytes, it then reduces the limit accordingly.\n","sig":null,"attributes":[{"value":"/ This function checks that the current limit allows for reserving the set amount","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":114609,"byte_end":114692,"line_start":111,"line_end":111,"column_start":5,"column_end":88}},{"value":"/ of bytes, it then reduces the limit accordingly.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":114697,"byte_end":114749,"line_start":112,"line_end":112,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":115255,"byte_end":115268,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"reserve_usize","qualname":"<Limits>::reserve_usize","value":"pub fn reserve_usize(&mut Self, usize) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" This function acts identically to [`reserve`], but takes a `usize` for convenience.\n","sig":null,"attributes":[{"value":"/ This function acts identically to [`reserve`], but takes a `usize` for convenience.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":115156,"byte_end":115243,"line_start":127,"line_end":127,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":115952,"byte_end":115956,"line_start":147,"line_end":147,"column_start":12,"column_end":16},"name":"free","qualname":"<Limits>::free","value":"pub fn free(&mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" This function increases the `max_alloc` limit with amount. Should only be used\n together with [`reserve`].","sig":null,"attributes":[{"value":"/ This function increases the `max_alloc` limit with amount. Should only be used","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":115778,"byte_end":115860,"line_start":143,"line_end":143,"column_start":5,"column_end":87}},{"value":"/ together with [`reserve`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":115865,"byte_end":115895,"line_start":144,"line_end":144,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":115900,"byte_end":115903,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ [`reserve`]: #method.reserve","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":115908,"byte_end":115940,"line_start":146,"line_end":146,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":924},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":116218,"byte_end":116228,"line_start":154,"line_end":154,"column_start":12,"column_end":22},"name":"free_usize","qualname":"<Limits>::free_usize","value":"pub fn free_usize(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" This function acts identically to [`free`], but takes a `usize` for convenience.\n","sig":null,"attributes":[{"value":"/ This function acts identically to [`free`], but takes a `usize` for convenience.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":116122,"byte_end":116206,"line_start":153,"line_end":153,"column_start":5,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":925},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flat","qualname":"::flat","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":3188},{"krate":0,"index":3193},{"krate":0,"index":3196},{"krate":0,"index":3199},{"krate":0,"index":3206},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3211},{"krate":0,"index":3212},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3218},{"krate":0,"index":3221},{"krate":0,"index":3225},{"krate":0,"index":3227},{"krate":0,"index":3228},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3234},{"krate":0,"index":3235},{"krate":0,"index":3237},{"krate":0,"index":3239},{"krate":0,"index":994},{"krate":0,"index":1017},{"krate":0,"index":1021},{"krate":0,"index":1063},{"krate":0,"index":3241},{"krate":0,"index":3246},{"krate":0,"index":3250},{"krate":0,"index":3254},{"krate":0,"index":3259},{"krate":0,"index":3263},{"krate":0,"index":3267},{"krate":0,"index":3276},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3288},{"krate":0,"index":3291},{"krate":0,"index":3302},{"krate":0,"index":3304},{"krate":0,"index":3305},{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3310},{"krate":0,"index":3311},{"krate":0,"index":3313},{"krate":0,"index":1068},{"krate":0,"index":1081},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1100},{"krate":0,"index":1104},{"krate":0,"index":1114},{"krate":0,"index":1124},{"krate":0,"index":1130},{"krate":0,"index":1135},{"krate":0,"index":1137},{"krate":0,"index":1138}],"decl_id":null,"docs":" Image representations for ffi.","sig":null,"attributes":[{"value":"/ Image representations for ffi.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136147,"byte_end":136181,"line_start":1,"line_end":1,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136182,"byte_end":136185,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136186,"byte_end":136197,"line_start":3,"line_end":3,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136198,"byte_end":136201,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Imagine you want to offer a very simple ffi interface: The caller provides an image buffer and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136202,"byte_end":136300,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"/ your program creates a thumbnail from it and dumps that image as `png`. This module is designed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136301,"byte_end":136400,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/ to help you transition from raw memory data to Rust representation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136401,"byte_end":136472,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136473,"byte_end":136476,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136477,"byte_end":136490,"line_start":9,"line_end":9,"column_start":1,"column_end":14}},{"value":"/ use std::ptr;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136491,"byte_end":136508,"line_start":10,"line_end":10,"column_start":1,"column_end":18}},{"value":"/ use std::slice;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136509,"byte_end":136528,"line_start":11,"line_end":11,"column_start":1,"column_end":20}},{"value":"/ use image::Rgb;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136529,"byte_end":136548,"line_start":12,"line_end":12,"column_start":1,"column_end":20}},{"value":"/ use image::flat::{FlatSamples, SampleLayout};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136549,"byte_end":136598,"line_start":13,"line_end":13,"column_start":1,"column_end":50}},{"value":"/ use image::imageops::thumbnail;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136599,"byte_end":136634,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136635,"byte_end":136638,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ #[no_mangle]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136639,"byte_end":136655,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/ pub extern \"C\" fn store_rgb8_compressed(","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136656,"byte_end":136700,"line_start":17,"line_end":17,"column_start":1,"column_end":45}},{"value":"/     data: *const u8, len: usize,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136701,"byte_end":136737,"line_start":18,"line_end":18,"column_start":1,"column_end":37}},{"value":"/     layout: *const SampleLayout","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136738,"byte_end":136773,"line_start":19,"line_end":19,"column_start":1,"column_end":36}},{"value":"/ )","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136774,"byte_end":136779,"line_start":20,"line_end":20,"column_start":1,"column_end":6}},{"value":"/     -> bool","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136780,"byte_end":136795,"line_start":21,"line_end":21,"column_start":1,"column_end":16}},{"value":"/ {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136796,"byte_end":136801,"line_start":22,"line_end":22,"column_start":1,"column_end":6}},{"value":"/     let samples = unsafe { slice::from_raw_parts(data, len) };","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136802,"byte_end":136868,"line_start":23,"line_end":23,"column_start":1,"column_end":67}},{"value":"/     let layout = unsafe { ptr::read(layout) };","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136869,"byte_end":136919,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136920,"byte_end":136923,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/     let buffer = FlatSamples {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136924,"byte_end":136958,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/         samples,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136959,"byte_end":136979,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/         layout,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":136980,"byte_end":136999,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/         color_hint: None,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137000,"byte_end":137029,"line_start":29,"line_end":29,"column_start":1,"column_end":30}},{"value":"/     };","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137030,"byte_end":137040,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137041,"byte_end":137044,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     let view = match buffer.as_view::<Rgb<u8>>() {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137045,"byte_end":137099,"line_start":32,"line_end":32,"column_start":1,"column_end":55}},{"value":"/         Err(_) => return false, // Invalid layout.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137100,"byte_end":137154,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/         Ok(view) => view,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137155,"byte_end":137184,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/     };","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137185,"byte_end":137195,"line_start":35,"line_end":35,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137196,"byte_end":137199,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     thumbnail(&view, 64, 64)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137200,"byte_end":137232,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/         .save(\"output.png\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137233,"byte_end":137264,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/         .map(|_| true)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137265,"byte_end":137291,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/         .unwrap_or_else(|_| false)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137292,"byte_end":137330,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137331,"byte_end":137336,"line_start":41,"line_end":41,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137337,"byte_end":137344,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137345,"byte_end":137348,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3188},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139359,"byte_end":139370,"line_start":84,"line_end":84,"column_start":12,"column_end":23},"name":"FlatSamples","qualname":"::flat::FlatSamples","value":"FlatSamples { samples, layout, color_hint }","parent":null,"children":[{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192}],"decl_id":null,"docs":" A flat buffer over a (multi channel) image.","sig":null,"attributes":[{"value":"/ A flat buffer over a (multi channel) image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137776,"byte_end":137823,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137824,"byte_end":137827,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ In contrast to `ImageBuffer`, this representation of a sample collection is much more lenient","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137828,"byte_end":137925,"line_start":61,"line_end":61,"column_start":1,"column_end":98}},{"value":"/ in the layout thereof. It also allows grouping by color planes instead of by pixel as long as","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":137926,"byte_end":138023,"line_start":62,"line_end":62,"column_start":1,"column_end":98}},{"value":"/ the strides of each extent are constant. This struct itself has no invariants on the strides","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":138024,"byte_end":138120,"line_start":63,"line_end":63,"column_start":1,"column_end":97}},{"value":"/ but not every possible configuration can be interpreted as a [`GenericImageView`] or","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":138121,"byte_end":138209,"line_start":64,"line_end":64,"column_start":1,"column_end":89}},{"value":"/ [`GenericImage`]. The methods [`as_view`] and [`as_view_mut`] construct the actual implementors","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":138210,"byte_end":138309,"line_start":65,"line_end":65,"column_start":1,"column_end":100}},{"value":"/ of these traits and perform necessary checks. To manually perform this and other layout checks","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":138310,"byte_end":138408,"line_start":66,"line_end":66,"column_start":1,"column_end":99}},{"value":"/ use [`is_normal`] or [`has_aliased_samples`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":138409,"byte_end":138458,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":138459,"byte_end":138462,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Instances can be constructed not only by hand. The buffer instances returned by library","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":138463,"byte_end":138554,"line_start":69,"line_end":69,"column_start":1,"column_end":92}},{"value":"/ functions such as [`ImageBuffer::as_flat_samples`] guarantee that the conversion to a generic","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":138555,"byte_end":138652,"line_start":70,"line_end":70,"column_start":1,"column_end":98}},{"value":"/ image or generic view succeeds. A very different constructor is [`with_monocolor`]. It uses a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":138653,"byte_end":138750,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"/ single pixel as the backing storage for an arbitrarily sized read-only raster by mapping each","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":138751,"byte_end":138848,"line_start":72,"line_end":72,"column_start":1,"column_end":98}},{"value":"/ pixel to the same samples by setting some strides to `0`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":138849,"byte_end":138910,"line_start":73,"line_end":73,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":138911,"byte_end":138914,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: ../trait.GenericImage.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":138915,"byte_end":138963,"line_start":75,"line_end":75,"column_start":1,"column_end":49}},{"value":"/ [`GenericImageView`]: ../trait.GenericImageView.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":138964,"byte_end":139020,"line_start":76,"line_end":76,"column_start":1,"column_end":57}},{"value":"/ [`ImageBuffer::as_flat_samples`]: ../struct.ImageBuffer.html#method.as_flat_samples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139021,"byte_end":139108,"line_start":77,"line_end":77,"column_start":1,"column_end":88}},{"value":"/ [`is_normal`]: #method.is_normal","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139109,"byte_end":139145,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/ [`has_aliased_samples`]: #method.has_aliased_samples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139146,"byte_end":139202,"line_start":79,"line_end":79,"column_start":1,"column_end":57}},{"value":"/ [`as_view`]: #method.as_view","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139203,"byte_end":139235,"line_start":80,"line_end":80,"column_start":1,"column_end":33}},{"value":"/ [`as_view_mut`]: #method.as_view_mut","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139236,"byte_end":139276,"line_start":81,"line_end":81,"column_start":1,"column_end":41}},{"value":"/ [`with_monocolor`]: #method.with_monocolor","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139277,"byte_end":139323,"line_start":82,"line_end":82,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3190},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139448,"byte_end":139455,"line_start":86,"line_end":86,"column_start":9,"column_end":16},"name":"samples","qualname":"::flat::FlatSamples::samples","value":"Buffer","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":" Underlying linear container holding sample values.\n","sig":null,"attributes":[{"value":"/ Underlying linear container holding sample values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139385,"byte_end":139439,"line_start":85,"line_end":85,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3191},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139539,"byte_end":139545,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"layout","qualname":"::flat::FlatSamples::layout","value":"flat::SampleLayout","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":" A `repr(C)` description of the layout of buffer samples.\n","sig":null,"attributes":[{"value":"/ A `repr(C)` description of the layout of buffer samples.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139470,"byte_end":139530,"line_start":88,"line_end":88,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3192},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140000,"byte_end":140010,"line_start":97,"line_end":97,"column_start":9,"column_end":19},"name":"color_hint","qualname":"::flat::FlatSamples::color_hint","value":"std::option::Option<color::ColorType>","parent":{"krate":0,"index":3188},"children":[],"decl_id":null,"docs":" Supplementary color information.","sig":null,"attributes":[{"value":"/ Supplementary color information.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139566,"byte_end":139602,"line_start":91,"line_end":91,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139607,"byte_end":139610,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ You may keep this as `None` in most cases. This is NOT checked in `View` or other","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139615,"byte_end":139700,"line_start":93,"line_end":93,"column_start":5,"column_end":90}},{"value":"/ converters. It is intended mainly as a way for types that convert to this buffer type to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139705,"byte_end":139797,"line_start":94,"line_end":94,"column_start":5,"column_end":97}},{"value":"/ attach their otherwise static color information. A dynamic image representation could","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139802,"byte_end":139891,"line_start":95,"line_end":95,"column_start":5,"column_end":94}},{"value":"/ however use this to resolve representational ambiguities such as the order of RGB channels.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":139896,"byte_end":139991,"line_start":96,"line_end":96,"column_start":5,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":3199},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140160,"byte_end":140172,"line_start":103,"line_end":103,"column_start":12,"column_end":24},"name":"SampleLayout","qualname":"::flat::SampleLayout","value":"SampleLayout { channels, channel_stride, width, width_stride, height, height_stride }","parent":null,"children":[{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3202},{"krate":0,"index":3203},{"krate":0,"index":3204},{"krate":0,"index":3205}],"decl_id":null,"docs":" A ffi compatible description of a sample buffer.\n","sig":null,"attributes":[{"value":"/ A ffi compatible description of a sample buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140034,"byte_end":140086,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140087,"byte_end":140097,"line_start":101,"line_end":101,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3200},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140256,"byte_end":140264,"line_start":105,"line_end":105,"column_start":9,"column_end":17},"name":"channels","qualname":"::flat::SampleLayout::channels","value":"u8","parent":{"krate":0,"index":3199},"children":[],"decl_id":null,"docs":" The number of channels in the color representation of the image.\n","sig":null,"attributes":[{"value":"/ The number of channels in the color representation of the image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140179,"byte_end":140247,"line_start":104,"line_end":104,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3201},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140350,"byte_end":140364,"line_start":108,"line_end":108,"column_start":9,"column_end":23},"name":"channel_stride","qualname":"::flat::SampleLayout::channel_stride","value":"usize","parent":{"krate":0,"index":3199},"children":[],"decl_id":null,"docs":" Add this to an index to get to the sample in the next channel.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the sample in the next channel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140275,"byte_end":140341,"line_start":107,"line_end":107,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3202},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140426,"byte_end":140431,"line_start":111,"line_end":111,"column_start":9,"column_end":14},"name":"width","qualname":"::flat::SampleLayout::width","value":"u32","parent":{"krate":0,"index":3199},"children":[],"decl_id":null,"docs":" The width of the represented image.\n","sig":null,"attributes":[{"value":"/ The width of the represented image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140378,"byte_end":140417,"line_start":110,"line_end":110,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3203},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140518,"byte_end":140530,"line_start":114,"line_end":114,"column_start":9,"column_end":21},"name":"width_stride","qualname":"::flat::SampleLayout::width_stride","value":"usize","parent":{"krate":0,"index":3199},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in x-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in x-direction.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140443,"byte_end":140509,"line_start":113,"line_end":113,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3204},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140593,"byte_end":140599,"line_start":117,"line_end":117,"column_start":9,"column_end":15},"name":"height","qualname":"::flat::SampleLayout::height","value":"u32","parent":{"krate":0,"index":3199},"children":[],"decl_id":null,"docs":" The height of the represented image.\n","sig":null,"attributes":[{"value":"/ The height of the represented image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140544,"byte_end":140584,"line_start":116,"line_end":116,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3205},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140686,"byte_end":140699,"line_start":120,"line_end":120,"column_start":9,"column_end":22},"name":"height_stride","qualname":"::flat::SampleLayout::height_stride","value":"usize","parent":{"krate":0,"index":3199},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in y-direction.\n","sig":null,"attributes":[{"value":"/ Add this to an index to get to the next sample in y-direction.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140611,"byte_end":140677,"line_start":119,"line_end":119,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":141674,"byte_end":141690,"line_start":144,"line_end":144,"column_start":12,"column_end":28},"name":"row_major_packed","qualname":"<SampleLayout>::row_major_packed","value":"pub fn row_major_packed(u8, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a row-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a row-major image packed in all directions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140880,"byte_end":140936,"line_start":128,"line_end":128,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140941,"byte_end":140944,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::RowMajorPacked`. It can therefore be converted to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140949,"byte_end":141044,"line_start":130,"line_end":130,"column_start":5,"column_end":100}},{"value":"/ safely to an `ImageBuffer` with a large enough underlying buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":141049,"byte_end":141118,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":141123,"byte_end":141126,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":141131,"byte_end":141138,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":141143,"byte_end":141193,"line_start":134,"line_end":134,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::row_major_packed(3, 640, 480);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":141198,"byte_end":141259,"line_start":135,"line_end":135,"column_start":5,"column_end":66}},{"value":"/ assert!(layout.is_normal(NormalForm::RowMajorPacked));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":141264,"byte_end":141322,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":141327,"byte_end":141334,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":141339,"byte_end":141342,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":141347,"byte_end":141359,"line_start":139,"line_end":139,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":141364,"byte_end":141367,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":141372,"byte_end":141467,"line_start":141,"line_end":141,"column_start":5,"column_end":100}},{"value":"/ in the `height` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":141472,"byte_end":141563,"line_start":142,"line_end":142,"column_start":5,"column_end":96}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":141568,"byte_end":141662,"line_start":143,"line_end":143,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142951,"byte_end":142970,"line_start":174,"line_end":174,"column_start":12,"column_end":31},"name":"column_major_packed","qualname":"<SampleLayout>::column_major_packed","value":"pub fn column_major_packed(u8, u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a column-major image packed in all directions.","sig":null,"attributes":[{"value":"/ Describe a column-major image packed in all directions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142138,"byte_end":142197,"line_start":158,"line_end":158,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142202,"byte_end":142205,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The resulting will surely be `NormalForm::ColumnMajorPacked`. This is not particularly","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142210,"byte_end":142300,"line_start":160,"line_end":160,"column_start":5,"column_end":95}},{"value":"/ useful for conversion but can be used to describe such a buffer without pitfalls.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142305,"byte_end":142390,"line_start":161,"line_end":161,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142395,"byte_end":142398,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142403,"byte_end":142410,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # use image::flat::{NormalForm, SampleLayout};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142415,"byte_end":142465,"line_start":164,"line_end":164,"column_start":5,"column_end":55}},{"value":"/ let layout = SampleLayout::column_major_packed(3, 640, 480);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142470,"byte_end":142534,"line_start":165,"line_end":165,"column_start":5,"column_end":69}},{"value":"/ assert!(layout.is_normal(NormalForm::ColumnMajorPacked));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142539,"byte_end":142600,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142605,"byte_end":142612,"line_start":167,"line_end":167,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142617,"byte_end":142620,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142625,"byte_end":142637,"line_start":169,"line_end":169,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142642,"byte_end":142645,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ On platforms where `usize` has the same size as `u32` this panics when the resulting stride","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142650,"byte_end":142745,"line_start":171,"line_end":171,"column_start":5,"column_end":100}},{"value":"/ in the `width` direction would be larger than `usize::max_value()`. On other platforms","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142750,"byte_end":142840,"line_start":172,"line_end":172,"column_start":5,"column_end":95}},{"value":"/ where it can surely accomodate `u8::max_value() * u32::max_value(), this can never happen.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":142845,"byte_end":142939,"line_start":173,"line_end":173,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":143596,"byte_end":143607,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<SampleLayout>::strides_cwh","value":"pub fn strides_cwh(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":143421,"byte_end":143480,"line_start":188,"line_end":188,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":143485,"byte_end":143488,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":143493,"byte_end":143564,"line_start":190,"line_end":190,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":143569,"byte_end":143584,"line_start":191,"line_end":191,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":143924,"byte_end":143931,"line_start":200,"line_end":200,"column_start":12,"column_end":19},"name":"extents","qualname":"<SampleLayout>::extents","value":"pub fn extents(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":143722,"byte_end":143773,"line_start":196,"line_end":196,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":143778,"byte_end":143781,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":143786,"byte_end":143879,"line_start":198,"line_end":198,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":143884,"byte_end":143912,"line_start":199,"line_end":199,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144352,"byte_end":144358,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"bounds","qualname":"<SampleLayout>::bounds","value":"pub fn bounds(&Self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144100,"byte_end":144154,"line_start":208,"line_end":208,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144159,"byte_end":144162,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144167,"byte_end":144257,"line_start":210,"line_end":210,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144262,"byte_end":144340,"line_start":211,"line_end":211,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146511,"byte_end":146521,"line_start":267,"line_end":267,"column_start":12,"column_end":22},"name":"min_length","qualname":"<SampleLayout>::min_length","value":"pub fn min_length(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144446,"byte_end":144536,"line_start":216,"line_end":216,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144541,"byte_end":144544,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144549,"byte_end":144644,"line_start":218,"line_end":218,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144649,"byte_end":144739,"line_start":219,"line_end":219,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144744,"byte_end":144835,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144840,"byte_end":144897,"line_start":221,"line_end":221,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144902,"byte_end":144905,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144910,"byte_end":144927,"line_start":223,"line_end":223,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144932,"byte_end":144935,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":144940,"byte_end":145024,"line_start":225,"line_end":225,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145029,"byte_end":145120,"line_start":226,"line_end":226,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145125,"byte_end":145128,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145133,"byte_end":145158,"line_start":228,"line_end":228,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145163,"byte_end":145166,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145171,"byte_end":145225,"line_start":230,"line_end":230,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145230,"byte_end":145254,"line_start":231,"line_end":231,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145259,"byte_end":145276,"line_start":232,"line_end":232,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145281,"byte_end":145306,"line_start":233,"line_end":233,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145311,"byte_end":145329,"line_start":234,"line_end":234,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145334,"byte_end":145337,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145342,"byte_end":145353,"line_start":236,"line_end":236,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145358,"byte_end":145381,"line_start":237,"line_end":237,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145386,"byte_end":145405,"line_start":238,"line_end":238,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145410,"byte_end":145452,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145457,"byte_end":145464,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145469,"byte_end":145472,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145477,"byte_end":145569,"line_start":242,"line_end":242,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145574,"byte_end":145664,"line_start":243,"line_end":243,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145669,"byte_end":145672,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145677,"byte_end":145705,"line_start":245,"line_end":245,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145710,"byte_end":145713,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145718,"byte_end":145810,"line_start":247,"line_end":247,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145815,"byte_end":145909,"line_start":248,"line_end":248,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145914,"byte_end":145969,"line_start":249,"line_end":249,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145974,"byte_end":145977,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":145982,"byte_end":146006,"line_start":251,"line_end":251,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146011,"byte_end":146028,"line_start":252,"line_end":252,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146033,"byte_end":146058,"line_start":253,"line_end":253,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146063,"byte_end":146081,"line_start":254,"line_end":254,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146086,"byte_end":146089,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146094,"byte_end":146105,"line_start":256,"line_end":256,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146110,"byte_end":146126,"line_start":257,"line_end":257,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146131,"byte_end":146150,"line_start":258,"line_end":258,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146155,"byte_end":146178,"line_start":259,"line_end":259,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146183,"byte_end":146212,"line_start":260,"line_end":260,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146217,"byte_end":146252,"line_start":261,"line_end":261,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146257,"byte_end":146264,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146269,"byte_end":146272,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146277,"byte_end":146371,"line_start":264,"line_end":264,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146376,"byte_end":146469,"line_start":265,"line_end":265,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146474,"byte_end":146499,"line_start":266,"line_end":266,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146854,"byte_end":146858,"line_start":277,"line_end":277,"column_start":12,"column_end":16},"name":"fits","qualname":"<SampleLayout>::fits","value":"pub fn fits(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":146788,"byte_end":146842,"line_start":276,"line_end":276,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":147978,"byte_end":147997,"line_start":303,"line_end":303,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<SampleLayout>::has_aliased_samples","value":"pub fn has_aliased_samples(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":147628,"byte_end":147677,"line_start":298,"line_end":298,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":147682,"byte_end":147685,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":147690,"byte_end":147783,"line_start":300,"line_end":300,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":147788,"byte_end":147882,"line_start":301,"line_end":301,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":147887,"byte_end":147966,"line_start":302,"line_end":302,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":149242,"byte_end":149251,"line_start":333,"line_end":333,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<SampleLayout>::is_normal","value":"pub fn is_normal(&Self, NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":148732,"byte_end":148797,"line_start":326,"line_end":326,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":148802,"byte_end":148805,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":148810,"byte_end":148903,"line_start":328,"line_end":328,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":148908,"byte_end":149003,"line_start":329,"line_end":329,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":149008,"byte_end":149100,"line_start":330,"line_end":330,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":149105,"byte_end":149199,"line_start":331,"line_end":331,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":149204,"byte_end":149230,"line_start":332,"line_end":332,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":150952,"byte_end":150961,"line_start":388,"line_end":388,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<SampleLayout>::in_bounds","value":"pub fn in_bounds(&Self, u8, u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":150610,"byte_end":150671,"line_start":383,"line_end":383,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":150676,"byte_end":150679,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":150684,"byte_end":150773,"line_start":385,"line_end":385,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":150778,"byte_end":150872,"line_start":386,"line_end":386,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":150877,"byte_end":150940,"line_start":387,"line_end":387,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":151235,"byte_end":151240,"line_start":395,"line_end":395,"column_start":12,"column_end":17},"name":"index","qualname":"<SampleLayout>::index","value":"pub fn index(&Self, u8, u32, u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":151088,"byte_end":151133,"line_start":392,"line_end":392,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":151138,"byte_end":151141,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":151146,"byte_end":151223,"line_start":394,"line_end":394,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":151835,"byte_end":151856,"line_start":408,"line_end":408,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<SampleLayout>::index_ignoring_bounds","value":"pub fn index_ignoring_bounds(&Self, usize, usize, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (channel, x, y).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (channel, x, y).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":151464,"byte_end":151523,"line_start":403,"line_end":403,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":151528,"byte_end":151531,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":151536,"byte_end":151625,"line_start":405,"line_end":405,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":151630,"byte_end":151724,"line_start":406,"line_end":406,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":151729,"byte_end":151823,"line_start":407,"line_end":407,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":152787,"byte_end":152802,"line_start":429,"line_end":429,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<SampleLayout>::in_bounds_index","value":"pub fn in_bounds_index(&Self, u8, u32, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":152486,"byte_end":152526,"line_start":424,"line_end":424,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":152531,"byte_end":152534,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":152539,"byte_end":152631,"line_start":426,"line_end":426,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":152636,"byte_end":152731,"line_start":427,"line_end":427,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":152736,"byte_end":152775,"line_start":428,"line_end":428,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":153329,"byte_end":153338,"line_start":439,"line_end":439,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<SampleLayout>::shrink_to","value":"pub fn shrink_to(&mut Self, u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":153004,"byte_end":153069,"line_start":434,"line_end":434,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":153074,"byte_end":153077,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":153082,"byte_end":153170,"line_start":436,"line_end":436,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":153175,"byte_end":153270,"line_start":437,"line_end":437,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":153275,"byte_end":153317,"line_start":438,"line_end":438,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":154013,"byte_end":154024,"line_start":466,"line_end":466,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<FlatSamples<Buffer>>::strides_cwh","value":"pub fn strides_cwh(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[{"value":"/ Get the strides for indexing matrix-like `[(c, w, h)]`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":153838,"byte_end":153897,"line_start":462,"line_end":462,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":153902,"byte_end":153905,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ For a row-major layout with grouped samples, this tuple is strictly","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":153910,"byte_end":153981,"line_start":464,"line_end":464,"column_start":5,"column_end":76}},{"value":"/ increasing.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":153986,"byte_end":154001,"line_start":465,"line_end":465,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":154306,"byte_end":154313,"line_start":474,"line_end":474,"column_start":12,"column_end":19},"name":"extents","qualname":"<FlatSamples<Buffer>>::extents","value":"pub fn extents(&Self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[{"value":"/ Get the dimensions `(channels, width, height)`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":154104,"byte_end":154155,"line_start":470,"line_end":470,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":154160,"byte_end":154163,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ The interface is optimized for use with `strides_cwh` instead. The channel extent will be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":154168,"byte_end":154261,"line_start":472,"line_end":472,"column_start":5,"column_end":98}},{"value":"/ before width and height.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":154266,"byte_end":154294,"line_start":473,"line_end":473,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":154641,"byte_end":154647,"line_start":482,"line_end":482,"column_start":12,"column_end":18},"name":"bounds","qualname":"<FlatSamples<Buffer>>::bounds","value":"pub fn bounds(&Self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[{"value":"/ Tuple of bounds in the order of coordinate inputs.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":154389,"byte_end":154443,"line_start":478,"line_end":478,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":154448,"byte_end":154451,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ This function should be used whenever working with image coordinates opposed to buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":154456,"byte_end":154546,"line_start":480,"line_end":480,"column_start":5,"column_end":95}},{"value":"/ coordinates. The only difference compared to `extents` is the output type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":154551,"byte_end":154629,"line_start":481,"line_end":481,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":154761,"byte_end":154767,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FlatSamples<Buffer>>::as_ref","value":"pub fn as_ref<T>(&Self) -> FlatSamples<&[T]> where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference based version.\n","sig":null,"attributes":[{"value":"/ Get a reference based version.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":154715,"byte_end":154749,"line_start":486,"line_end":486,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":155058,"byte_end":155064,"line_start":499,"line_end":499,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<FlatSamples<Buffer>>::as_mut","value":"pub fn as_mut<T>(&mut Self) -> FlatSamples<&mut [T]> where Buffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference based version.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference based version.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":155004,"byte_end":155046,"line_start":498,"line_end":498,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":155360,"byte_end":155366,"line_start":511,"line_end":511,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<FlatSamples<Buffer>>::to_vec","value":"pub fn to_vec<T>(&Self) -> FlatSamples<Vec<T>> where T: Clone,\nBuffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Copy the data into an owned vector.\n","sig":null,"attributes":[{"value":"/ Copy the data into an owned vector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":155309,"byte_end":155348,"line_start":510,"line_end":510,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156652,"byte_end":156662,"line_start":544,"line_end":544,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<FlatSamples<Buffer>>::get_sample","value":"pub fn get_sample<T>(&Self, u8, u32, u32) -> Option<&T> where\nBuffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a reference to a single sample.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":155632,"byte_end":155671,"line_start":523,"line_end":523,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":155676,"byte_end":155679,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::Index` but guarantees to properly","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":155684,"byte_end":155779,"line_start":525,"line_end":525,"column_start":5,"column_end":100}},{"value":"/ check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":155784,"byte_end":155862,"line_start":526,"line_end":526,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":155867,"byte_end":155870,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":155875,"byte_end":155882,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":155887,"byte_end":155915,"line_start":529,"line_end":529,"column_start":5,"column_end":33}},{"value":"/ let flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":155920,"byte_end":155979,"line_start":530,"line_end":530,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":155984,"byte_end":155987,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ // Get the blue channel at (10, 10).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":155992,"byte_end":156032,"line_start":532,"line_end":532,"column_start":5,"column_end":45}},{"value":"/ assert!(flat.get_sample(1, 10, 10).is_some());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156037,"byte_end":156087,"line_start":533,"line_end":533,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156092,"byte_end":156095,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156100,"byte_end":156133,"line_start":535,"line_end":535,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_sample(3, 10, 10).is_none());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156138,"byte_end":156188,"line_start":536,"line_end":536,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156193,"byte_end":156200,"line_start":537,"line_end":537,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156205,"byte_end":156208,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156213,"byte_end":156303,"line_start":539,"line_end":539,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156308,"byte_end":156389,"line_start":540,"line_end":540,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156394,"byte_end":156489,"line_start":541,"line_end":541,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156494,"byte_end":156581,"line_start":542,"line_end":542,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156586,"byte_end":156640,"line_start":543,"line_end":543,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":158275,"byte_end":158289,"line_start":578,"line_end":578,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<FlatSamples<Buffer>>::get_mut_sample","value":"pub fn get_mut_sample<T>(&mut Self, u8, u32, u32) -> Option<&mut T> where\nBuffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a single sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a single sample.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156865,"byte_end":156912,"line_start":552,"line_end":552,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156917,"byte_end":156920,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ This more restrictive than the method based on `std::ops::IndexMut` but guarantees to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":156925,"byte_end":157014,"line_start":554,"line_end":554,"column_start":5,"column_end":94}},{"value":"/ properly check all bounds and not panic as long as `Buffer::as_ref` does not do so.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157019,"byte_end":157106,"line_start":555,"line_end":555,"column_start":5,"column_end":92}},{"value":"/ Contrary to conversion to `ViewMut`, this does not require that samples are packed since it","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157111,"byte_end":157206,"line_start":556,"line_end":556,"column_start":5,"column_end":100}},{"value":"/ does not need to convert samples to a color representation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157211,"byte_end":157274,"line_start":557,"line_end":557,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157279,"byte_end":157282,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157287,"byte_end":157381,"line_start":559,"line_end":559,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157386,"byte_end":157455,"line_start":560,"line_end":560,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157460,"byte_end":157463,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157468,"byte_end":157475,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ # use image::{RgbImage};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157480,"byte_end":157508,"line_start":563,"line_end":563,"column_start":5,"column_end":33}},{"value":"/ let mut flat = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157513,"byte_end":157576,"line_start":564,"line_end":564,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157581,"byte_end":157584,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ // Assign some new color to the blue channel at (10, 10).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157589,"byte_end":157650,"line_start":566,"line_end":566,"column_start":5,"column_end":66}},{"value":"/ *flat.get_mut_sample(1, 10, 10).unwrap() = 255;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157655,"byte_end":157706,"line_start":567,"line_end":567,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157711,"byte_end":157714,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ // There is no alpha channel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157719,"byte_end":157752,"line_start":569,"line_end":569,"column_start":5,"column_end":38}},{"value":"/ assert!(flat.get_mut_sample(3, 10, 10).is_none());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157757,"byte_end":157811,"line_start":570,"line_end":570,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157816,"byte_end":157823,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157828,"byte_end":157831,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ For cases where a special buffer does not provide `AsRef<[T]>`, consider encapsulating","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157836,"byte_end":157926,"line_start":573,"line_end":573,"column_start":5,"column_end":95}},{"value":"/ bounds checks with `min_length` in a type similar to `View`. Then you may use","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":157931,"byte_end":158012,"line_start":574,"line_end":574,"column_start":5,"column_end":86}},{"value":"/ `in_bounds_index` as a small speedup over the index calculation of this method which relies","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":158017,"byte_end":158112,"line_start":575,"line_end":575,"column_start":5,"column_end":100}},{"value":"/ on `index_ignoring_bounds` since it can not have a-priori knowledge that the sample","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":158117,"byte_end":158204,"line_start":576,"line_end":576,"column_start":5,"column_end":92}},{"value":"/ coordinate is in fact backed by any memory buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":158209,"byte_end":158263,"line_start":577,"line_end":577,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":158957,"byte_end":158964,"line_start":594,"line_end":594,"column_start":12,"column_end":19},"name":"as_view","qualname":"<FlatSamples<Buffer>>::as_view","value":"pub fn as_view<P>(&Self) -> Result<View<&[P::Subpixel], P>, Error> where\nP: PixelWithColorType, Buffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer as an image over some type of pixel.","sig":null,"attributes":[{"value":"/ View this buffer as an image over some type of pixel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":158545,"byte_end":158602,"line_start":588,"line_end":588,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":158607,"byte_end":158610,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":158615,"byte_end":158705,"line_start":590,"line_end":590,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":158710,"byte_end":158804,"line_start":591,"line_end":591,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":158809,"byte_end":158903,"line_start":592,"line_end":592,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":158908,"byte_end":158945,"line_start":593,"line_end":593,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":160568,"byte_end":160592,"line_start":633,"line_end":633,"column_start":12,"column_end":36},"name":"as_view_with_mut_samples","qualname":"<FlatSamples<Buffer>>::as_view_with_mut_samples","value":"pub fn as_view_with_mut_samples<P>(&mut Self)\n-> Result<View<&mut [P::Subpixel], P>, Error> where P: PixelWithColorType,\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer but keep mutability at a sample level.","sig":null,"attributes":[{"value":"/ View this buffer but keep mutability at a sample level.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":159603,"byte_end":159662,"line_start":618,"line_end":618,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":159667,"byte_end":159670,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ This is similar to `as_view` but subtly different from `as_view_mut`. The resulting type","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":159675,"byte_end":159767,"line_start":620,"line_end":620,"column_start":5,"column_end":97}},{"value":"/ can be used as a `GenericImage` with the same prior invariants needed as for `as_view`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":159772,"byte_end":159863,"line_start":621,"line_end":621,"column_start":5,"column_end":96}},{"value":"/ It can not be used as a mutable `GenericImage` but does not need channels to be packed in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":159868,"byte_end":159961,"line_start":622,"line_end":622,"column_start":5,"column_end":98}},{"value":"/ their pixel representation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":159966,"byte_end":159997,"line_start":623,"line_end":623,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":160002,"byte_end":160005,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ This first ensures that all in-bounds coordinates refer to valid indices in the sample","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":160010,"byte_end":160100,"line_start":625,"line_end":625,"column_start":5,"column_end":95}},{"value":"/ buffer. It also checks that the specified pixel format expects the same number of channels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":160105,"byte_end":160199,"line_start":626,"line_end":626,"column_start":5,"column_end":99}},{"value":"/ that are present in this buffer. Neither are larger nor a smaller number will be accepted.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":160204,"byte_end":160298,"line_start":627,"line_end":627,"column_start":5,"column_end":99}},{"value":"/ There is no automatic conversion.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":160303,"byte_end":160340,"line_start":628,"line_end":628,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":160345,"byte_end":160348,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":160353,"byte_end":160447,"line_start":630,"line_end":630,"column_start":5,"column_end":99}},{"value":"/ for one sample can in fact modify other samples as well. Sometimes exactly this is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":160452,"byte_end":160538,"line_start":631,"line_end":631,"column_start":5,"column_end":91}},{"value":"/ intended.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":160543,"byte_end":160556,"line_start":632,"line_end":632,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":161982,"byte_end":161993,"line_start":668,"line_end":668,"column_start":12,"column_end":23},"name":"as_view_mut","qualname":"<FlatSamples<Buffer>>::as_view_mut","value":"pub fn as_view_mut<P>(&mut Self)\n-> Result<ViewMut<&mut [P::Subpixel], P>, Error> where P: PixelWithColorType,\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this buffer as a mutable image.","sig":null,"attributes":[{"value":"/ Interpret this buffer as a mutable image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":161239,"byte_end":161284,"line_start":657,"line_end":657,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":161289,"byte_end":161292,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ To succeed, the pixels in this buffer may not alias each other and the samples of each","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":161297,"byte_end":161387,"line_start":659,"line_end":659,"column_start":5,"column_end":95}},{"value":"/ pixel must be packed (i.e. `channel_stride` is `1`). The number of channels must be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":161392,"byte_end":161479,"line_start":660,"line_end":660,"column_start":5,"column_end":92}},{"value":"/ consistent with the channel count expected by the pixel format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":161484,"byte_end":161551,"line_start":661,"line_end":661,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":161556,"byte_end":161559,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ This is similar to an `ImageBuffer` except it is a temporary view that is not normalized as","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":161564,"byte_end":161659,"line_start":663,"line_end":663,"column_start":5,"column_end":100}},{"value":"/ strongly. To get an owning version, consider copying the data into an `ImageBuffer`. This","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":161664,"byte_end":161757,"line_start":664,"line_end":664,"column_start":5,"column_end":98}},{"value":"/ provides many more operations, is possibly faster (if not you may want to open an issue) is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":161762,"byte_end":161857,"line_start":665,"line_end":665,"column_start":5,"column_end":100}},{"value":"/ generally polished. You can also try to convert this buffer inline, see","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":161862,"byte_end":161937,"line_start":666,"line_end":666,"column_start":5,"column_end":80}},{"value":"/ `ImageBuffer::from_raw`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":161942,"byte_end":161970,"line_start":667,"line_end":667,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":163018,"byte_end":163026,"line_start":700,"line_end":700,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FlatSamples<Buffer>>::as_slice","value":"pub fn as_slice<T>(&Self) -> &[T] where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":162794,"byte_end":162826,"line_start":696,"line_end":696,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":162831,"byte_end":162834,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":162839,"byte_end":162931,"line_start":698,"line_end":698,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":162936,"byte_end":163006,"line_start":699,"line_end":699,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":163354,"byte_end":163366,"line_start":711,"line_end":711,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FlatSamples<Buffer>>::as_mut_slice","value":"pub fn as_mut_slice<T>(&mut Self) -> &mut [T] where Buffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[{"value":"/ View the samples as a slice.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":163130,"byte_end":163162,"line_start":707,"line_end":707,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":163167,"byte_end":163170,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ The slice is not limited to the region of the image and not all sample indices are valid","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":163175,"byte_end":163267,"line_start":709,"line_end":709,"column_start":5,"column_end":97}},{"value":"/ indices into this buffer. See `image_mut_slice` as an alternative.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":163272,"byte_end":163342,"line_start":710,"line_end":710,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":163814,"byte_end":163825,"line_start":723,"line_end":723,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<FlatSamples<Buffer>>::image_slice","value":"pub fn image_slice<T>(&Self) -> Option<&[T]> where Buffer: AsRef<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":163478,"byte_end":163540,"line_start":718,"line_end":718,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":163545,"byte_end":163548,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This may fail when the coordinates in this image are either out-of-bounds of the underlying","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":163553,"byte_end":163648,"line_start":720,"line_end":720,"column_start":5,"column_end":100}},{"value":"/ buffer or can not be represented. Note that the slice may have holes that do not correspond","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":163653,"byte_end":163748,"line_start":721,"line_end":721,"column_start":5,"column_end":100}},{"value":"/ to any sample in the image represented by it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":163753,"byte_end":163802,"line_start":722,"line_end":722,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":164260,"byte_end":164275,"line_start":741,"line_end":741,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<FlatSamples<Buffer>>::image_mut_slice","value":"pub fn image_mut_slice<T>(&mut Self) -> Option<&mut [T]> where\nBuffer: AsMut<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Mutable portion of the buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Mutable portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":164189,"byte_end":164248,"line_start":740,"line_end":740,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":164947,"byte_end":164962,"line_start":763,"line_end":763,"column_start":12,"column_end":27},"name":"try_into_buffer","qualname":"<FlatSamples<Buffer>>::try_into_buffer","value":"pub fn try_into_buffer<P>(Self)\n-> Result<ImageBuffer<P, Buffer>, (Error, Self)> where P: PixelWithColorType +\n'static, P::Subpixel: 'static, Buffer: Deref<Target = [P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Move the data into an image buffer.","sig":null,"attributes":[{"value":"/ Move the data into an image buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":164651,"byte_end":164690,"line_start":758,"line_end":758,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":164695,"byte_end":164698,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ This does **not** convert the sample layout. The buffer needs to be in packed row-major form","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":164703,"byte_end":164799,"line_start":760,"line_end":760,"column_start":5,"column_end":101}},{"value":"/ before calling this function. In case of an error, returns the buffer again so that it does","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":164804,"byte_end":164899,"line_start":761,"line_end":761,"column_start":5,"column_end":100}},{"value":"/ not release any allocation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":164904,"byte_end":164935,"line_start":762,"line_end":762,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167882,"byte_end":167892,"line_start":840,"line_end":840,"column_start":12,"column_end":22},"name":"min_length","qualname":"<FlatSamples<Buffer>>::min_length","value":"pub fn min_length(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":165817,"byte_end":165907,"line_start":789,"line_end":789,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":165912,"byte_end":165915,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ This method will allow zero strides, allowing compact representations of monochrome images.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":165920,"byte_end":166015,"line_start":791,"line_end":791,"column_start":5,"column_end":100}},{"value":"/ To check that no aliasing occurs, try `check_alias_invariants`. For compact images (no","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166020,"byte_end":166110,"line_start":792,"line_end":792,"column_start":5,"column_end":95}},{"value":"/ aliasing and no unindexed samples) this is `width*height*channels`. But for both of the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166115,"byte_end":166206,"line_start":793,"line_end":793,"column_start":5,"column_end":96}},{"value":"/ other cases, the reasoning is slightly more involved.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166211,"byte_end":166268,"line_start":794,"line_end":794,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166273,"byte_end":166276,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Explanation","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166281,"byte_end":166298,"line_start":796,"line_end":796,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166303,"byte_end":166306,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ Note that there is a difference between `min_length` and the index of the sample","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166311,"byte_end":166395,"line_start":798,"line_end":798,"column_start":5,"column_end":89}},{"value":"/ 'one-past-the-end`. This is due to strides that may be larger than the dimension below.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166400,"byte_end":166491,"line_start":799,"line_end":799,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166496,"byte_end":166499,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ## Example with holes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166504,"byte_end":166529,"line_start":801,"line_end":801,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166534,"byte_end":166537,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Let's look at an example of a grayscale image with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166542,"byte_end":166596,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166601,"byte_end":166625,"line_start":804,"line_end":804,"column_start":5,"column_end":29}},{"value":"/ * `width = 2`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166630,"byte_end":166647,"line_start":805,"line_end":805,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 3`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166652,"byte_end":166677,"line_start":806,"line_end":806,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166682,"byte_end":166700,"line_start":807,"line_end":807,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166705,"byte_end":166708,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166713,"byte_end":166724,"line_start":809,"line_end":809,"column_start":5,"column_end":16}},{"value":"/ | x x   | x x m | $","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166729,"byte_end":166752,"line_start":810,"line_end":810,"column_start":5,"column_end":28}},{"value":"/  min_length m ^","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166757,"byte_end":166776,"line_start":811,"line_end":811,"column_start":5,"column_end":24}},{"value":"/                   ^ one-past-the-end $","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166781,"byte_end":166823,"line_start":812,"line_end":812,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166828,"byte_end":166835,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166840,"byte_end":166843,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ The difference is also extreme for empty images with large strides. The one-past-the-end","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166848,"byte_end":166940,"line_start":815,"line_end":815,"column_start":5,"column_end":97}},{"value":"/ sample index is still as large as the largest of these strides while `min_length = 0`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":166945,"byte_end":167035,"line_start":816,"line_end":816,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167040,"byte_end":167043,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ## Example with aliasing","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167048,"byte_end":167076,"line_start":818,"line_end":818,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167081,"byte_end":167084,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ The concept gets even more important when you allow samples to alias each other. Here we","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167089,"byte_end":167181,"line_start":820,"line_end":820,"column_start":5,"column_end":97}},{"value":"/ have the buffer of a small grayscale image where this is the case, this time we will first","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167186,"byte_end":167280,"line_start":821,"line_end":821,"column_start":5,"column_end":99}},{"value":"/ show the buffer and then the individual rows below.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167285,"byte_end":167340,"line_start":822,"line_end":822,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167345,"byte_end":167348,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ * `width_stride = 1`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167353,"byte_end":167377,"line_start":824,"line_end":824,"column_start":5,"column_end":29}},{"value":"/ * `width = 3`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167382,"byte_end":167399,"line_start":825,"line_end":825,"column_start":5,"column_end":22}},{"value":"/ * `height_stride = 2`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167404,"byte_end":167429,"line_start":826,"line_end":826,"column_start":5,"column_end":30}},{"value":"/ * `height = 2`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167434,"byte_end":167452,"line_start":827,"line_end":827,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167457,"byte_end":167460,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167465,"byte_end":167476,"line_start":829,"line_end":829,"column_start":5,"column_end":16}},{"value":"/  1 2 3 4 5 m","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167481,"byte_end":167497,"line_start":830,"line_end":830,"column_start":5,"column_end":21}},{"value":"/ |1 2 3| row one","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167502,"byte_end":167521,"line_start":831,"line_end":831,"column_start":5,"column_end":24}},{"value":"/     |3 4 5| row two","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167526,"byte_end":167549,"line_start":832,"line_end":832,"column_start":5,"column_end":28}},{"value":"/            ^ m min_length","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167554,"byte_end":167583,"line_start":833,"line_end":833,"column_start":5,"column_end":34}},{"value":"/          ^ ??? one-past-the-end","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167588,"byte_end":167623,"line_start":834,"line_end":834,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167628,"byte_end":167635,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167640,"byte_end":167643,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ This time 'one-past-the-end' is not even simply the largest stride times the extent of its","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167648,"byte_end":167742,"line_start":837,"line_end":837,"column_start":5,"column_end":99}},{"value":"/ dimension. That still points inside the image because `height*height_stride = 4` but also","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167747,"byte_end":167840,"line_start":838,"line_end":838,"column_start":5,"column_end":98}},{"value":"/ `index_of(1, 2) = 4`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167845,"byte_end":167870,"line_start":839,"line_end":839,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":168029,"byte_end":168033,"line_start":845,"line_end":845,"column_start":12,"column_end":16},"name":"fits","qualname":"<FlatSamples<Buffer>>::fits","value":"pub fn fits(&Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[{"value":"/ Check if a buffer of length `len` is large enough.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":167963,"byte_end":168017,"line_start":844,"line_end":844,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":168454,"byte_end":168473,"line_start":854,"line_end":854,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<FlatSamples<Buffer>>::has_aliased_samples","value":"pub fn has_aliased_samples(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[{"value":"/ If there are any samples aliasing each other.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":168104,"byte_end":168153,"line_start":849,"line_end":849,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":168158,"byte_end":168161,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ If this is not the case, it would always be safe to allow mutable access to two different","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":168166,"byte_end":168259,"line_start":851,"line_end":851,"column_start":5,"column_end":98}},{"value":"/ samples at the same time. Otherwise, this operation would need additional checks. When one","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":168264,"byte_end":168358,"line_start":852,"line_end":852,"column_start":5,"column_end":99}},{"value":"/ dimension overflows `usize` with its stride we also consider this aliasing.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":168363,"byte_end":168442,"line_start":853,"line_end":853,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169054,"byte_end":169063,"line_start":865,"line_end":865,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<FlatSamples<Buffer>>::is_normal","value":"pub fn is_normal(&Self, NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[{"value":"/ Check if a buffer fulfills the requirements of a normal form.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":168544,"byte_end":168609,"line_start":858,"line_end":858,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":168614,"byte_end":168617,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Certain conversions have preconditions on the structure of the sample buffer that are not","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":168622,"byte_end":168715,"line_start":860,"line_end":860,"column_start":5,"column_end":98}},{"value":"/ captured (by design) by the type system. These are then checked before the conversion. Such","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":168720,"byte_end":168815,"line_start":861,"line_end":861,"column_start":5,"column_end":100}},{"value":"/ checks can all be done in constant time and will not inspect the buffer content. You can","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":168820,"byte_end":168912,"line_start":862,"line_end":862,"column_start":5,"column_end":97}},{"value":"/ perform these checks yourself when the conversion is not required at this moment but maybe","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":168917,"byte_end":169011,"line_start":863,"line_end":863,"column_start":5,"column_end":99}},{"value":"/ still performed later.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169016,"byte_end":169042,"line_start":864,"line_end":864,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169488,"byte_end":169497,"line_start":874,"line_end":874,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<FlatSamples<Buffer>>::in_bounds","value":"pub fn in_bounds(&Self, u8, u32, u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[{"value":"/ Check that the pixel and the channel index are in bounds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169146,"byte_end":169207,"line_start":869,"line_end":869,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169212,"byte_end":169215,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ An in-bound coordinate does not yet guarantee that the corresponding calculation of a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169220,"byte_end":169309,"line_start":871,"line_end":871,"column_start":5,"column_end":94}},{"value":"/ buffer index does not overflow. However, if such a buffer large enough to hold all samples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169314,"byte_end":169408,"line_start":872,"line_end":872,"column_start":5,"column_end":99}},{"value":"/ actually exists in memory, this porperty of course follows.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169413,"byte_end":169476,"line_start":873,"line_end":873,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169747,"byte_end":169752,"line_start":881,"line_end":881,"column_start":12,"column_end":17},"name":"index","qualname":"<FlatSamples<Buffer>>::index","value":"pub fn index(&Self, u8, u32, u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[{"value":"/ Resolve the index of a particular sample.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169600,"byte_end":169645,"line_start":878,"line_end":878,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169650,"byte_end":169653,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ `None` if the index is outside the bounds or does not fit into a `usize`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169658,"byte_end":169735,"line_start":880,"line_end":880,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":170231,"byte_end":170252,"line_start":890,"line_end":890,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<FlatSamples<Buffer>>::index_ignoring_bounds","value":"pub fn index_ignoring_bounds(&Self, usize, usize, usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (x, y, channel).","sig":null,"attributes":[{"value":"/ Get the theoretical position of sample (x, y, channel).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169860,"byte_end":169919,"line_start":885,"line_end":885,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169924,"byte_end":169927,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ The 'check' is for overflow during index calculation, not that it is contained in the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":169932,"byte_end":170021,"line_start":887,"line_end":887,"column_start":5,"column_end":94}},{"value":"/ image. Two samples may return the same index, even when one of them is out of bounds. This","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":170026,"byte_end":170120,"line_start":888,"line_end":888,"column_start":5,"column_end":99}},{"value":"/ happens when all strides are `0`, i.e. the image is an arbitrarily large monochrome image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":170125,"byte_end":170219,"line_start":889,"line_end":889,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":170684,"byte_end":170699,"line_start":899,"line_end":899,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<FlatSamples<Buffer>>::in_bounds_index","value":"pub fn in_bounds_index(&Self, u8, u32, u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[{"value":"/ Get an index provided it is inbouds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":170383,"byte_end":170423,"line_start":894,"line_end":894,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":170428,"byte_end":170431,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ Assumes that the image is backed by some sufficiently large buffer. Then computation can","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":170436,"byte_end":170528,"line_start":896,"line_end":896,"column_start":5,"column_end":97}},{"value":"/ not overflow as we could represent the maximum coordinate. Since overflow is defined either","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":170533,"byte_end":170628,"line_start":897,"line_end":897,"column_start":5,"column_end":100}},{"value":"/ way, this method can not be unsafe.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":170633,"byte_end":170672,"line_start":898,"line_end":898,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171134,"byte_end":171143,"line_start":908,"line_end":908,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<FlatSamples<Buffer>>::shrink_to","value":"pub fn shrink_to(&mut Self, u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[{"value":"/ Shrink the image to the minimum of current and given extents.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":170809,"byte_end":170874,"line_start":903,"line_end":903,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":170879,"byte_end":170882,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ This does not modify the strides, so that the resulting sample buffer may have holes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":170887,"byte_end":170975,"line_start":905,"line_end":905,"column_start":5,"column_end":93}},{"value":"/ created by the shrinking operation. Shrinking could also lead to an non-aliasing image when","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":170980,"byte_end":171075,"line_start":906,"line_end":906,"column_start":5,"column_end":100}},{"value":"/ samples had aliased each other before.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171080,"byte_end":171122,"line_start":907,"line_end":907,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":172029,"byte_end":172043,"line_start":934,"line_end":934,"column_start":12,"column_end":26},"name":"with_monocolor","qualname":"<FlatSamples<&'buf [Subpixel]>>::with_monocolor","value":"pub fn with_monocolor<P>(&'buf P, u32, u32) -> Self where P: Pixel<Subpixel =\nSubpixel>, Subpixel: crate::Primitive","parent":null,"children":[],"decl_id":null,"docs":" Create a monocolor image from a single pixel.","sig":null,"attributes":[{"value":"/ Create a monocolor image from a single pixel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171317,"byte_end":171366,"line_start":914,"line_end":914,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171371,"byte_end":171374,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ This can be used as a very cheap source of a `GenericImageView` with an arbitrary number of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171379,"byte_end":171474,"line_start":916,"line_end":916,"column_start":5,"column_end":100}},{"value":"/ pixels of a single color, without any dynamic allocation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171479,"byte_end":171540,"line_start":917,"line_end":917,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171545,"byte_end":171548,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171553,"byte_end":171568,"line_start":919,"line_end":919,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171573,"byte_end":171576,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171581,"byte_end":171588,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ # fn paint_something<T>(_: T) {}","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171593,"byte_end":171629,"line_start":922,"line_end":922,"column_start":5,"column_end":41}},{"value":"/ use image::{flat::FlatSamples, GenericImage, RgbImage, Rgb};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171634,"byte_end":171698,"line_start":923,"line_end":923,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171703,"byte_end":171706,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ let background = Rgb([20, 20, 20]);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171711,"byte_end":171750,"line_start":925,"line_end":925,"column_start":5,"column_end":44}},{"value":"/ let bg = FlatSamples::with_monocolor(&background, 200, 200);;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171755,"byte_end":171820,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171825,"byte_end":171828,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let mut image = RgbImage::new(200, 200);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171833,"byte_end":171877,"line_start":928,"line_end":928,"column_start":5,"column_end":49}},{"value":"/ paint_something(&mut image);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171882,"byte_end":171914,"line_start":929,"line_end":929,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171919,"byte_end":171922,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ // Reset the canvas","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171927,"byte_end":171950,"line_start":931,"line_end":931,"column_start":5,"column_end":28}},{"value":"/ image.copy_from(&bg.as_view().unwrap(), 0, 0);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171955,"byte_end":172005,"line_start":932,"line_end":932,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":172010,"byte_end":172017,"line_start":933,"line_end":933,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3241},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173370,"byte_end":173374,"line_start":971,"line_end":971,"column_start":12,"column_end":16},"name":"View","qualname":"::flat::View","value":"View {  }","parent":null,"children":[{"krate":0,"index":3244},{"krate":0,"index":3245}],"decl_id":null,"docs":" A flat buffer that can be used as an image view.","sig":null,"attributes":[{"value":"/ A flat buffer that can be used as an image view.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":172668,"byte_end":172720,"line_start":956,"line_end":956,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":172721,"byte_end":172724,"line_start":957,"line_end":957,"column_start":1,"column_end":4}},{"value":"/ This is a nearly trivial wrapper around a buffer but at least sanitizes by checking the buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":172725,"byte_end":172823,"line_start":958,"line_end":958,"column_start":1,"column_end":99}},{"value":"/ length first and constraining the pixel type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":172824,"byte_end":172873,"line_start":959,"line_end":959,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":172874,"byte_end":172877,"line_start":960,"line_end":960,"column_start":1,"column_end":4}},{"value":"/ Note that this does not eliminate panics as the `AsRef<[T]>` implementation of `Buffer` may be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":172878,"byte_end":172976,"line_start":961,"line_end":961,"column_start":1,"column_end":99}},{"value":"/ unreliable, i.e. return different buffers at different times. This of course is a non-issue for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":172977,"byte_end":173076,"line_start":962,"line_end":962,"column_start":1,"column_end":100}},{"value":"/ all common collections where the bounds check once must be enough.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173077,"byte_end":173147,"line_start":963,"line_end":963,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173148,"byte_end":173151,"line_start":964,"line_end":964,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173152,"byte_end":173174,"line_start":965,"line_end":965,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173175,"byte_end":173178,"line_start":966,"line_end":966,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173179,"byte_end":173262,"line_start":967,"line_end":967,"column_start":1,"column_end":84}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173263,"byte_end":173330,"line_start":968,"line_end":968,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173331,"byte_end":173334,"line_start":969,"line_end":969,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3254},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174221,"byte_end":174228,"line_start":994,"line_end":994,"column_start":12,"column_end":19},"name":"ViewMut","qualname":"::flat::ViewMut","value":"ViewMut {  }","parent":null,"children":[{"krate":0,"index":3257},{"krate":0,"index":3258}],"decl_id":null,"docs":" A mutable owning version of a flat buffer.","sig":null,"attributes":[{"value":"/ A mutable owning version of a flat buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173499,"byte_end":173545,"line_start":979,"line_end":979,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173546,"byte_end":173549,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ While this wraps a buffer similar to `ImageBuffer`, this is mostly intended as a utility. The","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173550,"byte_end":173647,"line_start":981,"line_end":981,"column_start":1,"column_end":98}},{"value":"/ library endorsed normalized representation is still `ImageBuffer`. Also, the implementation of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173648,"byte_end":173746,"line_start":982,"line_end":982,"column_start":1,"column_end":99}},{"value":"/ `AsMut<[P::Subpixel]>` must always yield the same buffer. Therefore there is no public way to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173747,"byte_end":173844,"line_start":983,"line_end":983,"column_start":1,"column_end":98}},{"value":"/ construct this with an owning buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173845,"byte_end":173886,"line_start":984,"line_end":984,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173887,"byte_end":173890,"line_start":985,"line_end":985,"column_start":1,"column_end":4}},{"value":"/ # Inner invariants","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173891,"byte_end":173913,"line_start":986,"line_end":986,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173914,"byte_end":173917,"line_start":987,"line_end":987,"column_start":1,"column_end":4}},{"value":"/ * For all indices inside bounds, the corresponding index is valid in the buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":173918,"byte_end":174001,"line_start":988,"line_end":988,"column_start":1,"column_end":84}},{"value":"/ * There is no aliasing of samples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174002,"byte_end":174039,"line_start":989,"line_end":989,"column_start":1,"column_end":38}},{"value":"/ * The samples are packed, i.e. `self.inner.layout.sample_stride == 1`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174040,"byte_end":174113,"line_start":990,"line_end":990,"column_start":1,"column_end":74}},{"value":"/ * `P::channel_count()` agrees with `self.inner.layout.channels`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174114,"byte_end":174181,"line_start":991,"line_end":991,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174182,"byte_end":174185,"line_start":992,"line_end":992,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3268},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174937,"byte_end":174945,"line_start":1013,"line_end":1013,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::flat::Error::TooLarge","value":"Error::TooLarge","parent":{"krate":0,"index":3267},"children":[],"decl_id":null,"docs":" The represented image was too large.","sig":null,"attributes":[{"value":"/ The represented image was too large.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174814,"byte_end":174854,"line_start":1010,"line_end":1010,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174859,"byte_end":174862,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ The optional value denotes a possibly accepted maximal bound.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174867,"byte_end":174932,"line_start":1012,"line_end":1012,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3270},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175102,"byte_end":175120,"line_start":1018,"line_end":1018,"column_start":5,"column_end":23},"name":"NormalFormRequired","qualname":"::flat::Error::NormalFormRequired","value":"Error::NormalFormRequired(NormalForm)","parent":{"krate":0,"index":3267},"children":[],"decl_id":null,"docs":" The represented image can not use this representation.","sig":null,"attributes":[{"value":"/ The represented image can not use this representation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174952,"byte_end":175010,"line_start":1015,"line_end":1015,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175015,"byte_end":175018,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ Has an additional value of the normalized form that would be accepted.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175023,"byte_end":175097,"line_start":1017,"line_end":1017,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3273},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175729,"byte_end":175739,"line_start":1029,"line_end":1029,"column_start":5,"column_end":15},"name":"WrongColor","qualname":"::flat::Error::WrongColor","value":"Error::WrongColor(ColorType)","parent":{"krate":0,"index":3267},"children":[],"decl_id":null,"docs":" The color format did not match the channel count.","sig":null,"attributes":[{"value":"/ The color format did not match the channel count.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175139,"byte_end":175192,"line_start":1020,"line_end":1020,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175197,"byte_end":175200,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ In some cases you might be able to fix this by lowering the reported pixel count of the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175205,"byte_end":175296,"line_start":1022,"line_end":1022,"column_start":5,"column_end":96}},{"value":"/ buffer without touching the strides.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175301,"byte_end":175341,"line_start":1023,"line_end":1023,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175346,"byte_end":175349,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ In very special circumstances you *may* do the opposite. This is **VERY** dangerous but not","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175354,"byte_end":175449,"line_start":1025,"line_end":1025,"column_start":5,"column_end":100}},{"value":"/ directly memory unsafe although that will likely alias pixels. One scenario is when you","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175454,"byte_end":175545,"line_start":1026,"line_end":1026,"column_start":5,"column_end":96}},{"value":"/ want to construct an `Rgba` image but have only 3 bytes per pixel and for some reason don't","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175550,"byte_end":175645,"line_start":1027,"line_end":1027,"column_start":5,"column_end":100}},{"value":"/ care about the value of the alpha channel even though you need `Rgba`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175650,"byte_end":175724,"line_start":1028,"line_end":1028,"column_start":5,"column_end":79}}]},{"kind":"Enum","id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174802,"byte_end":174807,"line_start":1009,"line_end":1009,"column_start":10,"column_end":15},"name":"Error","qualname":"::flat::Error","value":"pub enum Error {\n    TooLarge,\n    NormalFormRequired(NormalForm),\n    WrongColor(ColorType),\n}","parent":null,"children":[{"krate":0,"index":3268},{"krate":0,"index":3270},{"krate":0,"index":3273}],"decl_id":null,"docs":" Denotes invalid flat sample buffers when trying to convert to stricter types.","sig":null,"attributes":[{"value":"/ Denotes invalid flat sample buffers when trying to convert to stricter types.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174353,"byte_end":174434,"line_start":1002,"line_end":1002,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174435,"byte_end":174438,"line_start":1003,"line_end":1003,"column_start":1,"column_end":4}},{"value":"/ The biggest use case being `ImageBuffer` which expects closely packed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174439,"byte_end":174512,"line_start":1004,"line_end":1004,"column_start":1,"column_end":74}},{"value":"/ samples in a row major matrix representation. But this error type may be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174513,"byte_end":174589,"line_start":1005,"line_end":1005,"column_start":1,"column_end":77}},{"value":"/ resused for other import functions. A more versatile user may also try to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174590,"byte_end":174667,"line_start":1006,"line_end":1006,"column_start":1,"column_end":78}},{"value":"/ correct the underlying representation depending on the error variant.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":174668,"byte_end":174741,"line_start":1007,"line_end":1007,"column_start":1,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3292},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176238,"byte_end":176247,"line_start":1042,"line_end":1042,"column_start":5,"column_end":14},"name":"Unaliased","qualname":"::flat::NormalForm::Unaliased","value":"NormalForm::Unaliased","parent":{"krate":0,"index":3291},"children":[],"decl_id":null,"docs":" No pixel aliases another.","sig":null,"attributes":[{"value":"/ No pixel aliases another.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176015,"byte_end":176044,"line_start":1038,"line_end":1038,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176049,"byte_end":176052,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ Unaliased also guarantees that all index calculations in the image bounds using","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176057,"byte_end":176140,"line_start":1040,"line_end":1040,"column_start":5,"column_end":88}},{"value":"/ `dim_index*dim_stride` (such as `x*width_stride + y*height_stride`) do not overflow.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176145,"byte_end":176233,"line_start":1041,"line_end":1041,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3294},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176477,"byte_end":176488,"line_start":1048,"line_end":1048,"column_start":5,"column_end":16},"name":"PixelPacked","qualname":"::flat::NormalForm::PixelPacked","value":"NormalForm::PixelPacked","parent":{"krate":0,"index":3291},"children":[],"decl_id":null,"docs":" At least pixels are packed.","sig":null,"attributes":[{"value":"/ At least pixels are packed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176254,"byte_end":176285,"line_start":1044,"line_end":1044,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176290,"byte_end":176293,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ Images of these types can wrap `[T]`-slices into the standard color types. This is a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176298,"byte_end":176386,"line_start":1046,"line_end":1046,"column_start":5,"column_end":93}},{"value":"/ precondition for `GenericImage` which requires by-reference access to pixels.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176391,"byte_end":176472,"line_start":1047,"line_end":1047,"column_start":5,"column_end":86}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3296},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176772,"byte_end":176783,"line_start":1055,"line_end":1055,"column_start":5,"column_end":16},"name":"ImagePacked","qualname":"::flat::NormalForm::ImagePacked","value":"NormalForm::ImagePacked","parent":{"krate":0,"index":3291},"children":[],"decl_id":null,"docs":" All samples are packed.","sig":null,"attributes":[{"value":"/ All samples are packed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176495,"byte_end":176522,"line_start":1050,"line_end":1050,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176527,"byte_end":176530,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ This is orthogonal to `PixelPacked`. It requires that there are no holes in the image but","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176535,"byte_end":176628,"line_start":1052,"line_end":1052,"column_start":5,"column_end":98}},{"value":"/ it is not necessary that the pixel samples themselves are adjacent. An example of this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176633,"byte_end":176723,"line_start":1053,"line_end":1053,"column_start":5,"column_end":95}},{"value":"/ behaviour is a planar image layout.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176728,"byte_end":176767,"line_start":1054,"line_end":1054,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3298},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176993,"byte_end":177007,"line_start":1061,"line_end":1061,"column_start":5,"column_end":19},"name":"RowMajorPacked","qualname":"::flat::NormalForm::RowMajorPacked","value":"NormalForm::RowMajorPacked","parent":{"krate":0,"index":3291},"children":[],"decl_id":null,"docs":" The samples are in row-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in row-major form and all samples are packed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176790,"byte_end":176855,"line_start":1057,"line_end":1057,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176860,"byte_end":176863,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176868,"byte_end":176961,"line_start":1059,"line_end":1059,"column_start":5,"column_end":98}},{"value":"/ in row-major form.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":176966,"byte_end":176988,"line_start":1060,"line_end":1060,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3300},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177223,"byte_end":177240,"line_start":1067,"line_end":1067,"column_start":5,"column_end":22},"name":"ColumnMajorPacked","qualname":"::flat::NormalForm::ColumnMajorPacked","value":"NormalForm::ColumnMajorPacked","parent":{"krate":0,"index":3291},"children":[],"decl_id":null,"docs":" The samples are in column-major form and all samples are packed.","sig":null,"attributes":[{"value":"/ The samples are in column-major form and all samples are packed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177014,"byte_end":177082,"line_start":1063,"line_end":1063,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177087,"byte_end":177090,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ In addition to `PixelPacked` and `ImagePacked` this also asserts that the pixel matrix is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177095,"byte_end":177188,"line_start":1065,"line_end":1065,"column_start":5,"column_end":98}},{"value":"/ in column-major form.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177193,"byte_end":177218,"line_start":1066,"line_end":1066,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3291},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175998,"byte_end":176008,"line_start":1037,"line_end":1037,"column_start":10,"column_end":20},"name":"NormalForm","qualname":"::flat::NormalForm","value":"pub enum NormalForm {\n    Unaliased,\n    PixelPacked,\n    ImagePacked,\n    RowMajorPacked,\n    ColumnMajorPacked,\n}","parent":null,"children":[{"krate":0,"index":3292},{"krate":0,"index":3294},{"krate":0,"index":3296},{"krate":0,"index":3298},{"krate":0,"index":3300}],"decl_id":null,"docs":" Different normal forms of buffers.","sig":null,"attributes":[{"value":"/ Different normal forms of buffers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175755,"byte_end":175793,"line_start":1032,"line_end":1032,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175794,"byte_end":175797,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ A normal form is an unaliased buffer with some additional constraints.  The `ÌmageBuffer` uses","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175798,"byte_end":175897,"line_start":1034,"line_end":1034,"column_start":1,"column_end":99}},{"value":"/ row major form with packed samples.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":175898,"byte_end":175937,"line_start":1035,"line_end":1035,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177449,"byte_end":177459,"line_start":1077,"line_end":1077,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<View<Buffer, P>>::into_inner","value":"pub fn into_inner(Self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177330,"byte_end":177361,"line_start":1074,"line_end":1074,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177366,"byte_end":177369,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177374,"byte_end":177437,"line_start":1076,"line_end":1076,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177942,"byte_end":177946,"line_start":1087,"line_end":1087,"column_start":12,"column_end":16},"name":"flat","qualname":"<View<Buffer, P>>::flat","value":"pub fn flat(&Self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner sample descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the inner sample descriptor.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177521,"byte_end":177572,"line_start":1081,"line_end":1081,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177577,"byte_end":177580,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177585,"byte_end":177674,"line_start":1083,"line_end":1083,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177679,"byte_end":177772,"line_start":1084,"line_end":1084,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177777,"byte_end":177864,"line_start":1085,"line_end":1085,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177869,"byte_end":177930,"line_start":1086,"line_end":1086,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":178225,"byte_end":178232,"line_start":1095,"line_end":1095,"column_start":12,"column_end":19},"name":"samples","qualname":"<View<Buffer, P>>::samples","value":"pub fn samples(&Self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":178011,"byte_end":178051,"line_start":1091,"line_end":1091,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":178056,"byte_end":178059,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":178064,"byte_end":178154,"line_start":1093,"line_end":1093,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":178159,"byte_end":178213,"line_start":1094,"line_end":1094,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":178551,"byte_end":178561,"line_start":1103,"line_end":1103,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<View<Buffer, P>>::get_sample","value":"pub fn get_sample(&Self, u8, u32, u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel if it is in-bounds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":178292,"byte_end":178354,"line_start":1099,"line_end":1099,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":178359,"byte_end":178362,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":178367,"byte_end":178457,"line_start":1101,"line_end":1101,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":178462,"byte_end":178539,"line_start":1102,"line_end":1102,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":179436,"byte_end":179450,"line_start":1121,"line_end":1121,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<View<Buffer, P>>::get_mut_sample","value":"pub fn get_mut_sample(&mut Self, u8, u32, u32) -> Option<&mut P::Subpixel>\nwhere Buffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected subpixel if it is in-bounds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":178894,"byte_end":178964,"line_start":1113,"line_end":1113,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":178969,"byte_end":178972,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`.  This","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":178977,"byte_end":179071,"line_start":1115,"line_end":1115,"column_start":5,"column_end":99}},{"value":"/ method will return `None` when the sample is out-of-bounds. All errors that could occur due","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":179076,"byte_end":179171,"line_start":1116,"line_end":1116,"column_start":5,"column_end":100}},{"value":"/ to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":179176,"byte_end":179243,"line_start":1117,"line_end":1117,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":179248,"byte_end":179251,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ **WARNING**: Note that of course samples may alias, so that the mutable reference returned","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":179256,"byte_end":179350,"line_start":1119,"line_end":1119,"column_start":5,"column_end":99}},{"value":"/ here can in fact modify more than the coordinate in the argument.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":179355,"byte_end":179424,"line_start":1120,"line_end":1120,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":180033,"byte_end":180043,"line_start":1137,"line_end":1137,"column_start":12,"column_end":22},"name":"min_length","qualname":"<View<Buffer, P>>::min_length","value":"pub fn min_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":179851,"byte_end":179941,"line_start":1134,"line_end":1134,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":179946,"byte_end":179949,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":179954,"byte_end":180021,"line_start":1136,"line_end":1136,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":180377,"byte_end":180388,"line_start":1145,"line_end":1145,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<View<Buffer, P>>::image_slice","value":"pub fn image_slice(&Self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":180114,"byte_end":180176,"line_start":1141,"line_end":1141,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":180181,"byte_end":180184,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":180189,"byte_end":180280,"line_start":1143,"line_end":1143,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":180285,"byte_end":180365,"line_start":1144,"line_end":1144,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":180845,"byte_end":180860,"line_start":1154,"line_end":1154,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<View<Buffer, P>>::image_mut_slice","value":"pub fn image_mut_slice(&mut Self) -> &mut [P::Subpixel] where\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the mutable portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":180481,"byte_end":180551,"line_start":1149,"line_end":1149,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":180556,"byte_end":180559,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ This is relevant only when constructed with `FlatSamples::as_view_with_mut_samples`. While","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":180564,"byte_end":180658,"line_start":1151,"line_end":1151,"column_start":5,"column_end":99}},{"value":"/ this can not fail–the validity of all coordinates has been validated during the conversion","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":180663,"byte_end":180759,"line_start":1152,"line_end":1152,"column_start":5,"column_end":99}},{"value":"/ from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":180764,"byte_end":180833,"line_start":1153,"line_end":1153,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":181388,"byte_end":181397,"line_start":1167,"line_end":1167,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<View<Buffer, P>>::shrink_to","value":"pub fn shrink_to(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":181058,"byte_end":181085,"line_start":1162,"line_end":1162,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":181090,"byte_end":181093,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":181098,"byte_end":181185,"line_start":1164,"line_end":1164,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":181190,"byte_end":181283,"line_start":1165,"line_end":1165,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":181288,"byte_end":181376,"line_start":1166,"line_end":1166,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182401,"byte_end":182412,"line_start":1190,"line_end":1190,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<View<Buffer, P>>::try_upgrade","value":"pub fn try_upgrade(Self) -> Result<ViewMut<Buffer, P>, (Error, Self)> where\nBuffer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this into an image with mutable pixels.","sig":null,"attributes":[{"value":"/ Try to convert this into an image with mutable pixels.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":181552,"byte_end":181610,"line_start":1172,"line_end":1172,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":181615,"byte_end":181618,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ The resulting image implements `GenericImage` in addition to `GenericImageView`. While this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":181623,"byte_end":181718,"line_start":1174,"line_end":1174,"column_start":5,"column_end":100}},{"value":"/ has mutable samples, it does not enforce that pixel can not alias and that samples are","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":181723,"byte_end":181813,"line_start":1175,"line_end":1175,"column_start":5,"column_end":95}},{"value":"/ packed enough for a mutable pixel reference. This is slightly cheaper than the chain","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":181818,"byte_end":181906,"line_start":1176,"line_end":1176,"column_start":5,"column_end":93}},{"value":"/ `self.into_inner().as_view_mut()` and keeps the `View` alive on failure.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":181911,"byte_end":181987,"line_start":1177,"line_end":1177,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":181992,"byte_end":181995,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182000,"byte_end":182007,"line_start":1179,"line_end":1179,"column_start":5,"column_end":12}},{"value":"/ # use image::RgbImage;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182012,"byte_end":182038,"line_start":1180,"line_end":1180,"column_start":5,"column_end":31}},{"value":"/ # use image::Rgb;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182043,"byte_end":182064,"line_start":1181,"line_end":1181,"column_start":5,"column_end":26}},{"value":"/ let mut buffer = RgbImage::new(480, 640).into_flat_samples();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182069,"byte_end":182134,"line_start":1182,"line_end":1182,"column_start":5,"column_end":70}},{"value":"/ let view = buffer.as_view_with_mut_samples::<Rgb<u8>>().unwrap();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182139,"byte_end":182208,"line_start":1183,"line_end":1183,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182213,"byte_end":182216,"line_start":1184,"line_end":1184,"column_start":5,"column_end":8}},{"value":"/ // Inspect some pixels, …","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182221,"byte_end":182252,"line_start":1185,"line_end":1185,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182257,"byte_end":182260,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ // Doesn't fail because it was originally an `RgbImage`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182265,"byte_end":182325,"line_start":1187,"line_end":1187,"column_start":5,"column_end":65}},{"value":"/ let view_mut = view.try_upgrade().unwrap();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182330,"byte_end":182377,"line_start":1188,"line_end":1188,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182382,"byte_end":182389,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183060,"byte_end":183070,"line_start":1213,"line_end":1213,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ViewMut<Buffer, P>>::into_inner","value":"pub fn into_inner(Self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[{"value":"/ Take out the sample buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182941,"byte_end":182972,"line_start":1210,"line_end":1210,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182977,"byte_end":182980,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ Gives up the normalization invariants on the buffer format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182985,"byte_end":183048,"line_start":1212,"line_end":1212,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183554,"byte_end":183558,"line_start":1223,"line_end":1223,"column_start":12,"column_end":16},"name":"flat","qualname":"<ViewMut<Buffer, P>>::flat","value":"pub fn flat(&Self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the sample buffer descriptor.","sig":null,"attributes":[{"value":"/ Get a reference on the sample buffer descriptor.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183132,"byte_end":183184,"line_start":1217,"line_end":1217,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183189,"byte_end":183192,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counterpart as modifying the buffer format, including strides and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183197,"byte_end":183286,"line_start":1219,"line_end":1219,"column_start":5,"column_end":94}},{"value":"/ lengths, could invalidate the accessibility invariants of the `View`. It is not specified","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183291,"byte_end":183384,"line_start":1220,"line_end":1220,"column_start":5,"column_end":98}},{"value":"/ if the inner buffer is the same as the buffer of the image from which this view was","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183389,"byte_end":183476,"line_start":1221,"line_end":1221,"column_start":5,"column_end":92}},{"value":"/ created. It might have been truncated as an optimization.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183481,"byte_end":183542,"line_start":1222,"line_end":1222,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183931,"byte_end":183938,"line_start":1232,"line_end":1232,"column_start":12,"column_end":19},"name":"samples","qualname":"<ViewMut<Buffer, P>>::samples","value":"pub fn samples(&Self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[{"value":"/ Get a reference on the inner buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183623,"byte_end":183663,"line_start":1227,"line_end":1227,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183668,"byte_end":183671,"line_start":1228,"line_end":1228,"column_start":5,"column_end":8}},{"value":"/ There is no mutable counter part since it is not intended to allow you to reassign the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183676,"byte_end":183766,"line_start":1229,"line_end":1229,"column_start":5,"column_end":95}},{"value":"/ buffer or otherwise change its size or properties. However, its contents can be accessed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183771,"byte_end":183863,"line_start":1230,"line_end":1230,"column_start":5,"column_end":97}},{"value":"/ mutable through a slice with `image_mut_slice`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183868,"byte_end":183919,"line_start":1231,"line_end":1231,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":184180,"byte_end":184190,"line_start":1239,"line_end":1239,"column_start":12,"column_end":22},"name":"min_length","qualname":"<ViewMut<Buffer, P>>::min_length","value":"pub fn min_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[{"value":"/ Get the minimum length of a buffer such that all in-bounds samples have valid indices.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":183998,"byte_end":184088,"line_start":1236,"line_end":1236,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":184093,"byte_end":184096,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ See `FlatSamples::min_length`. This method will always succeed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":184101,"byte_end":184168,"line_start":1238,"line_end":1238,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":184501,"byte_end":184511,"line_start":1247,"line_end":1247,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<ViewMut<Buffer, P>>::get_sample","value":"pub fn get_sample(&Self, u8, u32, u32) -> Option<&P::Subpixel> where\nBuffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel.","sig":null,"attributes":[{"value":"/ Get a reference to a selected subpixel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":184261,"byte_end":184304,"line_start":1243,"line_end":1243,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":184309,"byte_end":184312,"line_start":1244,"line_end":1244,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":184317,"byte_end":184407,"line_start":1245,"line_end":1245,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":184412,"byte_end":184489,"line_start":1246,"line_end":1246,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":185142,"byte_end":185156,"line_start":1264,"line_end":1264,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<ViewMut<Buffer, P>>::get_mut_sample","value":"pub fn get_mut_sample(&mut Self, u8, u32, u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected sample.","sig":null,"attributes":[{"value":"/ Get a mutable reference to a selected sample.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":184896,"byte_end":184945,"line_start":1260,"line_end":1260,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":184950,"byte_end":184953,"line_start":1261,"line_end":1261,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` when the sample is out-of-bounds. All errors that could","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":184958,"byte_end":185048,"line_start":1262,"line_end":1262,"column_start":5,"column_end":95}},{"value":"/ occur due to overflow have been eliminated while construction the `View`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":185053,"byte_end":185130,"line_start":1263,"line_end":1263,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":185768,"byte_end":185779,"line_start":1278,"line_end":1278,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<ViewMut<Buffer, P>>::image_slice","value":"pub fn image_slice(&Self) -> &[P::Subpixel] where Buffer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[{"value":"/ Return the portion of the buffer that holds sample values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":185505,"byte_end":185567,"line_start":1274,"line_end":1274,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":185572,"byte_end":185575,"line_start":1275,"line_end":1275,"column_start":5,"column_end":8}},{"value":"/ While this can not fail–the validity of all coordinates has been validated during the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":185580,"byte_end":185671,"line_start":1276,"line_end":1276,"column_start":5,"column_end":94}},{"value":"/ conversion from `FlatSamples`–the resulting slice may still contain holes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":185676,"byte_end":185756,"line_start":1277,"line_end":1277,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":185995,"byte_end":186010,"line_start":1286,"line_end":1286,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<ViewMut<Buffer, P>>::image_mut_slice","value":"pub fn image_mut_slice(&mut Self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable buffer that holds sample values.\n","sig":null,"attributes":[{"value":"/ Return the mutable buffer that holds sample values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":185928,"byte_end":185983,"line_start":1285,"line_end":1285,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":186478,"byte_end":186487,"line_start":1296,"line_end":1296,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<ViewMut<Buffer, P>>::shrink_to","value":"pub fn shrink_to(&mut Self, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[{"value":"/ Shrink the inner image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":186148,"byte_end":186175,"line_start":1291,"line_end":1291,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":186180,"byte_end":186183,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ The new dimensions will be the minimum of the previous dimensions. Since the set of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":186188,"byte_end":186275,"line_start":1293,"line_end":1293,"column_start":5,"column_end":92}},{"value":"/ in-bounds pixels afterwards is a subset of the current ones, this is allowed on a `View`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":186280,"byte_end":186373,"line_start":1294,"line_end":1294,"column_start":5,"column_end":98}},{"value":"/ Note that you can not change the number of channels as an intrinsic property of `P`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":186378,"byte_end":186466,"line_start":1295,"line_end":1295,"column_start":5,"column_end":93}}]},{"kind":"Mod","id":{"krate":0,"index":1140},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":7667,"byte_end":7673,"line_start":217,"line_end":217,"column_start":9,"column_end":15},"name":"codecs","qualname":"::codecs","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1472}],"decl_id":null,"docs":" Encoding and decoding for various image file formats.","sig":null,"attributes":[{"value":"/ Encoding and decoding for various image file formats.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5515,"byte_end":5572,"line_start":176,"line_end":176,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5573,"byte_end":5576,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ # Supported formats","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5577,"byte_end":5600,"line_start":178,"line_end":178,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5601,"byte_end":5604,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ | Format | Decoding | Encoding |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5605,"byte_end":5641,"line_start":180,"line_end":180,"column_start":1,"column_end":37}},{"value":"/ | ------ | -------- | -------- |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5642,"byte_end":5678,"line_start":181,"line_end":181,"column_start":1,"column_end":37}},{"value":"/ | PNG    | All supported color types | Same as decoding |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5679,"byte_end":5740,"line_start":182,"line_end":182,"column_start":1,"column_end":62}},{"value":"/ | JPEG   | Baseline and progressive | Baseline JPEG |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5741,"byte_end":5798,"line_start":183,"line_end":183,"column_start":1,"column_end":58}},{"value":"/ | GIF    | Yes | Yes |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5799,"byte_end":5825,"line_start":184,"line_end":184,"column_start":1,"column_end":27}},{"value":"/ | BMP    | Yes | Rgb8, Rgba8, Gray8, GrayA8 |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5826,"byte_end":5875,"line_start":185,"line_end":185,"column_start":1,"column_end":50}},{"value":"/ | ICO    | Yes | Yes |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5876,"byte_end":5902,"line_start":186,"line_end":186,"column_start":1,"column_end":27}},{"value":"/ | TIFF   | Baseline(no fax support) + LZW + PackBits | Rgb8, Rgba8, Gray8 |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5903,"byte_end":5982,"line_start":187,"line_end":187,"column_start":1,"column_end":80}},{"value":"/ | WebP   | Yes | No |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5983,"byte_end":6008,"line_start":188,"line_end":188,"column_start":1,"column_end":26}},{"value":"/ | AVIF   | Only 8-bit | Lossy |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6009,"byte_end":6044,"line_start":189,"line_end":189,"column_start":1,"column_end":36}},{"value":"/ | PNM    | PBM, PGM, PPM, standard PAM | Yes |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6045,"byte_end":6095,"line_start":190,"line_end":190,"column_start":1,"column_end":51}},{"value":"/ | DDS    | DXT1, DXT3, DXT5 | No |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6096,"byte_end":6134,"line_start":191,"line_end":191,"column_start":1,"column_end":39}},{"value":"/ | TGA    | Yes | Rgb8, Rgba8, Bgr8, Bgra8, Gray8, GrayA8 |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6135,"byte_end":6197,"line_start":192,"line_end":192,"column_start":1,"column_end":63}},{"value":"/ | OpenEXR  | Rgb32F, Rgba32F (no dwa compression) | Rgb32F, Rgba32F (no dwa compression) |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6198,"byte_end":6292,"line_start":193,"line_end":193,"column_start":1,"column_end":95}},{"value":"/ | farbfeld | Yes | Yes |","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6293,"byte_end":6321,"line_start":194,"line_end":194,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6322,"byte_end":6325,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ ## A note on format specific features","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6326,"byte_end":6367,"line_start":196,"line_end":196,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6368,"byte_end":6371,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ One of the main goals of `image` is stability, in runtime but also for programmers. This","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6372,"byte_end":6464,"line_start":198,"line_end":198,"column_start":1,"column_end":93}},{"value":"/ ensures that performance as well as safety fixes reach a majority of its user base with little","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6465,"byte_end":6563,"line_start":199,"line_end":199,"column_start":1,"column_end":99}},{"value":"/ effort. Re-exporting all details of its dependencies would run counter to this goal as it","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6564,"byte_end":6657,"line_start":200,"line_end":200,"column_start":1,"column_end":94}},{"value":"/ linked _all_ major version bumps between them and `image`. As such, we are wary of exposing too","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6658,"byte_end":6757,"line_start":201,"line_end":201,"column_start":1,"column_end":100}},{"value":"/ many details, or configuration options, that are not shared between different image formats.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6758,"byte_end":6854,"line_start":202,"line_end":202,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6855,"byte_end":6858,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Nevertheless, the advantage of precise control is hard to ignore. We will thus consider","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6859,"byte_end":6950,"line_start":204,"line_end":204,"column_start":1,"column_end":92}},{"value":"/ _wrappers_, not direct re-exports, in either of the following cases:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":6951,"byte_end":7023,"line_start":205,"line_end":205,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":7024,"byte_end":7027,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ 1. A standard specifies that configuration _x_ is required for decoders/encoders and there","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":7028,"byte_end":7122,"line_start":207,"line_end":207,"column_start":1,"column_end":95}},{"value":"/    exists an essentially canonical way to control it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":7123,"byte_end":7180,"line_start":208,"line_end":208,"column_start":1,"column_end":58}},{"value":"/ 2. At least two different implementations agree on some (sub-)set of features in practice.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":7181,"byte_end":7275,"line_start":209,"line_end":209,"column_start":1,"column_end":95}},{"value":"/ 3. A technical argument including measurements of the performance, space benefits, or otherwise","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":7276,"byte_end":7375,"line_start":210,"line_end":210,"column_start":1,"column_end":100}},{"value":"/    objectively quantified benefits can be made, and the added interface is unlikely to require","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":7376,"byte_end":7474,"line_start":211,"line_end":211,"column_start":1,"column_end":99}},{"value":"/    breaking changes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":7475,"byte_end":7499,"line_start":212,"line_end":212,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":7500,"byte_end":7503,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ Features that fulfill two or more criteria are preferred.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":7504,"byte_end":7565,"line_start":214,"line_end":214,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":7566,"byte_end":7569,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Re-exports of dependencies that reach version `1` will be discussed when it happens.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":7570,"byte_end":7658,"line_start":216,"line_end":216,"column_start":1,"column_end":89}}]},{"kind":"Mod","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::codecs::jpeg","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\mod.rs","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":1152},{"krate":0,"index":1155},{"krate":0,"index":1234},{"krate":0,"index":1443},{"krate":0,"index":1454}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":8259,"byte_end":8283,"line_start":235,"line_end":235,"column_start":5,"column_end":29}},{"value":"/ Decoding and Encoding of JPEG Images","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\mod.rs","byte_start":199840,"byte_end":199880,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\mod.rs","byte_start":199881,"byte_end":199884,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ JPEG (Joint Photographic Experts Group) is an image format that supports lossy compression.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\mod.rs","byte_start":199885,"byte_end":199980,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ This module implements the Baseline JPEG standard.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\mod.rs","byte_start":199981,"byte_end":200035,"line_start":4,"line_end":4,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\mod.rs","byte_start":200036,"byte_end":200039,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\mod.rs","byte_start":200040,"byte_end":200059,"line_start":6,"line_end":6,"column_start":1,"column_end":20}},{"value":"/ * <http://www.w3.org/Graphics/JPEG/itu-t81.pdf> - The JPEG specification","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\mod.rs","byte_start":200060,"byte_end":200136,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\mod.rs","byte_start":200137,"byte_end":200140,"line_start":8,"line_end":8,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":200623,"byte_end":200634,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"JpegDecoder","qualname":"::codecs::jpeg::decoder::JpegDecoder","value":"JpegDecoder {  }","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[{"value":"/ JPEG decoder","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":200595,"byte_end":200611,"line_start":12,"line_end":12,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":200813,"byte_end":200816,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<JpegDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Create a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":200740,"byte_end":200801,"line_start":19,"line_end":19,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":202011,"byte_end":202016,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"scale","qualname":"<JpegDecoder<R>>::scale","value":"pub fn scale(&mut Self, u16, u16) -> ImageResult<(u16, u16)>","parent":null,"children":[],"decl_id":null,"docs":" Configure the decoder to scale the image during decoding.","sig":null,"attributes":[{"value":"/ Configure the decoder to scale the image during decoding.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":201397,"byte_end":201458,"line_start":36,"line_end":36,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":201463,"byte_end":201466,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This efficiently scales the image by the smallest supported","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":201471,"byte_end":201534,"line_start":38,"line_end":38,"column_start":5,"column_end":68}},{"value":"/ scale factor that produces an image larger than or equal to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":201539,"byte_end":201602,"line_start":39,"line_end":39,"column_start":5,"column_end":68}},{"value":"/ the requested size in at least one axis. The currently","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":201607,"byte_end":201665,"line_start":40,"line_end":40,"column_start":5,"column_end":63}},{"value":"/ implemented scale factors are 1/8, 1/4, 1/2 and 1.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":201670,"byte_end":201724,"line_start":41,"line_end":41,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":201729,"byte_end":201732,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ To generate a thumbnail of an exact size, pass the desired","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":201737,"byte_end":201799,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/ size and then scale to the final size using a traditional","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":201804,"byte_end":201865,"line_start":44,"line_end":44,"column_start":5,"column_end":66}},{"value":"/ resampling algorithm.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":201870,"byte_end":201895,"line_start":45,"line_end":45,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":201900,"byte_end":201903,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The size of the image to be loaded, with the scale factor","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":201908,"byte_end":201969,"line_start":47,"line_end":47,"column_start":5,"column_end":66}},{"value":"/ applied, is returned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":201974,"byte_end":201999,"line_start":48,"line_end":48,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1210},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":202448,"byte_end":202458,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"JpegReader","qualname":"::codecs::jpeg::decoder::JpegReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[{"value":"/ Wrapper struct around a `Cursor<Vec<u8>>`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":202391,"byte_end":202436,"line_start":66,"line_end":66,"column_start":1,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3339},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247055,"byte_end":247071,"line_start":290,"line_end":290,"column_start":5,"column_end":21},"name":"PixelAspectRatio","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::PixelAspectRatio","value":"PixelDensityUnit::PixelAspectRatio","parent":{"krate":0,"index":3338},"children":[],"decl_id":null,"docs":" Represents the absence of a unit, the values indicate only a\n [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)\n","sig":null,"attributes":[{"value":"/ Represents the absence of a unit, the values indicate only a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":246907,"byte_end":246971,"line_start":288,"line_end":288,"column_start":5,"column_end":69}},{"value":"/ [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":246976,"byte_end":247050,"line_start":289,"line_end":289,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3341},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247112,"byte_end":247118,"line_start":293,"line_end":293,"column_start":5,"column_end":11},"name":"Inches","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::Inches","value":"PixelDensityUnit::Inches","parent":{"krate":0,"index":3338},"children":[],"decl_id":null,"docs":" Pixels per inch (2.54 cm)\n","sig":null,"attributes":[{"value":"/ Pixels per inch (2.54 cm)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247078,"byte_end":247107,"line_start":292,"line_end":292,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3343},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247155,"byte_end":247166,"line_start":296,"line_end":296,"column_start":5,"column_end":16},"name":"Centimeters","qualname":"::codecs::jpeg::encoder::PixelDensityUnit::Centimeters","value":"PixelDensityUnit::Centimeters","parent":{"krate":0,"index":3338},"children":[],"decl_id":null,"docs":" Pixels per centimeter\n","sig":null,"attributes":[{"value":"/ Pixels per centimeter","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247125,"byte_end":247150,"line_start":295,"line_end":295,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":3338},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":246884,"byte_end":246900,"line_start":287,"line_end":287,"column_start":10,"column_end":26},"name":"PixelDensityUnit","qualname":"::codecs::jpeg::encoder::PixelDensityUnit","value":"pub enum PixelDensityUnit { PixelAspectRatio, Inches, Centimeters, }","parent":null,"children":[{"krate":0,"index":3339},{"krate":0,"index":3341},{"krate":0,"index":3343}],"decl_id":null,"docs":" Represents a unit in which the density of an image is measured\n","sig":null,"attributes":[{"value":"/ Represents a unit in which the density of an image is measured","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":246763,"byte_end":246829,"line_start":285,"line_end":285,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":3356},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247511,"byte_end":247523,"line_start":309,"line_end":309,"column_start":12,"column_end":24},"name":"PixelDensity","qualname":"::codecs::jpeg::encoder::PixelDensity","value":"PixelDensity { density, unit }","parent":null,"children":[{"krate":0,"index":3357},{"krate":0,"index":3358}],"decl_id":null,"docs":" Represents the pixel density of an image","sig":null,"attributes":[{"value":"/ Represents the pixel density of an image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247171,"byte_end":247215,"line_start":299,"line_end":299,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247216,"byte_end":247219,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/ For example, a 300 DPI image is represented by:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247220,"byte_end":247271,"line_start":301,"line_end":301,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247272,"byte_end":247275,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247276,"byte_end":247287,"line_start":303,"line_end":303,"column_start":1,"column_end":12}},{"value":"/ use image::codecs::jpeg::*;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247288,"byte_end":247319,"line_start":304,"line_end":304,"column_start":1,"column_end":32}},{"value":"/ let hdpi = PixelDensity::dpi(300);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247320,"byte_end":247358,"line_start":305,"line_end":305,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(hdpi, PixelDensity {density: (300,300), unit: PixelDensityUnit::Inches})","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247359,"byte_end":247446,"line_start":306,"line_end":306,"column_start":1,"column_end":88}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247447,"byte_end":247454,"line_start":307,"line_end":307,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":3357},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247586,"byte_end":247593,"line_start":311,"line_end":311,"column_start":9,"column_end":16},"name":"density","qualname":"::codecs::jpeg::encoder::PixelDensity::density","value":"(u16, u16)","parent":{"krate":0,"index":3356},"children":[],"decl_id":null,"docs":" A couple of values for (Xdensity, Ydensity)\n","sig":null,"attributes":[{"value":"/ A couple of values for (Xdensity, Ydensity)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247530,"byte_end":247577,"line_start":310,"line_end":310,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3358},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247665,"byte_end":247669,"line_start":313,"line_end":313,"column_start":9,"column_end":13},"name":"unit","qualname":"::codecs::jpeg::encoder::PixelDensity::unit","value":"codecs::jpeg::encoder::PixelDensityUnit","parent":{"krate":0,"index":3356},"children":[],"decl_id":null,"docs":" The unit in which the density is measured\n","sig":null,"attributes":[{"value":"/ The unit in which the density is measured","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247611,"byte_end":247656,"line_start":312,"line_end":312,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247875,"byte_end":247878,"line_start":320,"line_end":320,"column_start":12,"column_end":15},"name":"dpi","qualname":"<PixelDensity>::dpi","value":"pub fn dpi(u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the most common pixel density type:\n the horizontal and the vertical density are equal,\n and measured in pixels per inch.\n","sig":null,"attributes":[{"value":"/ Creates the most common pixel density type:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247716,"byte_end":247763,"line_start":317,"line_end":317,"column_start":5,"column_end":52}},{"value":"/ the horizontal and the vertical density are equal,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247768,"byte_end":247822,"line_start":318,"line_end":318,"column_start":5,"column_end":59}},{"value":"/ and measured in pixels per inch.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247827,"byte_end":247863,"line_start":319,"line_end":319,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1371},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":248329,"byte_end":248340,"line_start":339,"line_end":339,"column_start":12,"column_end":23},"name":"JpegEncoder","qualname":"::codecs::jpeg::encoder::JpegEncoder","value":"JpegEncoder {  }","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1377},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1383},{"krate":0,"index":1385}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[{"value":"/ The representation of a JPEG encoder","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":248277,"byte_end":248317,"line_start":338,"line_end":338,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":248780,"byte_end":248783,"line_start":355,"line_end":355,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegEncoder<W>>::new","value":"pub fn new(W) -> JpegEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":248710,"byte_end":248768,"line_start":354,"line_end":354,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":249071,"byte_end":249087,"line_start":362,"line_end":362,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JpegEncoder<W>>::new_with_quality","value":"pub fn new_with_quality(W, u8) -> JpegEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```, and has","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":248866,"byte_end":248933,"line_start":359,"line_end":359,"column_start":5,"column_end":72}},{"value":"/ the quality parameter ```quality``` with a value in the range 1-100","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":248938,"byte_end":249009,"line_start":360,"line_end":360,"column_start":5,"column_end":76}},{"value":"/ where 1 is the worst and 100 is the best.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":249014,"byte_end":249059,"line_start":361,"line_end":361,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":251271,"byte_end":251288,"line_start":430,"line_end":430,"column_start":12,"column_end":29},"name":"set_pixel_density","qualname":"<JpegEncoder<W>>::set_pixel_density","value":"pub fn set_pixel_density(&mut Self, PixelDensity)","parent":null,"children":[],"decl_id":null,"docs":" Set the pixel density of the images the encoder will encode.\n If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,\n and no DPI information will be stored in the image.\n","sig":null,"attributes":[{"value":"/ Set the pixel density of the images the encoder will encode.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":251039,"byte_end":251103,"line_start":427,"line_end":427,"column_start":5,"column_end":69}},{"value":"/ If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":251108,"byte_end":251199,"line_start":428,"line_end":428,"column_start":5,"column_end":96}},{"value":"/ and no DPI information will be stored in the image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":251204,"byte_end":251259,"line_start":429,"line_end":429,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":251620,"byte_end":251626,"line_start":439,"line_end":439,"column_start":12,"column_end":18},"name":"encode","qualname":"<JpegEncoder<W>>::encode","value":"pub fn encode(&mut Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image stored in the raw byte buffer ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[{"value":"/ Encodes the image stored in the raw byte buffer ```image```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":251386,"byte_end":251449,"line_start":434,"line_end":434,"column_start":5,"column_end":68}},{"value":"/ that has dimensions ```width``` and ```height```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":251454,"byte_end":251506,"line_start":435,"line_end":435,"column_start":5,"column_end":57}},{"value":"/ and ```ColorType``` ```c```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":251511,"byte_end":251542,"line_start":436,"line_end":436,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":251547,"byte_end":251550,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":251555,"byte_end":251608,"line_start":438,"line_end":438,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":253457,"byte_end":253469,"line_start":485,"line_end":485,"column_start":12,"column_end":24},"name":"encode_image","qualname":"<JpegEncoder<W>>::encode_image","value":"pub fn encode_image<I: GenericImageView>(&mut Self, &I) -> ImageResult<()>\nwhere I::Pixel: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Encodes the given image.","sig":null,"attributes":[{"value":"/ Encodes the given image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":252929,"byte_end":252957,"line_start":476,"line_end":476,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":252962,"byte_end":252965,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ As a special feature this does not require the whole image to be present in memory at the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":252970,"byte_end":253063,"line_start":478,"line_end":478,"column_start":5,"column_end":98}},{"value":"/ same time such that it may be computed on the fly, which is why this method exists on this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":253068,"byte_end":253162,"line_start":479,"line_end":479,"column_start":5,"column_end":99}},{"value":"/ encoder but not on others. Instead the encoder will iterate over 8-by-8 blocks of pixels at","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":253167,"byte_end":253262,"line_start":480,"line_end":480,"column_start":5,"column_end":100}},{"value":"/ a time, inspecting each pixel exactly once. You can rely on this behaviour when calling","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":253267,"byte_end":253358,"line_start":481,"line_end":481,"column_start":5,"column_end":96}},{"value":"/ this method.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":253363,"byte_end":253379,"line_start":482,"line_end":482,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":253384,"byte_end":253387,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ The Image in encoded with subsampling ratio 4:2:2","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":253392,"byte_end":253445,"line_start":484,"line_end":484,"column_start":5,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1472},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::codecs::png","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1483},{"krate":0,"index":1486},{"krate":0,"index":1489},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1503},{"krate":0,"index":1506},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1529},{"krate":0,"index":1532},{"krate":0,"index":1535},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1554},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":1564},{"krate":0,"index":1567},{"krate":0,"index":1570},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1585},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1595},{"krate":0,"index":1598},{"krate":0,"index":1602},{"krate":0,"index":1606},{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1632},{"krate":0,"index":1640},{"krate":0,"index":1646},{"krate":0,"index":1658},{"krate":0,"index":3371},{"krate":0,"index":3382},{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3393},{"krate":0,"index":3406},{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3411},{"krate":0,"index":3412},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3417},{"krate":0,"index":3421},{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3429},{"krate":0,"index":3430},{"krate":0,"index":1663},{"krate":0,"index":1671},{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1693},{"krate":0,"index":1695}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":8392,"byte_end":8415,"line_start":240,"line_end":240,"column_start":5,"column_end":28}},{"value":"/ Decoding and Encoding of PNG Images","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":280511,"byte_end":280550,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":280551,"byte_end":280554,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ PNG (Portable Network Graphics) is an image format that supports lossless compression.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":280555,"byte_end":280645,"line_start":3,"line_end":3,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":280646,"byte_end":280649,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Related Links","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":280650,"byte_end":280669,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"/ * <http://www.w3.org/TR/PNG/> - The PNG Specification","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":280670,"byte_end":280727,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":280728,"byte_end":280731,"line_start":7,"line_end":7,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1590},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":281725,"byte_end":281734,"line_start":34,"line_end":34,"column_start":12,"column_end":21},"name":"PngReader","qualname":"::codecs::png::PngReader","value":"PngReader {  }","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594}],"decl_id":null,"docs":" Png Reader","sig":null,"attributes":[{"value":"/ Png Reader","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":281535,"byte_end":281549,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":281550,"byte_end":281553,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This reader will try to read the png one row at a time,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":281554,"byte_end":281613,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ however for interlaced png files this is not possible and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":281614,"byte_end":281675,"line_start":32,"line_end":32,"column_start":1,"column_end":62}},{"value":"/ these are therefore read at once.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":281676,"byte_end":281713,"line_start":33,"line_end":33,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1602},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":283939,"byte_end":283949,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"PngDecoder","qualname":"::codecs::png::PngDecoder","value":"PngDecoder {  }","parent":null,"children":[{"krate":0,"index":1604},{"krate":0,"index":1605}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[{"value":"/ PNG decoder","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":283912,"byte_end":283927,"line_start":111,"line_end":111,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":284127,"byte_end":284130,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<PngDecoder<R>>::new","value":"pub fn new(R) -> ImageResult<PngDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[{"value":"/ Creates a new decoder that decodes from the stream ```r```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":284053,"byte_end":284115,"line_start":118,"line_end":118,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":288069,"byte_end":288073,"line_start":197,"line_end":197,"column_start":12,"column_end":16},"name":"apng","qualname":"<PngDecoder<R>>::apng","value":"pub fn apng(Self) -> ApngDecoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Turn this into an iterator over the animation frames.","sig":null,"attributes":[{"value":"/ Turn this into an iterator over the animation frames.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":287422,"byte_end":287479,"line_start":187,"line_end":187,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":287484,"byte_end":287487,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Reading the complete animation requires more memory than reading the data from the IDAT","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":287492,"byte_end":287583,"line_start":189,"line_end":189,"column_start":5,"column_end":96}},{"value":"/ frame–multiple frame buffers need to be reserved at the same time. We further do not","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":287588,"byte_end":287678,"line_start":190,"line_end":190,"column_start":5,"column_end":93}},{"value":"/ support compositing 16-bit colors. In any case this would be lossy as the interface of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":287683,"byte_end":287773,"line_start":191,"line_end":191,"column_start":5,"column_end":95}},{"value":"/ animation decoders does not support 16-bit colors.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":287778,"byte_end":287832,"line_start":192,"line_end":192,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":287837,"byte_end":287840,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If something is not supported or a limit is violated then the decoding step that requires","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":287845,"byte_end":287938,"line_start":194,"line_end":194,"column_start":5,"column_end":98}},{"value":"/ them will fail and an error will be returned instead of the frame. No further frames will","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":287943,"byte_end":288036,"line_start":195,"line_end":195,"column_start":5,"column_end":98}},{"value":"/ be returned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":288041,"byte_end":288057,"line_start":196,"line_end":196,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":288496,"byte_end":288503,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"is_apng","qualname":"<PngDecoder<R>>::is_apng","value":"pub fn is_apng(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the image contains an animation.","sig":null,"attributes":[{"value":"/ Returns if the image contains an animation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":288142,"byte_end":288189,"line_start":201,"line_end":201,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":288194,"byte_end":288197,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Note that the file itself decides if the default image is considered to be part of the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":288202,"byte_end":288292,"line_start":203,"line_end":203,"column_start":5,"column_end":95}},{"value":"/ animation. When it is not the common interpretation is to use it as a thumbnail.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":288297,"byte_end":288381,"line_start":204,"line_end":204,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":288386,"byte_end":288389,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ If a non-animated image is converted into an `ApngDecoder` then its iterator is empty.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":288394,"byte_end":288484,"line_start":206,"line_end":206,"column_start":5,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":1632},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":290472,"byte_end":290483,"line_start":269,"line_end":269,"column_start":12,"column_end":23},"name":"ApngDecoder","qualname":"::codecs::png::ApngDecoder","value":"ApngDecoder {  }","parent":null,"children":[{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639}],"decl_id":null,"docs":" An [`AnimationDecoder`] adapter of [`PngDecoder`].","sig":null,"attributes":[{"value":"/ An [`AnimationDecoder`] adapter of [`PngDecoder`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":290186,"byte_end":290240,"line_start":262,"line_end":262,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":290241,"byte_end":290244,"line_start":263,"line_end":263,"column_start":1,"column_end":4}},{"value":"/ See [`PngDecoder::apng`] for more information.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":290245,"byte_end":290295,"line_start":264,"line_end":264,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":290296,"byte_end":290299,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ [`AnimationDecoder`]: ../trait.AnimationDecoder.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":290300,"byte_end":290356,"line_start":266,"line_end":266,"column_start":1,"column_end":57}},{"value":"/ [`PngDecoder`]: struct.PngDecoder.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":290357,"byte_end":290399,"line_start":267,"line_end":267,"column_start":1,"column_end":43}},{"value":"/ [`PngDecoder::apng`]: struct.PngDecoder.html#method.apng","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":290400,"byte_end":290460,"line_start":268,"line_end":268,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":1658},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":297799,"byte_end":297809,"line_start":463,"line_end":463,"column_start":12,"column_end":22},"name":"PngEncoder","qualname":"::codecs::png::PngEncoder","value":"PngEncoder {  }","parent":null,"children":[{"krate":0,"index":1660},{"krate":0,"index":1661},{"krate":0,"index":1662}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[{"value":"/ PNG encoder","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":297772,"byte_end":297787,"line_start":462,"line_end":462,"column_start":1,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3372},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298092,"byte_end":298099,"line_start":474,"line_end":474,"column_start":5,"column_end":12},"name":"Default","qualname":"::codecs::png::CompressionType::Default","value":"CompressionType::Default","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" Default compression level\n","sig":null,"attributes":[{"value":"/ Default compression level","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298058,"byte_end":298087,"line_start":473,"line_end":473,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3374},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298139,"byte_end":298143,"line_start":476,"line_end":476,"column_start":5,"column_end":9},"name":"Fast","qualname":"::codecs::png::CompressionType::Fast","value":"CompressionType::Fast","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" Fast, minimal compression\n","sig":null,"attributes":[{"value":"/ Fast, minimal compression","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298105,"byte_end":298134,"line_start":475,"line_end":475,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3376},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298180,"byte_end":298184,"line_start":478,"line_end":478,"column_start":5,"column_end":9},"name":"Best","qualname":"::codecs::png::CompressionType::Best","value":"CompressionType::Best","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" High compression level\n","sig":null,"attributes":[{"value":"/ High compression level","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298149,"byte_end":298175,"line_start":477,"line_end":477,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3378},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298225,"byte_end":298232,"line_start":480,"line_end":480,"column_start":5,"column_end":12},"name":"Huffman","qualname":"::codecs::png::CompressionType::Huffman","value":"CompressionType::Huffman","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" Huffman coding compression\n","sig":null,"attributes":[{"value":"/ Huffman coding compression","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298190,"byte_end":298220,"line_start":479,"line_end":479,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3380},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298278,"byte_end":298281,"line_start":482,"line_end":482,"column_start":5,"column_end":8},"name":"Rle","qualname":"::codecs::png::CompressionType::Rle","value":"CompressionType::Rle","parent":{"krate":0,"index":3371},"children":[],"decl_id":null,"docs":" Run-length encoding compression\n","sig":null,"attributes":[{"value":"/ Run-length encoding compression","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298238,"byte_end":298273,"line_start":481,"line_end":481,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":3371},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298036,"byte_end":298051,"line_start":472,"line_end":472,"column_start":10,"column_end":25},"name":"CompressionType","qualname":"::codecs::png::CompressionType","value":"pub enum CompressionType { Default, Fast, Best, Huffman, Rle, }","parent":null,"children":[{"krate":0,"index":3372},{"krate":0,"index":3374},{"krate":0,"index":3376},{"krate":0,"index":3378},{"krate":0,"index":3380}],"decl_id":null,"docs":" Compression level of a PNG encoder. The default setting is `Fast`.\n","sig":null,"attributes":[{"value":"/ Compression level of a PNG encoder. The default setting is `Fast`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":297893,"byte_end":297963,"line_start":469,"line_end":469,"column_start":1,"column_end":71}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298009,"byte_end":298026,"line_start":471,"line_end":471,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3394},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298595,"byte_end":298603,"line_start":493,"line_end":493,"column_start":5,"column_end":13},"name":"NoFilter","qualname":"::codecs::png::FilterType::NoFilter","value":"FilterType::NoFilter","parent":{"krate":0,"index":3393},"children":[],"decl_id":null,"docs":" No processing done, best used for low bit depth grayscale or data with a\n low color count\n","sig":null,"attributes":[{"value":"/ No processing done, best used for low bit depth grayscale or data with a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298490,"byte_end":298566,"line_start":491,"line_end":491,"column_start":5,"column_end":81}},{"value":"/ low color count","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298571,"byte_end":298590,"line_start":492,"line_end":492,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3396},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298670,"byte_end":298673,"line_start":495,"line_end":495,"column_start":5,"column_end":8},"name":"Sub","qualname":"::codecs::png::FilterType::Sub","value":"FilterType::Sub","parent":{"krate":0,"index":3393},"children":[],"decl_id":null,"docs":" Filters based on previous pixel in the same scanline\n","sig":null,"attributes":[{"value":"/ Filters based on previous pixel in the same scanline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298609,"byte_end":298665,"line_start":494,"line_end":494,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3398},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298723,"byte_end":298725,"line_start":497,"line_end":497,"column_start":5,"column_end":7},"name":"Up","qualname":"::codecs::png::FilterType::Up","value":"FilterType::Up","parent":{"krate":0,"index":3393},"children":[],"decl_id":null,"docs":" Filters based on the scanline above\n","sig":null,"attributes":[{"value":"/ Filters based on the scanline above","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298679,"byte_end":298718,"line_start":496,"line_end":496,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3400},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298802,"byte_end":298805,"line_start":499,"line_end":499,"column_start":5,"column_end":8},"name":"Avg","qualname":"::codecs::png::FilterType::Avg","value":"FilterType::Avg","parent":{"krate":0,"index":3393},"children":[],"decl_id":null,"docs":" Filters based on the average of left and right neighbor pixels\n","sig":null,"attributes":[{"value":"/ Filters based on the average of left and right neighbor pixels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298731,"byte_end":298797,"line_start":498,"line_end":498,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3402},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298892,"byte_end":298897,"line_start":501,"line_end":501,"column_start":5,"column_end":10},"name":"Paeth","qualname":"::codecs::png::FilterType::Paeth","value":"FilterType::Paeth","parent":{"krate":0,"index":3393},"children":[],"decl_id":null,"docs":" Algorithm that takes into account the left, upper left, and above pixels\n","sig":null,"attributes":[{"value":"/ Algorithm that takes into account the left, upper left, and above pixels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298811,"byte_end":298887,"line_start":500,"line_end":500,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3404},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":299037,"byte_end":299045,"line_start":504,"line_end":504,"column_start":5,"column_end":13},"name":"Adaptive","qualname":"::codecs::png::FilterType::Adaptive","value":"FilterType::Adaptive","parent":{"krate":0,"index":3393},"children":[],"decl_id":null,"docs":" Uses a heuristic to select one of the preceding filters for each\n scanline rather than one filter for the entire image\n","sig":null,"attributes":[{"value":"/ Uses a heuristic to select one of the preceding filters for each","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298903,"byte_end":298971,"line_start":502,"line_end":502,"column_start":5,"column_end":73}},{"value":"/ scanline rather than one filter for the entire image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298976,"byte_end":299032,"line_start":503,"line_end":503,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":3393},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298473,"byte_end":298483,"line_start":490,"line_end":490,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::codecs::png::FilterType","value":"pub enum FilterType { NoFilter, Sub, Up, Avg, Paeth, Adaptive, }","parent":null,"children":[{"krate":0,"index":3394},{"krate":0,"index":3396},{"krate":0,"index":3398},{"krate":0,"index":3400},{"krate":0,"index":3402},{"krate":0,"index":3404}],"decl_id":null,"docs":" Filter algorithms used to process image data to improve compression.","sig":null,"attributes":[{"value":"/ Filter algorithms used to process image data to improve compression.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298286,"byte_end":298358,"line_start":485,"line_end":485,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298359,"byte_end":298362,"line_start":486,"line_end":486,"column_start":1,"column_end":4}},{"value":"/ The default filter is `Adaptive`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298363,"byte_end":298400,"line_start":487,"line_end":487,"column_start":1,"column_end":38}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":298446,"byte_end":298463,"line_start":489,"line_end":489,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":299275,"byte_end":299278,"line_start":515,"line_end":515,"column_start":12,"column_end":15},"name":"new","qualname":"<PngEncoder<W>>::new","value":"pub fn new(W) -> PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to ```w```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":299205,"byte_end":299263,"line_start":514,"line_end":514,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1666},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":300279,"byte_end":300295,"line_start":535,"line_end":535,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<PngEncoder<W>>::new_with_quality","value":"pub fn new_with_quality(W, CompressionType, FilterType) -> PngEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w` with `CompressionType` `compression` and\n `FilterType` `filter`.","sig":null,"attributes":[{"value":"/ Create a new encoder that writes its output to `w` with `CompressionType` `compression` and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":299457,"byte_end":299552,"line_start":523,"line_end":523,"column_start":5,"column_end":100}},{"value":"/ `FilterType` `filter`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":299557,"byte_end":299583,"line_start":524,"line_end":524,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":299588,"byte_end":299591,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ It is best to view the options as a _hint_ to the implementation on the smallest or fastest","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":299596,"byte_end":299691,"line_start":526,"line_end":526,"column_start":5,"column_end":100}},{"value":"/ option for encoding a particular image. That is, using options that map directly to a PNG","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":299696,"byte_end":299789,"line_start":527,"line_end":527,"column_start":5,"column_end":98}},{"value":"/ image parameter will use this parameter where possible. But variants that have no direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":299794,"byte_end":299886,"line_start":528,"line_end":528,"column_start":5,"column_end":97}},{"value":"/ mapping may be interpreted differently in minor versions. The exact output is expressly","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":299891,"byte_end":299982,"line_start":529,"line_end":529,"column_start":5,"column_end":96}},{"value":"/ __not__ part the SemVer stability guarantee.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":299987,"byte_end":300035,"line_start":530,"line_end":530,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":300040,"byte_end":300043,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Note that it is not optimal to use a single filter type, so an adaptive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":300048,"byte_end":300123,"line_start":532,"line_end":532,"column_start":5,"column_end":80}},{"value":"/ filter type is selected as the default. The filter which best minimizes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":300128,"byte_end":300203,"line_start":533,"line_end":533,"column_start":5,"column_end":80}},{"value":"/ file size may change with the type of compression used.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":300208,"byte_end":300267,"line_start":534,"line_end":534,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":300775,"byte_end":300781,"line_start":551,"line_end":551,"column_start":12,"column_end":18},"name":"encode","qualname":"<PngEncoder<W>>::encode","value":"pub fn encode(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.","sig":null,"attributes":[{"value":"/ Encodes the image `data` that has dimensions `width` and `height` and `ColorType` `c`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":300504,"byte_end":300594,"line_start":547,"line_end":547,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":300599,"byte_end":300602,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Expects data in big endian.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":300607,"byte_end":300638,"line_start":549,"line_end":549,"column_start":5,"column_end":36}},{"value":"deprecated =\n\"Use `PngEncoder::write_image` instead. Beware that `write_image` has a different endianness convention\"","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":300643,"byte_end":300763,"line_start":550,"line_end":550,"column_start":5,"column_end":125}}]},{"kind":"Struct","id":{"krate":0,"index":1712},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":308782,"byte_end":308788,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":1714}],"decl_id":null,"docs":" An implementation dependent iterator, reading the frames as requested\n","sig":null,"attributes":[{"value":"/ An implementation dependent iterator, reading the frames as requested","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":308697,"byte_end":308770,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":308969,"byte_end":308972,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"pub fn new(Box<dyn Iterator<Item = ImageResult<Frame>> + 'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Frames` from an implementation specific iterator.\n","sig":null,"attributes":[{"value":"/ Creates a new `Frames` from an implementation specific iterator.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":308889,"byte_end":308957,"line_start":15,"line_end":15,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":309364,"byte_end":309378,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"collect_frames","qualname":"<Frames>::collect_frames","value":"pub fn collect_frames(Self) -> ImageResult<Vec<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Steps through the iterator from the current frame until the end and pushes each frame into\n a `Vec`.\n If en error is encountered that error is returned instead.","sig":null,"attributes":[{"value":"/ Steps through the iterator from the current frame until the end and pushes each frame into","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":309083,"byte_end":309177,"line_start":20,"line_end":20,"column_start":5,"column_end":99}},{"value":"/ a `Vec`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":309182,"byte_end":309194,"line_start":21,"line_end":21,"column_start":5,"column_end":17}},{"value":"/ If en error is encountered that error is returned instead.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":309199,"byte_end":309261,"line_start":22,"line_end":22,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":309266,"byte_end":309269,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Note: This is equivalent to `Frames::collect::<ImageResult<Vec<Frame>>>()`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":309274,"byte_end":309352,"line_start":24,"line_end":24,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":3433},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":309667,"byte_end":309672,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[{"value":"/ A single animation frame","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":309610,"byte_end":309638,"line_start":37,"line_end":37,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":3440},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":309954,"byte_end":309959,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Delay","qualname":"::animation::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":3441}],"decl_id":null,"docs":" The delay of a frame relative to the previous one.\n","sig":null,"attributes":[{"value":"/ The delay of a frame relative to the previous one.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":309831,"byte_end":309885,"line_start":49,"line_end":49,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310061,"byte_end":310064,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"pub fn new(RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame without any delay.\n","sig":null,"attributes":[{"value":"/ Contructs a new frame without any delay.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310005,"byte_end":310049,"line_start":56,"line_end":56,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310292,"byte_end":310302,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"pub fn from_parts(RgbaImage, u32, u32, Delay) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[{"value":"/ Contructs a new frame","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310255,"byte_end":310280,"line_start":66,"line_end":66,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310514,"byte_end":310519,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"pub fn delay(&Self) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[{"value":"/ Delay of this frame","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310479,"byte_end":310502,"line_start":76,"line_end":76,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310608,"byte_end":310614,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"pub fn buffer(&Self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310568,"byte_end":310596,"line_start":81,"line_end":81,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1728},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310716,"byte_end":310726,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"buffer_mut","qualname":"<Frame>::buffer_mut","value":"pub fn buffer_mut(&mut Self) -> &mut RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable image buffer\n","sig":null,"attributes":[{"value":"/ Returns a mutable image buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310670,"byte_end":310704,"line_start":86,"line_end":86,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310834,"byte_end":310845,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"pub fn into_buffer(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[{"value":"/ Returns the image buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310794,"byte_end":310822,"line_start":91,"line_end":91,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1730},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310934,"byte_end":310938,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"pub fn left(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[{"value":"/ Returns the x offset","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310898,"byte_end":310922,"line_start":96,"line_end":96,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311020,"byte_end":311023,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"pub fn top(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[{"value":"/ Returns the y offset","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":310984,"byte_end":311008,"line_start":101,"line_end":101,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311288,"byte_end":311307,"line_start":116,"line_end":116,"column_start":12,"column_end":31},"name":"from_numer_denom_ms","qualname":"<Delay>::from_numer_denom_ms","value":"pub fn from_numer_denom_ms(u32, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a delay from a ratio of milliseconds.","sig":null,"attributes":[{"value":"/ Create a delay from a ratio of milliseconds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311083,"byte_end":311131,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311136,"byte_end":311139,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311144,"byte_end":311158,"line_start":110,"line_end":110,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311163,"byte_end":311166,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311171,"byte_end":311178,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"/ use image::Delay;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311183,"byte_end":311204,"line_start":113,"line_end":113,"column_start":5,"column_end":26}},{"value":"/ let delay_10ms = Delay::from_numer_denom_ms(10, 1);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311209,"byte_end":311264,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311269,"byte_end":311276,"line_start":115,"line_end":115,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1734},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311971,"byte_end":311995,"line_start":136,"line_end":136,"column_start":12,"column_end":36},"name":"from_saturating_duration","qualname":"<Delay>::from_saturating_duration","value":"pub fn from_saturating_duration(Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert from a duration, clamped between 0 and an implemented defined maximum.","sig":null,"attributes":[{"value":"/ Convert from a duration, clamped between 0 and an implemented defined maximum.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311448,"byte_end":311530,"line_start":122,"line_end":122,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311535,"byte_end":311538,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ The maximum is *at least* `i32::MAX` milliseconds. It should be noted that the accuracy of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311543,"byte_end":311637,"line_start":124,"line_end":124,"column_start":5,"column_end":99}},{"value":"/ the result may be relative and very large delays have a coarse resolution.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311642,"byte_end":311720,"line_start":125,"line_end":125,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311725,"byte_end":311728,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311733,"byte_end":311747,"line_start":127,"line_end":127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311752,"byte_end":311755,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311760,"byte_end":311767,"line_start":129,"line_end":129,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311772,"byte_end":311800,"line_start":130,"line_end":130,"column_start":5,"column_end":33}},{"value":"/ use image::Delay;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311805,"byte_end":311826,"line_start":131,"line_end":131,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311831,"byte_end":311834,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let duration = Duration::from_millis(20);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311839,"byte_end":311884,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/ let delay = Delay::from_saturating_duration(duration);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311889,"byte_end":311947,"line_start":134,"line_end":134,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311952,"byte_end":311959,"line_start":135,"line_end":135,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":313175,"byte_end":313189,"line_start":165,"line_end":165,"column_start":12,"column_end":26},"name":"numer_denom_ms","qualname":"<Delay>::numer_denom_ms","value":"pub fn numer_denom_ms(Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The numerator and denominator of the delay in milliseconds.","sig":null,"attributes":[{"value":"/ The numerator and denominator of the delay in milliseconds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":312949,"byte_end":313012,"line_start":161,"line_end":161,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":313017,"byte_end":313020,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ This is guaranteed to be an exact conversion if the `Delay` was previously created with the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":313025,"byte_end":313120,"line_start":163,"line_end":163,"column_start":5,"column_end":100}},{"value":"/ `from_numer_denom_ms` constructor.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":313125,"byte_end":313163,"line_start":164,"line_end":164,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1850},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":320666,"byte_end":320672,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer_::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":1853}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over pixel refs.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":320626,"byte_end":320654,"line_start":18,"line_end":18,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":1875},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":321841,"byte_end":321850,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer_::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":1878}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[{"value":"/ Iterate over mutable pixel refs.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":321793,"byte_end":321829,"line_start":76,"line_end":76,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":323093,"byte_end":323097,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Rows","qualname":"::buffer_::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":1900}],"decl_id":null,"docs":" Iterate over rows of an image","sig":null,"attributes":[{"value":"/ Iterate over rows of an image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":322887,"byte_end":322920,"line_start":128,"line_end":128,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":322921,"byte_end":322924,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows`]. See its document for details.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":322925,"byte_end":323011,"line_start":130,"line_end":130,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":323012,"byte_end":323015,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows`]: ../struct.ImageBuffer.html#method.rows","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":323016,"byte_end":323081,"line_start":132,"line_end":132,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1924},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":325674,"byte_end":325681,"line_start":225,"line_end":225,"column_start":12,"column_end":19},"name":"RowsMut","qualname":"::buffer_::RowsMut","value":"RowsMut {  }","parent":null,"children":[{"krate":0,"index":1927}],"decl_id":null,"docs":" Iterate over mutable rows of an image","sig":null,"attributes":[{"value":"/ Iterate over mutable rows of an image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":325448,"byte_end":325489,"line_start":220,"line_end":220,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":325490,"byte_end":325493,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ This iterator is created with [`ImageBuffer::rows_mut`]. See its document for details.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":325494,"byte_end":325584,"line_start":222,"line_end":222,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":325585,"byte_end":325588,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ [`ImageBuffer::rows_mut`]: ../struct.ImageBuffer.html#method.rows_mut","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":325589,"byte_end":325662,"line_start":224,"line_end":224,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1948},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":328003,"byte_end":328018,"line_start":305,"line_end":305,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer_::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":327954,"byte_end":327991,"line_start":304,"line_end":304,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1971},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":329324,"byte_end":329337,"line_start":366,"line_end":366,"column_start":12,"column_end":25},"name":"EnumerateRows","qualname":"::buffer_::EnumerateRows","value":"EnumerateRows {  }","parent":null,"children":[{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1976}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":329277,"byte_end":329312,"line_start":365,"line_end":365,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":330709,"byte_end":330727,"line_start":431,"line_end":431,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer_::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the pixels of an image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":330660,"byte_end":330697,"line_start":430,"line_end":430,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2013},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":331870,"byte_end":331886,"line_start":483,"line_end":483,"column_start":12,"column_end":28},"name":"EnumerateRowsMut","qualname":"::buffer_::EnumerateRowsMut","value":"EnumerateRowsMut {  }","parent":null,"children":[{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[{"value":"/ Enumerate the rows of an image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":331823,"byte_end":331858,"line_start":482,"line_end":482,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3456},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335436,"byte_end":335447,"line_start":607,"line_end":607,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer_::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462}],"decl_id":null,"docs":" Generic image buffer","sig":null,"attributes":[{"value":"/ Generic image buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333055,"byte_end":333079,"line_start":538,"line_end":538,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333080,"byte_end":333083,"line_start":539,"line_end":539,"column_start":1,"column_end":4}},{"value":"/ This is an image parameterised by its Pixel types, represented by a width and height and a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333084,"byte_end":333178,"line_start":540,"line_end":540,"column_start":1,"column_end":95}},{"value":"/ container of channel data. It provides direct access to its pixels and implements the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333179,"byte_end":333268,"line_start":541,"line_end":541,"column_start":1,"column_end":90}},{"value":"/ [`GenericImageView`] and [`GenericImage`] traits. In many ways, this is the standard buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333269,"byte_end":333364,"line_start":542,"line_end":542,"column_start":1,"column_end":96}},{"value":"/ implementing those traits. Using this concrete type instead of a generic type parameter has","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333365,"byte_end":333460,"line_start":543,"line_end":543,"column_start":1,"column_end":96}},{"value":"/ been shown to improve performance.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333461,"byte_end":333499,"line_start":544,"line_end":544,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333500,"byte_end":333503,"line_start":545,"line_end":545,"column_start":1,"column_end":4}},{"value":"/ The crate defines a few type aliases with regularly used pixel types for your convenience, such","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333504,"byte_end":333603,"line_start":546,"line_end":546,"column_start":1,"column_end":100}},{"value":"/ as `RgbImage`, `GrayImage` etc.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333604,"byte_end":333639,"line_start":547,"line_end":547,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333640,"byte_end":333643,"line_start":548,"line_end":548,"column_start":1,"column_end":4}},{"value":"/ [`GenericImage`]: trait.GenericImage.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333644,"byte_end":333689,"line_start":549,"line_end":549,"column_start":1,"column_end":46}},{"value":"/ [`GenericImageView`]: trait.GenericImageView.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333690,"byte_end":333743,"line_start":550,"line_end":550,"column_start":1,"column_end":54}},{"value":"/ [`RgbImage`]: type.RgbImage.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333744,"byte_end":333780,"line_start":551,"line_end":551,"column_start":1,"column_end":37}},{"value":"/ [`GrayImage`]: type.GrayImage.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333781,"byte_end":333819,"line_start":552,"line_end":552,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333820,"byte_end":333823,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ To convert between images of different Pixel types use [`DynamicImage`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333824,"byte_end":333900,"line_start":554,"line_end":554,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333901,"byte_end":333904,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"/ You can retrieve a complete description of the buffer's layout and contents through","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333905,"byte_end":333992,"line_start":556,"line_end":556,"column_start":1,"column_end":88}},{"value":"/ [`as_flat_samples`] and [`as_flat_samples_mut`]. This can be handy to also use the contents in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":333993,"byte_end":334091,"line_start":557,"line_end":557,"column_start":1,"column_end":99}},{"value":"/ a foreign language, map it as a GPU host buffer or other similar tasks.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334092,"byte_end":334167,"line_start":558,"line_end":558,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334168,"byte_end":334171,"line_start":559,"line_end":559,"column_start":1,"column_end":4}},{"value":"/ [`DynamicImage`]: enum.DynamicImage.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334172,"byte_end":334216,"line_start":560,"line_end":560,"column_start":1,"column_end":45}},{"value":"/ [`as_flat_samples`]: #method.as_flat_samples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334217,"byte_end":334265,"line_start":561,"line_end":561,"column_start":1,"column_end":49}},{"value":"/ [`as_flat_samples_mut`]: #method.as_flat_samples_mut","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334266,"byte_end":334322,"line_start":562,"line_end":562,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334323,"byte_end":334326,"line_start":563,"line_end":563,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334327,"byte_end":334342,"line_start":564,"line_end":564,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334343,"byte_end":334346,"line_start":565,"line_end":565,"column_start":1,"column_end":4}},{"value":"/ Create a simple canvas and paint a small cross.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334347,"byte_end":334398,"line_start":566,"line_end":566,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334399,"byte_end":334402,"line_start":567,"line_end":567,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334403,"byte_end":334410,"line_start":568,"line_end":568,"column_start":1,"column_end":8}},{"value":"/ use image::{RgbImage, Rgb};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334411,"byte_end":334442,"line_start":569,"line_end":569,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334443,"byte_end":334446,"line_start":570,"line_end":570,"column_start":1,"column_end":4}},{"value":"/ let mut img = RgbImage::new(32, 32);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334447,"byte_end":334487,"line_start":571,"line_end":571,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334488,"byte_end":334491,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ for x in 15..=17 {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334492,"byte_end":334514,"line_start":573,"line_end":573,"column_start":1,"column_end":23}},{"value":"/     for y in 8..24 {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334515,"byte_end":334539,"line_start":574,"line_end":574,"column_start":1,"column_end":25}},{"value":"/         img.put_pixel(x, y, Rgb([255, 0, 0]));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334540,"byte_end":334590,"line_start":575,"line_end":575,"column_start":1,"column_end":51}},{"value":"/         img.put_pixel(y, x, Rgb([255, 0, 0]));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334591,"byte_end":334641,"line_start":576,"line_end":576,"column_start":1,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334642,"byte_end":334651,"line_start":577,"line_end":577,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334652,"byte_end":334657,"line_start":578,"line_end":578,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334658,"byte_end":334665,"line_start":579,"line_end":579,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334666,"byte_end":334669,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ Overlays an image on top of a larger background raster.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334670,"byte_end":334729,"line_start":581,"line_end":581,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334730,"byte_end":334733,"line_start":582,"line_end":582,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334734,"byte_end":334747,"line_start":583,"line_end":583,"column_start":1,"column_end":14}},{"value":"/ use image::{GenericImage, GenericImageView, ImageBuffer, open};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334748,"byte_end":334815,"line_start":584,"line_end":584,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334816,"byte_end":334819,"line_start":585,"line_end":585,"column_start":1,"column_end":4}},{"value":"/ let on_top = open(\"path/to/some.png\").unwrap().into_rgb8();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334820,"byte_end":334883,"line_start":586,"line_end":586,"column_start":1,"column_end":64}},{"value":"/ let mut img = ImageBuffer::from_fn(512, 512, |x, y| {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334884,"byte_end":334941,"line_start":587,"line_end":587,"column_start":1,"column_end":58}},{"value":"/     if (x + y) % 2 == 0 {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334942,"byte_end":334971,"line_start":588,"line_end":588,"column_start":1,"column_end":30}},{"value":"/         image::Rgb([0, 0, 0])","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":334972,"byte_end":335005,"line_start":589,"line_end":589,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335006,"byte_end":335022,"line_start":590,"line_end":590,"column_start":1,"column_end":17}},{"value":"/         image::Rgb([255, 255, 255])","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335023,"byte_end":335062,"line_start":591,"line_end":591,"column_start":1,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335063,"byte_end":335072,"line_start":592,"line_end":592,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335073,"byte_end":335080,"line_start":593,"line_end":593,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335081,"byte_end":335084,"line_start":594,"line_end":594,"column_start":1,"column_end":4}},{"value":"/ image::imageops::overlay(&mut img, &on_top, 128, 128);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335085,"byte_end":335143,"line_start":595,"line_end":595,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335144,"byte_end":335151,"line_start":596,"line_end":596,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335152,"byte_end":335155,"line_start":597,"line_end":597,"column_start":1,"column_end":4}},{"value":"/ Convert an RgbaImage to a GrayImage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335156,"byte_end":335196,"line_start":598,"line_end":598,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335197,"byte_end":335200,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335201,"byte_end":335214,"line_start":600,"line_end":600,"column_start":1,"column_end":14}},{"value":"/ use image::{open, DynamicImage};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335215,"byte_end":335251,"line_start":601,"line_end":601,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335252,"byte_end":335255,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ let rgba = open(\"path/to/some.png\").unwrap().into_rgba8();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335256,"byte_end":335318,"line_start":603,"line_end":603,"column_start":1,"column_end":63}},{"value":"/ let gray = DynamicImage::ImageRgba8(rgba).into_luma8();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335319,"byte_end":335378,"line_start":604,"line_end":604,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335379,"byte_end":335386,"line_start":605,"line_end":605,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2035},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":336018,"byte_end":336026,"line_start":625,"line_end":625,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"pub fn from_raw(u32, u32, Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[{"value":"/ Contructs a buffer from a generic container","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335733,"byte_end":335780,"line_start":620,"line_end":620,"column_start":5,"column_end":52}},{"value":"/ (for example a `Vec` or a slice)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335785,"byte_end":335821,"line_start":621,"line_end":621,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335826,"byte_end":335829,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the container is not big enough (including when the image dimensions","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335834,"byte_end":335924,"line_start":623,"line_end":623,"column_start":5,"column_end":95}},{"value":"/ necessitate an allocation of more bytes than supported by the container).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335929,"byte_end":336006,"line_start":624,"line_end":624,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2036},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":336432,"byte_end":336440,"line_start":639,"line_end":639,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"pub fn into_raw(Self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":336383,"byte_end":336420,"line_start":638,"line_end":638,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":336540,"byte_end":336546,"line_start":644,"line_end":644,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<ImageBuffer<P, Container>>::as_raw","value":"pub fn as_raw(&Self) -> &Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[{"value":"/ Returns the underlying raw buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":336491,"byte_end":336528,"line_start":643,"line_end":643,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2038},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":336651,"byte_end":336661,"line_start":649,"line_end":649,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":336600,"byte_end":336639,"line_start":648,"line_end":648,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2039},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":336770,"byte_end":336775,"line_start":654,"line_end":654,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":336730,"byte_end":336758,"line_start":653,"line_end":653,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":336863,"byte_end":336869,"line_start":659,"line_end":659,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":336822,"byte_end":336851,"line_start":658,"line_end":658,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":337265,"byte_end":337271,"line_start":671,"line_end":671,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"pub fn pixels(&Self) -> Pixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n The iteration order is x = 0 to width then y = 0 to height\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the pixels of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":337132,"byte_end":337186,"line_start":669,"line_end":669,"column_start":5,"column_end":59}},{"value":"/ The iteration order is x = 0 to width then y = 0 to height","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":337191,"byte_end":337253,"line_start":670,"line_end":670,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2043},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":337805,"byte_end":337809,"line_start":684,"line_end":684,"column_start":12,"column_end":16},"name":"rows","qualname":"<ImageBuffer<P, Container>>::rows","value":"pub fn rows(&Self) -> Rows<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the rows of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":337458,"byte_end":337510,"line_start":679,"line_end":679,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":337515,"byte_end":337518,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":337523,"byte_end":337614,"line_start":681,"line_end":681,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":337619,"byte_end":337712,"line_start":682,"line_end":682,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":337717,"byte_end":337793,"line_start":683,"line_end":683,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":338160,"byte_end":338176,"line_start":693,"line_end":693,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"pub fn enumerate_pixels(&Self) -> EnumeratePixels<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n The iteration order is x = 0 to width then y = 0 to height\n Starting from the top left.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":337903,"byte_end":337947,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":337952,"byte_end":338005,"line_start":689,"line_end":689,"column_start":5,"column_end":58}},{"value":"/ along with a reference to them.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":338010,"byte_end":338045,"line_start":690,"line_end":690,"column_start":5,"column_end":40}},{"value":"/ The iteration order is x = 0 to width then y = 0 to height","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":338050,"byte_end":338112,"line_start":691,"line_end":691,"column_start":5,"column_end":67}},{"value":"/ Starting from the top left.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":338117,"byte_end":338148,"line_start":692,"line_end":692,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2045},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":338508,"byte_end":338522,"line_start":705,"line_end":705,"column_start":12,"column_end":26},"name":"enumerate_rows","qualname":"<ImageBuffer<P, Container>>::enumerate_rows","value":"pub fn enumerate_rows(&Self) -> EnumerateRows<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":338357,"byte_end":338399,"line_start":702,"line_end":702,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":338404,"byte_end":338456,"line_start":703,"line_end":703,"column_start":5,"column_end":57}},{"value":"/ along with a reference to them.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":338461,"byte_end":338496,"line_start":704,"line_end":704,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2046},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":338843,"byte_end":338852,"line_start":718,"line_end":718,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":338677,"byte_end":338731,"line_start":713,"line_end":713,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":338736,"byte_end":338739,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":338744,"byte_end":338756,"line_start":715,"line_end":715,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":338761,"byte_end":338764,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":338769,"byte_end":338831,"line_start":717,"line_end":717,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":339343,"byte_end":339360,"line_start":731,"line_end":731,"column_start":12,"column_end":29},"name":"get_pixel_checked","qualname":"<ImageBuffer<P, Container>>::get_pixel_checked","value":"pub fn get_pixel_checked(&Self, u32, u32) -> Option<&P>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)` or returns `None` if\n the index is out of the bounds `(width, height)`.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the pixel at location `(x, y)` or returns `None` if","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":339198,"byte_end":339273,"line_start":729,"line_end":729,"column_start":5,"column_end":80}},{"value":"/ the index is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":339278,"byte_end":339331,"line_start":730,"line_end":730,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":341281,"byte_end":341294,"line_start":780,"line_end":780,"column_start":12,"column_end":25},"name":"sample_layout","qualname":"<ImageBuffer<P, Container>>::sample_layout","value":"pub fn sample_layout(&Self) -> SampleLayout","parent":null,"children":[],"decl_id":null,"docs":" Get the format of the buffer when viewed as a matrix of samples.\n","sig":null,"attributes":[{"value":"/ Get the format of the buffer when viewed as a matrix of samples.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":341201,"byte_end":341269,"line_start":779,"line_end":779,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":341908,"byte_end":341925,"line_start":791,"line_end":791,"column_start":12,"column_end":29},"name":"into_flat_samples","qualname":"<ImageBuffer<P, Container>>::into_flat_samples","value":"pub fn into_flat_samples(Self) -> FlatSamples<Container> where\nContainer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw sample buffer with its stride an dimension information.","sig":null,"attributes":[{"value":"/ Return the raw sample buffer with its stride an dimension information.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":341497,"byte_end":341571,"line_start":785,"line_end":785,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":341576,"byte_end":341579,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ The returned buffer is guaranteed to be well formed in all cases. It is layed out by","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":341584,"byte_end":341672,"line_start":787,"line_end":787,"column_start":5,"column_end":93}},{"value":"/ colors, width then height, meaning `channel_stride <= width_stride <= height_stride`. All","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":341677,"byte_end":341770,"line_start":788,"line_end":788,"column_start":5,"column_end":98}},{"value":"/ strides are in numbers of elements but those are mostly `u8` in which case the strides are","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":341775,"byte_end":341869,"line_start":789,"line_end":789,"column_start":5,"column_end":99}},{"value":"/ also byte strides.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":341874,"byte_end":341896,"line_start":790,"line_end":790,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":342485,"byte_end":342500,"line_start":807,"line_end":807,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<ImageBuffer<P, Container>>::as_flat_samples","value":"pub fn as_flat_samples(&Self) -> FlatSamples<&[P::Subpixel]> where\nContainer: AsRef<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":342343,"byte_end":342386,"line_start":804,"line_end":804,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":342391,"byte_end":342394,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":342399,"byte_end":342473,"line_start":806,"line_end":806,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":343010,"byte_end":343029,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"as_flat_samples_mut","qualname":"<ImageBuffer<P, Container>>::as_flat_samples_mut","value":"pub fn as_flat_samples_mut(&mut Self) -> FlatSamples<&mut [P::Subpixel]> where\nContainer: AsMut<[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view on the raw sample buffer.","sig":null,"attributes":[{"value":"/ Return a mutable view on the raw sample buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":342860,"byte_end":342911,"line_start":819,"line_end":819,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":342916,"byte_end":342919,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ See [`into_flat_samples`](#method.into_flat_samples) for more details.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":342924,"byte_end":342998,"line_start":821,"line_end":821,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":343817,"byte_end":343827,"line_start":847,"line_end":847,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"pub fn pixels_mut(&mut Self) -> PixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable pixels of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":343743,"byte_end":343805,"line_start":846,"line_end":846,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":344387,"byte_end":344395,"line_start":860,"line_end":860,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ImageBuffer<P, Container>>::rows_mut","value":"pub fn rows_mut(&mut Self) -> RowsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable rows of this image.","sig":null,"attributes":[{"value":"/ Returns an iterator over the mutable rows of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":344032,"byte_end":344092,"line_start":855,"line_end":855,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":344097,"byte_end":344100,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ Only non-empty rows can be iterated in this manner. In particular the iterator will not","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":344105,"byte_end":344196,"line_start":857,"line_end":857,"column_start":5,"column_end":96}},{"value":"/ yield any item when the width of the image is `0` or a pixel type without any channels is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":344201,"byte_end":344294,"line_start":858,"line_end":858,"column_start":5,"column_end":98}},{"value":"/ used. This ensures that its length can always be represented by `usize`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":344299,"byte_end":344375,"line_start":859,"line_end":859,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":344665,"byte_end":344685,"line_start":867,"line_end":867,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"pub fn enumerate_pixels_mut(&mut Self) -> EnumeratePixelsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the pixels of the image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":344503,"byte_end":344547,"line_start":864,"line_end":864,"column_start":5,"column_end":49}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":344552,"byte_end":344605,"line_start":865,"line_end":865,"column_start":5,"column_end":58}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":344610,"byte_end":344653,"line_start":866,"line_end":866,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":345059,"byte_end":345077,"line_start":880,"line_end":880,"column_start":12,"column_end":30},"name":"enumerate_rows_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_rows_mut","value":"pub fn enumerate_rows_mut(&mut Self) -> EnumerateRowsMut<, P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a mutable reference to them.\n","sig":null,"attributes":[{"value":"/ Enumerates over the rows of the image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":344900,"byte_end":344942,"line_start":877,"line_end":877,"column_start":5,"column_end":47}},{"value":"/ The iterator yields the y-coordinate of each row","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":344947,"byte_end":344999,"line_start":878,"line_end":878,"column_start":5,"column_end":57}},{"value":"/ along with a mutable reference to them.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":345004,"byte_end":345047,"line_start":879,"line_end":879,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":345440,"byte_end":345453,"line_start":894,"line_end":894,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":345266,"byte_end":345328,"line_start":889,"line_end":889,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":345333,"byte_end":345336,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":345341,"byte_end":345353,"line_start":891,"line_end":891,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":345358,"byte_end":345361,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":345366,"byte_end":345428,"line_start":893,"line_end":893,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":345968,"byte_end":345989,"line_start":907,"line_end":907,"column_start":12,"column_end":33},"name":"get_pixel_mut_checked","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut_checked","value":"pub fn get_pixel_mut_checked(&mut Self, u32, u32) -> Option<&mut P>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)` or returns\n `None` if the index is out of the bounds `(width, height)`.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)` or returns","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":345815,"byte_end":345888,"line_start":905,"line_end":905,"column_start":5,"column_end":78}},{"value":"/ `None` if the index is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":345893,"byte_end":345956,"line_start":906,"line_end":906,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":346626,"byte_end":346635,"line_start":927,"line_end":927,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, P)","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[{"value":"/ Puts a pixel at location `(x, y)`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":346477,"byte_end":346514,"line_start":922,"line_end":922,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":346519,"byte_end":346522,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":346527,"byte_end":346539,"line_start":924,"line_end":924,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":346544,"byte_end":346547,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of the bounds `(width, height)`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":346552,"byte_end":346614,"line_start":926,"line_end":926,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":347013,"byte_end":347017,"line_start":941,"line_end":941,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"pub fn save<Q>(&Self, Q) -> ImageResult<()> where Q: AsRef<Path>,\nP: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":346879,"byte_end":346932,"line_start":938,"line_end":938,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":346937,"byte_end":346940,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":346945,"byte_end":347001,"line_start":940,"line_end":940,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":347693,"byte_end":347709,"line_start":967,"line_end":967,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<ImageBuffer<P, Container>>::save_with_format","value":"pub fn save_with_format<Q>(&Self, Q, ImageFormat) -> ImageResult<()> where\nQ: AsRef<Path>, P: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":347486,"byte_end":347541,"line_start":962,"line_end":962,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":347546,"byte_end":347571,"line_start":963,"line_end":963,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":347576,"byte_end":347579,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":347584,"byte_end":347656,"line_start":965,"line_end":965,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":347661,"byte_end":347681,"line_start":966,"line_end":966,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":348590,"byte_end":348598,"line_start":997,"line_end":997,"column_start":12,"column_end":20},"name":"write_to","qualname":"<ImageBuffer<P, Container>>::write_to","value":"pub fn write_to<W, F>(&Self, &mut W, F) -> ImageResult<()> where\nW: std::io::Write + std::io::Seek, F: Into<ImageOutputFormat>,\nP: PixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":" Writes the buffer to a writer in the specified format.","sig":null,"attributes":[{"value":"/ Writes the buffer to a writer in the specified format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":348279,"byte_end":348337,"line_start":990,"line_end":990,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":348342,"byte_end":348345,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ Assumes the writer is buffered. In most cases,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":348350,"byte_end":348400,"line_start":992,"line_end":992,"column_start":5,"column_end":55}},{"value":"/ you should wrap your writer in a `BufWriter` for best performance.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":348405,"byte_end":348475,"line_start":993,"line_end":993,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":348480,"byte_end":348483,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ See [`ImageOutputFormat`](../enum.ImageOutputFormat.html) for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":348488,"byte_end":348553,"line_start":995,"line_end":995,"column_start":5,"column_end":70}},{"value":"/ supported types.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":348558,"byte_end":348578,"line_start":996,"line_end":996,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":2132},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":354319,"byte_end":354322,"line_start":1194,"line_end":1194,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"pub fn new(u32, u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.","sig":null,"attributes":[{"value":"/ Creates a new image buffer based on a `Vec<P::Subpixel>`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":354129,"byte_end":354190,"line_start":1189,"line_end":1189,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":354195,"byte_end":354198,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":354203,"byte_end":354215,"line_start":1191,"line_end":1191,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":354220,"byte_end":354223,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":354228,"byte_end":354307,"line_start":1193,"line_end":1193,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":354860,"byte_end":354870,"line_start":1210,"line_end":1210,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"pub fn from_pixel(u32, u32, P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by copying a pixel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":354680,"byte_end":354731,"line_start":1205,"line_end":1205,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":354736,"byte_end":354739,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":354744,"byte_end":354756,"line_start":1207,"line_end":1207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":354761,"byte_end":354764,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":354769,"byte_end":354848,"line_start":1209,"line_end":1209,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":355385,"byte_end":355392,"line_start":1225,"line_end":1225,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"pub fn from_fn<F>(u32, u32, F) -> ImageBuffer<P, Vec<P::Subpixel>> where\nF: FnMut(u32, u32) -> P","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.","sig":null,"attributes":[{"value":"/ Constructs a new ImageBuffer by repeated application of the supplied function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":355091,"byte_end":355173,"line_start":1218,"line_end":1218,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":355178,"byte_end":355181,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ The arguments to the function are the pixel's x and y coordinates.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":355186,"byte_end":355256,"line_start":1220,"line_end":1220,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":355261,"byte_end":355264,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":355269,"byte_end":355281,"line_start":1222,"line_end":1222,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":355286,"byte_end":355289,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ Panics when the resulting image is larger the the maximum size of a vector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":355294,"byte_end":355373,"line_start":1224,"line_end":1224,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":355803,"byte_end":355811,"line_start":1238,"line_end":1238,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"pub fn from_vec(u32, u32, Vec<P::Subpixel>)\n-> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[{"value":"/ Creates an image buffer out of an existing buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":355683,"byte_end":355737,"line_start":1236,"line_end":1236,"column_start":5,"column_end":59}},{"value":"/ Returns None if the buffer is not big enough.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":355742,"byte_end":355791,"line_start":1237,"line_end":1237,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356098,"byte_end":356106,"line_start":1248,"line_end":1248,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"pub fn into_vec(Self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[{"value":"/ Consumes the image buffer and returns the underlying data","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":355998,"byte_end":356059,"line_start":1246,"line_end":1246,"column_start":5,"column_end":66}},{"value":"/ as an owned buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356064,"byte_end":356086,"line_start":1247,"line_end":1247,"column_start":5,"column_end":27}}]},{"kind":"Trait","id":{"krate":0,"index":2138},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356234,"byte_end":356247,"line_start":1254,"line_end":1254,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer_::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":2140}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for whole image buffers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356168,"byte_end":356223,"line_start":1253,"line_end":1253,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356434,"byte_end":356441,"line_start":1259,"line_end":1259,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer_::ConvertBuffer::convert","value":"pub fn convert(&Self) -> T","parent":{"krate":0,"index":2138},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[{"value":"/ Converts `self` to a buffer of type T","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356257,"byte_end":356298,"line_start":1255,"line_end":1255,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356303,"byte_end":356306,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ A generic implementation is provided to convert any image buffer to a image buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356311,"byte_end":356397,"line_start":1257,"line_end":1257,"column_start":5,"column_end":91}},{"value":"/ based on a `Vec<T>`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356402,"byte_end":356426,"line_start":1258,"line_end":1258,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356709,"byte_end":356723,"line_start":1267,"line_end":1267,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"pub fn expand_palette(Self, &[(u8, u8, u8)], Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[{"value":"/ Expands a color palette by re-using the existing buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356519,"byte_end":356579,"line_start":1264,"line_end":1264,"column_start":5,"column_end":65}},{"value":"/ Assumes 8 bit per pixel. Uses an optionally transparent index to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356584,"byte_end":356652,"line_start":1265,"line_end":1265,"column_start":5,"column_end":73}},{"value":"/ adjust it's alpha value accordingly.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356657,"byte_end":356697,"line_start":1266,"line_end":1266,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2151},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":358773,"byte_end":358781,"line_start":1330,"line_end":1330,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer_::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb image buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":358734,"byte_end":358763,"line_start":1329,"line_end":1329,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":358870,"byte_end":358879,"line_start":1332,"line_end":1332,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer_::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable Rgb + alpha channel image buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":358815,"byte_end":358860,"line_start":1331,"line_end":1331,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":2153},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":358959,"byte_end":358968,"line_start":1334,"line_end":1334,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer_::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale image buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":358914,"byte_end":358949,"line_start":1333,"line_end":1333,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":2154},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":359064,"byte_end":359078,"line_start":1336,"line_end":1336,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer_::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[{"value":"/ Sendable grayscale + alpha channel image buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":359003,"byte_end":359054,"line_start":1335,"line_end":1335,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":2159},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":359690,"byte_end":359701,"line_start":1348,"line_end":1348,"column_start":10,"column_end":21},"name":"Rgb32FImage","qualname":"::buffer_::Rgb32FImage","value":"ImageBuffer<Rgb<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" An image buffer for 32-bit float RGB pixels,\n where the backing container is a flattened vector of floats.\n","sig":null,"attributes":[{"value":"/ An image buffer for 32-bit float RGB pixels,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":359567,"byte_end":359615,"line_start":1346,"line_end":1346,"column_start":1,"column_end":49}},{"value":"/ where the backing container is a flattened vector of floats.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":359616,"byte_end":359680,"line_start":1347,"line_end":1347,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":2160},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":359862,"byte_end":359874,"line_start":1352,"line_end":1352,"column_start":10,"column_end":22},"name":"Rgba32FImage","qualname":"::buffer_::Rgba32FImage","value":"ImageBuffer<Rgba<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" An image buffer for 32-bit float RGBA pixels,\n where the backing container is a flattened vector of floats.\n","sig":null,"attributes":[{"value":"/ An image buffer for 32-bit float RGBA pixels,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":359738,"byte_end":359787,"line_start":1350,"line_end":1350,"column_start":1,"column_end":50}},{"value":"/ where the backing container is a flattened vector of floats.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":359788,"byte_end":359852,"line_start":1351,"line_end":1351,"column_start":1,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3488},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369532,"byte_end":369534,"line_start":12,"line_end":12,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ColorType::L8","value":"ColorType::L8","parent":{"krate":0,"index":3487},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369499,"byte_end":369527,"line_start":11,"line_end":11,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3490},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369595,"byte_end":369598,"line_start":14,"line_end":14,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ColorType::La8","value":"ColorType::La8","parent":{"krate":0,"index":3487},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369540,"byte_end":369590,"line_start":13,"line_end":13,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3492},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369653,"byte_end":369657,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ColorType::Rgb8","value":"ColorType::Rgb8","parent":{"krate":0,"index":3487},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369604,"byte_end":369648,"line_start":15,"line_end":15,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3494},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369712,"byte_end":369717,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ColorType::Rgba8","value":"ColorType::Rgba8","parent":{"krate":0,"index":3487},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369663,"byte_end":369707,"line_start":17,"line_end":17,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3496},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369758,"byte_end":369761,"line_start":21,"line_end":21,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ColorType::L16","value":"ColorType::L16","parent":{"krate":0,"index":3487},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369724,"byte_end":369753,"line_start":20,"line_end":20,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3498},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369823,"byte_end":369827,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ColorType::La16","value":"ColorType::La16","parent":{"krate":0,"index":3487},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369767,"byte_end":369818,"line_start":22,"line_end":22,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3500},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369861,"byte_end":369866,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ColorType::Rgb16","value":"ColorType::Rgb16","parent":{"krate":0,"index":3487},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369833,"byte_end":369856,"line_start":24,"line_end":24,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3502},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369901,"byte_end":369907,"line_start":27,"line_end":27,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ColorType::Rgba16","value":"ColorType::Rgba16","parent":{"krate":0,"index":3487},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGBA","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369872,"byte_end":369896,"line_start":26,"line_end":26,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3504},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369948,"byte_end":369954,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Rgb32F","qualname":"::color::ColorType::Rgb32F","value":"ColorType::Rgb32F","parent":{"krate":0,"index":3487},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGB","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369914,"byte_end":369943,"line_start":29,"line_end":29,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3506},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369995,"byte_end":370002,"line_start":32,"line_end":32,"column_start":5,"column_end":12},"name":"Rgba32F","qualname":"::color::ColorType::Rgba32F","value":"ColorType::Rgba32F","parent":{"krate":0,"index":3487},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGBA","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369960,"byte_end":369990,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":3487},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369483,"byte_end":369492,"line_start":10,"line_end":10,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"pub enum ColorType {\n    L8,\n    La8,\n    Rgb8,\n    Rgba8,\n    L16,\n    La16,\n    Rgb16,\n    Rgba16,\n    Rgb32F,\n    Rgba32F,\n}","parent":null,"children":[{"krate":0,"index":3488},{"krate":0,"index":3490},{"krate":0,"index":3492},{"krate":0,"index":3494},{"krate":0,"index":3496},{"krate":0,"index":3498},{"krate":0,"index":3500},{"krate":0,"index":3502},{"krate":0,"index":3504},{"krate":0,"index":3506}],"decl_id":null,"docs":" An enumeration over supported color types and bit depths\n","sig":null,"attributes":[{"value":"/ An enumeration over supported color types and bit depths","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369344,"byte_end":369404,"line_start":7,"line_end":7,"column_start":1,"column_end":61}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":369456,"byte_end":369473,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":370115,"byte_end":370130,"line_start":37,"line_end":37,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<ColorType>::bytes_per_pixel","value":"pub fn bytes_per_pixel(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in a pixel of `ColorType` ```c```\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes contained in a pixel of `ColorType` ```c```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":370028,"byte_end":370103,"line_start":36,"line_end":36,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":370561,"byte_end":370570,"line_start":51,"line_end":51,"column_start":12,"column_end":21},"name":"has_alpha","qualname":"<ColorType>::has_alpha","value":"pub fn has_alpha(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if there is an alpha channel.\n","sig":null,"attributes":[{"value":"/ Returns if there is an alpha channel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":370508,"byte_end":370549,"line_start":50,"line_end":50,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":370848,"byte_end":370857,"line_start":60,"line_end":60,"column_start":12,"column_end":21},"name":"has_color","qualname":"<ColorType>::has_color","value":"pub fn has_color(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns false if the color scheme is grayscale, true otherwise.\n","sig":null,"attributes":[{"value":"/ Returns false if the color scheme is grayscale, true otherwise.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":370769,"byte_end":370836,"line_start":59,"line_end":59,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2195},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":371190,"byte_end":371204,"line_start":70,"line_end":70,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<ColorType>::bits_per_pixel","value":"pub fn bits_per_pixel(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be\n a multiple of 8).\n","sig":null,"attributes":[{"value":"/ Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":371056,"byte_end":371152,"line_start":68,"line_end":68,"column_start":5,"column_end":101}},{"value":"/ a multiple of 8).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":371157,"byte_end":371178,"line_start":69,"line_end":69,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":371367,"byte_end":371380,"line_start":75,"line_end":75,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ColorType>::channel_count","value":"pub fn channel_count(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of color channels that make up this pixel\n","sig":null,"attributes":[{"value":"/ Returns the number of color channels that make up this pixel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":371291,"byte_end":371355,"line_start":74,"line_end":74,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3523},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372056,"byte_end":372058,"line_start":93,"line_end":93,"column_start":5,"column_end":7},"name":"A8","qualname":"::color::ExtendedColorType::A8","value":"ExtendedColorType::A8","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 8-bit alpha\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit alpha","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372027,"byte_end":372051,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3525},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372097,"byte_end":372099,"line_start":95,"line_end":95,"column_start":5,"column_end":7},"name":"L1","qualname":"::color::ExtendedColorType::L1","value":"ExtendedColorType::L1","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372064,"byte_end":372092,"line_start":94,"line_end":94,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3527},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372160,"byte_end":372163,"line_start":97,"line_end":97,"column_start":5,"column_end":8},"name":"La1","qualname":"::color::ExtendedColorType::La1","value":"ExtendedColorType::La1","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 1-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372105,"byte_end":372155,"line_start":96,"line_end":96,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3529},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372218,"byte_end":372222,"line_start":99,"line_end":99,"column_start":5,"column_end":9},"name":"Rgb1","qualname":"::color::ExtendedColorType::Rgb1","value":"ExtendedColorType::Rgb1","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel contains 1-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 1-bit R, G and B channels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372169,"byte_end":372213,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3531},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372277,"byte_end":372282,"line_start":101,"line_end":101,"column_start":5,"column_end":10},"name":"Rgba1","qualname":"::color::ExtendedColorType::Rgba1","value":"ExtendedColorType::Rgba1","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 1-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 1-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372228,"byte_end":372272,"line_start":100,"line_end":100,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372321,"byte_end":372323,"line_start":103,"line_end":103,"column_start":5,"column_end":7},"name":"L2","qualname":"::color::ExtendedColorType::L2","value":"ExtendedColorType::L2","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372288,"byte_end":372316,"line_start":102,"line_end":102,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372384,"byte_end":372387,"line_start":105,"line_end":105,"column_start":5,"column_end":8},"name":"La2","qualname":"::color::ExtendedColorType::La2","value":"ExtendedColorType::La2","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 2-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372329,"byte_end":372379,"line_start":104,"line_end":104,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3537},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372442,"byte_end":372446,"line_start":107,"line_end":107,"column_start":5,"column_end":9},"name":"Rgb2","qualname":"::color::ExtendedColorType::Rgb2","value":"ExtendedColorType::Rgb2","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel contains 2-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 2-bit R, G and B channels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372393,"byte_end":372437,"line_start":106,"line_end":106,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3539},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372501,"byte_end":372506,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Rgba2","qualname":"::color::ExtendedColorType::Rgba2","value":"ExtendedColorType::Rgba2","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 2-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 2-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372452,"byte_end":372496,"line_start":108,"line_end":108,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3541},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372545,"byte_end":372547,"line_start":111,"line_end":111,"column_start":5,"column_end":7},"name":"L4","qualname":"::color::ExtendedColorType::L4","value":"ExtendedColorType::L4","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372512,"byte_end":372540,"line_start":110,"line_end":110,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3543},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372608,"byte_end":372611,"line_start":113,"line_end":113,"column_start":5,"column_end":8},"name":"La4","qualname":"::color::ExtendedColorType::La4","value":"ExtendedColorType::La4","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 4-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372553,"byte_end":372603,"line_start":112,"line_end":112,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3545},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372666,"byte_end":372670,"line_start":115,"line_end":115,"column_start":5,"column_end":9},"name":"Rgb4","qualname":"::color::ExtendedColorType::Rgb4","value":"ExtendedColorType::Rgb4","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel contains 4-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 4-bit R, G and B channels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372617,"byte_end":372661,"line_start":114,"line_end":114,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3547},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372725,"byte_end":372730,"line_start":117,"line_end":117,"column_start":5,"column_end":10},"name":"Rgba4","qualname":"::color::ExtendedColorType::Rgba4","value":"ExtendedColorType::Rgba4","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 4-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 4-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372676,"byte_end":372720,"line_start":116,"line_end":116,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3549},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372769,"byte_end":372771,"line_start":119,"line_end":119,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ExtendedColorType::L8","value":"ExtendedColorType::L8","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372736,"byte_end":372764,"line_start":118,"line_end":118,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3551},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372832,"byte_end":372835,"line_start":121,"line_end":121,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ExtendedColorType::La8","value":"ExtendedColorType::La8","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372777,"byte_end":372827,"line_start":120,"line_end":120,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3553},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372890,"byte_end":372894,"line_start":123,"line_end":123,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ExtendedColorType::Rgb8","value":"ExtendedColorType::Rgb8","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit R, G and B channels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372841,"byte_end":372885,"line_start":122,"line_end":122,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3555},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372949,"byte_end":372954,"line_start":125,"line_end":125,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ExtendedColorType::Rgba8","value":"ExtendedColorType::Rgba8","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372900,"byte_end":372944,"line_start":124,"line_end":124,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3557},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372994,"byte_end":372997,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ExtendedColorType::L16","value":"ExtendedColorType::L16","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372960,"byte_end":372989,"line_start":126,"line_end":126,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3559},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373059,"byte_end":373063,"line_start":129,"line_end":129,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ExtendedColorType::La16","value":"ExtendedColorType::La16","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit luminance with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373003,"byte_end":373054,"line_start":128,"line_end":128,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373119,"byte_end":373124,"line_start":131,"line_end":131,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ExtendedColorType::Rgb16","value":"ExtendedColorType::Rgb16","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel contains 16-bit R, G and B channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 16-bit R, G and B channels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373069,"byte_end":373114,"line_start":130,"line_end":130,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3563},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373180,"byte_end":373186,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ExtendedColorType::Rgba16","value":"ExtendedColorType::Rgba16","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 16-bit RGB with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373130,"byte_end":373175,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3565},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373241,"byte_end":373245,"line_start":135,"line_end":135,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ExtendedColorType::Bgr8","value":"ExtendedColorType::Bgr8","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[{"value":"/ Pixel contains 8-bit B, G and R channels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373192,"byte_end":373236,"line_start":134,"line_end":134,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3567},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373300,"byte_end":373305,"line_start":137,"line_end":137,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ExtendedColorType::Bgra8","value":"ExtendedColorType::Bgra8","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[{"value":"/ Pixel is 8-bit BGR with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373251,"byte_end":373295,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3569},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373369,"byte_end":373375,"line_start":141,"line_end":141,"column_start":5,"column_end":11},"name":"Rgb32F","qualname":"::color::ExtendedColorType::Rgb32F","value":"ExtendedColorType::Rgb32F","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGB\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGB","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373335,"byte_end":373364,"line_start":140,"line_end":140,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3571},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373416,"byte_end":373423,"line_start":143,"line_end":143,"column_start":5,"column_end":12},"name":"Rgba32F","qualname":"::color::ExtendedColorType::Rgba32F","value":"ExtendedColorType::Rgba32F","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is 32-bit float RGBA\n","sig":null,"attributes":[{"value":"/ Pixel is 32-bit float RGBA","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373381,"byte_end":373411,"line_start":142,"line_end":142,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3573},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373652,"byte_end":373659,"line_start":148,"line_end":148,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::color::ExtendedColorType::Unknown","value":"ExtendedColorType::Unknown(u8)","parent":{"krate":0,"index":3522},"children":[],"decl_id":null,"docs":" Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels\n which are associated with an external palette. In that case, the pixel value is an index\n into the palette.\n","sig":null,"attributes":[{"value":"/ Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373430,"byte_end":373524,"line_start":145,"line_end":145,"column_start":5,"column_end":99}},{"value":"/ which are associated with an external palette. In that case, the pixel value is an index","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373529,"byte_end":373621,"line_start":146,"line_end":146,"column_start":5,"column_end":97}},{"value":"/ into the palette.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373626,"byte_end":373647,"line_start":147,"line_end":147,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":3522},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":372003,"byte_end":372020,"line_start":91,"line_end":91,"column_start":10,"column_end":27},"name":"ExtendedColorType","qualname":"::color::ExtendedColorType","value":"pub enum ExtendedColorType {\n    A8,\n    L1,\n    La1,\n    Rgb1,\n    Rgba1,\n    L2,\n    La2,\n    Rgb2,\n    Rgba2,\n    L4,\n    La4,\n    Rgb4,\n    Rgba4,\n    L8,\n    La8,\n    Rgb8,\n    Rgba8,\n    L16,\n    La16,\n    Rgb16,\n    Rgba16,\n    Bgr8,\n    Bgra8,\n    Rgb32F,\n    Rgba32F,\n    Unknown(u8),\n}","parent":null,"children":[{"krate":0,"index":3523},{"krate":0,"index":3525},{"krate":0,"index":3527},{"krate":0,"index":3529},{"krate":0,"index":3531},{"krate":0,"index":3533},{"krate":0,"index":3535},{"krate":0,"index":3537},{"krate":0,"index":3539},{"krate":0,"index":3541},{"krate":0,"index":3543},{"krate":0,"index":3545},{"krate":0,"index":3547},{"krate":0,"index":3549},{"krate":0,"index":3551},{"krate":0,"index":3553},{"krate":0,"index":3555},{"krate":0,"index":3557},{"krate":0,"index":3559},{"krate":0,"index":3561},{"krate":0,"index":3563},{"krate":0,"index":3565},{"krate":0,"index":3567},{"krate":0,"index":3569},{"krate":0,"index":3571},{"krate":0,"index":3573}],"decl_id":null,"docs":" An enumeration of color types encountered in image formats.","sig":null,"attributes":[{"value":"/ An enumeration of color types encountered in image formats.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":371478,"byte_end":371541,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":371542,"byte_end":371545,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ This is not exhaustive over all existing image formats but should be granular enough to allow","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":371546,"byte_end":371643,"line_start":83,"line_end":83,"column_start":1,"column_end":98}},{"value":"/ round tripping of decoding and encoding as much as possible. The variants will be extended as","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":371644,"byte_end":371741,"line_start":84,"line_end":84,"column_start":1,"column_end":98}},{"value":"/ necessary to enable this.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":371742,"byte_end":371771,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":371772,"byte_end":371775,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Another purpose is to advise users of a rough estimate of the accuracy and effort of the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":371776,"byte_end":371868,"line_start":87,"line_end":87,"column_start":1,"column_end":93}},{"value":"/ decoding from and encoding to such an image format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":371869,"byte_end":371924,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":371976,"byte_end":371993,"line_start":90,"line_end":90,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373911,"byte_end":373924,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ExtendedColorType>::channel_count","value":"pub fn channel_count(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of channels for colors of this type.","sig":null,"attributes":[{"value":"/ Get the number of channels for colors of this type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373697,"byte_end":373752,"line_start":152,"line_end":152,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373757,"byte_end":373760,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Note that the `Unknown` variant returns a value of `1` since pixels can only be treated as","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373765,"byte_end":373859,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ an opaque datum by the library.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373864,"byte_end":373899,"line_start":155,"line_end":155,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":3779},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":379918,"byte_end":379921,"line_start":363,"line_end":363,"column_start":16,"column_end":19},"name":"Rgb","qualname":"::color::Rgb","value":"","parent":null,"children":[],"decl_id":null,"docs":" RGB colors.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":375975,"byte_end":375985,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":375986,"byte_end":376008,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3808},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":380009,"byte_end":380013,"line_start":365,"line_end":365,"column_start":16,"column_end":20},"name":"Luma","qualname":"::color::Luma","value":"","parent":null,"children":[],"decl_id":null,"docs":" Grayscale colors.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":375975,"byte_end":375985,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":375986,"byte_end":376008,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3837},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":380096,"byte_end":380100,"line_start":367,"line_end":367,"column_start":16,"column_end":20},"name":"Rgba","qualname":"::color::Rgba","value":"","parent":null,"children":[],"decl_id":null,"docs":" RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":375975,"byte_end":375985,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":375986,"byte_end":376008,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3866},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":380204,"byte_end":380209,"line_start":369,"line_end":369,"column_start":16,"column_end":21},"name":"LumaA","qualname":"::color::LumaA","value":"","parent":null,"children":[],"decl_id":null,"docs":" Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":375975,"byte_end":375985,"line_start":215,"line_end":215,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":375986,"byte_end":376008,"line_start":216,"line_end":216,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":2202},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":380364,"byte_end":380377,"line_start":373,"line_end":373,"column_start":11,"column_end":24},"name":"FromPrimitive","qualname":"::color::FromPrimitive","value":"FromPrimitive<Component>","parent":null,"children":[{"krate":0,"index":2204}],"decl_id":null,"docs":" Convert from one pixel component type to another. For example, convert from `u8` to `f32` pixel values.\n","sig":null,"attributes":[{"value":"/ Convert from one pixel component type to another. For example, convert from `u8` to `f32` pixel values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":380246,"byte_end":380353,"line_start":372,"line_end":372,"column_start":1,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":380459,"byte_end":380473,"line_start":375,"line_end":375,"column_start":8,"column_end":22},"name":"from_primitive","qualname":"::color::FromPrimitive::from_primitive","value":"pub fn from_primitive(Component) -> Self","parent":{"krate":0,"index":2202},"children":[],"decl_id":null,"docs":" Converts from any pixel component type to this type.\n","sig":null,"attributes":[{"value":"/ Converts from any pixel component type to this type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":380395,"byte_end":380451,"line_start":374,"line_end":374,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":382295,"byte_end":382304,"line_start":441,"line_end":441,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":2224}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[{"value":"/ Provides color conversions for the different pixel types.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":382223,"byte_end":382284,"line_start":440,"line_end":440,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":382394,"byte_end":382404,"line_start":443,"line_end":443,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"pub fn from_color(&mut Self, &Other)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[{"value":"/ Changes `self` to represent `Other` in the color space of `Self`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":382318,"byte_end":382386,"line_start":442,"line_end":442,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3896},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400033,"byte_end":400043,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399986,"byte_end":400028,"line_start":56,"line_end":56,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3899},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400119,"byte_end":400130,"line_start":60,"line_end":60,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Luma with alpha","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400061,"byte_end":400114,"line_start":59,"line_end":59,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3902},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400199,"byte_end":400208,"line_start":63,"line_end":63,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400153,"byte_end":400194,"line_start":62,"line_end":62,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3905},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400282,"byte_end":400292,"line_start":66,"line_end":66,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 8-bit Rgb with alpha","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400225,"byte_end":400277,"line_start":65,"line_end":65,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3908},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400358,"byte_end":400369,"line_start":69,"line_end":69,"column_start":5,"column_end":16},"name":"ImageLuma16","qualname":"::dynimage::DynamicImage::ImageLuma16","value":"DynamicImage::ImageLuma16(Gray16Image)","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400310,"byte_end":400353,"line_start":68,"line_end":68,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3911},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400448,"byte_end":400460,"line_start":72,"line_end":72,"column_start":5,"column_end":17},"name":"ImageLumaA16","qualname":"::dynimage::DynamicImage::ImageLumaA16","value":"DynamicImage::ImageLumaA16(GrayAlpha16Image)","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Luma with alpha","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400389,"byte_end":400443,"line_start":71,"line_end":71,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3914},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400532,"byte_end":400542,"line_start":75,"line_end":75,"column_start":5,"column_end":15},"name":"ImageRgb16","qualname":"::dynimage::DynamicImage::ImageRgb16","value":"DynamicImage::ImageRgb16(Rgb16Image)","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400485,"byte_end":400527,"line_start":74,"line_end":74,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3917},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400619,"byte_end":400630,"line_start":78,"line_end":78,"column_start":5,"column_end":16},"name":"ImageRgba16","qualname":"::dynimage::DynamicImage::ImageRgba16","value":"DynamicImage::ImageRgba16(Rgba16Image)","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 16-bit Rgb with alpha","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400561,"byte_end":400614,"line_start":77,"line_end":77,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3920},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400703,"byte_end":400714,"line_start":81,"line_end":81,"column_start":5,"column_end":16},"name":"ImageRgb32F","qualname":"::dynimage::DynamicImage::ImageRgb32F","value":"DynamicImage::ImageRgb32F(Rgb32FImage)","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":" Each pixel in this image is 32-bit float Rgb\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 32-bit float Rgb","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400650,"byte_end":400698,"line_start":80,"line_end":80,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3923},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400798,"byte_end":400810,"line_start":84,"line_end":84,"column_start":5,"column_end":17},"name":"ImageRgba32F","qualname":"::dynimage::DynamicImage::ImageRgba32F","value":"DynamicImage::ImageRgba32F(Rgba32FImage)","parent":{"krate":0,"index":3895},"children":[],"decl_id":null,"docs":" Each pixel in this image is 32-bit float Rgb with alpha\n","sig":null,"attributes":[{"value":"/ Each pixel in this image is 32-bit float Rgb with alpha","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":400734,"byte_end":400793,"line_start":83,"line_end":83,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":3895},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399967,"byte_end":399979,"line_start":55,"line_end":55,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"pub enum DynamicImage {\n    ImageLuma8(GrayImage),\n    ImageLumaA8(GrayAlphaImage),\n    ImageRgb8(RgbImage),\n    ImageRgba8(RgbaImage),\n    ImageLuma16(Gray16Image),\n    ImageLumaA16(GrayAlpha16Image),\n    ImageRgb16(Rgb16Image),\n    ImageRgba16(Rgba16Image),\n    ImageRgb32F(Rgb32FImage),\n    ImageRgba32F(Rgba32FImage),\n}","parent":null,"children":[{"krate":0,"index":3896},{"krate":0,"index":3899},{"krate":0,"index":3902},{"krate":0,"index":3905},{"krate":0,"index":3908},{"krate":0,"index":3911},{"krate":0,"index":3914},{"krate":0,"index":3917},{"krate":0,"index":3920},{"krate":0,"index":3923}],"decl_id":null,"docs":" A Dynamic Image","sig":null,"attributes":[{"value":"/ A Dynamic Image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":398952,"byte_end":398971,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":398972,"byte_end":398975,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This represents a _matrix_ of _pixels_ which are _convertible_ from and to an _RGBA_","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":398976,"byte_end":399064,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ representation. More variants that adhere to these principles may get added in the future, in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399065,"byte_end":399162,"line_start":33,"line_end":33,"column_start":1,"column_end":98}},{"value":"/ particular to cover other combinations typically used.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399163,"byte_end":399221,"line_start":34,"line_end":34,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399222,"byte_end":399225,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399226,"byte_end":399237,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399238,"byte_end":399241,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This type can act as a converter between specific `ImageBuffer` instances.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399242,"byte_end":399320,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399321,"byte_end":399324,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399325,"byte_end":399332,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use image::{DynamicImage, GrayImage, RgbImage};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399333,"byte_end":399384,"line_start":41,"line_end":41,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399385,"byte_end":399388,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let rgb: RgbImage = RgbImage::new(10, 10);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399389,"byte_end":399435,"line_start":43,"line_end":43,"column_start":1,"column_end":47}},{"value":"/ let luma: GrayImage = DynamicImage::ImageRgb8(rgb).into_luma8();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399436,"byte_end":399504,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399505,"byte_end":399512,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399513,"byte_end":399516,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Design","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399517,"byte_end":399529,"line_start":47,"line_end":47,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399530,"byte_end":399533,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ There is no goal to provide an all-encompassing type with all possible memory layouts. This","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399534,"byte_end":399629,"line_start":49,"line_end":49,"column_start":1,"column_end":96}},{"value":"/ would hardly be feasible as a simple enum, due to the sheer number of combinations of channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399630,"byte_end":399727,"line_start":50,"line_end":50,"column_start":1,"column_end":98}},{"value":"/ kinds, channel order, and bit depth. Rather, this type provides an opinionated selection with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399728,"byte_end":399825,"line_start":51,"line_end":51,"column_start":1,"column_end":98}},{"value":"/ normalized channel order which can store common pixel values without loss.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399826,"byte_end":399904,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":399940,"byte_end":399957,"line_start":54,"line_end":54,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":402445,"byte_end":402454,"line_start":122,"line_end":122,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"pub fn new_luma8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of gray pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of gray pixels.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":402371,"byte_end":402433,"line_start":121,"line_end":121,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2461},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":402657,"byte_end":402668,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"pub fn new_luma_a8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of gray\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of gray","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":402557,"byte_end":402611,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":402616,"byte_end":402645,"line_start":127,"line_end":127,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":402845,"byte_end":402853,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"pub fn new_rgb8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":402772,"byte_end":402833,"line_start":132,"line_end":132,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":403029,"byte_end":403038,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"pub fn new_rgba8(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":402955,"byte_end":403017,"line_start":137,"line_end":137,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2464},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":403215,"byte_end":403225,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"new_luma16","qualname":"<DynamicImage>::new_luma16","value":"pub fn new_luma16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of gray pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of gray pixels.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":403141,"byte_end":403203,"line_start":142,"line_end":142,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":403429,"byte_end":403441,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"new_luma_a16","qualname":"<DynamicImage>::new_luma_a16","value":"pub fn new_luma_a16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of gray\n pixels with transparency.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of gray","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":403329,"byte_end":403383,"line_start":147,"line_end":147,"column_start":5,"column_end":59}},{"value":"/ pixels with transparency.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":403388,"byte_end":403417,"line_start":148,"line_end":148,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":403619,"byte_end":403628,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"new_rgb16","qualname":"<DynamicImage>::new_rgb16","value":"pub fn new_rgb16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":403546,"byte_end":403607,"line_start":153,"line_end":153,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":403805,"byte_end":403815,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"new_rgba16","qualname":"<DynamicImage>::new_rgba16","value":"pub fn new_rgba16(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":403731,"byte_end":403793,"line_start":158,"line_end":158,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":403992,"byte_end":404002,"line_start":164,"line_end":164,"column_start":12,"column_end":22},"name":"new_rgb32f","qualname":"<DynamicImage>::new_rgb32f","value":"pub fn new_rgb32f(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGB pixels.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":403919,"byte_end":403980,"line_start":163,"line_end":163,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":404180,"byte_end":404191,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"new_rgba32f","qualname":"<DynamicImage>::new_rgba32f","value":"pub fn new_rgba32f(u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[{"value":"/ Creates a dynamic image backed by a buffer of RGBA pixels.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":404106,"byte_end":404168,"line_start":168,"line_end":168,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":404358,"byte_end":404370,"line_start":174,"line_end":174,"column_start":12,"column_end":24},"name":"from_decoder","qualname":"<DynamicImage>::from_decoder","value":"pub fn from_decoder<'a,\nimpl ImageDecoder<'a>: ImageDecoder>(impl ImageDecoder<'a>)\n-> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decodes an encoded image into a dynamic image.\n","sig":null,"attributes":[{"value":"/ Decodes an encoded image into a dynamic image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":404296,"byte_end":404346,"line_start":173,"line_end":173,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2473},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":404536,"byte_end":404543,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"to_rgb8","qualname":"<DynamicImage>::to_rgb8","value":"pub fn to_rgb8(&Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":404475,"byte_end":404524,"line_start":178,"line_end":178,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":404686,"byte_end":404694,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"to_rgb16","qualname":"<DynamicImage>::to_rgb16","value":"pub fn to_rgb16(&Self) -> Rgb16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":404625,"byte_end":404674,"line_start":183,"line_end":183,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":404839,"byte_end":404848,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"to_rgb32f","qualname":"<DynamicImage>::to_rgb32f","value":"pub fn to_rgb32f(&Self) -> Rgb32FImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGB image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":404778,"byte_end":404827,"line_start":188,"line_end":188,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2476},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":404995,"byte_end":405003,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"to_rgba8","qualname":"<DynamicImage>::to_rgba8","value":"pub fn to_rgba8(&Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":404933,"byte_end":404983,"line_start":193,"line_end":193,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2477},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":405148,"byte_end":405157,"line_start":199,"line_end":199,"column_start":12,"column_end":21},"name":"to_rgba16","qualname":"<DynamicImage>::to_rgba16","value":"pub fn to_rgba16(&Self) -> Rgba16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":405086,"byte_end":405136,"line_start":198,"line_end":198,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":405304,"byte_end":405314,"line_start":204,"line_end":204,"column_start":12,"column_end":22},"name":"to_rgba32f","qualname":"<DynamicImage>::to_rgba32f","value":"pub fn to_rgba32f(&Self) -> Rgba32FImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as an RGBA image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":405242,"byte_end":405292,"line_start":203,"line_end":203,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":405461,"byte_end":405469,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"to_luma8","qualname":"<DynamicImage>::to_luma8","value":"pub fn to_luma8(&Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":405400,"byte_end":405449,"line_start":208,"line_end":208,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2480},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":405613,"byte_end":405622,"line_start":214,"line_end":214,"column_start":12,"column_end":21},"name":"to_luma16","qualname":"<DynamicImage>::to_luma16","value":"pub fn to_luma16(&Self) -> Gray16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":405552,"byte_end":405601,"line_start":213,"line_end":213,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2481},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":405768,"byte_end":405778,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"to_luma32f","qualname":"<DynamicImage>::to_luma32f","value":"pub fn to_luma32f(&Self) -> ImageBuffer<Luma<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a Luma image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":405707,"byte_end":405756,"line_start":218,"line_end":218,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":405946,"byte_end":405960,"line_start":224,"line_end":224,"column_start":12,"column_end":26},"name":"to_luma_alpha8","qualname":"<DynamicImage>::to_luma_alpha8","value":"pub fn to_luma_alpha8(&Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":405884,"byte_end":405934,"line_start":223,"line_end":223,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2483},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":406110,"byte_end":406125,"line_start":229,"line_end":229,"column_start":12,"column_end":27},"name":"to_luma_alpha16","qualname":"<DynamicImage>::to_luma_alpha16","value":"pub fn to_luma_alpha16(&Self) -> GrayAlpha16Image","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":406048,"byte_end":406098,"line_start":228,"line_end":228,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2484},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":406277,"byte_end":406293,"line_start":234,"line_end":234,"column_start":12,"column_end":28},"name":"to_luma_alpha32f","qualname":"<DynamicImage>::to_luma_alpha32f","value":"pub fn to_luma_alpha32f(&Self) -> ImageBuffer<LumaA<f32>, Vec<f32>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[{"value":"/ Returns a copy of this image as a LumaA image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":406215,"byte_end":406265,"line_start":233,"line_end":233,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":406579,"byte_end":406588,"line_start":242,"line_end":242,"column_start":12,"column_end":21},"name":"into_rgb8","qualname":"<DynamicImage>::into_rgb8","value":"pub fn into_rgb8(Self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":406400,"byte_end":406446,"line_start":238,"line_end":238,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":406451,"byte_end":406454,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":406459,"byte_end":406529,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":406534,"byte_end":406567,"line_start":241,"line_end":241,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":406905,"byte_end":406915,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"into_rgb16","qualname":"<DynamicImage>::into_rgb16","value":"pub fn into_rgb16(Self) -> Rgb16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":406726,"byte_end":406772,"line_start":249,"line_end":249,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":406777,"byte_end":406780,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":406785,"byte_end":406855,"line_start":251,"line_end":251,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":406860,"byte_end":406893,"line_start":252,"line_end":252,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2487},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407236,"byte_end":407247,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"into_rgb32f","qualname":"<DynamicImage>::into_rgb32f","value":"pub fn into_rgb32f(Self) -> Rgb32FImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGB image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407057,"byte_end":407103,"line_start":260,"line_end":260,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407108,"byte_end":407111,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407116,"byte_end":407186,"line_start":262,"line_end":262,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407191,"byte_end":407224,"line_start":263,"line_end":263,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407572,"byte_end":407582,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"into_rgba8","qualname":"<DynamicImage>::into_rgba8","value":"pub fn into_rgba8(Self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407392,"byte_end":407439,"line_start":271,"line_end":271,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407444,"byte_end":407447,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407452,"byte_end":407522,"line_start":273,"line_end":273,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407527,"byte_end":407560,"line_start":274,"line_end":274,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2489},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407903,"byte_end":407914,"line_start":286,"line_end":286,"column_start":12,"column_end":23},"name":"into_rgba16","qualname":"<DynamicImage>::into_rgba16","value":"pub fn into_rgba16(Self) -> Rgba16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407723,"byte_end":407770,"line_start":282,"line_end":282,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407775,"byte_end":407778,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407783,"byte_end":407853,"line_start":284,"line_end":284,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":407858,"byte_end":407891,"line_start":285,"line_end":285,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408239,"byte_end":408251,"line_start":297,"line_end":297,"column_start":12,"column_end":24},"name":"into_rgba32f","qualname":"<DynamicImage>::into_rgba32f","value":"pub fn into_rgba32f(Self) -> Rgba32FImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a RGBA image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408059,"byte_end":408106,"line_start":293,"line_end":293,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408111,"byte_end":408114,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408119,"byte_end":408189,"line_start":295,"line_end":295,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408194,"byte_end":408227,"line_start":296,"line_end":296,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408579,"byte_end":408589,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"into_luma8","qualname":"<DynamicImage>::into_luma8","value":"pub fn into_luma8(Self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408399,"byte_end":408446,"line_start":304,"line_end":304,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408451,"byte_end":408454,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408459,"byte_end":408529,"line_start":306,"line_end":306,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408534,"byte_end":408567,"line_start":307,"line_end":307,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408910,"byte_end":408921,"line_start":319,"line_end":319,"column_start":12,"column_end":23},"name":"into_luma16","qualname":"<DynamicImage>::into_luma16","value":"pub fn into_luma16(Self) -> Gray16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a Luma image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408730,"byte_end":408777,"line_start":315,"line_end":315,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408782,"byte_end":408785,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408790,"byte_end":408860,"line_start":317,"line_end":317,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":408865,"byte_end":408898,"line_start":318,"line_end":318,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":409247,"byte_end":409263,"line_start":330,"line_end":330,"column_start":12,"column_end":28},"name":"into_luma_alpha8","qualname":"<DynamicImage>::into_luma_alpha8","value":"pub fn into_luma_alpha8(Self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":409066,"byte_end":409114,"line_start":326,"line_end":326,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":409119,"byte_end":409122,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":409127,"byte_end":409197,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":409202,"byte_end":409235,"line_start":329,"line_end":329,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":409597,"byte_end":409614,"line_start":341,"line_end":341,"column_start":12,"column_end":29},"name":"into_luma_alpha16","qualname":"<DynamicImage>::into_luma_alpha16","value":"pub fn into_luma_alpha16(Self) -> GrayAlpha16Image","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[{"value":"/ Consume the image and returns a LumaA image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":409416,"byte_end":409464,"line_start":337,"line_end":337,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":409469,"byte_end":409472,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ If the image was already the correct format, it is returned as is.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":409477,"byte_end":409547,"line_start":339,"line_end":339,"column_start":5,"column_end":75}},{"value":"/ Otherwise, a copy is created.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":409552,"byte_end":409585,"line_start":340,"line_end":340,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":410001,"byte_end":410005,"line_start":352,"line_end":352,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"pub fn crop(&mut Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":409771,"byte_end":409842,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":409847,"byte_end":409850,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ Note: this method does *not* modify the object,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":409855,"byte_end":409906,"line_start":350,"line_end":350,"column_start":5,"column_end":56}},{"value":"/ and its signature will be replaced with `crop_imm()`'s in the 0.24 release","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":409911,"byte_end":409989,"line_start":351,"line_end":351,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2496},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":410262,"byte_end":410270,"line_start":357,"line_end":357,"column_start":12,"column_end":20},"name":"crop_imm","qualname":"<DynamicImage>::crop_imm","value":"pub fn crop_imm(&Self, u32, u32, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut-out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[{"value":"/ Return a cut-out of this image delimited by the bounding rectangle.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":410179,"byte_end":410250,"line_start":356,"line_end":356,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2497},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":410495,"byte_end":410502,"line_start":362,"line_end":362,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"pub fn as_rgb8(&Self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGB image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":410440,"byte_end":410483,"line_start":361,"line_end":361,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":410717,"byte_end":410728,"line_start":370,"line_end":370,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"pub fn as_mut_rgb8(&mut Self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGB image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":410654,"byte_end":410705,"line_start":369,"line_end":369,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":410948,"byte_end":410956,"line_start":378,"line_end":378,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"pub fn as_rgba8(&Self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit RGBA image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":410892,"byte_end":410936,"line_start":377,"line_end":377,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":411174,"byte_end":411186,"line_start":386,"line_end":386,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"pub fn as_mut_rgba8(&mut Self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit RGBA image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":411110,"byte_end":411162,"line_start":385,"line_end":385,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":411413,"byte_end":411421,"line_start":394,"line_end":394,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"pub fn as_luma8(&Self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":411352,"byte_end":411401,"line_start":393,"line_end":393,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":411644,"byte_end":411656,"line_start":402,"line_end":402,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"pub fn as_mut_luma8(&mut Self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":411575,"byte_end":411632,"line_start":401,"line_end":401,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":411905,"byte_end":411919,"line_start":410,"line_end":410,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"pub fn as_luma_alpha8(&Self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":411822,"byte_end":411893,"line_start":409,"line_end":409,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":412170,"byte_end":412188,"line_start":418,"line_end":418,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"pub fn as_mut_luma_alpha8(&mut Self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 8bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":412079,"byte_end":412158,"line_start":417,"line_end":417,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":412416,"byte_end":412424,"line_start":426,"line_end":426,"column_start":12,"column_end":20},"name":"as_rgb16","qualname":"<DynamicImage>::as_rgb16","value":"pub fn as_rgb16(&Self) -> Option<&Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGB image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":412360,"byte_end":412404,"line_start":425,"line_end":425,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2506},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":412643,"byte_end":412655,"line_start":434,"line_end":434,"column_start":12,"column_end":24},"name":"as_mut_rgb16","qualname":"<DynamicImage>::as_mut_rgb16","value":"pub fn as_mut_rgb16(&mut Self) -> Option<&mut Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGB image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":412579,"byte_end":412631,"line_start":433,"line_end":433,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":412879,"byte_end":412888,"line_start":442,"line_end":442,"column_start":12,"column_end":21},"name":"as_rgba16","qualname":"<DynamicImage>::as_rgba16","value":"pub fn as_rgba16(&Self) -> Option<&Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGBA image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":412822,"byte_end":412867,"line_start":441,"line_end":441,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":413110,"byte_end":413123,"line_start":450,"line_end":450,"column_start":12,"column_end":25},"name":"as_mut_rgba16","qualname":"<DynamicImage>::as_mut_rgba16","value":"pub fn as_mut_rgba16(&mut Self) -> Option<&mut Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGBA image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":413045,"byte_end":413098,"line_start":449,"line_end":449,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":413348,"byte_end":413357,"line_start":458,"line_end":458,"column_start":12,"column_end":21},"name":"as_rgb32f","qualname":"<DynamicImage>::as_rgb32f","value":"pub fn as_rgb32f(&Self) -> Option<&Rgb32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit RGB image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":413292,"byte_end":413336,"line_start":457,"line_end":457,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":413578,"byte_end":413591,"line_start":466,"line_end":466,"column_start":12,"column_end":25},"name":"as_mut_rgb32f","qualname":"<DynamicImage>::as_mut_rgb32f","value":"pub fn as_mut_rgb32f(&mut Self) -> Option<&mut Rgb32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 32bit RGB image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 32bit RGB image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":413514,"byte_end":413566,"line_start":465,"line_end":465,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":413817,"byte_end":413827,"line_start":474,"line_end":474,"column_start":12,"column_end":22},"name":"as_rgba32f","qualname":"<DynamicImage>::as_rgba32f","value":"pub fn as_rgba32f(&Self) -> Option<&Rgba32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 32bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 32bit RGBA image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":413760,"byte_end":413805,"line_start":473,"line_end":473,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":414051,"byte_end":414065,"line_start":482,"line_end":482,"column_start":12,"column_end":26},"name":"as_mut_rgba32f","qualname":"<DynamicImage>::as_mut_rgba32f","value":"pub fn as_mut_rgba32f(&mut Self) -> Option<&mut Rgba32FImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit RGBA image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":413986,"byte_end":414039,"line_start":481,"line_end":481,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":414298,"byte_end":414307,"line_start":490,"line_end":490,"column_start":12,"column_end":21},"name":"as_luma16","qualname":"<DynamicImage>::as_luma16","value":"pub fn as_luma16(&Self) -> Option<&Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":414236,"byte_end":414286,"line_start":489,"line_end":489,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":414534,"byte_end":414547,"line_start":498,"line_end":498,"column_start":12,"column_end":25},"name":"as_mut_luma16","qualname":"<DynamicImage>::as_mut_luma16","value":"pub fn as_mut_luma16(&mut Self) -> Option<&mut Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":414464,"byte_end":414522,"line_start":497,"line_end":497,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":414800,"byte_end":414815,"line_start":506,"line_end":506,"column_start":12,"column_end":27},"name":"as_luma_alpha16","qualname":"<DynamicImage>::as_luma_alpha16","value":"pub fn as_luma_alpha16(&Self) -> Option<&GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":414716,"byte_end":414788,"line_start":505,"line_end":505,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":415070,"byte_end":415089,"line_start":514,"line_end":514,"column_start":12,"column_end":31},"name":"as_mut_luma_alpha16","qualname":"<DynamicImage>::as_mut_luma_alpha16","value":"pub fn as_mut_luma_alpha16(&mut Self) -> Option<&mut GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[{"value":"/ Return a mutable reference to an 16bit Grayscale image with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":414978,"byte_end":415058,"line_start":513,"line_end":513,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":415348,"byte_end":415366,"line_start":522,"line_end":522,"column_start":12,"column_end":30},"name":"as_flat_samples_u8","qualname":"<DynamicImage>::as_flat_samples_u8","value":"pub fn as_flat_samples_u8(&Self) -> Option<FlatSamples<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 8 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 8 bit per channel images.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":415264,"byte_end":415336,"line_start":521,"line_end":521,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":415853,"byte_end":415872,"line_start":533,"line_end":533,"column_start":12,"column_end":31},"name":"as_flat_samples_u16","qualname":"<DynamicImage>::as_flat_samples_u16","value":"pub fn as_flat_samples_u16(&Self) -> Option<FlatSamples<&[u16]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 16 bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 16 bit per channel images.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":415768,"byte_end":415841,"line_start":532,"line_end":532,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":416363,"byte_end":416382,"line_start":544,"line_end":544,"column_start":12,"column_end":31},"name":"as_flat_samples_f32","qualname":"<DynamicImage>::as_flat_samples_f32","value":"pub fn as_flat_samples_f32(&Self) -> Option<FlatSamples<&[f32]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 32bit per channel images.\n","sig":null,"attributes":[{"value":"/ Return a view on the raw sample buffer for 32bit per channel images.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":416279,"byte_end":416351,"line_start":543,"line_end":543,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":416713,"byte_end":416721,"line_start":553,"line_end":553,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<DynamicImage>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a native endian byte slice.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a native endian byte slice.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":416640,"byte_end":416701,"line_start":552,"line_end":552,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2522},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":417434,"byte_end":417444,"line_start":571,"line_end":571,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<DynamicImage>::into_bytes","value":"pub fn into_bytes(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector. If the `ImageBuffer`\n container is `Vec<u8>`, this operation is free. Otherwise, a copy\n is returned.\n","sig":null,"attributes":[{"value":"/ Return this image's pixels as a byte vector. If the `ImageBuffer`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":417258,"byte_end":417327,"line_start":568,"line_end":568,"column_start":5,"column_end":74}},{"value":"/ container is `Vec<u8>`, this operation is free. Otherwise, a copy","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":417332,"byte_end":417401,"line_start":569,"line_end":569,"column_start":5,"column_end":74}},{"value":"/ is returned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":417406,"byte_end":417422,"line_start":570,"line_end":570,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":418566,"byte_end":418574,"line_start":594,"line_end":594,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<DynamicImage>::to_bytes","value":"pub fn to_bytes(&Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return a copy of this image's pixels as a byte vector.\n Deprecated, because it does nothing but hide an expensive clone operation.\n","sig":null,"attributes":[{"value":"/ Return a copy of this image's pixels as a byte vector.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":418281,"byte_end":418339,"line_start":588,"line_end":588,"column_start":5,"column_end":63}},{"value":"/ Deprecated, because it does nothing but hide an expensive clone operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":418344,"byte_end":418422,"line_start":589,"line_end":589,"column_start":5,"column_end":83}},{"value":"deprecated(since = \"0.24.0\", note =\n\"use `image.into_bytes()` or `image.as_bytes().to_vec()` instead\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":418427,"byte_end":418554,"line_start":590,"line_end":593,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":418686,"byte_end":418691,"line_start":599,"line_end":599,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"pub fn color(&Self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[{"value":"/ Return this image's color type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":418639,"byte_end":418674,"line_start":598,"line_end":598,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":419503,"byte_end":419508,"line_start":615,"line_end":615,"column_start":12,"column_end":17},"name":"width","qualname":"<DynamicImage>::width","value":"pub fn width(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the width of the underlying image\n","sig":null,"attributes":[{"value":"/ Returns the width of the underlying image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":419446,"byte_end":419491,"line_start":614,"line_end":614,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":419645,"byte_end":419651,"line_start":620,"line_end":620,"column_start":12,"column_end":18},"name":"height","qualname":"<DynamicImage>::height","value":"pub fn height(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the height of the underlying image\n","sig":null,"attributes":[{"value":"/ Returns the height of the underlying image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":419587,"byte_end":419633,"line_start":619,"line_end":619,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":419923,"byte_end":419932,"line_start":627,"line_end":627,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"pub fn grayscale(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n Returns `Luma` images in most cases. However, for `f32` images,\n this will return a grayscale `Rgb/Rgba` image instead.\n","sig":null,"attributes":[{"value":"/ Return a grayscale version of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":419731,"byte_end":419776,"line_start":624,"line_end":624,"column_start":5,"column_end":50}},{"value":"/ Returns `Luma` images in most cases. However, for `f32` images,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":419781,"byte_end":419848,"line_start":625,"line_end":625,"column_start":5,"column_end":72}},{"value":"/ this will return a grayscale `Rgb/Rgba` image instead.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":419853,"byte_end":419911,"line_start":626,"line_end":626,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":421285,"byte_end":421291,"line_start":656,"line_end":656,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"pub fn invert(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[{"value":"/ Invert the colors of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":421199,"byte_end":421235,"line_start":654,"line_end":654,"column_start":5,"column_end":41}},{"value":"/ This method operates inplace.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":421240,"byte_end":421273,"line_start":655,"line_end":655,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":421646,"byte_end":421652,"line_start":664,"line_end":664,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"pub fn resize(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by `nwidth` and `nheight`.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":421377,"byte_end":421436,"line_start":660,"line_end":660,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":421441,"byte_end":421504,"line_start":661,"line_end":661,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":421509,"byte_end":421571,"line_start":662,"line_end":662,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by `nwidth` and `nheight`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":421576,"byte_end":421634,"line_start":663,"line_end":663,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":422108,"byte_end":422120,"line_start":674,"line_end":674,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"pub fn resize_exact(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n `nwidth` and `nheight` are the new image's dimensions\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":421914,"byte_end":421973,"line_start":671,"line_end":671,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":421978,"byte_end":422034,"line_start":672,"line_end":672,"column_start":5,"column_end":61}},{"value":"/ `nwidth` and `nheight` are the new image's dimensions","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":422039,"byte_end":422096,"line_start":673,"line_end":673,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":422803,"byte_end":422812,"line_start":691,"line_end":691,"column_start":12,"column_end":21},"name":"thumbnail","qualname":"<DynamicImage>::thumbnail","value":"pub fn thumbnail(&Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to fit within a specific size.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by `nwidth` and `nheight`.","sig":null,"attributes":[{"value":"/ Scale this image down to fit within a specific size.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":422336,"byte_end":422392,"line_start":683,"line_end":683,"column_start":5,"column_end":61}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":422397,"byte_end":422460,"line_start":684,"line_end":684,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":422465,"byte_end":422527,"line_start":685,"line_end":685,"column_start":5,"column_end":67}},{"value":"/ within the bounds specified by `nwidth` and `nheight`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":422532,"byte_end":422590,"line_start":686,"line_end":686,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":422595,"byte_end":422598,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":422603,"byte_end":422666,"line_start":688,"line_end":688,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":422671,"byte_end":422721,"line_start":689,"line_end":689,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":422726,"byte_end":422791,"line_start":690,"line_end":690,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":423412,"byte_end":423427,"line_start":703,"line_end":703,"column_start":12,"column_end":27},"name":"thumbnail_exact","qualname":"<DynamicImage>::thumbnail_exact","value":"pub fn thumbnail_exact(&Self, u32, u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to a specific size.\n Returns a new image. Does not preserve aspect ratio.\n `nwidth` and `nheight` are the new image's dimensions.\n This method uses a fast integer algorithm where each source\n pixel contributes to exactly one target pixel.\n May give aliasing artifacts if new size is close to old size.\n","sig":null,"attributes":[{"value":"/ Scale this image down to a specific size.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":423038,"byte_end":423083,"line_start":697,"line_end":697,"column_start":5,"column_end":50}},{"value":"/ Returns a new image. Does not preserve aspect ratio.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":423088,"byte_end":423144,"line_start":698,"line_end":698,"column_start":5,"column_end":61}},{"value":"/ `nwidth` and `nheight` are the new image's dimensions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":423149,"byte_end":423207,"line_start":699,"line_end":699,"column_start":5,"column_end":63}},{"value":"/ This method uses a fast integer algorithm where each source","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":423212,"byte_end":423275,"line_start":700,"line_end":700,"column_start":5,"column_end":68}},{"value":"/ pixel contributes to exactly one target pixel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":423280,"byte_end":423330,"line_start":701,"line_end":701,"column_start":5,"column_end":55}},{"value":"/ May give aliasing artifacts if new size is close to old size.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":423335,"byte_end":423400,"line_start":702,"line_end":702,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":423939,"byte_end":423953,"line_start":713,"line_end":713,"column_start":12,"column_end":26},"name":"resize_to_fill","qualname":"<DynamicImage>::resize_to_fill","value":"pub fn resize_to_fill(&Self, u32, u32, imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the larger (relative to aspect ratio) of the bounds\n specified by `nwidth` and `nheight`, then cropped to\n fit within the other bound.\n","sig":null,"attributes":[{"value":"/ Resize this image using the specified filter algorithm.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":423569,"byte_end":423628,"line_start":707,"line_end":707,"column_start":5,"column_end":64}},{"value":"/ Returns a new image. The image's aspect ratio is preserved.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":423633,"byte_end":423696,"line_start":708,"line_end":708,"column_start":5,"column_end":68}},{"value":"/ The image is scaled to the maximum possible size that fits","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":423701,"byte_end":423763,"line_start":709,"line_end":709,"column_start":5,"column_end":67}},{"value":"/ within the larger (relative to aspect ratio) of the bounds","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":423768,"byte_end":423830,"line_start":710,"line_end":710,"column_start":5,"column_end":67}},{"value":"/ specified by `nwidth` and `nheight`, then cropped to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":423835,"byte_end":423891,"line_start":711,"line_end":711,"column_start":5,"column_end":61}},{"value":"/ fit within the other bound.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":423896,"byte_end":423927,"line_start":712,"line_end":712,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2534},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":424769,"byte_end":424773,"line_start":736,"line_end":736,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"pub fn blur(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n `sigma` is a measure of how much to blur by.\n","sig":null,"attributes":[{"value":"/ Performs a Gaussian blur on this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":424661,"byte_end":424704,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ `sigma` is a measure of how much to blur by.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":424709,"byte_end":424757,"line_start":735,"line_end":735,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":425143,"byte_end":425152,"line_start":745,"line_end":745,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"pub fn unsharpen(&Self, f32, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n `sigma` is the amount to blur the image by.\n `threshold` is a control of how much to sharpen.","sig":null,"attributes":[{"value":"/ Performs an unsharpen mask on this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":424885,"byte_end":424930,"line_start":740,"line_end":740,"column_start":5,"column_end":50}},{"value":"/ `sigma` is the amount to blur the image by.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":424935,"byte_end":424982,"line_start":741,"line_end":741,"column_start":5,"column_end":52}},{"value":"/ `threshold` is a control of how much to sharpen.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":424987,"byte_end":425039,"line_start":742,"line_end":742,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":425044,"byte_end":425047,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ See <https://en.wikipedia.org/wiki/Unsharp_masking#Digital_unsharp_masking>","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":425052,"byte_end":425131,"line_start":744,"line_end":744,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2536},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":425361,"byte_end":425370,"line_start":750,"line_end":750,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"pub fn filter3x3(&Self, &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[{"value":"/ Filters this image with the specified 3x3 kernel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":425296,"byte_end":425349,"line_start":749,"line_end":749,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":425776,"byte_end":425791,"line_start":761,"line_end":761,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"pub fn adjust_contrast(&Self, f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n `contrast` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[{"value":"/ Adjust the contrast of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":425577,"byte_end":425615,"line_start":758,"line_end":758,"column_start":5,"column_end":43}},{"value":"/ `contrast` is the amount to adjust the contrast by.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":425620,"byte_end":425675,"line_start":759,"line_end":759,"column_start":5,"column_end":60}},{"value":"/ Negative values decrease the contrast and positive values increase the contrast.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":425680,"byte_end":425764,"line_start":760,"line_end":760,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":426087,"byte_end":426095,"line_start":768,"line_end":768,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"pub fn brighten(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n `value` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[{"value":"/ Brighten the pixels of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":425899,"byte_end":425937,"line_start":765,"line_end":765,"column_start":5,"column_end":43}},{"value":"/ `value` is the amount to brighten each pixel by.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":425942,"byte_end":425994,"line_start":766,"line_end":766,"column_start":5,"column_end":57}},{"value":"/ Negative values decrease the brightness and positive values increase it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":425999,"byte_end":426075,"line_start":767,"line_end":767,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":426443,"byte_end":426452,"line_start":776,"line_end":776,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"pub fn huerotate(&Self, i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[{"value":"/ Hue rotate the supplied image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":426211,"byte_end":426245,"line_start":772,"line_end":772,"column_start":5,"column_end":39}},{"value":"/ `value` is the degrees to rotate each pixel by.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":426250,"byte_end":426301,"line_start":773,"line_end":773,"column_start":5,"column_end":56}},{"value":"/ 0 and 360 do nothing, the rest rotates by the given degree value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":426306,"byte_end":426375,"line_start":774,"line_end":774,"column_start":5,"column_end":74}},{"value":"/ just like the css webkit filter hue-rotate(180)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":426380,"byte_end":426431,"line_start":775,"line_end":775,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2540},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":426611,"byte_end":426616,"line_start":781,"line_end":781,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"pub fn flipv(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[{"value":"/ Flip this image vertically","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":426569,"byte_end":426599,"line_start":780,"line_end":780,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":426762,"byte_end":426767,"line_start":786,"line_end":786,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"pub fn fliph(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[{"value":"/ Flip this image horizontally","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":426718,"byte_end":426750,"line_start":785,"line_end":785,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":426926,"byte_end":426934,"line_start":791,"line_end":791,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"pub fn rotate90(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 90 degrees clockwise.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":426871,"byte_end":426914,"line_start":790,"line_end":790,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":427087,"byte_end":427096,"line_start":796,"line_end":796,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"pub fn rotate180(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 180 degrees clockwise.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":427031,"byte_end":427075,"line_start":795,"line_end":795,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":427250,"byte_end":427259,"line_start":801,"line_end":801,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"pub fn rotate270(&Self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[{"value":"/ Rotate this image 270 degrees clockwise.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":427194,"byte_end":427238,"line_start":800,"line_end":800,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":427553,"byte_end":427561,"line_start":809,"line_end":809,"column_start":12,"column_end":20},"name":"write_to","qualname":"<DynamicImage>::write_to","value":"pub fn write_to<W: Write + Seek, F: Into<ImageOutputFormat>>(&Self, &mut W, F)\n-> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```.","sig":null,"attributes":[{"value":"/ Encode this image and write it to ```w```.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":427357,"byte_end":427403,"line_start":805,"line_end":805,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":427408,"byte_end":427411,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ Assumes the writer is buffered. In most cases,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":427416,"byte_end":427466,"line_start":807,"line_end":807,"column_start":5,"column_end":55}},{"value":"/ you should wrap your writer in a `BufWriter` for best performance.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":427471,"byte_end":427541,"line_start":808,"line_end":808,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":429186,"byte_end":429190,"line_start":857,"line_end":857,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"pub fn save<Q>(&Self, Q) -> ImageResult<()> where Q: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":429052,"byte_end":429105,"line_start":854,"line_end":854,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":429110,"byte_end":429113,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ The image format is derived from the file extension.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":429118,"byte_end":429174,"line_start":856,"line_end":856,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":429537,"byte_end":429553,"line_start":869,"line_end":869,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<DynamicImage>::save_with_format","value":"pub fn save_with_format<Q>(&Self, Q, ImageFormat) -> ImageResult<()> where\nQ: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[{"value":"/ Saves the buffer to a file at the specified path in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":429330,"byte_end":429385,"line_start":864,"line_end":864,"column_start":5,"column_end":60}},{"value":"/ the specified format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":429390,"byte_end":429415,"line_start":865,"line_end":865,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":429420,"byte_end":429423,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ See [`save_buffer_with_format`](fn.save_buffer_with_format.html) for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":429428,"byte_end":429500,"line_start":867,"line_end":867,"column_start":5,"column_end":77}},{"value":"/ supported types.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":429505,"byte_end":429525,"line_start":868,"line_end":868,"column_start":5,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":2590},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437429,"byte_end":437433,"line_start":1101,"line_end":1101,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"pub fn open<P>(P) -> ImageResult<DynamicImage> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.","sig":null,"attributes":[{"value":"/ Open the image located at the path specified.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437127,"byte_end":437176,"line_start":1094,"line_end":1094,"column_start":1,"column_end":50}},{"value":"/ The image's format is determined from the path's file extension.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437177,"byte_end":437245,"line_start":1095,"line_end":1095,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437246,"byte_end":437249,"line_start":1096,"line_end":1096,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437250,"byte_end":437346,"line_start":1097,"line_end":1097,"column_start":1,"column_end":97}},{"value":"/ content before its path.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437347,"byte_end":437375,"line_start":1098,"line_end":1098,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437376,"byte_end":437379,"line_start":1099,"line_end":1099,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437380,"byte_end":437421,"line_start":1100,"line_end":1100,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":2592},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":438012,"byte_end":438028,"line_start":1116,"line_end":1116,"column_start":8,"column_end":24},"name":"image_dimensions","qualname":"::dynimage::image_dimensions","value":"pub fn image_dimensions<P>(P) -> ImageResult<(u32, u32)> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Read a tuple containing the (width, height) of the image located at the specified path.\n This is faster than fully loading the image and then getting its dimensions.","sig":null,"attributes":[{"value":"/ Read a tuple containing the (width, height) of the image located at the specified path.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437623,"byte_end":437714,"line_start":1109,"line_end":1109,"column_start":1,"column_end":92}},{"value":"/ This is faster than fully loading the image and then getting its dimensions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437715,"byte_end":437795,"line_start":1110,"line_end":1110,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437796,"byte_end":437799,"line_start":1111,"line_end":1111,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses, including guessing the format based on the file's","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437800,"byte_end":437896,"line_start":1112,"line_end":1112,"column_start":1,"column_end":97}},{"value":"/ content before its path or manually supplying the format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437897,"byte_end":437958,"line_start":1113,"line_end":1113,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437959,"byte_end":437962,"line_start":1114,"line_end":1114,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":437963,"byte_end":438004,"line_start":1115,"line_end":1115,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":2594},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":438611,"byte_end":438622,"line_start":1131,"line_end":1131,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"pub fn save_buffer<P>(P, &[u8], u32, u32, color::ColorType) -> ImageResult<()>\nwhere P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":438228,"byte_end":438290,"line_start":1124,"line_end":1124,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":438291,"byte_end":438294,"line_start":1125,"line_end":1125,"column_start":1,"column_end":4}},{"value":"/ The image format is derived from the file extension. The buffer is assumed to have","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":438295,"byte_end":438381,"line_start":1126,"line_end":1126,"column_start":1,"column_end":87}},{"value":"/ the correct format according to the specified color type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":438382,"byte_end":438443,"line_start":1127,"line_end":1127,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":438444,"byte_end":438447,"line_start":1128,"line_end":1128,"column_start":1,"column_end":4}},{"value":"/ This will lead to corrupted files if the buffer contains malformed data. Currently only","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":438448,"byte_end":438539,"line_start":1129,"line_end":1129,"column_start":1,"column_end":92}},{"value":"/ jpeg, png, ico, pnm, bmp, exr and tiff files are supported.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":438540,"byte_end":438603,"line_start":1130,"line_end":1130,"column_start":1,"column_end":64}}]},{"kind":"Function","id":{"krate":0,"index":2596},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439281,"byte_end":439304,"line_start":1153,"line_end":1153,"column_start":8,"column_end":31},"name":"save_buffer_with_format","qualname":"::dynimage::save_buffer_with_format","value":"pub fn save_buffer_with_format<P>(P, &[u8], u32, u32, color::ColorType,\nImageFormat) -> ImageResult<()> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified\n in the specified format.","sig":null,"attributes":[{"value":"/ Saves the supplied buffer to a file at the path specified","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":438928,"byte_end":438989,"line_start":1145,"line_end":1145,"column_start":1,"column_end":62}},{"value":"/ in the specified format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":438990,"byte_end":439018,"line_start":1146,"line_end":1146,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439019,"byte_end":439022,"line_start":1147,"line_end":1147,"column_start":1,"column_end":4}},{"value":"/ The buffer is assumed to have the correct format according","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439023,"byte_end":439085,"line_start":1148,"line_end":1148,"column_start":1,"column_end":63}},{"value":"/ to the specified color type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439086,"byte_end":439118,"line_start":1149,"line_end":1149,"column_start":1,"column_end":33}},{"value":"/ This will lead to corrupted files if the buffer contains","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439119,"byte_end":439179,"line_start":1150,"line_end":1150,"column_start":1,"column_end":61}},{"value":"/ malformed data. Currently only jpeg, png, ico, bmp, exr and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439180,"byte_end":439243,"line_start":1151,"line_end":1151,"column_start":1,"column_end":64}},{"value":"/ tiff files are supported.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439244,"byte_end":439273,"line_start":1152,"line_end":1152,"column_start":1,"column_end":30}}]},{"kind":"Function","id":{"krate":0,"index":2598},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":440098,"byte_end":440122,"line_start":1180,"line_end":1180,"column_start":8,"column_end":32},"name":"write_buffer_with_format","qualname":"::dynimage::write_buffer_with_format","value":"pub fn write_buffer_with_format<W,\nF>(&mut W, &[u8], u32, u32, color::ColorType, F) -> ImageResult<()> where\nW: Write + Seek, F: Into<ImageOutputFormat>","parent":null,"children":[],"decl_id":null,"docs":" Writes the supplied buffer to a writer in the specified format.","sig":null,"attributes":[{"value":"/ Writes the supplied buffer to a writer in the specified format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439623,"byte_end":439690,"line_start":1168,"line_end":1168,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439691,"byte_end":439694,"line_start":1169,"line_end":1169,"column_start":1,"column_end":4}},{"value":"/ The buffer is assumed to have the correct format according","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439695,"byte_end":439757,"line_start":1170,"line_end":1170,"column_start":1,"column_end":63}},{"value":"/ to the specified color type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439758,"byte_end":439790,"line_start":1171,"line_end":1171,"column_start":1,"column_end":33}},{"value":"/ This will lead to corrupted writers if the buffer contains","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439791,"byte_end":439853,"line_start":1172,"line_end":1172,"column_start":1,"column_end":63}},{"value":"/ malformed data.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439854,"byte_end":439873,"line_start":1173,"line_end":1173,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439874,"byte_end":439877,"line_start":1174,"line_end":1174,"column_start":1,"column_end":4}},{"value":"/ See [`ImageOutputFormat`](../enum.ImageOutputFormat.html) for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439878,"byte_end":439943,"line_start":1175,"line_end":1175,"column_start":1,"column_end":66}},{"value":"/ supported types.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439944,"byte_end":439964,"line_start":1176,"line_end":1176,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439965,"byte_end":439968,"line_start":1177,"line_end":1177,"column_start":1,"column_end":4}},{"value":"/ Assumes the writer is buffered. In most cases,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":439969,"byte_end":440019,"line_start":1178,"line_end":1178,"column_start":1,"column_end":51}},{"value":"/ you should wrap your writer in a `BufWriter` for best performance.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":440020,"byte_end":440090,"line_start":1179,"line_end":1179,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":2601},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":440725,"byte_end":440741,"line_start":1204,"line_end":1204,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"pub fn load_from_memory(&[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":440481,"byte_end":440521,"line_start":1196,"line_end":1196,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":440522,"byte_end":440525,"line_start":1197,"line_end":1197,"column_start":1,"column_end":4}},{"value":"/ Makes an educated guess about the image format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":440526,"byte_end":440577,"line_start":1198,"line_end":1198,"column_start":1,"column_end":52}},{"value":"/ TGA is not supported by this function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":440578,"byte_end":440620,"line_start":1199,"line_end":1199,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":440621,"byte_end":440624,"line_start":1200,"line_end":1200,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":440625,"byte_end":440671,"line_start":1201,"line_end":1201,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":440672,"byte_end":440675,"line_start":1202,"line_end":1202,"column_start":1,"column_end":4}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":440676,"byte_end":440717,"line_start":1203,"line_end":1203,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":2602},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":441223,"byte_end":441251,"line_start":1219,"line_end":1219,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"pub fn load_from_memory_with_format(&[u8], ImageFormat)\n-> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"/ Create a new image from a byte slice","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":440896,"byte_end":440936,"line_start":1209,"line_end":1209,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":440937,"byte_end":440940,"line_start":1210,"line_end":1210,"column_start":1,"column_end":4}},{"value":"/ This is just a simple wrapper that constructs an `std::io::Cursor` around the buffer and then","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":440941,"byte_end":441038,"line_start":1211,"line_end":1211,"column_start":1,"column_end":98}},{"value":"/ calls `load` with that reader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":441039,"byte_end":441073,"line_start":1212,"line_end":1212,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":441074,"byte_end":441077,"line_start":1213,"line_end":1213,"column_start":1,"column_end":4}},{"value":"/ Try [`io::Reader`] for more advanced uses.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":441078,"byte_end":441124,"line_start":1214,"line_end":1214,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":441125,"byte_end":441128,"line_start":1215,"line_end":1215,"column_start":1,"column_end":4}},{"value":"/ [`load`]: fn.load.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":441129,"byte_end":441155,"line_start":1216,"line_end":1216,"column_start":1,"column_end":27}},{"value":"/ [`io::Reader`]: io/struct.Reader.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":441156,"byte_end":441197,"line_start":1217,"line_end":1217,"column_start":1,"column_end":42}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":441198,"byte_end":441215,"line_start":1218,"line_end":1218,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3950},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446011,"byte_end":446014,"line_start":30,"line_end":30,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageFormat::Png","value":"ImageFormat::Png","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"/ An Image in PNG Format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":445980,"byte_end":446006,"line_start":29,"line_end":29,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3952},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446053,"byte_end":446057,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageFormat::Jpeg","value":"ImageFormat::Jpeg","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[{"value":"/ An Image in JPEG Format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446021,"byte_end":446048,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3954},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446095,"byte_end":446098,"line_start":36,"line_end":36,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageFormat::Gif","value":"ImageFormat::Gif","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"/ An Image in GIF Format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446064,"byte_end":446090,"line_start":35,"line_end":35,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3956},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446137,"byte_end":446141,"line_start":39,"line_end":39,"column_start":5,"column_end":9},"name":"WebP","qualname":"::image::ImageFormat::WebP","value":"ImageFormat::WebP","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[{"value":"/ An Image in WEBP Format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446105,"byte_end":446132,"line_start":38,"line_end":38,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3958},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446187,"byte_end":446190,"line_start":42,"line_end":42,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageFormat::Pnm","value":"ImageFormat::Pnm","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[{"value":"/ An Image in general PNM Format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446148,"byte_end":446182,"line_start":41,"line_end":41,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3960},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446229,"byte_end":446233,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"Tiff","qualname":"::image::ImageFormat::Tiff","value":"ImageFormat::Tiff","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[{"value":"/ An Image in TIFF Format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446197,"byte_end":446224,"line_start":44,"line_end":44,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3962},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446271,"byte_end":446274,"line_start":48,"line_end":48,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageFormat::Tga","value":"ImageFormat::Tga","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[{"value":"/ An Image in TGA Format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446240,"byte_end":446266,"line_start":47,"line_end":47,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3964},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446312,"byte_end":446315,"line_start":51,"line_end":51,"column_start":5,"column_end":8},"name":"Dds","qualname":"::image::ImageFormat::Dds","value":"ImageFormat::Dds","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":" An Image in DDS Format\n","sig":null,"attributes":[{"value":"/ An Image in DDS Format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446281,"byte_end":446307,"line_start":50,"line_end":50,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3966},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446353,"byte_end":446356,"line_start":54,"line_end":54,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageFormat::Bmp","value":"ImageFormat::Bmp","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"/ An Image in BMP Format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446322,"byte_end":446348,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3968},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446394,"byte_end":446397,"line_start":57,"line_end":57,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageFormat::Ico","value":"ImageFormat::Ico","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"/ An Image in ICO Format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446363,"byte_end":446389,"line_start":56,"line_end":56,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3970},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446444,"byte_end":446447,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"name":"Hdr","qualname":"::image::ImageFormat::Hdr","value":"ImageFormat::Hdr","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[{"value":"/ An Image in Radiance HDR Format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446404,"byte_end":446439,"line_start":59,"line_end":59,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3972},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446489,"byte_end":446496,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"OpenExr","qualname":"::image::ImageFormat::OpenExr","value":"ImageFormat::OpenExr","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":" An Image in OpenEXR Format\n","sig":null,"attributes":[{"value":"/ An Image in OpenEXR Format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446454,"byte_end":446484,"line_start":62,"line_end":62,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3974},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446539,"byte_end":446547,"line_start":66,"line_end":66,"column_start":5,"column_end":13},"name":"Farbfeld","qualname":"::image::ImageFormat::Farbfeld","value":"ImageFormat::Farbfeld","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":" An Image in farbfeld Format\n","sig":null,"attributes":[{"value":"/ An Image in farbfeld Format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446503,"byte_end":446534,"line_start":65,"line_end":65,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3976},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446587,"byte_end":446591,"line_start":69,"line_end":69,"column_start":5,"column_end":9},"name":"Avif","qualname":"::image::ImageFormat::Avif","value":"ImageFormat::Avif","parent":{"krate":0,"index":3949},"children":[],"decl_id":null,"docs":" An Image in AVIF format.\n","sig":null,"attributes":[{"value":"/ An Image in AVIF format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446554,"byte_end":446582,"line_start":68,"line_end":68,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":3949},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":445962,"byte_end":445973,"line_start":28,"line_end":28,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"pub enum ImageFormat {\n    Png,\n    Jpeg,\n    Gif,\n    WebP,\n    Pnm,\n    Tiff,\n    Tga,\n    Dds,\n    Bmp,\n    Ico,\n    Hdr,\n    OpenExr,\n    Farbfeld,\n    Avif,\n}","parent":null,"children":[{"krate":0,"index":3950},{"krate":0,"index":3952},{"krate":0,"index":3954},{"krate":0,"index":3956},{"krate":0,"index":3958},{"krate":0,"index":3960},{"krate":0,"index":3962},{"krate":0,"index":3964},{"krate":0,"index":3966},{"krate":0,"index":3968},{"krate":0,"index":3970},{"krate":0,"index":3972},{"krate":0,"index":3974},{"krate":0,"index":3976}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":445781,"byte_end":445827,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/ Not all formats support both encoding and decoding.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":445828,"byte_end":445883,"line_start":25,"line_end":25,"column_start":1,"column_end":56}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":445935,"byte_end":445952,"line_start":27,"line_end":27,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446918,"byte_end":446932,"line_start":84,"line_end":84,"column_start":12,"column_end":26},"name":"from_extension","qualname":"<ImageFormat>::from_extension","value":"pub fn from_extension<S>(S) -> Option<Self> where S: AsRef<OsStr>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by a path's file extension.","sig":null,"attributes":[{"value":"/ Return the image format specified by a path's file extension.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446619,"byte_end":446684,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446689,"byte_end":446692,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446697,"byte_end":446710,"line_start":75,"line_end":75,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446715,"byte_end":446718,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446723,"byte_end":446730,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446735,"byte_end":446762,"line_start":78,"line_end":78,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446767,"byte_end":446770,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_extension(\"jpg\");","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446775,"byte_end":446827,"line_start":80,"line_end":80,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(format, Some(ImageFormat::Jpeg));","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446832,"byte_end":446880,"line_start":81,"line_end":81,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446885,"byte_end":446892,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446897,"byte_end":446906,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":448335,"byte_end":448344,"line_start":127,"line_end":127,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ImageFormat>::from_path","value":"pub fn from_path<P>(P) -> ImageResult<Self> where P: AsRef<Path>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by the path's file extension.","sig":null,"attributes":[{"value":"/ Return the image format specified by the path's file extension.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":447974,"byte_end":448041,"line_start":114,"line_end":114,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":448046,"byte_end":448049,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":448054,"byte_end":448067,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":448072,"byte_end":448075,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":448080,"byte_end":448087,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":448092,"byte_end":448119,"line_start":119,"line_end":119,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":448124,"byte_end":448127,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_path(\"images/ferris.png\")?;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":448132,"byte_end":448194,"line_start":121,"line_end":121,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(format, ImageFormat::Png);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":448199,"byte_end":448240,"line_start":122,"line_end":122,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":448245,"byte_end":448248,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), image::error::ImageError>(())","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":448253,"byte_end":448297,"line_start":124,"line_end":124,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":448302,"byte_end":448309,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":448314,"byte_end":448323,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":449316,"byte_end":449330,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"from_mime_type","qualname":"<ImageFormat>::from_mime_type","value":"pub fn from_mime_type<M>(M) -> Option<Self> where M: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by a MIME type.","sig":null,"attributes":[{"value":"/ Return the image format specified by a MIME type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":449035,"byte_end":449088,"line_start":148,"line_end":148,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":449093,"byte_end":449096,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":449101,"byte_end":449114,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":449119,"byte_end":449122,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":449127,"byte_end":449134,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use image::ImageFormat;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":449139,"byte_end":449166,"line_start":153,"line_end":153,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":449171,"byte_end":449174,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let format = ImageFormat::from_mime_type(\"image/png\").unwrap();","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":449179,"byte_end":449246,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(format, ImageFormat::Png);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":449251,"byte_end":449292,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":449297,"byte_end":449304,"line_start":157,"line_end":157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":450415,"byte_end":450423,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"can_read","qualname":"<ImageFormat>::can_read","value":"pub fn can_read(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the ImageFormat can be decoded by the lib.\n","sig":null,"attributes":[{"value":"/ Return if the ImageFormat can be decoded by the lib.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":450333,"byte_end":450389,"line_start":183,"line_end":183,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":450394,"byte_end":450403,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":451207,"byte_end":451216,"line_start":207,"line_end":207,"column_start":12,"column_end":21},"name":"can_write","qualname":"<ImageFormat>::can_write","value":"pub fn can_write(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return if the ImageFormat can be encoded by the lib.\n","sig":null,"attributes":[{"value":"/ Return if the ImageFormat can be encoded by the lib.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":451125,"byte_end":451181,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":451186,"byte_end":451195,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":452534,"byte_end":452548,"line_start":236,"line_end":236,"column_start":12,"column_end":26},"name":"extensions_str","qualname":"<ImageFormat>::extensions_str","value":"pub fn extensions_str(Self) -> &'static [&'static str]","parent":null,"children":[],"decl_id":null,"docs":" Return a list of applicable extensions for this format.","sig":null,"attributes":[{"value":"/ Return a list of applicable extensions for this format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":451944,"byte_end":452003,"line_start":227,"line_end":227,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":452008,"byte_end":452011,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ All currently recognized image formats specify at least on extension but for future","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":452016,"byte_end":452103,"line_start":229,"line_end":229,"column_start":5,"column_end":92}},{"value":"/ compatibility you should not rely on this fact. The list may be empty if the format has no","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":452108,"byte_end":452202,"line_start":230,"line_end":230,"column_start":5,"column_end":99}},{"value":"/ recognized file representation, for example in case it is used as a purely transient memory","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":452207,"byte_end":452302,"line_start":231,"line_end":231,"column_start":5,"column_end":100}},{"value":"/ format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":452307,"byte_end":452318,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":452323,"byte_end":452326,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The method name `extensions` remains reserved for introducing another method in the future","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":452331,"byte_end":452425,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ that yields a slice of `OsStr` which is blocked by several features of const evaluation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":452430,"byte_end":452522,"line_start":235,"line_end":235,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3993},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":453560,"byte_end":453563,"line_start":263,"line_end":263,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageOutputFormat::Png","value":"ImageOutputFormat::Png","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":453501,"byte_end":453524,"line_start":261,"line_end":261,"column_start":5,"column_end":28}},{"value":"/ An Image in PNG Format","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":453529,"byte_end":453555,"line_start":262,"line_end":262,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3995},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":453654,"byte_end":453658,"line_start":267,"line_end":267,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageOutputFormat::Jpeg","value":"ImageOutputFormat::Jpeg(u8)","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":" An Image in JPEG Format with specified quality\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":453570,"byte_end":453594,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/ An Image in JPEG Format with specified quality","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":453599,"byte_end":453649,"line_start":266,"line_end":266,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3998},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":454633,"byte_end":454644,"line_start":309,"line_end":309,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ImageOutputFormat::Unsupported","value":"ImageOutputFormat::Unsupported(String)","parent":{"krate":0,"index":3992},"children":[],"decl_id":null,"docs":" A value for signalling an error: An unsupported format was requested\n","sig":null,"attributes":[{"value":"/ A value for signalling an error: An unsupported format was requested","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":454388,"byte_end":454460,"line_start":306,"line_end":306,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":3992},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":453477,"byte_end":453494,"line_start":260,"line_end":260,"column_start":10,"column_end":27},"name":"ImageOutputFormat","qualname":"::image::ImageOutputFormat","value":"pub enum ImageOutputFormat { Png, Jpeg(u8), Unsupported(String), }","parent":null,"children":[{"krate":0,"index":3993},{"krate":0,"index":3995},{"krate":0,"index":3998}],"decl_id":null,"docs":" An enumeration of supported image formats for encoding.\n","sig":null,"attributes":[{"value":"/ An enumeration of supported image formats for encoding.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":453351,"byte_end":453410,"line_start":257,"line_end":257,"column_start":1,"column_end":60}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":453450,"byte_end":453467,"line_start":259,"line_end":259,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":4012},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":465540,"byte_end":465548,"line_start":597,"line_end":597,"column_start":12,"column_end":20},"name":"Progress","qualname":"::image::Progress","value":"Progress {  }","parent":null,"children":[{"krate":0,"index":4013},{"krate":0,"index":4014}],"decl_id":null,"docs":" Represents the progress of an image operation.","sig":null,"attributes":[{"value":"/ Represents the progress of an image operation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":465136,"byte_end":465186,"line_start":591,"line_end":591,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":465187,"byte_end":465190,"line_start":592,"line_end":592,"column_start":1,"column_end":4}},{"value":"/ Note that this is not necessarily accurate and no change to the values passed to the progress","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":465191,"byte_end":465288,"line_start":593,"line_end":593,"column_start":1,"column_end":98}},{"value":"/ function during decoding will be considered breaking. A decoder could in theory report the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":465289,"byte_end":465383,"line_start":594,"line_end":594,"column_start":1,"column_end":95}},{"value":"/ progress `(0, 0)` if progress is unknown, without violating the interface contract of the type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":465384,"byte_end":465483,"line_start":595,"line_end":595,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2709},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":465854,"byte_end":465861,"line_start":609,"line_end":609,"column_start":12,"column_end":19},"name":"current","qualname":"<Progress>::current","value":"pub fn current(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of completed decoding.\n","sig":null,"attributes":[{"value":"/ A measure of completed decoding.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":465806,"byte_end":465842,"line_start":608,"line_end":608,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2710},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466034,"byte_end":466039,"line_start":616,"line_end":616,"column_start":12,"column_end":17},"name":"total","qualname":"<Progress>::total","value":"pub fn total(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of all necessary decoding work.","sig":null,"attributes":[{"value":"/ A measure of all necessary decoding work.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":465909,"byte_end":465954,"line_start":613,"line_end":613,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":465959,"byte_end":465962,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ This is in general greater or equal than `current`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":465967,"byte_end":466022,"line_start":615,"line_end":615,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2711},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466149,"byte_end":466158,"line_start":621,"line_end":621,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Progress>::remaining","value":"pub fn remaining(Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a measure for remaining decoding work.\n","sig":null,"attributes":[{"value":"/ Calculate a measure for remaining decoding work.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466085,"byte_end":466137,"line_start":620,"line_end":620,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466287,"byte_end":466299,"line_start":627,"line_end":627,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder<'a>: Sized","parent":null,"children":[{"krate":0,"index":2714},{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2723},{"krate":0,"index":2725}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[{"value":"/ The trait that all decoders implement","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466235,"byte_end":466276,"line_start":626,"line_end":626,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":2714},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466376,"byte_end":466382,"line_start":629,"line_end":629,"column_start":10,"column_end":16},"name":"Reader","qualname":"::image::ImageDecoder::Reader","value":"type Reader: Read + 'a;","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" The type of reader produced by `into_reader`.\n","sig":null,"attributes":[{"value":"/ The type of reader produced by `into_reader`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466317,"byte_end":466366,"line_start":628,"line_end":628,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2715},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466472,"byte_end":466482,"line_start":632,"line_end":632,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[{"value":"/ Returns a tuple containing the width and height of the image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466400,"byte_end":466464,"line_start":631,"line_end":631,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2716},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466587,"byte_end":466597,"line_start":635,"line_end":635,"column_start":8,"column_end":18},"name":"color_type","qualname":"::image::ImageDecoder::color_type","value":"pub fn color_type(&Self) -> ColorType","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Returns the color type of the image data produced by this decoder\n","sig":null,"attributes":[{"value":"/ Returns the color type of the image data produced by this decoder","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466510,"byte_end":466579,"line_start":634,"line_end":634,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466691,"byte_end":466710,"line_start":638,"line_end":638,"column_start":8,"column_end":27},"name":"original_color_type","qualname":"::image::ImageDecoder::original_color_type","value":"pub fn original_color_type(&Self) -> ExtendedColorType","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Retuns the color type of the image file before decoding\n","sig":null,"attributes":[{"value":"/ Retuns the color type of the image file before decoding","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466624,"byte_end":466683,"line_start":637,"line_end":637,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":467051,"byte_end":467062,"line_start":645,"line_end":645,"column_start":8,"column_end":19},"name":"into_reader","qualname":"::image::ImageDecoder::into_reader","value":"pub fn into_reader(Self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Returns a reader that can be used to obtain the bytes of the image. For the best\n performance, always try to read at least `scanline_bytes` from the reader at a time. Reading\n fewer bytes will cause the reader to perform internal buffering.\n","sig":null,"attributes":[{"value":"/ Returns a reader that can be used to obtain the bytes of the image. For the best","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466785,"byte_end":466869,"line_start":642,"line_end":642,"column_start":5,"column_end":89}},{"value":"/ performance, always try to read at least `scanline_bytes` from the reader at a time. Reading","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466874,"byte_end":466970,"line_start":643,"line_end":643,"column_start":5,"column_end":101}},{"value":"/ fewer bytes will cause the reader to perform internal buffering.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466975,"byte_end":467043,"line_start":644,"line_end":644,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2719},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":467520,"byte_end":467531,"line_start":653,"line_end":653,"column_start":8,"column_end":19},"name":"total_bytes","qualname":"::image::ImageDecoder::total_bytes","value":"pub fn total_bytes(&Self) -> u64","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Returns the total number of bytes in the decoded image.","sig":null,"attributes":[{"value":"/ Returns the total number of bytes in the decoded image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":467104,"byte_end":467163,"line_start":647,"line_end":647,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":467168,"byte_end":467171,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ This is the size of the buffer that must be passed to `read_image` or","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":467176,"byte_end":467249,"line_start":649,"line_end":649,"column_start":5,"column_end":78}},{"value":"/ `read_image_with_progress`. The returned value may exceed usize::MAX, in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":467254,"byte_end":467330,"line_start":650,"line_end":650,"column_start":5,"column_end":81}},{"value":"/ which case it isn't actually possible to construct a buffer to decode all the image data","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":467335,"byte_end":467427,"line_start":651,"line_end":651,"column_start":5,"column_end":97}},{"value":"/ into. If, however, the size does not fit in a u64 then u64::MAX is returned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":467432,"byte_end":467512,"line_start":652,"line_end":652,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":467970,"byte_end":467984,"line_start":662,"line_end":662,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"::image::ImageDecoder::scanline_bytes","value":"pub fn scanline_bytes(&Self) -> u64","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Returns the minimum number of bytes that can be efficiently read from this decoder. This may\n be as few as 1 or as many as `total_bytes()`.\n","sig":null,"attributes":[{"value":"/ Returns the minimum number of bytes that can be efficiently read from this decoder. This may","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":467812,"byte_end":467908,"line_start":660,"line_end":660,"column_start":5,"column_end":101}},{"value":"/ be as few as 1 or as many as `total_bytes()`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":467913,"byte_end":467962,"line_start":661,"line_end":661,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468885,"byte_end":468895,"line_start":687,"line_end":687,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"pub fn read_image(Self, &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Returns all the bytes in the image.","sig":null,"attributes":[{"value":"/ Returns all the bytes in the image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468039,"byte_end":468078,"line_start":666,"line_end":666,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468083,"byte_end":468086,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes and writes the pixel data of the image into it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468091,"byte_end":468179,"line_start":668,"line_end":668,"column_start":5,"column_end":93}},{"value":"/ Although not required, for certain color types callers may want to pass buffers which are","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468184,"byte_end":468277,"line_start":669,"line_end":669,"column_start":5,"column_end":98}},{"value":"/ aligned to 2 or 4 byte boundaries to the slice can be cast to a [u16] or [u32]. To accommodate","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468282,"byte_end":468380,"line_start":670,"line_end":670,"column_start":5,"column_end":103}},{"value":"/ such casts, the returned contents will always be in native endian.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468385,"byte_end":468455,"line_start":671,"line_end":671,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468460,"byte_end":468463,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468468,"byte_end":468480,"line_start":673,"line_end":673,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468485,"byte_end":468488,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ This function panics if buf.len() != self.total_bytes().","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468493,"byte_end":468553,"line_start":675,"line_end":675,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468558,"byte_end":468561,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468566,"byte_end":468580,"line_start":677,"line_end":677,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468585,"byte_end":468588,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```no_build","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468593,"byte_end":468608,"line_start":679,"line_end":679,"column_start":5,"column_end":20}},{"value":"/ use zerocopy::{AsBytes, FromBytes};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468613,"byte_end":468652,"line_start":680,"line_end":680,"column_start":5,"column_end":44}},{"value":"/ fn read_16bit_image(decoder: impl ImageDecoder) -> Vec<16> {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468657,"byte_end":468721,"line_start":681,"line_end":681,"column_start":5,"column_end":69}},{"value":"/     let mut buf: Vec<u16> = vec![0; decoder.total_bytes()/2];","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468726,"byte_end":468791,"line_start":682,"line_end":682,"column_start":5,"column_end":70}},{"value":"/     decoder.read_image(buf.as_bytes());","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468796,"byte_end":468839,"line_start":683,"line_end":683,"column_start":5,"column_end":48}},{"value":"/     buf","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468844,"byte_end":468855,"line_start":684,"line_end":684,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468860,"byte_end":468865,"line_start":685,"line_end":685,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":468870,"byte_end":468877,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":469123,"byte_end":469147,"line_start":693,"line_end":693,"column_start":8,"column_end":32},"name":"read_image_with_progress","qualname":"::image::ImageDecoder::read_image_with_progress","value":"pub fn read_image_with_progress<F: Fn(Progress) -> ()>(Self, &mut [u8], F)\n-> ImageResult<()>","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Same as `read_image` but periodically calls the provided callback to give updates on loading\n progress.\n","sig":null,"attributes":[{"value":"/ Same as `read_image` but periodically calls the provided callback to give updates on loading","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":469001,"byte_end":469097,"line_start":691,"line_end":691,"column_start":5,"column_end":101}},{"value":"/ progress.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":469102,"byte_end":469115,"line_start":692,"line_end":692,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":2725},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":470735,"byte_end":470745,"line_start":736,"line_end":736,"column_start":8,"column_end":18},"name":"set_limits","qualname":"::image::ImageDecoder::set_limits","value":"pub fn set_limits(&mut Self, crate::io::Limits) -> ImageResult<()>","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" Set decoding limits for this decoder. See [`Limits`] for the different kinds of\n limits that is possible to set.","sig":null,"attributes":[{"value":"/ Set decoding limits for this decoder. See [`Limits`] for the different kinds of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":470099,"byte_end":470182,"line_start":725,"line_end":725,"column_start":5,"column_end":88}},{"value":"/ limits that is possible to set.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":470187,"byte_end":470222,"line_start":726,"line_end":726,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":470227,"byte_end":470230,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ Note to implementors: make sure you call [`Limits::check_support`] so that","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":470235,"byte_end":470313,"line_start":728,"line_end":728,"column_start":5,"column_end":83}},{"value":"/ decoding fails if any unsupported strict limits are set. Also make sure","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":470318,"byte_end":470393,"line_start":729,"line_end":729,"column_start":5,"column_end":80}},{"value":"/ you call [`Limits::check_dimensions`] to check the `max_image_width` and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":470398,"byte_end":470474,"line_start":730,"line_end":730,"column_start":5,"column_end":81}},{"value":"/ `max_image_height` limits.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":470479,"byte_end":470509,"line_start":731,"line_end":731,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":470514,"byte_end":470517,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ [`Limits`]: ./io/struct.Limits.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":470522,"byte_end":470561,"line_start":733,"line_end":733,"column_start":5,"column_end":44}},{"value":"/ [`Limits::check_support`]: ./io/struct.Limits.html#method.check_support","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":470566,"byte_end":470641,"line_start":734,"line_end":734,"column_start":5,"column_end":80}},{"value":"/ [`Limits::check_dimensions`]: ./io/struct.Limits.html#method.check_dimensions","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":470646,"byte_end":470727,"line_start":735,"line_end":735,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":2726},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":471070,"byte_end":471086,"line_start":747,"line_end":747,"column_start":11,"column_end":27},"name":"ImageDecoderRect","qualname":"::image::ImageDecoderRect","value":"ImageDecoderRect<'a>: ImageDecoder + Sized","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2730}],"decl_id":null,"docs":" Specialized image decoding not be supported by all formats\n","sig":null,"attributes":[{"value":"/ Specialized image decoding not be supported by all formats","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":470997,"byte_end":471059,"line_start":746,"line_end":746,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":471241,"byte_end":471250,"line_start":749,"line_end":749,"column_start":8,"column_end":17},"name":"read_rect","qualname":"::image::ImageDecoderRect::read_rect","value":"pub fn read_rect(&mut Self, u32, u32, u32, u32, &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":2726},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).\n","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image; see [`read_rect_with_progress()`](#fn.read_rect_with_progress).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":471123,"byte_end":471233,"line_start":748,"line_end":748,"column_start":5,"column_end":115}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472193,"byte_end":472216,"line_start":772,"line_end":772,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"::image::ImageDecoderRect::read_rect_with_progress","value":"pub fn read_rect_with_progress<F: Fn(Progress) ->\n()>(&mut Self, u32, u32, u32, u32, &mut [u8], F) -> ImageResult<()>","parent":{"krate":0,"index":2726},"children":[],"decl_id":null,"docs":" Decode a rectangular section of the image, periodically reporting progress.","sig":null,"attributes":[{"value":"/ Decode a rectangular section of the image, periodically reporting progress.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":471477,"byte_end":471556,"line_start":760,"line_end":760,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":471561,"byte_end":471564,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ The output buffer will be filled with fields specified by","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":471569,"byte_end":471630,"line_start":762,"line_end":762,"column_start":5,"column_end":66}},{"value":"/ [`ImageDecoder::color_type()`](trait.ImageDecoder.html#fn.color_type),","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":471635,"byte_end":471709,"line_start":763,"line_end":763,"column_start":5,"column_end":79}},{"value":"/ in that order, each field represented in native-endian.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":471714,"byte_end":471773,"line_start":764,"line_end":764,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":471778,"byte_end":471781,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ The progress callback will be called at least once at the start and the end of decoding,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":471786,"byte_end":471878,"line_start":766,"line_end":766,"column_start":5,"column_end":97}},{"value":"/ implementations are encouraged to call this more often,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":471883,"byte_end":471942,"line_start":767,"line_end":767,"column_start":5,"column_end":64}},{"value":"/ with a frequency meaningful for display to the end-user.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":471947,"byte_end":472007,"line_start":768,"line_end":768,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472012,"byte_end":472015,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ This function will panic if the output buffer isn't at least","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472020,"byte_end":472084,"line_start":770,"line_end":770,"column_start":5,"column_end":69}},{"value":"/ `color_type().bytes_per_pixel() * color_type().channel_count() * width * height` bytes long.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472089,"byte_end":472185,"line_start":771,"line_end":771,"column_start":5,"column_end":101}}]},{"kind":"Trait","id":{"krate":0,"index":2732},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472447,"byte_end":472463,"line_start":784,"line_end":784,"column_start":11,"column_end":27},"name":"AnimationDecoder","qualname":"::image::AnimationDecoder","value":"AnimationDecoder<'a>","parent":null,"children":[{"krate":0,"index":2734}],"decl_id":null,"docs":" AnimationDecoder trait\n","sig":null,"attributes":[{"value":"/ AnimationDecoder trait","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472410,"byte_end":472436,"line_start":783,"line_end":783,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2734},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472535,"byte_end":472546,"line_start":786,"line_end":786,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::AnimationDecoder::into_frames","value":"pub fn into_frames(Self) -> Frames","parent":{"krate":0,"index":2732},"children":[],"decl_id":null,"docs":" Consume the decoder producing a series of frames.\n","sig":null,"attributes":[{"value":"/ Consume the decoder producing a series of frames.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472474,"byte_end":472527,"line_start":785,"line_end":785,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":2735},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472618,"byte_end":472630,"line_start":790,"line_end":790,"column_start":11,"column_end":23},"name":"ImageEncoder","qualname":"::image::ImageEncoder","value":"ImageEncoder","parent":null,"children":[{"krate":0,"index":2736}],"decl_id":null,"docs":" The trait all encoders implement\n","sig":null,"attributes":[{"value":"/ The trait all encoders implement","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472571,"byte_end":472607,"line_start":789,"line_end":789,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":473179,"byte_end":473190,"line_start":801,"line_end":801,"column_start":8,"column_end":19},"name":"write_image","qualname":"::image::ImageEncoder::write_image","value":"pub fn write_image(Self, &[u8], u32, u32, ColorType) -> ImageResult<()>","parent":{"krate":0,"index":2735},"children":[],"decl_id":null,"docs":" Writes all the bytes in an image to the encoder.","sig":null,"attributes":[{"value":"/ Writes all the bytes in an image to the encoder.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472637,"byte_end":472689,"line_start":791,"line_end":791,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472694,"byte_end":472697,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ This function takes a slice of bytes of the pixel data of the image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472702,"byte_end":472773,"line_start":793,"line_end":793,"column_start":5,"column_end":76}},{"value":"/ and encodes them. Unlike particular format encoders inherent impl encode","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472778,"byte_end":472854,"line_start":794,"line_end":794,"column_start":5,"column_end":81}},{"value":"/ methods where endianness is not specified, here image data bytes should","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472859,"byte_end":472934,"line_start":795,"line_end":795,"column_start":5,"column_end":80}},{"value":"/ always be in native endian. The implementor will reorder the endianess","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":472939,"byte_end":473013,"line_start":796,"line_end":796,"column_start":5,"column_end":79}},{"value":"/ as necessary for the target encoding format.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":473018,"byte_end":473066,"line_start":797,"line_end":797,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":473071,"byte_end":473074,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ See also `ImageDecoder::read_image` which reads byte buffers into","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":473079,"byte_end":473148,"line_start":799,"line_end":799,"column_start":5,"column_end":74}},{"value":"/ native endian.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":473153,"byte_end":473171,"line_start":800,"line_end":800,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4027},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":473384,"byte_end":473390,"line_start":812,"line_end":812,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":4030},{"krate":0,"index":4031},{"krate":0,"index":4032},{"krate":0,"index":4033},{"krate":0,"index":4034}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[{"value":"/ Immutable pixel iterator","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":473327,"byte_end":473355,"line_start":810,"line_end":810,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":2745},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474308,"byte_end":474324,"line_start":856,"line_end":856,"column_start":11,"column_end":27},"name":"GenericImageView","qualname":"::image::GenericImageView","value":"GenericImageView","parent":null,"children":[{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2754},{"krate":0,"index":2755}],"decl_id":null,"docs":" Trait to inspect an image.","sig":null,"attributes":[{"value":"/ Trait to inspect an image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474090,"byte_end":474120,"line_start":848,"line_end":848,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474121,"byte_end":474124,"line_start":849,"line_end":849,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474125,"byte_end":474132,"line_start":850,"line_end":850,"column_start":1,"column_end":8}},{"value":"/ use image::{GenericImageView, Rgb, RgbImage};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474133,"byte_end":474182,"line_start":851,"line_end":851,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474183,"byte_end":474186,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ let buffer = RgbImage::new(10, 10);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474187,"byte_end":474226,"line_start":853,"line_end":853,"column_start":1,"column_end":40}},{"value":"/ let image: &dyn GenericImageView<Pixel=Rgb<u8>> = &buffer;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474227,"byte_end":474289,"line_start":854,"line_end":854,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474290,"byte_end":474297,"line_start":855,"line_end":855,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":2746},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474363,"byte_end":474368,"line_start":858,"line_end":858,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImageView::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":2745},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[{"value":"/ The type of pixel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474331,"byte_end":474353,"line_start":857,"line_end":857,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474429,"byte_end":474439,"line_start":861,"line_end":861,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImageView::dimensions","value":"pub fn dimensions(&Self) -> (u32, u32)","parent":{"krate":0,"index":2745},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[{"value":"/ The width and height of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474382,"byte_end":474421,"line_start":860,"line_end":860,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474503,"byte_end":474508,"line_start":864,"line_end":864,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImageView::width","value":"pub fn width(&Self) -> u32","parent":{"krate":0,"index":2745},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[{"value":"/ The width of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474467,"byte_end":474495,"line_start":863,"line_end":863,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474623,"byte_end":474629,"line_start":870,"line_end":870,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImageView::height","value":"pub fn height(&Self) -> u32","parent":{"krate":0,"index":2745},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[{"value":"/ The height of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474586,"byte_end":474615,"line_start":869,"line_end":869,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474756,"byte_end":474762,"line_start":876,"line_end":876,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImageView::bounds","value":"pub fn bounds(&Self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":2745},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[{"value":"/ The bounding rectangle of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474707,"byte_end":474748,"line_start":875,"line_end":875,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2751},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474879,"byte_end":474888,"line_start":879,"line_end":879,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImageView::in_bounds","value":"pub fn in_bounds(&Self, u32, u32) -> bool","parent":{"krate":0,"index":2745},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[{"value":"/ Returns true if this x, y coordinate is contained inside the image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474800,"byte_end":474871,"line_start":878,"line_end":878,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2752},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475185,"byte_end":475194,"line_start":889,"line_end":889,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImageView::get_pixel","value":"pub fn get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":2745},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y). Indexed from top left.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475036,"byte_end":475099,"line_start":884,"line_end":884,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475104,"byte_end":475107,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475112,"byte_end":475124,"line_start":886,"line_end":886,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475129,"byte_end":475132,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475137,"byte_end":475177,"line_start":888,"line_end":888,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475539,"byte_end":475555,"line_start":899,"line_end":899,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImageView::unsafe_get_pixel","value":"pub unsafe fn unsafe_get_pixel(&Self, u32, u32) -> Self::Pixel","parent":{"krate":0,"index":2745},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Returns the pixel located at (x, y). Indexed from top left.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475239,"byte_end":475302,"line_start":891,"line_end":891,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475307,"byte_end":475310,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475315,"byte_end":475390,"line_start":893,"line_end":893,"column_start":5,"column_end":80}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475395,"byte_end":475407,"line_start":894,"line_end":894,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475412,"byte_end":475415,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ The coordinates must be [`in_bounds`] of the image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475420,"byte_end":475475,"line_start":896,"line_end":896,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475480,"byte_end":475483,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ [`in_bounds`]: #method.in_bounds","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475488,"byte_end":475524,"line_start":898,"line_end":898,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475787,"byte_end":475793,"line_start":906,"line_end":906,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImageView::pixels","value":"pub fn pixels(&Self) -> Pixels<, Self> where Self: Sized","parent":{"krate":0,"index":2745},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[{"value":"/ Returns an Iterator over the pixels of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475636,"byte_end":475690,"line_start":903,"line_end":903,"column_start":5,"column_end":59}},{"value":"/ The iterator yields the coordinates of each pixel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475695,"byte_end":475748,"line_start":904,"line_end":904,"column_start":5,"column_end":58}},{"value":"/ along with their value","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":475753,"byte_end":475779,"line_start":905,"line_end":905,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476276,"byte_end":476280,"line_start":924,"line_end":924,"column_start":8,"column_end":12},"name":"view","qualname":"::image::GenericImageView::view","value":"pub fn view(&Self, u32, u32, u32, u32) -> SubImage<&Self> where Self: Sized","parent":{"krate":0,"index":2745},"children":[],"decl_id":null,"docs":" Returns a subimage that is an immutable view into this image.\n You can use [`GenericImage::sub_image`] if you need a mutable view instead.\n The coordinates set the position of the top left corner of the view.\n","sig":null,"attributes":[{"value":"/ Returns a subimage that is an immutable view into this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476042,"byte_end":476107,"line_start":921,"line_end":921,"column_start":5,"column_end":70}},{"value":"/ You can use [`GenericImage::sub_image`] if you need a mutable view instead.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476112,"byte_end":476191,"line_start":922,"line_end":922,"column_start":5,"column_end":84}},{"value":"/ The coordinates set the position of the top left corner of the view.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476196,"byte_end":476268,"line_start":923,"line_end":923,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":2756},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476622,"byte_end":476634,"line_start":935,"line_end":935,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: GenericImageView","parent":null,"children":[{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2763},{"krate":0,"index":2765}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[{"value":"/ A trait for manipulating images.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476575,"byte_end":476611,"line_start":934,"line_end":934,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477508,"byte_end":477521,"line_start":957,"line_end":957,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"pub fn get_pixel_mut(&mut Self, u32, u32) -> &mut Self::Pixel","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`. Indexed from top left.","sig":null,"attributes":[{"value":"/ Gets a reference to the mutable pixel at location `(x, y)`. Indexed from top left.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476659,"byte_end":476745,"line_start":936,"line_end":936,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476750,"byte_end":476753,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476758,"byte_end":476770,"line_start":938,"line_end":938,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476775,"byte_end":476778,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476783,"byte_end":476823,"line_start":940,"line_end":940,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476828,"byte_end":476831,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ Panics for dynamic images (this method is deprecated and will be removed).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476836,"byte_end":476914,"line_start":942,"line_end":942,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476919,"byte_end":476922,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ## Known issues","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476927,"byte_end":476946,"line_start":944,"line_end":944,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476951,"byte_end":476954,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ This requires the buffer to contain a unique set of continuous channels in the exact order","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476959,"byte_end":477053,"line_start":946,"line_end":946,"column_start":5,"column_end":99}},{"value":"/ and byte representation that the pixel type requires. This is somewhat restrictive.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477058,"byte_end":477145,"line_start":947,"line_end":947,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477150,"byte_end":477153,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ TODO: Maybe use some kind of entry API? this would allow pixel type conversion on the fly","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477158,"byte_end":477251,"line_start":949,"line_end":949,"column_start":5,"column_end":98}},{"value":"/ while still doing only one array lookup:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477256,"byte_end":477300,"line_start":950,"line_end":950,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477305,"byte_end":477308,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477313,"byte_end":477326,"line_start":952,"line_end":952,"column_start":5,"column_end":18}},{"value":"/ let px = image.pixel_entry_at(x,y);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477331,"byte_end":477370,"line_start":953,"line_end":953,"column_start":5,"column_end":44}},{"value":"/ px.set_from_rgba(rgba)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477375,"byte_end":477401,"line_start":954,"line_end":954,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477406,"byte_end":477413,"line_start":955,"line_end":955,"column_start":5,"column_end":12}},{"value":"deprecated(since = \"0.24.0\", note =\n\"Use `get_pixel` and `put_pixel` instead.\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477418,"byte_end":477500,"line_start":956,"line_end":956,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2758},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477719,"byte_end":477728,"line_start":964,"line_end":964,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"pub fn put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y). Indexed from top left.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477575,"byte_end":477633,"line_start":959,"line_end":959,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477638,"byte_end":477641,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477646,"byte_end":477658,"line_start":961,"line_end":961,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477663,"byte_end":477666,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ Panics if `(x, y)` is out of bounds.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477671,"byte_end":477711,"line_start":963,"line_end":963,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478106,"byte_end":478122,"line_start":974,"line_end":974,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"pub unsafe fn unsafe_put_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y). Indexed from top left.","sig":null,"attributes":[{"value":"/ Puts a pixel at location (x, y). Indexed from top left.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477782,"byte_end":477841,"line_start":966,"line_end":966,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477846,"byte_end":477849,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ This function can be implemented in a way that ignores bounds checking.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477854,"byte_end":477929,"line_start":968,"line_end":968,"column_start":5,"column_end":80}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477934,"byte_end":477946,"line_start":969,"line_end":969,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477951,"byte_end":477954,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ The coordinates must be [`in_bounds`] of the image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":477959,"byte_end":478014,"line_start":971,"line_end":971,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478019,"byte_end":478022,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ [`in_bounds`]: traits.GenericImageView.html#method.in_bounds","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478027,"byte_end":478091,"line_start":973,"line_end":973,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478421,"byte_end":478432,"line_start":983,"line_end":983,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"pub fn blend_pixel(&mut Self, u32, u32, Self::Pixel)","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Put a pixel at location (x, y), taking into account alpha channels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478220,"byte_end":478290,"line_start":978,"line_end":978,"column_start":5,"column_end":75}},{"value":"deprecated(since = \"0.24.0\", note =\n\"Use iterator `pixels_mut` to blend the pixels directly\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478295,"byte_end":478413,"line_start":979,"line_end":982,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":479194,"byte_end":479203,"line_start":1000,"line_end":1000,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"pub fn copy_from<O>(&mut Self, &O, u32, u32) -> ImageResult<()> where\nO: GenericImageView<Pixel = Self::Pixel>","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from another image into this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478486,"byte_end":478550,"line_start":985,"line_end":985,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478555,"byte_end":478558,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ The other image is copied with the top-left corner of the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478563,"byte_end":478624,"line_start":987,"line_end":987,"column_start":5,"column_end":66}},{"value":"/ other image placed at (x, y).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478629,"byte_end":478662,"line_start":988,"line_end":988,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478667,"byte_end":478670,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ In order to copy only a piece of the other image, use [`GenericImageView::view`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478675,"byte_end":478760,"line_start":990,"line_end":990,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478765,"byte_end":478768,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ You can use [`FlatSamples`] to source pixels from an arbitrary regular raster of channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478773,"byte_end":478865,"line_start":992,"line_end":992,"column_start":5,"column_end":97}},{"value":"/ values, for example from a foreign interface or a fixed image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478870,"byte_end":478936,"line_start":993,"line_end":993,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478941,"byte_end":478944,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478949,"byte_end":478962,"line_start":995,"line_end":995,"column_start":5,"column_end":18}},{"value":"/ Returns an error if the image is too large to be copied at the given position","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":478967,"byte_end":479048,"line_start":996,"line_end":996,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":479053,"byte_end":479056,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ [`GenericImageView::view`]: trait.GenericImageView.html#method.view","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":479061,"byte_end":479132,"line_start":998,"line_end":998,"column_start":5,"column_end":76}},{"value":"/ [`FlatSamples`]: flat/struct.FlatSamples.html","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":479137,"byte_end":479186,"line_start":999,"line_end":999,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":480250,"byte_end":480261,"line_start":1028,"line_end":1028,"column_start":8,"column_end":19},"name":"copy_within","qualname":"::image::GenericImage::copy_within","value":"pub fn copy_within(&mut Self, Rect, u32, u32) -> bool","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":" Copies all of the pixels from one part of this image to another part of this image.","sig":null,"attributes":[{"value":"/ Copies all of the pixels from one part of this image to another part of this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":479902,"byte_end":479989,"line_start":1021,"line_end":1021,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":479994,"byte_end":479997,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ The destination rectangle of the copy is specified with the top-left corner placed at (x, y).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":480002,"byte_end":480099,"line_start":1023,"line_end":1023,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":480104,"byte_end":480107,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":480112,"byte_end":480125,"line_start":1025,"line_end":1025,"column_start":5,"column_end":18}},{"value":"/ `true` if the copy was successful, `false` if the image could not","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":480130,"byte_end":480199,"line_start":1026,"line_end":1026,"column_start":5,"column_end":74}},{"value":"/ be copied due to size constraints.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":480204,"byte_end":480242,"line_start":1027,"line_end":1027,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482145,"byte_end":482154,"line_start":1071,"line_end":1071,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"pub fn sub_image(&mut Self, u32, u32, u32, u32) -> SubImage<&mut Self> where\nSelf: Sized","parent":{"krate":0,"index":2756},"children":[],"decl_id":null,"docs":" Returns a mutable subimage that is a view into this image.\n If you want an immutable subimage instead, use [`GenericImageView::view`]\n The coordinates set the position of the top left corner of the SubImage.\n","sig":null,"attributes":[{"value":"/ Returns a mutable subimage that is a view into this image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":481912,"byte_end":481974,"line_start":1068,"line_end":1068,"column_start":5,"column_end":67}},{"value":"/ If you want an immutable subimage instead, use [`GenericImageView::view`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":481979,"byte_end":482056,"line_start":1069,"line_end":1069,"column_start":5,"column_end":82}},{"value":"/ The coordinates set the position of the top left corner of the SubImage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482061,"byte_end":482137,"line_start":1070,"line_end":1070,"column_start":5,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":4039},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":483655,"byte_end":483663,"line_start":1103,"line_end":1103,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":4041}],"decl_id":null,"docs":" A View into another image","sig":null,"attributes":[{"value":"/ A View into another image","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482457,"byte_end":482486,"line_start":1081,"line_end":1081,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482487,"byte_end":482490,"line_start":1082,"line_end":1082,"column_start":1,"column_end":4}},{"value":"/ Instances of this struct can be created using:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482491,"byte_end":482541,"line_start":1083,"line_end":1083,"column_start":1,"column_end":51}},{"value":"/   - [`GenericImage::sub_image`] to create a mutable view,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482542,"byte_end":482603,"line_start":1084,"line_end":1084,"column_start":1,"column_end":62}},{"value":"/   - [`GenericImageView::view`] to create an immutable view,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482604,"byte_end":482667,"line_start":1085,"line_end":1085,"column_start":1,"column_end":64}},{"value":"/   - [`SubImage::new`] to instantiate the struct directly.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482668,"byte_end":482729,"line_start":1086,"line_end":1086,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482730,"byte_end":482733,"line_start":1087,"line_end":1087,"column_start":1,"column_end":4}},{"value":"/ Note that this does _not_ implement `GenericImage`, but it dereferences to one which allows you","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482734,"byte_end":482833,"line_start":1088,"line_end":1088,"column_start":1,"column_end":100}},{"value":"/ to use it as if it did. See [Design Considerations](#Design-Considerations) below for details.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482834,"byte_end":482932,"line_start":1089,"line_end":1089,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482933,"byte_end":482936,"line_start":1090,"line_end":1090,"column_start":1,"column_end":4}},{"value":"/ # Design Considerations","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482937,"byte_end":482964,"line_start":1091,"line_end":1091,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482965,"byte_end":482968,"line_start":1092,"line_end":1092,"column_start":1,"column_end":4}},{"value":"/ For reasons relating to coherence, this is not itself a `GenericImage` or a `GenericImageView`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":482969,"byte_end":483068,"line_start":1093,"line_end":1093,"column_start":1,"column_end":100}},{"value":"/ In short, we want to reserve the ability of adding traits implemented for _all_ generic images","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":483069,"byte_end":483167,"line_start":1094,"line_end":1094,"column_start":1,"column_end":99}},{"value":"/ but in a different manner for `SubImage`. This may be required to ensure that stacking","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":483168,"byte_end":483258,"line_start":1095,"line_end":1095,"column_start":1,"column_end":91}},{"value":"/ sub-images comes at no double indirect cost.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":483259,"byte_end":483307,"line_start":1096,"line_end":1096,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":483308,"byte_end":483311,"line_start":1097,"line_end":1097,"column_start":1,"column_end":4}},{"value":"/ If, ultimately, this is not needed then a directly implementation of `GenericImage` can and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":483312,"byte_end":483407,"line_start":1098,"line_end":1098,"column_start":1,"column_end":96}},{"value":"/ will get added. This inconvenience may alternatively get resolved if Rust allows some forms of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":483408,"byte_end":483506,"line_start":1099,"line_end":1099,"column_start":1,"column_end":99}},{"value":"/ specialization, which might make this trick unnecessary and thus also allows for a direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":483507,"byte_end":483600,"line_start":1100,"line_end":1100,"column_start":1,"column_end":94}},{"value":"/ implementation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":483601,"byte_end":483620,"line_start":1101,"line_end":1101,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4047},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":483947,"byte_end":483960,"line_start":1112,"line_end":1112,"column_start":12,"column_end":25},"name":"SubImageInner","qualname":"::image::SubImageInner","value":"SubImageInner {  }","parent":null,"children":[{"krate":0,"index":4049},{"krate":0,"index":4050},{"krate":0,"index":4051},{"krate":0,"index":4052},{"krate":0,"index":4053}],"decl_id":null,"docs":" The inner type of `SubImage` that implements `GenericImage{,View}`.","sig":null,"attributes":[{"value":"/ The inner type of `SubImage` that implements `GenericImage{,View}`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":483701,"byte_end":483772,"line_start":1107,"line_end":1107,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":483773,"byte_end":483776,"line_start":1108,"line_end":1108,"column_start":1,"column_end":4}},{"value":"/ This type is _nominally_ `pub` but it is not exported from the crate. It should be regarded as","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":483777,"byte_end":483875,"line_start":1109,"line_end":1109,"column_start":1,"column_end":99}},{"value":"/ an existential type in any case.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":483876,"byte_end":483912,"line_start":1110,"line_end":1110,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2772},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":484429,"byte_end":484432,"line_start":1129,"line_end":1129,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage<I>>::new","value":"pub fn new(I, u32, u32, u32, u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n The coordinates set the position of the top left corner of the SubImage.\n","sig":null,"attributes":[{"value":"/ Construct a new subimage","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":484308,"byte_end":484336,"line_start":1127,"line_end":1127,"column_start":5,"column_end":33}},{"value":"/ The coordinates set the position of the top left corner of the SubImage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":484341,"byte_end":484417,"line_start":1128,"line_end":1128,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":484791,"byte_end":484804,"line_start":1142,"line_end":1142,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage<I>>::change_bounds","value":"pub fn change_bounds(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[{"value":"/ Change the coordinates of this subimage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":484735,"byte_end":484779,"line_start":1141,"line_end":1141,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":485062,"byte_end":485070,"line_start":1150,"line_end":1150,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage<I>>::to_image","value":"pub fn to_image(&Self) -> ImageBuffer<DerefPixel<I>, Vec<DerefSubpixel<I>>>\nwhere I: Deref, I::Target: GenericImageView + 'static","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[{"value":"/ Convert this subimage to an ImageBuffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":485007,"byte_end":485050,"line_start":1149,"line_end":1149,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486515,"byte_end":486519,"line_start":1193,"line_end":1193,"column_start":12,"column_end":16},"name":"view","qualname":"<SubImage<I>>::view","value":"pub fn view(&Self, u32, u32, u32, u32) -> SubImage<&I::Target>","parent":null,"children":[],"decl_id":null,"docs":" Create a sub-view of the image.","sig":null,"attributes":[{"value":"/ Create a sub-view of the image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":485718,"byte_end":485753,"line_start":1175,"line_end":1175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":485758,"byte_end":485761,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ The coordinates given are relative to the current view on the underlying image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":485766,"byte_end":485849,"line_start":1177,"line_end":1177,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":485854,"byte_end":485857,"line_start":1178,"line_end":1178,"column_start":5,"column_end":8}},{"value":"/ Note that this method is preferred to the one from `GenericImageView`. This is accessible","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":485862,"byte_end":485955,"line_start":1179,"line_end":1179,"column_start":5,"column_end":98}},{"value":"/ with the explicit method call syntax but it should rarely be needed due to causing an","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":485960,"byte_end":486049,"line_start":1180,"line_end":1180,"column_start":5,"column_end":94}},{"value":"/ extra level of indirection.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486054,"byte_end":486085,"line_start":1181,"line_end":1181,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486090,"byte_end":486093,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486098,"byte_end":486105,"line_start":1183,"line_end":1183,"column_start":5,"column_end":12}},{"value":"/ use image::{GenericImageView, RgbImage, SubImage};","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486110,"byte_end":486164,"line_start":1184,"line_end":1184,"column_start":5,"column_end":59}},{"value":"/ let buffer = RgbImage::new(10, 10);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486169,"byte_end":486208,"line_start":1185,"line_end":1185,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486213,"byte_end":486216,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ let subimage: SubImage<&RgbImage> = buffer.view(0, 0, 10, 10);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486221,"byte_end":486287,"line_start":1187,"line_end":1187,"column_start":5,"column_end":71}},{"value":"/ let subview: SubImage<&RgbImage> = subimage.view(0, 0, 10, 10);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486292,"byte_end":486359,"line_start":1188,"line_end":1188,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486364,"byte_end":486367,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ // Less efficient and NOT &RgbImage","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486372,"byte_end":486411,"line_start":1190,"line_end":1190,"column_start":5,"column_end":44}},{"value":"/ let _: SubImage<&_> = GenericImageView::view(&*subimage, 0, 0, 10, 10);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486416,"byte_end":486491,"line_start":1191,"line_end":1191,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486496,"byte_end":486503,"line_start":1192,"line_end":1192,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486990,"byte_end":486995,"line_start":1203,"line_end":1203,"column_start":12,"column_end":17},"name":"inner","qualname":"<SubImage<I>>::inner","value":"pub fn inner(&Self) -> &I::Target","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Get a reference to the underlying image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":486934,"byte_end":486978,"line_start":1202,"line_end":1202,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":487283,"byte_end":487292,"line_start":1216,"line_end":1216,"column_start":12,"column_end":21},"name":"sub_image","qualname":"<SubImage<I>>::sub_image","value":"pub fn sub_image(&mut Self, u32, u32, u32, u32) -> SubImage<&mut I::Target>","parent":null,"children":[],"decl_id":null,"docs":" Create a mutable sub-view of the image.","sig":null,"attributes":[{"value":"/ Create a mutable sub-view of the image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":487132,"byte_end":487175,"line_start":1213,"line_end":1213,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":487180,"byte_end":487183,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ The coordinates given are relative to the current view on the underlying image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":487188,"byte_end":487271,"line_start":1215,"line_end":1215,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":487788,"byte_end":487797,"line_start":1231,"line_end":1231,"column_start":12,"column_end":21},"name":"inner_mut","qualname":"<SubImage<I>>::inner_mut","value":"pub fn inner_mut(&mut Self) -> &mut I::Target","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the underlying image.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the underlying image.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":487724,"byte_end":487776,"line_start":1230,"line_end":1230,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":2834},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506148,"byte_end":506163,"line_start":12,"line_end":12,"column_start":11,"column_end":26},"name":"EncodableLayout","qualname":"::traits::EncodableLayout","value":"EncodableLayout: seals::EncodableLayout","parent":null,"children":[{"krate":0,"index":2835}],"decl_id":null,"docs":" Types which are safe to treat as an immutable byte slice in a pixel layout\n for image encoding.\n","sig":null,"attributes":[{"value":"/ Types which are safe to treat as an immutable byte slice in a pixel layout","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506035,"byte_end":506113,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ for image encoding.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506114,"byte_end":506137,"line_start":11,"line_end":11,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2835},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506234,"byte_end":506242,"line_start":14,"line_end":14,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::traits::EncodableLayout::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":{"krate":0,"index":2834},"children":[],"decl_id":null,"docs":" Get the bytes of this value.\n","sig":null,"attributes":[{"value":"/ Get the bytes of this value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506194,"byte_end":506226,"line_start":13,"line_end":13,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506764,"byte_end":506773,"line_start":37,"line_end":37,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[{"krate":0,"index":2843},{"krate":0,"index":2844}],"decl_id":null,"docs":" The type of each channel in a pixel. For example, this can be `u8`, `u16`, `f32`.\n","sig":null,"attributes":[{"value":"/ The type of each channel in a pixel. For example, this can be `u8`, `u16`, `f32`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506595,"byte_end":506680,"line_start":35,"line_end":35,"column_start":1,"column_end":86}}]},{"kind":"Const","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":507031,"byte_end":507048,"line_start":40,"line_end":40,"column_start":11,"column_end":28},"name":"DEFAULT_MAX_VALUE","qualname":"::traits::Primitive::DEFAULT_MAX_VALUE","value":"Self","parent":{"krate":0,"index":2842},"children":[],"decl_id":null,"docs":" The maximum value for this type of primitive within the context of color.\n For floats, the maximum is `1.0`, whereas the integer types inherit their usual maximum values.\n","sig":null,"attributes":[{"value":"/ The maximum value for this type of primitive within the context of color.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506839,"byte_end":506916,"line_start":38,"line_end":38,"column_start":5,"column_end":82}},{"value":"/ For floats, the maximum is `1.0`, whereas the integer types inherit their usual maximum values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506921,"byte_end":507020,"line_start":39,"line_end":39,"column_start":5,"column_end":104}}]},{"kind":"Const","id":{"krate":0,"index":2844},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":507253,"byte_end":507270,"line_start":44,"line_end":44,"column_start":11,"column_end":28},"name":"DEFAULT_MIN_VALUE","qualname":"::traits::Primitive::DEFAULT_MIN_VALUE","value":"Self","parent":{"krate":0,"index":2842},"children":[],"decl_id":null,"docs":" The minimum value for this type of primitive within the context of color.\n For floats, the minimum is `0.0`, whereas the integer types inherit their usual minimum values.\n","sig":null,"attributes":[{"value":"/ The minimum value for this type of primitive within the context of color.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":507061,"byte_end":507138,"line_start":42,"line_end":42,"column_start":5,"column_end":82}},{"value":"/ For floats, the minimum is `0.0`, whereas the integer types inherit their usual minimum values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":507143,"byte_end":507242,"line_start":43,"line_end":43,"column_start":5,"column_end":104}}]},{"kind":"Trait","id":{"krate":0,"index":2846},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":508184,"byte_end":508195,"line_start":72,"line_end":72,"column_start":11,"column_end":22},"name":"Enlargeable","qualname":"::traits::Enlargeable","value":"Enlargeable: Sized + Bounded + NumCast","parent":null,"children":[{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849}],"decl_id":null,"docs":" An Enlargable::Larger value should be enough to calculate\n the sum (average) of a few hundred or thousand Enlargeable values.\n","sig":null,"attributes":[{"value":"/ An Enlargable::Larger value should be enough to calculate","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":508041,"byte_end":508102,"line_start":70,"line_end":70,"column_start":1,"column_end":62}},{"value":"/ the sum (average) of a few hundred or thousand Enlargeable values.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":508103,"byte_end":508173,"line_start":71,"line_end":71,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":2847},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":508234,"byte_end":508240,"line_start":73,"line_end":73,"column_start":10,"column_end":16},"name":"Larger","qualname":"::traits::Enlargeable::Larger","value":"type Larger: Copy + NumCast + Num + PartialOrd<Self::Larger> + Clone + Bounded + AddAssign;","parent":{"krate":0,"index":2846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2848},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":508329,"byte_end":508339,"line_start":75,"line_end":75,"column_start":8,"column_end":18},"name":"clamp_from","qualname":"::traits::Enlargeable::clamp_from","value":"pub fn clamp_from(Self::Larger) -> Self","parent":{"krate":0,"index":2846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":508607,"byte_end":508616,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"to_larger","qualname":"::traits::Enlargeable::to_larger","value":"pub fn to_larger(Self) -> Self::Larger","parent":{"krate":0,"index":2846},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":509519,"byte_end":509523,"line_start":130,"line_end":130,"column_start":11,"column_end":15},"name":"Lerp","qualname":"::traits::Lerp","value":"Lerp: Bounded + NumCast","parent":null,"children":[{"krate":0,"index":2875},{"krate":0,"index":2876}],"decl_id":null,"docs":" Linear interpolation without involving floating numbers.\n","sig":null,"attributes":[{"value":"/ Linear interpolation without involving floating numbers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":509448,"byte_end":509508,"line_start":129,"line_end":129,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":509554,"byte_end":509559,"line_start":131,"line_end":131,"column_start":10,"column_end":15},"name":"Ratio","qualname":"::traits::Lerp::Ratio","value":"type Ratio: Primitive;","parent":{"krate":0,"index":2874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2876},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":509580,"byte_end":509584,"line_start":133,"line_end":133,"column_start":8,"column_end":12},"name":"lerp","qualname":"::traits::Lerp::lerp","value":"pub fn lerp(Self, Self, Self::Ratio) -> Self","parent":{"krate":0,"index":2874},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2886},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510455,"byte_end":510473,"line_start":171,"line_end":171,"column_start":11,"column_end":29},"name":"PixelWithColorType","qualname":"::traits::PixelWithColorType","value":"PixelWithColorType: Pixel + self::private::SealedPixelWithColorType","parent":null,"children":[{"krate":0,"index":2887}],"decl_id":null,"docs":" The pixel with an associated `ColorType`.\n Not all possible pixels represent one of the predefined `ColorType`s.\n","sig":null,"attributes":[{"value":"/ The pixel with an associated `ColorType`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510325,"byte_end":510370,"line_start":169,"line_end":169,"column_start":1,"column_end":46}},{"value":"/ Not all possible pixels represent one of the predefined `ColorType`s.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510371,"byte_end":510444,"line_start":170,"line_end":170,"column_start":1,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":2887},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510759,"byte_end":510769,"line_start":176,"line_end":176,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::traits::PixelWithColorType::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":2886},"children":[],"decl_id":null,"docs":" This pixel has the format of one of the predefined `ColorType`s,\n such as `Rgb8`, `La16` or `Rgba32F`.\n This is needed for automatically detecting\n a color format when saving an image as a file.\n","sig":null,"attributes":[{"value":"/ This pixel has the format of one of the predefined `ColorType`s,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510529,"byte_end":510597,"line_start":172,"line_end":172,"column_start":5,"column_end":73}},{"value":"/ such as `Rgb8`, `La16` or `Rgba32F`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510602,"byte_end":510642,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/ This is needed for automatically detecting","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510647,"byte_end":510693,"line_start":174,"line_end":174,"column_start":5,"column_end":51}},{"value":"/ a color format when saving an image as a file.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510698,"byte_end":510748,"line_start":175,"line_end":175,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":2910},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511843,"byte_end":511867,"line_start":216,"line_end":216,"column_start":15,"column_end":39},"name":"SealedPixelWithColorType","qualname":"::traits::private::SealedPixelWithColorType","value":"SealedPixelWithColorType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2921},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512507,"byte_end":512512,"line_start":235,"line_end":235,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::traits::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":2922},{"krate":0,"index":2923},{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2926},{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929},{"krate":0,"index":2930},{"krate":0,"index":2931},{"krate":0,"index":2932},{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2937},{"krate":0,"index":2939},{"krate":0,"index":2942},{"krate":0,"index":2945},{"krate":0,"index":2948},{"krate":0,"index":2951},{"krate":0,"index":2953},{"krate":0,"index":2955},{"krate":0,"index":2956}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[{"value":"/ A generalized pixel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512382,"byte_end":512406,"line_start":232,"line_end":232,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512407,"byte_end":512410,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ A pixel object is usually not used standalone but as a view into an image buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512411,"byte_end":512496,"line_start":234,"line_end":234,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":2922},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512612,"byte_end":512620,"line_start":237,"line_end":237,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::traits::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" The scalar type that is used to store each channel in this pixel.\n","sig":null,"attributes":[{"value":"/ The scalar type that is used to store each channel in this pixel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512533,"byte_end":512602,"line_start":236,"line_end":236,"column_start":5,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":2923},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512695,"byte_end":512708,"line_start":240,"line_end":240,"column_start":11,"column_end":24},"name":"CHANNEL_COUNT","qualname":"::traits::Pixel::CHANNEL_COUNT","value":"u8","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" The number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"/ The number of channels of this pixel type.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512638,"byte_end":512684,"line_start":239,"line_end":239,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2924},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512765,"byte_end":512773,"line_start":243,"line_end":243,"column_start":8,"column_end":16},"name":"channels","qualname":"::traits::Pixel::channels","value":"pub fn channels(&Self) -> &[Self::Subpixel]","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the components as a slice.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512719,"byte_end":512757,"line_start":242,"line_end":242,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2925},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512861,"byte_end":512873,"line_start":246,"line_end":246,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::traits::Pixel::channels_mut","value":"pub fn channels_mut(&mut Self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the components as a mutable slice","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512808,"byte_end":512853,"line_start":245,"line_end":245,"column_start":5,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":2926},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":513039,"byte_end":513050,"line_start":250,"line_end":250,"column_start":11,"column_end":22},"name":"COLOR_MODEL","qualname":"::traits::Pixel::COLOR_MODEL","value":"&'static str","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" A string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"/ A string that can help to interpret the meaning each channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512916,"byte_end":512980,"line_start":248,"line_end":248,"column_start":5,"column_end":69}},{"value":"/ See [gimp babl](http://gegl.org/babl/).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512985,"byte_end":513028,"line_start":249,"line_end":249,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2927},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":513307,"byte_end":513316,"line_start":255,"line_end":255,"column_start":8,"column_end":17},"name":"channels4","qualname":"::traits::Pixel::channels4","value":"pub fn channels4(&Self)\n-> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value\n","sig":null,"attributes":[{"value":"/ Returns the channels of this pixel as a 4 tuple. If the pixel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":513071,"byte_end":513136,"line_start":252,"line_end":252,"column_start":5,"column_end":70}},{"value":"/ has less than 4 channels the remainder is filled with the maximum value","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":513141,"byte_end":513216,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"deprecated(since = \"0.24.0\", note = \"Use `channels()` or `channels_mut()`\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":513221,"byte_end":513299,"line_start":254,"line_end":254,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2928},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":513746,"byte_end":513759,"line_start":270,"line_end":270,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::traits::Pixel::from_channels","value":"pub fn from_channels(Self::Subpixel, Self::Subpixel, Self::Subpixel,\nSelf::Subpixel) -> Self","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.\n","sig":null,"attributes":[{"value":"/ Construct a pixel from the 4 channels a, b, c and d.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":513452,"byte_end":513508,"line_start":264,"line_end":264,"column_start":5,"column_end":61}},{"value":"/ If the pixel does not contain 4 channels the extra are ignored.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":513513,"byte_end":513580,"line_start":265,"line_end":265,"column_start":5,"column_end":72}},{"value":"deprecated(since = \"0.24.0\", note =\n\"Use the constructor of the pixel, for example `Rgba::new(r,g,b,a)` or `Pixel::from_slice`\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":513585,"byte_end":513738,"line_start":266,"line_end":269,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2929},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514113,"byte_end":514123,"line_start":281,"line_end":281,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::traits::Pixel::from_slice","value":"pub fn from_slice(&[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[{"value":"/ Returns a view into a slice.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":513889,"byte_end":513921,"line_start":277,"line_end":277,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":513926,"byte_end":513929,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":513934,"byte_end":514018,"line_start":279,"line_end":279,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to prevent panics if the pixel is used later on.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514023,"byte_end":514105,"line_start":280,"line_end":280,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2930},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514403,"byte_end":514417,"line_start":287,"line_end":287,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::traits::Pixel::from_slice_mut","value":"pub fn from_slice_mut(&mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[{"value":"/ Returns mutable view into a mutable slice.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514165,"byte_end":514211,"line_start":283,"line_end":283,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514216,"byte_end":514219,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Note: The slice length is not checked on creation. Thus the caller has to ensure","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514224,"byte_end":514308,"line_start":285,"line_end":285,"column_start":5,"column_end":89}},{"value":"/ that the slice is long enough to prevent panics if the pixel is used later on.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514313,"byte_end":514395,"line_start":286,"line_end":286,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2931},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514504,"byte_end":514510,"line_start":290,"line_end":290,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::traits::Pixel::to_rgb","value":"pub fn to_rgb(&Self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514467,"byte_end":514496,"line_start":289,"line_end":289,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":2932},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514606,"byte_end":514613,"line_start":293,"line_end":293,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::traits::Pixel::to_rgba","value":"pub fn to_rgba(&Self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to RGB with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514547,"byte_end":514598,"line_start":292,"line_end":292,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2933},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514689,"byte_end":514696,"line_start":296,"line_end":296,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::traits::Pixel::to_luma","value":"pub fn to_luma(&Self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514651,"byte_end":514681,"line_start":295,"line_end":295,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2934},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514794,"byte_end":514807,"line_start":299,"line_end":299,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::traits::Pixel::to_luma_alpha","value":"pub fn to_luma_alpha(&Self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[{"value":"/ Convert this pixel to luma with an alpha channel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514734,"byte_end":514786,"line_start":298,"line_end":298,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2935},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514915,"byte_end":514918,"line_start":302,"line_end":302,"column_start":8,"column_end":11},"name":"map","qualname":"::traits::Pixel::map","value":"pub fn map<F>(&Self, F) -> Self where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":514846,"byte_end":514907,"line_start":301,"line_end":301,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2937},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":515079,"byte_end":515084,"line_start":307,"line_end":307,"column_start":8,"column_end":13},"name":"apply","qualname":"::traits::Pixel::apply","value":"pub fn apply<F>(&mut Self, F) where F: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":515010,"byte_end":515071,"line_start":306,"line_end":306,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2939},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":515309,"byte_end":515323,"line_start":313,"line_end":313,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::traits::Pixel::map_with_alpha","value":"pub fn map_with_alpha<F, G>(&Self, F, G) -> Self where\nF: FnMut(Self::Subpixel) -> Self::Subpixel, G: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":515172,"byte_end":515244,"line_start":311,"line_end":311,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":515249,"byte_end":515301,"line_start":312,"line_end":312,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2942},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":515629,"byte_end":515645,"line_start":320,"line_end":320,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::traits::Pixel::apply_with_alpha","value":"pub fn apply_with_alpha<F, G>(&mut Self, F, G) where F: FnMut(Self::Subpixel)\n-> Self::Subpixel, G: FnMut(Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":515476,"byte_end":515548,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ Apply the function ```g``` to the alpha channel. Works in-place.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":515553,"byte_end":515621,"line_start":319,"line_end":319,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2945},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":515874,"byte_end":515891,"line_start":326,"line_end":326,"column_start":8,"column_end":25},"name":"map_without_alpha","qualname":"::traits::Pixel::map_without_alpha","value":"pub fn map_without_alpha<F>(&Self, F) -> Self where F: FnMut(Self::Subpixel)\n-> Self::Subpixel","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":515794,"byte_end":515866,"line_start":325,"line_end":325,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2948},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":516183,"byte_end":516202,"line_start":337,"line_end":337,"column_start":8,"column_end":27},"name":"apply_without_alpha","qualname":"::traits::Pixel::apply_without_alpha","value":"pub fn apply_without_alpha<F>(&mut Self, F) where F: FnMut(Self::Subpixel) ->\nSelf::Subpixel","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Works in place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel except the alpha channel.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":516079,"byte_end":516151,"line_start":335,"line_end":335,"column_start":5,"column_end":77}},{"value":"/ Works in place.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":516156,"byte_end":516175,"line_start":336,"line_end":336,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":516445,"byte_end":516449,"line_start":346,"line_end":346,"column_start":8,"column_end":12},"name":"map2","qualname":"::traits::Pixel::map2","value":"pub fn map2<F>(&Self, &Self, F) -> Self where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":516343,"byte_end":516407,"line_start":344,"line_end":344,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":516412,"byte_end":516437,"line_start":345,"line_end":345,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":2953},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":516689,"byte_end":516695,"line_start":352,"line_end":352,"column_start":8,"column_end":14},"name":"apply2","qualname":"::traits::Pixel::apply2","value":"pub fn apply2<F>(&mut Self, &Self, F) where\nF: FnMut(Self::Subpixel, Self::Subpixel) -> Self::Subpixel","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[{"value":"/ Apply the function ```f``` to each channel of this pixel and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":516571,"byte_end":516635,"line_start":350,"line_end":350,"column_start":5,"column_end":69}},{"value":"/ ```other``` pairwise. Works in-place.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":516640,"byte_end":516681,"line_start":351,"line_end":351,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2955},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":516842,"byte_end":516848,"line_start":357,"line_end":357,"column_start":8,"column_end":14},"name":"invert","qualname":"::traits::Pixel::invert","value":"pub fn invert(&mut Self)","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[{"value":"/ Invert this pixel","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":516813,"byte_end":516834,"line_start":356,"line_end":356,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2956},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":516959,"byte_end":516964,"line_start":360,"line_end":360,"column_start":8,"column_end":13},"name":"blend","qualname":"::traits::Pixel::blend","value":"pub fn blend(&mut Self, &Self)","parent":{"krate":0,"index":2921},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[{"value":"/ Blend the color of a given pixel into ourself, taking into account alpha channels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":516866,"byte_end":516951,"line_start":359,"line_end":359,"column_start":5,"column_end":90}}]},{"kind":"Trait","id":{"krate":0,"index":2958},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":517073,"byte_end":517088,"line_start":365,"line_end":365,"column_start":15,"column_end":30},"name":"EncodableLayout","qualname":"::traits::seals::EncodableLayout","value":"EncodableLayout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16349,"byte_end":16365,"line_start":192,"line_end":192,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":17030,"byte_end":17043,"line_start":212,"line_end":212,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":17796,"byte_end":17809,"line_start":237,"line_end":237,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18563,"byte_end":18577,"line_start":262,"line_end":262,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18956,"byte_end":18966,"line_start":277,"line_end":277,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":19302,"byte_end":19312,"line_start":289,"line_end":289,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":19428,"byte_end":19443,"line_start":295,"line_end":295,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":19572,"byte_end":19587,"line_start":301,"line_end":301,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":19837,"byte_end":19853,"line_start":310,"line_end":310,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":20156,"byte_end":20166,"line_start":322,"line_end":322,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":20627,"byte_end":20637,"line_start":335,"line_end":335,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":21090,"byte_end":21106,"line_start":348,"line_end":348,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":22479,"byte_end":22495,"line_start":383,"line_end":383,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":22522,"byte_end":22536,"line_start":385,"line_end":385,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":23409,"byte_end":23423,"line_start":411,"line_end":411,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":23628,"byte_end":23641,"line_start":420,"line_end":420,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":24024,"byte_end":24037,"line_start":433,"line_end":433,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":24242,"byte_end":24255,"line_start":442,"line_end":442,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":24733,"byte_end":24746,"line_start":456,"line_end":456,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":24951,"byte_end":24961,"line_start":465,"line_end":465,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":25465,"byte_end":25475,"line_start":478,"line_end":478,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":25502,"byte_end":25517,"line_start":480,"line_end":480,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72564,"byte_end":72571,"line_start":403,"line_end":403,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":73338,"byte_end":73346,"line_start":438,"line_end":438,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":83650,"byte_end":83662,"line_start":112,"line_end":112,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":92088,"byte_end":92100,"line_start":388,"line_end":388,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":120285,"byte_end":120296,"line_start":95,"line_end":95,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":805},{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":121404,"byte_end":121414,"line_start":128,"line_end":128,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130069,"byte_end":130075,"line_start":70,"line_end":70,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132139,"byte_end":132145,"line_start":135,"line_end":135,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132969,"byte_end":132975,"line_start":160,"line_end":160,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111118,"byte_end":111130,"line_start":19,"line_end":19,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":113178,"byte_end":113184,"line_start":62,"line_end":62,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":113409,"byte_end":113415,"line_start":73,"line_end":73,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":923},{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140861,"byte_end":140873,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":153549,"byte_end":153552,"line_start":446,"line_end":446,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":153812,"byte_end":153823,"line_start":461,"line_end":461,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1030},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1041},{"krate":0,"index":1043},{"krate":0,"index":1045},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171281,"byte_end":171292,"line_start":913,"line_end":913,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177268,"byte_end":177272,"line_start":1070,"line_end":1070,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182876,"byte_end":182883,"line_start":1206,"line_end":1206,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":187314,"byte_end":187325,"line_start":1325,"line_end":1325,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":187949,"byte_end":187960,"line_start":1346,"line_end":1346,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":188578,"byte_end":188582,"line_start":1365,"line_end":1365,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":189740,"byte_end":189747,"line_start":1408,"line_end":1408,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":190924,"byte_end":190931,"line_start":1451,"line_end":1451,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":191784,"byte_end":191794,"line_start":1477,"line_end":1477,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":191946,"byte_end":191969,"line_start":1481,"line_end":1481,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":192177,"byte_end":192200,"line_start":1486,"line_end":1486,"column_start":31,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":192876,"byte_end":192881,"line_start":1506,"line_end":1506,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":193816,"byte_end":193821,"line_start":1530,"line_end":1530,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":193846,"byte_end":193856,"line_start":1532,"line_end":1532,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":200719,"byte_end":200730,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":202513,"byte_end":202523,"line_start":68,"line_end":68,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1217},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":202936,"byte_end":202947,"line_start":82,"line_end":82,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":204728,"byte_end":204737,"line_start":145,"line_end":145,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":205030,"byte_end":205040,"line_start":157,"line_end":157,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":244213,"byte_end":244222,"line_start":184,"line_end":184,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1361},{"krate":0,"index":1365},{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247697,"byte_end":247709,"line_start":316,"line_end":316,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":248047,"byte_end":248059,"line_start":328,"line_end":328,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":248689,"byte_end":248700,"line_start":353,"line_end":353,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1398},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":259279,"byte_end":259290,"line_start":656,"line_end":656,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":281830,"byte_end":281839,"line_start":40,"line_end":40,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":282631,"byte_end":282640,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1600},{"krate":0,"index":1601}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":284033,"byte_end":284043,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1608},{"krate":0,"index":1609},{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":288843,"byte_end":288853,"line_start":219,"line_end":219,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618},{"krate":0,"index":1619},{"krate":0,"index":1631}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":290914,"byte_end":290925,"line_start":283,"line_end":283,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1643},{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":296596,"byte_end":296607,"line_start":430,"line_end":430,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":296745,"byte_end":296758,"line_start":434,"line_end":434,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":299185,"byte_end":299195,"line_start":513,"line_end":513,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":303670,"byte_end":303680,"line_start":614,"line_end":614,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":305427,"byte_end":305437,"line_start":657,"line_end":657,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":306377,"byte_end":306392,"line_start":680,"line_end":680,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1690}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":306478,"byte_end":306488,"line_start":686,"line_end":686,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":306578,"byte_end":306598,"line_start":692,"line_end":692,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":306904,"byte_end":306924,"line_start":704,"line_end":704,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":308872,"byte_end":308878,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":309468,"byte_end":309474,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":309993,"byte_end":309998,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311071,"byte_end":311076,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":317265,"byte_end":317273,"line_start":270,"line_end":270,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":320803,"byte_end":320809,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1857},{"krate":0,"index":1858}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":321053,"byte_end":321059,"line_start":38,"line_end":38,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":321208,"byte_end":321214,"line_start":47,"line_end":47,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1867}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":321423,"byte_end":321429,"line_start":57,"line_end":57,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":321576,"byte_end":321582,"line_start":65,"line_end":65,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":321984,"byte_end":321993,"line_start":84,"line_end":84,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1883}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":322249,"byte_end":322258,"line_start":96,"line_end":96,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":322407,"byte_end":322416,"line_start":105,"line_end":105,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1892}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":322664,"byte_end":322673,"line_start":117,"line_end":117,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":323226,"byte_end":323230,"line_start":140,"line_end":140,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":324148,"byte_end":324152,"line_start":162,"line_end":162,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1908},{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":324562,"byte_end":324566,"line_start":178,"line_end":178,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":324715,"byte_end":324719,"line_start":187,"line_end":187,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1917}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":325086,"byte_end":325090,"line_start":201,"line_end":201,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":325235,"byte_end":325239,"line_start":209,"line_end":209,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":325813,"byte_end":325820,"line_start":232,"line_end":232,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":326760,"byte_end":326767,"line_start":254,"line_end":254,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1935},{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":327190,"byte_end":327197,"line_start":270,"line_end":270,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":327346,"byte_end":327353,"line_start":279,"line_end":279,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1944}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":327735,"byte_end":327742,"line_start":293,"line_end":293,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":328185,"byte_end":328200,"line_start":315,"line_end":315,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1958},{"krate":0,"index":1959}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":328603,"byte_end":328618,"line_start":333,"line_end":333,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1964}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":328744,"byte_end":328759,"line_start":342,"line_end":342,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":328935,"byte_end":328950,"line_start":351,"line_end":351,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":329488,"byte_end":329501,"line_start":375,"line_end":375,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1980},{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":330039,"byte_end":330052,"line_start":399,"line_end":399,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1986}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":330176,"byte_end":330189,"line_start":408,"line_end":408,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":330359,"byte_end":330372,"line_start":417,"line_end":417,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1992}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":330897,"byte_end":330915,"line_start":441,"line_end":441,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2003},{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":331326,"byte_end":331344,"line_start":459,"line_end":459,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":331475,"byte_end":331493,"line_start":468,"line_end":468,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2012}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":332040,"byte_end":332056,"line_start":492,"line_end":492,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2023}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":332603,"byte_end":332619,"line_start":516,"line_end":516,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2028}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":332748,"byte_end":332764,"line_start":525,"line_end":525,"column_start":31,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2031}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335635,"byte_end":335646,"line_start":615,"line_end":615,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":343414,"byte_end":343425,"line_start":835,"line_end":835,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":346745,"byte_end":346756,"line_start":932,"line_end":932,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2075}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":347352,"byte_end":347363,"line_start":956,"line_end":956,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":348145,"byte_end":348156,"line_start":984,"line_end":984,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":349104,"byte_end":349115,"line_start":1015,"line_end":1015,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2091}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":349384,"byte_end":349395,"line_start":1030,"line_end":1030,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2095},{"krate":0,"index":2096}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":349623,"byte_end":349634,"line_start":1042,"line_end":1042,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":349864,"byte_end":349875,"line_start":1052,"line_end":1052,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":350110,"byte_end":350121,"line_start":1064,"line_end":1064,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":350346,"byte_end":350357,"line_start":1074,"line_end":1074,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2113}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":350716,"byte_end":350727,"line_start":1089,"line_end":1089,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":351416,"byte_end":351427,"line_start":1116,"line_end":1116,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":2128},{"krate":0,"index":2129}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":354090,"byte_end":354101,"line_start":1188,"line_end":1188,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2136},{"krate":0,"index":2137}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356503,"byte_end":356512,"line_start":1263,"line_end":1263,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":357890,"byte_end":357901,"line_start":1301,"line_end":1301,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2150}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":370012,"byte_end":370021,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2193},{"krate":0,"index":2195},{"krate":0,"index":2196}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373673,"byte_end":373690,"line_start":151,"line_end":151,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2198}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":375011,"byte_end":375028,"line_start":187,"line_end":187,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":380548,"byte_end":380549,"line_start":378,"line_end":378,"column_start":41,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2207}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":382791,"byte_end":382792,"line_start":454,"line_end":454,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2231}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":383815,"byte_end":383819,"line_start":481,"line_end":481,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":384093,"byte_end":384097,"line_start":492,"line_end":492,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":384333,"byte_end":384337,"line_start":501,"line_end":501,"column_start":70,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":2248}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":384631,"byte_end":384635,"line_start":512,"line_end":512,"column_start":71,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2252}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":384962,"byte_end":384967,"line_start":526,"line_end":526,"column_start":58,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":385300,"byte_end":385305,"line_start":538,"line_end":538,"column_start":70,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":2260}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":385645,"byte_end":385650,"line_start":550,"line_end":550,"column_start":71,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":2264}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":385985,"byte_end":385990,"line_start":562,"line_end":562,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2268}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":386309,"byte_end":386313,"line_start":575,"line_end":575,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2272}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":386707,"byte_end":386711,"line_start":589,"line_end":589,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2276}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":387096,"byte_end":387100,"line_start":603,"line_end":603,"column_start":58,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":387494,"byte_end":387498,"line_start":617,"line_end":617,"column_start":57,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2284}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":387901,"byte_end":387904,"line_start":633,"line_end":633,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":388252,"byte_end":388255,"line_start":646,"line_end":646,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2292}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":388601,"byte_end":388604,"line_start":659,"line_end":659,"column_start":58,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":388943,"byte_end":388946,"line_start":672,"line_end":672,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2300}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":389394,"byte_end":389399,"line_start":691,"line_end":691,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2305}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":390410,"byte_end":390414,"line_start":724,"line_end":724,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":390524,"byte_end":390528,"line_start":730,"line_end":730,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":392911,"byte_end":392914,"line_start":794,"line_end":794,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2314}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":393132,"byte_end":393137,"line_start":806,"line_end":806,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":393316,"byte_end":393320,"line_start":815,"line_end":815,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":393514,"byte_end":393518,"line_start":826,"line_end":826,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2325}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":393736,"byte_end":393739,"line_start":836,"line_end":836,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2328}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":402352,"byte_end":402364,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2498},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502},{"krate":0,"index":2503},{"krate":0,"index":2504},{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2534},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":2537},{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545},{"krate":0,"index":2548},{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":429757,"byte_end":429769,"line_start":877,"line_end":877,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2553}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":429891,"byte_end":429903,"line_start":883,"line_end":883,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2555}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430025,"byte_end":430037,"line_start":889,"line_end":889,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2557}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430152,"byte_end":430164,"line_start":895,"line_end":895,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430283,"byte_end":430295,"line_start":901,"line_end":901,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2561}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430422,"byte_end":430434,"line_start":907,"line_end":907,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430561,"byte_end":430573,"line_start":913,"line_end":913,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2565}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430693,"byte_end":430705,"line_start":919,"line_end":919,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2567}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430827,"byte_end":430839,"line_start":925,"line_end":925,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2569}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430962,"byte_end":430974,"line_start":931,"line_end":931,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2571}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":431119,"byte_end":431131,"line_start":937,"line_end":937,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2573}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":431306,"byte_end":431318,"line_start":943,"line_end":943,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2575}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":431493,"byte_end":431505,"line_start":950,"line_end":950,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":432003,"byte_end":432015,"line_start":967,"line_end":967,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":434428,"byte_end":434440,"line_start":1012,"line_end":1012,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2586}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446601,"byte_end":446612,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2671},{"krate":0,"index":2674},{"krate":0,"index":2678},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2682}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":454684,"byte_end":454701,"line_start":312,"line_end":312,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":456345,"byte_end":456360,"line_start":357,"line_end":357,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2692},{"krate":0,"index":2693}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":465593,"byte_end":465601,"line_start":602,"line_end":602,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":2710},{"krate":0,"index":2711}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":473534,"byte_end":473540,"line_start":820,"line_end":820,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2740},{"krate":0,"index":2741}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474008,"byte_end":474014,"line_start":842,"line_end":842,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2744}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":484290,"byte_end":484298,"line_start":1126,"line_end":1126,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":485647,"byte_end":485655,"line_start":1170,"line_end":1170,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2777},{"krate":0,"index":2781}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":487062,"byte_end":487070,"line_start":1208,"line_end":1208,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2784},{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":487886,"byte_end":487894,"line_start":1236,"line_end":1236,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2788},{"krate":0,"index":2789}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":488045,"byte_end":488053,"line_start":1246,"line_end":1246,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2792}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":488216,"byte_end":488229,"line_start":1256,"line_end":1256,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2797},{"krate":0,"index":2798}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":488702,"byte_end":488715,"line_start":1277,"line_end":1277,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510813,"byte_end":510816,"line_start":179,"line_end":179,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510904,"byte_end":510907,"line_start":182,"line_end":182,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2891}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510997,"byte_end":511000,"line_start":185,"line_end":185,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2893}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511092,"byte_end":511096,"line_start":189,"line_end":189,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2895}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511185,"byte_end":511189,"line_start":192,"line_end":192,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2897}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511280,"byte_end":511284,"line_start":195,"line_end":195,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2899}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511377,"byte_end":511381,"line_start":199,"line_end":199,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511467,"byte_end":511471,"line_start":202,"line_end":202,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2903}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511559,"byte_end":511564,"line_start":205,"line_end":205,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2905}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511651,"byte_end":511656,"line_start":208,"line_end":208,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2907}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511909,"byte_end":511912,"line_start":217,"line_end":217,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511958,"byte_end":511961,"line_start":218,"line_end":218,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512008,"byte_end":512011,"line_start":219,"line_end":219,"column_start":39,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512059,"byte_end":512063,"line_start":221,"line_end":221,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512109,"byte_end":512113,"line_start":222,"line_end":222,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512160,"byte_end":512164,"line_start":223,"line_end":223,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512212,"byte_end":512216,"line_start":225,"line_end":225,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512262,"byte_end":512267,"line_start":226,"line_end":226,"column_start":39,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512314,"byte_end":512318,"line_start":228,"line_end":228,"column_start":39,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512365,"byte_end":512370,"line_start":229,"line_end":229,"column_start":39,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5039,"byte_end":5044,"line_start":153,"line_end":153,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":144}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5381,"byte_end":5385,"line_start":165,"line_end":165,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":244}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5426,"byte_end":5434,"line_start":168,"line_end":168,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":257}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\mod.rs","byte_start":32262,"byte_end":32270,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":448}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5460,"byte_end":5462,"line_start":171,"line_end":171,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":710}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":5508,"byte_end":5512,"line_start":174,"line_end":174,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":925}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":8296,"byte_end":8300,"line_start":236,"line_end":236,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1141}},{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src/lib.rs","byte_start":8428,"byte_end":8431,"line_start":241,"line_end":241,"column_start":13,"column_end":16},"ref_id":{"krate":0,"index":1472}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":16349,"byte_end":16365,"line_start":192,"line_end":192,"column_start":6,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":17030,"byte_end":17043,"line_start":212,"line_end":212,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":17796,"byte_end":17809,"line_start":237,"line_end":237,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18563,"byte_end":18577,"line_start":262,"line_end":262,"column_start":6,"column_end":20},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":18956,"byte_end":18966,"line_start":277,"line_end":277,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":19302,"byte_end":19312,"line_start":289,"line_end":289,"column_start":26,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2977},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":19428,"byte_end":19443,"line_start":295,"line_end":295,"column_start":28,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3086},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":19572,"byte_end":19587,"line_start":301,"line_end":301,"column_start":36,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3086},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":19837,"byte_end":19853,"line_start":310,"line_end":310,"column_start":32,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2998},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":20156,"byte_end":20166,"line_start":322,"line_end":322,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2977},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":20627,"byte_end":20637,"line_start":335,"line_end":335,"column_start":16,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2977},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":21090,"byte_end":21106,"line_start":348,"line_end":348,"column_start":23,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2998},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":22479,"byte_end":22495,"line_start":383,"line_end":383,"column_start":16,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2998},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":22522,"byte_end":22536,"line_start":385,"line_end":385,"column_start":23,"column_end":37},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3029},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":23409,"byte_end":23423,"line_start":411,"line_end":411,"column_start":16,"column_end":30},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3029},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":23628,"byte_end":23641,"line_start":420,"line_end":420,"column_start":23,"column_end":36},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":24024,"byte_end":24037,"line_start":433,"line_end":433,"column_start":16,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3024},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":24242,"byte_end":24255,"line_start":442,"line_end":442,"column_start":23,"column_end":36},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3055},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":24733,"byte_end":24746,"line_start":456,"line_end":456,"column_start":16,"column_end":29},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3055},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":24951,"byte_end":24961,"line_start":465,"line_end":465,"column_start":23,"column_end":33},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3060},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":25465,"byte_end":25475,"line_start":478,"line_end":478,"column_start":16,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3060},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\error.rs","byte_start":25502,"byte_end":25517,"line_start":480,"line_end":480,"column_start":23,"column_end":38},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3086},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":72564,"byte_end":72571,"line_start":403,"line_end":403,"column_start":19,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3129},"to":{"krate":0,"index":531}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\colorops.rs","byte_start":73338,"byte_end":73346,"line_start":438,"line_end":438,"column_start":32,"column_end":40},"kind":{"Impl":{"id":23}},"from":{"krate":27,"index":26},"to":{"krate":0,"index":531}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":83650,"byte_end":83662,"line_start":112,"line_end":112,"column_start":22,"column_end":34},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":603},"to":{"krate":14,"index":311}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\imageops\\sample.rs","byte_start":92088,"byte_end":92100,"line_start":388,"line_end":388,"column_start":34,"column_end":46},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":120285,"byte_end":120296,"line_start":95,"line_end":95,"column_start":29,"column_end":40},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":801},"to":{"krate":0,"index":791}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\free_functions.rs","byte_start":121404,"byte_end":121414,"line_start":128,"line_end":128,"column_start":29,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":812},"to":{"krate":0,"index":791}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":130069,"byte_end":130075,"line_start":70,"line_end":70,"column_start":15,"column_end":21},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132139,"byte_end":132145,"line_start":135,"line_end":135,"column_start":6,"column_end":12},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\reader.rs","byte_start":132969,"byte_end":132975,"line_start":160,"line_end":160,"column_start":25,"column_end":31},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":111118,"byte_end":111130,"line_start":19,"line_end":19,"column_start":18,"column_end":30},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3153},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":113178,"byte_end":113184,"line_start":62,"line_end":62,"column_start":18,"column_end":24},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3169},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\io\\mod.rs","byte_start":113409,"byte_end":113415,"line_start":73,"line_end":73,"column_start":6,"column_end":12},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":140861,"byte_end":140873,"line_start":127,"line_end":127,"column_start":6,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":153549,"byte_end":153552,"line_start":446,"line_end":446,"column_start":6,"column_end":9},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3221},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":153812,"byte_end":153823,"line_start":461,"line_end":461,"column_start":14,"column_end":25},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":171281,"byte_end":171292,"line_start":913,"line_end":913,"column_start":22,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":177268,"byte_end":177272,"line_start":1070,"line_end":1070,"column_start":24,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":182876,"byte_end":182883,"line_start":1206,"line_end":1206,"column_start":24,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":187314,"byte_end":187325,"line_start":1325,"line_end":1325,"column_start":40,"column_end":51},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3188},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":187949,"byte_end":187960,"line_start":1346,"line_end":1346,"column_start":43,"column_end":54},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3188},"to":{"krate":2,"index":3331}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":188578,"byte_end":188582,"line_start":1365,"line_end":1365,"column_start":45,"column_end":49},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3241},"to":{"krate":0,"index":2745}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":189740,"byte_end":189747,"line_start":1408,"line_end":1408,"column_start":45,"column_end":52},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3254},"to":{"krate":0,"index":2745}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":190924,"byte_end":190931,"line_start":1451,"line_end":1451,"column_start":41,"column_end":48},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3254},"to":{"krate":0,"index":2756}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":191784,"byte_end":191794,"line_start":1477,"line_end":1477,"column_start":22,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2977},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":191946,"byte_end":191969,"line_start":1481,"line_end":1481,"column_start":31,"column_end":54},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3316},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":192177,"byte_end":192200,"line_start":1486,"line_end":1486,"column_start":31,"column_end":54},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3316},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":192876,"byte_end":192881,"line_start":1506,"line_end":1506,"column_start":23,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3267},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":193816,"byte_end":193821,"line_start":1530,"line_end":1530,"column_start":23,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3267},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\flat.rs","byte_start":193846,"byte_end":193856,"line_start":1532,"line_end":1532,"column_start":21,"column_end":31},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3291},"to":{"krate":2,"index":2722}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":200719,"byte_end":200730,"line_start":18,"line_end":18,"column_start":15,"column_end":26},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1201},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":202513,"byte_end":202523,"line_start":68,"line_end":68,"column_start":18,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1210},"to":{"krate":1,"index":4628}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":202936,"byte_end":202947,"line_start":82,"line_end":82,"column_start":45,"column_end":56},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1201},"to":{"krate":0,"index":2712}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":204728,"byte_end":204737,"line_start":145,"line_end":145,"column_start":6,"column_end":15},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\decoder.rs","byte_start":205030,"byte_end":205040,"line_start":157,"line_end":157,"column_start":6,"column_end":16},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":244213,"byte_end":244222,"line_start":184,"line_end":184,"column_start":16,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":247697,"byte_end":247709,"line_start":316,"line_end":316,"column_start":6,"column_end":18},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":248047,"byte_end":248059,"line_start":328,"line_end":328,"column_start":18,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3356},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":248689,"byte_end":248700,"line_start":353,"line_end":353,"column_start":16,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\jpeg\\encoder.rs","byte_start":259279,"byte_end":259290,"line_start":656,"line_end":656,"column_start":33,"column_end":44},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1371},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":281830,"byte_end":281839,"line_start":40,"line_end":40,"column_start":15,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1590},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":282631,"byte_end":282640,"line_start":66,"line_end":66,"column_start":24,"column_end":33},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1590},"to":{"krate":1,"index":4628}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":284033,"byte_end":284043,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":288843,"byte_end":288853,"line_start":219,"line_end":219,"column_start":45,"column_end":55},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1602},"to":{"krate":0,"index":2712}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":290914,"byte_end":290925,"line_start":283,"line_end":283,"column_start":15,"column_end":26},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":296596,"byte_end":296607,"line_start":430,"line_end":430,"column_start":49,"column_end":60},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1632},"to":{"krate":0,"index":2732}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":296745,"byte_end":296758,"line_start":434,"line_end":434,"column_start":36,"column_end":49},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1650},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":299185,"byte_end":299195,"line_start":513,"line_end":513,"column_start":16,"column_end":26},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":303670,"byte_end":303680,"line_start":614,"line_end":614,"column_start":33,"column_end":43},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1658},"to":{"krate":0,"index":2735}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":305427,"byte_end":305437,"line_start":657,"line_end":657,"column_start":6,"column_end":16},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":306377,"byte_end":306392,"line_start":680,"line_end":680,"column_start":18,"column_end":33},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3371},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":306478,"byte_end":306488,"line_start":686,"line_end":686,"column_start":18,"column_end":28},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3393},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":306578,"byte_end":306598,"line_start":692,"line_end":692,"column_start":23,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3417},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\codecs\\png.rs","byte_start":306904,"byte_end":306924,"line_start":704,"line_end":704,"column_start":28,"column_end":48},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3417},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":308872,"byte_end":308878,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":309468,"byte_end":309474,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1712},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":309993,"byte_end":309998,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":311071,"byte_end":311076,"line_start":107,"line_end":107,"column_start":6,"column_end":11},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\animation.rs","byte_start":317265,"byte_end":317273,"line_start":270,"line_end":270,"column_start":22,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":2,"index":48584},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":320803,"byte_end":320809,"line_start":26,"line_end":26,"column_start":38,"column_end":44},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1850},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":321053,"byte_end":321059,"line_start":38,"line_end":38,"column_start":47,"column_end":53},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1850},"to":{"krate":2,"index":7791}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":321208,"byte_end":321214,"line_start":47,"line_end":47,"column_start":49,"column_end":55},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1850},"to":{"krate":2,"index":7766}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":321423,"byte_end":321429,"line_start":57,"line_end":57,"column_start":26,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1850},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":321576,"byte_end":321582,"line_start":65,"line_end":65,"column_start":31,"column_end":37},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1850},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":321984,"byte_end":321993,"line_start":84,"line_end":84,"column_start":38,"column_end":47},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":322249,"byte_end":322258,"line_start":96,"line_end":96,"column_start":47,"column_end":56},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":7791}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":322407,"byte_end":322416,"line_start":105,"line_end":105,"column_start":49,"column_end":58},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":7766}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":322664,"byte_end":322673,"line_start":117,"line_end":117,"column_start":31,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1875},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":323226,"byte_end":323230,"line_start":140,"line_end":140,"column_start":25,"column_end":29},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1897},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":324148,"byte_end":324152,"line_start":162,"line_end":162,"column_start":38,"column_end":42},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1897},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":324562,"byte_end":324566,"line_start":178,"line_end":178,"column_start":47,"column_end":51},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1897},"to":{"krate":2,"index":7791}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":324715,"byte_end":324719,"line_start":187,"line_end":187,"column_start":49,"column_end":53},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1897},"to":{"krate":2,"index":7766}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":325086,"byte_end":325090,"line_start":201,"line_end":201,"column_start":26,"column_end":30},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1897},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":325235,"byte_end":325239,"line_start":209,"line_end":209,"column_start":31,"column_end":35},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1897},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":325813,"byte_end":325820,"line_start":232,"line_end":232,"column_start":25,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":326760,"byte_end":326767,"line_start":254,"line_end":254,"column_start":38,"column_end":45},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":327190,"byte_end":327197,"line_start":270,"line_end":270,"column_start":47,"column_end":54},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":7791}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":327346,"byte_end":327353,"line_start":279,"line_end":279,"column_start":49,"column_end":56},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":7766}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":327735,"byte_end":327742,"line_start":293,"line_end":293,"column_start":31,"column_end":38},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1924},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":328185,"byte_end":328200,"line_start":315,"line_end":315,"column_start":38,"column_end":53},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1948},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":328603,"byte_end":328618,"line_start":333,"line_end":333,"column_start":47,"column_end":62},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1948},"to":{"krate":2,"index":7791}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":328744,"byte_end":328759,"line_start":342,"line_end":342,"column_start":26,"column_end":41},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1948},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":328935,"byte_end":328950,"line_start":351,"line_end":351,"column_start":31,"column_end":46},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1948},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":329488,"byte_end":329501,"line_start":375,"line_end":375,"column_start":38,"column_end":51},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1971},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":330039,"byte_end":330052,"line_start":399,"line_end":399,"column_start":47,"column_end":60},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1971},"to":{"krate":2,"index":7791}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":330176,"byte_end":330189,"line_start":408,"line_end":408,"column_start":26,"column_end":39},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1971},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":330359,"byte_end":330372,"line_start":417,"line_end":417,"column_start":31,"column_end":44},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1971},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":330897,"byte_end":330915,"line_start":441,"line_end":441,"column_start":38,"column_end":56},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1993},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":331326,"byte_end":331344,"line_start":459,"line_end":459,"column_start":47,"column_end":65},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1993},"to":{"krate":2,"index":7791}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":331475,"byte_end":331493,"line_start":468,"line_end":468,"column_start":31,"column_end":49},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1993},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":332040,"byte_end":332056,"line_start":492,"line_end":492,"column_start":38,"column_end":54},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":332603,"byte_end":332619,"line_start":516,"line_end":516,"column_start":47,"column_end":63},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":7791}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":332748,"byte_end":332764,"line_start":525,"line_end":525,"column_start":31,"column_end":47},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2013},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":335635,"byte_end":335646,"line_start":615,"line_end":615,"column_start":20,"column_end":31},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":343414,"byte_end":343425,"line_start":835,"line_end":835,"column_start":20,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":346745,"byte_end":346756,"line_start":932,"line_end":932,"column_start":20,"column_end":31},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":347352,"byte_end":347363,"line_start":956,"line_end":956,"column_start":20,"column_end":31},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":348145,"byte_end":348156,"line_start":984,"line_end":984,"column_start":20,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":349104,"byte_end":349115,"line_start":1015,"line_end":1015,"column_start":32,"column_end":43},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3456},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":349384,"byte_end":349395,"line_start":1030,"line_end":1030,"column_start":30,"column_end":41},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3456},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":349623,"byte_end":349634,"line_start":1042,"line_end":1042,"column_start":33,"column_end":44},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3456},"to":{"krate":2,"index":3255}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":349864,"byte_end":349875,"line_start":1052,"line_end":1052,"column_start":42,"column_end":53},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3456},"to":{"krate":2,"index":3327}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":350110,"byte_end":350121,"line_start":1064,"line_end":1064,"column_start":45,"column_end":56},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3456},"to":{"krate":2,"index":3331}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":350346,"byte_end":350357,"line_start":1074,"line_end":1074,"column_start":30,"column_end":41},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3456},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":350716,"byte_end":350727,"line_start":1089,"line_end":1089,"column_start":41,"column_end":52},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3456},"to":{"krate":0,"index":2745}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":351416,"byte_end":351427,"line_start":1116,"line_end":1116,"column_start":37,"column_end":48},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3456},"to":{"krate":0,"index":2756}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":354090,"byte_end":354101,"line_start":1188,"line_end":1188,"column_start":16,"column_end":27},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":356503,"byte_end":356512,"line_start":1263,"line_end":1263,"column_start":6,"column_end":15},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\buffer.rs","byte_start":357890,"byte_end":357901,"line_start":1301,"line_end":1301,"column_start":67,"column_end":78},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3456},"to":{"krate":0,"index":2138}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":370012,"byte_end":370021,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":373673,"byte_end":373690,"line_start":151,"line_end":151,"column_start":6,"column_end":23},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":375011,"byte_end":375028,"line_start":187,"line_end":187,"column_start":26,"column_end":43},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3522},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":380548,"byte_end":380549,"line_start":378,"line_end":378,"column_start":41,"column_end":42},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2206},"to":{"krate":0,"index":2202}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":382791,"byte_end":382792,"line_start":454,"line_end":454,"column_start":29,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2230},"to":{"krate":0,"index":2225}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":383815,"byte_end":383819,"line_start":481,"line_end":481,"column_start":57,"column_end":61},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":384093,"byte_end":384097,"line_start":492,"line_end":492,"column_start":58,"column_end":62},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":384333,"byte_end":384337,"line_start":501,"line_end":501,"column_start":70,"column_end":74},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":384631,"byte_end":384635,"line_start":512,"line_end":512,"column_start":71,"column_end":75},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":384962,"byte_end":384967,"line_start":526,"line_end":526,"column_start":58,"column_end":63},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3866},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":385300,"byte_end":385305,"line_start":538,"line_end":538,"column_start":70,"column_end":75},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3866},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":385645,"byte_end":385650,"line_start":550,"line_end":550,"column_start":71,"column_end":76},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3866},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":385985,"byte_end":385990,"line_start":562,"line_end":562,"column_start":57,"column_end":62},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3866},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":386309,"byte_end":386313,"line_start":575,"line_end":575,"column_start":57,"column_end":61},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3837},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":386707,"byte_end":386711,"line_start":589,"line_end":589,"column_start":56,"column_end":60},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3837},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":387096,"byte_end":387100,"line_start":603,"line_end":603,"column_start":58,"column_end":62},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3837},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":387494,"byte_end":387498,"line_start":617,"line_end":617,"column_start":57,"column_end":61},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3837},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":387901,"byte_end":387904,"line_start":633,"line_end":633,"column_start":56,"column_end":59},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3779},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":388252,"byte_end":388255,"line_start":646,"line_end":646,"column_start":57,"column_end":60},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3779},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":388601,"byte_end":388604,"line_start":659,"line_end":659,"column_start":58,"column_end":61},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3779},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":388943,"byte_end":388946,"line_start":672,"line_end":672,"column_start":57,"column_end":60},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3779},"to":{"krate":0,"index":2222}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":389394,"byte_end":389399,"line_start":691,"line_end":691,"column_start":30,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3866},"to":{"krate":0,"index":2301}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":390410,"byte_end":390414,"line_start":724,"line_end":724,"column_start":30,"column_end":34},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":2301}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":390524,"byte_end":390528,"line_start":730,"line_end":730,"column_start":30,"column_end":34},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3837},"to":{"krate":0,"index":2301}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":392911,"byte_end":392914,"line_start":794,"line_end":794,"column_start":30,"column_end":33},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3779},"to":{"krate":0,"index":2301}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":393132,"byte_end":393137,"line_start":806,"line_end":806,"column_start":31,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3866},"to":{"krate":0,"index":2315}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":393316,"byte_end":393320,"line_start":815,"line_end":815,"column_start":31,"column_end":35},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":2315}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":393514,"byte_end":393518,"line_start":826,"line_end":826,"column_start":31,"column_end":35},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3837},"to":{"krate":0,"index":2315}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\color.rs","byte_start":393736,"byte_end":393739,"line_start":836,"line_end":836,"column_start":31,"column_end":34},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3779},"to":{"krate":0,"index":2315}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":402352,"byte_end":402364,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":429757,"byte_end":429769,"line_start":877,"line_end":877,"column_start":26,"column_end":38},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":429891,"byte_end":429903,"line_start":883,"line_end":883,"column_start":31,"column_end":43},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430025,"byte_end":430037,"line_start":889,"line_end":889,"column_start":25,"column_end":37},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430152,"byte_end":430164,"line_start":895,"line_end":895,"column_start":26,"column_end":38},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430283,"byte_end":430295,"line_start":901,"line_end":901,"column_start":28,"column_end":40},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430422,"byte_end":430434,"line_start":907,"line_end":907,"column_start":33,"column_end":45},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430561,"byte_end":430573,"line_start":913,"line_end":913,"column_start":27,"column_end":39},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430693,"byte_end":430705,"line_start":919,"line_end":919,"column_start":28,"column_end":40},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430827,"byte_end":430839,"line_start":925,"line_end":925,"column_start":28,"column_end":40},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":430962,"byte_end":430974,"line_start":931,"line_end":931,"column_start":29,"column_end":41},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":431119,"byte_end":431131,"line_start":937,"line_end":937,"column_start":49,"column_end":61},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":431306,"byte_end":431318,"line_start":943,"line_end":943,"column_start":50,"column_end":62},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":431493,"byte_end":431505,"line_start":950,"line_end":950,"column_start":27,"column_end":39},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3895},"to":{"krate":0,"index":2745}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":432003,"byte_end":432015,"line_start":967,"line_end":967,"column_start":23,"column_end":35},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3895},"to":{"krate":0,"index":2756}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\dynimage.rs","byte_start":434428,"byte_end":434440,"line_start":1012,"line_end":1012,"column_start":18,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3895},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":446601,"byte_end":446612,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":454684,"byte_end":454701,"line_start":312,"line_end":312,"column_start":28,"column_end":45},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3992},"to":{"krate":2,"index":2930}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":456345,"byte_end":456360,"line_start":357,"line_end":357,"column_start":6,"column_end":21},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":465593,"byte_end":465601,"line_start":602,"line_end":602,"column_start":6,"column_end":14},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":466305,"byte_end":466310,"line_start":627,"line_end":627,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":2712}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":471092,"byte_end":471104,"line_start":747,"line_end":747,"column_start":33,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":2712},"to":{"krate":0,"index":2726}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":471111,"byte_end":471116,"line_start":747,"line_end":747,"column_start":52,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":2726}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":473534,"byte_end":473540,"line_start":820,"line_end":820,"column_start":44,"column_end":50},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4027},"to":{"krate":2,"index":7914}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":474008,"byte_end":474014,"line_start":842,"line_end":842,"column_start":27,"column_end":33},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4027},"to":{"krate":2,"index":2645}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":476636,"byte_end":476652,"line_start":935,"line_end":935,"column_start":25,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":2745},"to":{"krate":0,"index":2756}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":484290,"byte_end":484298,"line_start":1126,"line_end":1126,"column_start":9,"column_end":17},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":485647,"byte_end":485655,"line_start":1170,"line_end":1170,"column_start":9,"column_end":17},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":487062,"byte_end":487070,"line_start":1208,"line_end":1208,"column_start":9,"column_end":17},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":487886,"byte_end":487894,"line_start":1236,"line_end":1236,"column_start":19,"column_end":27},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4039},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":488045,"byte_end":488053,"line_start":1246,"line_end":1246,"column_start":22,"column_end":30},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4039},"to":{"krate":2,"index":3255}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":488216,"byte_end":488229,"line_start":1256,"line_end":1256,"column_start":30,"column_end":43},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4047},"to":{"krate":0,"index":2745}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\image.rs","byte_start":488702,"byte_end":488715,"line_start":1277,"line_end":1277,"column_start":26,"column_end":39},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4047},"to":{"krate":0,"index":2756}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506172,"byte_end":506187,"line_start":12,"line_end":12,"column_start":35,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":2958},"to":{"krate":0,"index":2834}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506775,"byte_end":506779,"line_start":37,"line_end":37,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3034},"to":{"krate":0,"index":2842}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506782,"byte_end":506789,"line_start":37,"line_end":37,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":14,"index":362},"to":{"krate":0,"index":2842}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506792,"byte_end":506795,"line_start":37,"line_end":37,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":14,"index":968},"to":{"krate":0,"index":2842}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506798,"byte_end":506808,"line_start":37,"line_end":37,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2722},"to":{"krate":0,"index":2842}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506817,"byte_end":506822,"line_start":37,"line_end":37,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2645},"to":{"krate":0,"index":2842}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":506825,"byte_end":506832,"line_start":37,"line_end":37,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":14,"index":237},"to":{"krate":0,"index":2842}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":508197,"byte_end":508202,"line_start":72,"line_end":72,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":2846}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":508205,"byte_end":508212,"line_start":72,"line_end":72,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":14,"index":237},"to":{"krate":0,"index":2846}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":508215,"byte_end":508222,"line_start":72,"line_end":72,"column_start":42,"column_end":49},"kind":"SuperTrait","from":{"krate":14,"index":362},"to":{"krate":0,"index":2846}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":509525,"byte_end":509532,"line_start":130,"line_end":130,"column_start":17,"column_end":24},"kind":"SuperTrait","from":{"krate":14,"index":237},"to":{"krate":0,"index":2874}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":509535,"byte_end":509542,"line_start":130,"line_end":130,"column_start":27,"column_end":34},"kind":"SuperTrait","from":{"krate":14,"index":362},"to":{"krate":0,"index":2874}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510475,"byte_end":510480,"line_start":171,"line_end":171,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":2921},"to":{"krate":0,"index":2886}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510498,"byte_end":510522,"line_start":171,"line_end":171,"column_start":54,"column_end":78},"kind":"SuperTrait","from":{"krate":0,"index":2910},"to":{"krate":0,"index":2886}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510813,"byte_end":510816,"line_start":179,"line_end":179,"column_start":29,"column_end":32},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3779},"to":{"krate":0,"index":2886}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510904,"byte_end":510907,"line_start":182,"line_end":182,"column_start":29,"column_end":32},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3779},"to":{"krate":0,"index":2886}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":510997,"byte_end":511000,"line_start":185,"line_end":185,"column_start":29,"column_end":32},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3779},"to":{"krate":0,"index":2886}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511092,"byte_end":511096,"line_start":189,"line_end":189,"column_start":29,"column_end":33},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3837},"to":{"krate":0,"index":2886}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511185,"byte_end":511189,"line_start":192,"line_end":192,"column_start":29,"column_end":33},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3837},"to":{"krate":0,"index":2886}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511280,"byte_end":511284,"line_start":195,"line_end":195,"column_start":29,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3837},"to":{"krate":0,"index":2886}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511377,"byte_end":511381,"line_start":199,"line_end":199,"column_start":29,"column_end":33},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":2886}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511467,"byte_end":511471,"line_start":202,"line_end":202,"column_start":29,"column_end":33},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":2886}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511559,"byte_end":511564,"line_start":205,"line_end":205,"column_start":29,"column_end":34},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3866},"to":{"krate":0,"index":2886}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511651,"byte_end":511656,"line_start":208,"line_end":208,"column_start":29,"column_end":34},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3866},"to":{"krate":0,"index":2886}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511909,"byte_end":511912,"line_start":217,"line_end":217,"column_start":39,"column_end":42},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3779},"to":{"krate":0,"index":2910}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":511958,"byte_end":511961,"line_start":218,"line_end":218,"column_start":39,"column_end":42},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3779},"to":{"krate":0,"index":2910}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512008,"byte_end":512011,"line_start":219,"line_end":219,"column_start":39,"column_end":42},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3779},"to":{"krate":0,"index":2910}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512059,"byte_end":512063,"line_start":221,"line_end":221,"column_start":39,"column_end":43},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3837},"to":{"krate":0,"index":2910}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512109,"byte_end":512113,"line_start":222,"line_end":222,"column_start":39,"column_end":43},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3837},"to":{"krate":0,"index":2910}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512160,"byte_end":512164,"line_start":223,"line_end":223,"column_start":39,"column_end":43},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3837},"to":{"krate":0,"index":2910}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512212,"byte_end":512216,"line_start":225,"line_end":225,"column_start":39,"column_end":43},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":2910}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512262,"byte_end":512267,"line_start":226,"line_end":226,"column_start":39,"column_end":44},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3866},"to":{"krate":0,"index":2910}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512314,"byte_end":512318,"line_start":228,"line_end":228,"column_start":39,"column_end":43},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3808},"to":{"krate":0,"index":2910}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512365,"byte_end":512370,"line_start":229,"line_end":229,"column_start":39,"column_end":44},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3866},"to":{"krate":0,"index":2910}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512514,"byte_end":512518,"line_start":235,"line_end":235,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":3034},"to":{"krate":0,"index":2921}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.24.3\\./src\\traits.rs","byte_start":512521,"byte_end":512526,"line_start":235,"line_end":235,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2645},"to":{"krate":0,"index":2921}}]}