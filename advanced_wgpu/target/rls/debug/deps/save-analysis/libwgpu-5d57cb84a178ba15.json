{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1","program":"C:\\Users\\milla\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","wgpu","--edition=2021","C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=5d57cb84a178ba15","-C","extra-filename=-5d57cb84a178ba15","--out-dir","c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps","--extern","arrayvec=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libarrayvec-3349f547fdb06e68.rmeta","--extern","log=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\liblog-b13d406e2675f718.rmeta","--extern","parking_lot=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libparking_lot-9eb7c797a3b9fd28.rmeta","--extern","raw_window_handle=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libraw_window_handle-e35d344332ca1a72.rmeta","--extern","smallvec=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libsmallvec-3805931d8f10975f.rmeta","--extern","wgc=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libwgpu_core-6785283980104621.rmeta","--extern","hal=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libwgpu_hal-ff7b8c874a8c941b.rmeta","--extern","wgt=c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libwgpu_types-4c2ac838739aaedf.rmeta","--cap-lints","allow","-L","native=C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\windows_x86_64_msvc-0.36.1\\lib","--error-format=json","--sysroot","C:\\Users\\milla\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\milla\\Desktop\\coding\\LearningWGPU\\advanced_wgpu\\target\\rls\\debug\\deps\\libwgpu-5d57cb84a178ba15.rmeta"},"prelude":{"crate_id":{"name":"wgpu","disambiguator":[15014608162069261677,0]},"crate_root":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src","external_crates":[{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":14,"id":{"name":"arrayvec","disambiguator":[16128622648078917724,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":15,"id":{"name":"parking_lot","disambiguator":[6482150583016678951,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":16,"id":{"name":"lock_api","disambiguator":[11225503526341225861,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":17,"id":{"name":"scopeguard","disambiguator":[609407471197110695,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":18,"id":{"name":"parking_lot_core","disambiguator":[3699706866752365715,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":19,"id":{"name":"smallvec","disambiguator":[15367668569234202580,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":20,"id":{"name":"cfg_if","disambiguator":[10169579803109374085,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":21,"id":{"name":"windows_sys","disambiguator":[3407123880976325035,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":22,"id":{"name":"wgpu_types","disambiguator":[6212344720645413979,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":23,"id":{"name":"bitflags","disambiguator":[906870646478561945,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":24,"id":{"name":"wgpu_core","disambiguator":[5084577921884147513,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":25,"id":{"name":"thiserror","disambiguator":[9794464102802447438,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":26,"id":{"name":"thiserror_impl","disambiguator":[5220654746792140983,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":27,"id":{"name":"wgpu_hal","disambiguator":[10149970592470671442,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":28,"id":{"name":"winapi","disambiguator":[16188252046568888056,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":29,"id":{"name":"bit_set","disambiguator":[5524467543376510683,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":30,"id":{"name":"bit_vec","disambiguator":[2850230538344163425,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":31,"id":{"name":"range_alloc","disambiguator":[4388508620339689811,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":32,"id":{"name":"naga","disambiguator":[5246693798615369205,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":33,"id":{"name":"indexmap","disambiguator":[2633777168858862677,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":34,"id":{"name":"hashbrown","disambiguator":[1777076437515527078,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":35,"id":{"name":"spirv","disambiguator":[9018241265050644606,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":36,"id":{"name":"num_traits","disambiguator":[15379361059057008598,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":37,"id":{"name":"codespan_reporting","disambiguator":[16297561660827841575,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":38,"id":{"name":"termcolor","disambiguator":[12611209373169458971,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":39,"id":{"name":"winapi_util","disambiguator":[13143596211423852197,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":40,"id":{"name":"unicode_width","disambiguator":[14335795978369859358,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":41,"id":{"name":"log","disambiguator":[2429338322379649461,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":42,"id":{"name":"unicode_xid","disambiguator":[11210335675342950074,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":43,"id":{"name":"hexf_parse","disambiguator":[3199287205578793340,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":44,"id":{"name":"rustc_hash","disambiguator":[17283282650889832168,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":45,"id":{"name":"ash","disambiguator":[11907272581362841912,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":46,"id":{"name":"libloading","disambiguator":[10092091569347333699,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":47,"id":{"name":"inplace_it","disambiguator":[18352744166208141829,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":48,"id":{"name":"gpu_alloc","disambiguator":[12057786379314133128,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":49,"id":{"name":"gpu_alloc_types","disambiguator":[9178146681019107838,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":50,"id":{"name":"raw_window_handle","disambiguator":[14305429960766813620,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":51,"id":{"name":"cty","disambiguator":[13714341664783295416,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":52,"id":{"name":"d3d12","disambiguator":[900207381916579740,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":53,"id":{"name":"profiling","disambiguator":[4279707121363963883,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":54,"id":{"name":"gpu_descriptor","disambiguator":[700870841741661290,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":55,"id":{"name":"gpu_descriptor_types","disambiguator":[13870270225325144809,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":56,"id":{"name":"hashbrown","disambiguator":[2660667402364755619,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":57,"id":{"name":"ahash","disambiguator":[11539463227105379963,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":58,"id":{"name":"once_cell","disambiguator":[16036770686026345844,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":59,"id":{"name":"getrandom","disambiguator":[4345949533838647487,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":60,"id":{"name":"fxhash","disambiguator":[17266731781406932339,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":61,"id":{"name":"byteorder","disambiguator":[6856623506392020765,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":62,"id":{"name":"renderdoc_sys","disambiguator":[11457026683495958247,0]}},{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","num":63,"id":{"name":"copyless","disambiguator":[6438334495860946136,0]}}],"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":0,"byte_end":132860,"line_start":1,"line_end":3651,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":24,"index":3642},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\init.rs","byte_start":249292,"byte_end":249322,"line_start":6,"line_end":6,"column_start":24,"column_end":54},"alias_span":null,"name":"parse_backends_from_comma_list","value":"","parent":{"krate":0,"index":590}},{"kind":"Use","ref_id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":221724,"byte_end":221735,"line_start":17,"line_end":17,"column_start":15,"column_end":26},"alias_span":null,"name":"StagingBelt","value":"","parent":{"krate":0,"index":443}},{"kind":"Use","ref_id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":221754,"byte_end":221774,"line_start":18,"line_end":18,"column_start":18,"column_end":38},"alias_span":null,"name":"BufferInitDescriptor","value":"","parent":{"krate":0,"index":443}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":221776,"byte_end":221785,"line_start":18,"line_end":18,"column_start":40,"column_end":49},"alias_span":null,"name":"DeviceExt","value":"","parent":{"krate":0,"index":443}},{"kind":"Use","ref_id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":221805,"byte_end":221818,"line_start":19,"line_end":19,"column_start":18,"column_end":31},"alias_span":null,"name":"RenderEncoder","value":"","parent":{"krate":0,"index":443}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":221838,"byte_end":221839,"line_start":20,"line_end":20,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":443}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":221855,"byte_end":221856,"line_start":21,"line_end":21,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":443}},{"kind":"Use","ref_id":{"krate":22,"index":970},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":708,"byte_end":719,"line_start":29,"line_end":29,"column_start":5,"column_end":16},"alias_span":null,"name":"AdapterInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2711},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":721,"byte_end":732,"line_start":29,"line_end":29,"column_start":18,"column_end":29},"alias_span":null,"name":"AddressMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1559},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":734,"byte_end":743,"line_start":29,"line_end":29,"column_start":31,"column_end":40},"alias_span":null,"name":"AstcBlock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1602},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":745,"byte_end":756,"line_start":29,"line_end":29,"column_start":42,"column_end":53},"alias_span":null,"name":"AstcChannel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":212},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":758,"byte_end":765,"line_start":29,"line_end":29,"column_start":55,"column_end":62},"alias_span":null,"name":"Backend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":269},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":767,"byte_end":775,"line_start":29,"line_end":29,"column_start":64,"column_end":72},"alias_span":null,"name":"Backends","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2974},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":777,"byte_end":797,"line_start":29,"line_end":29,"column_start":74,"column_end":94},"alias_span":null,"name":"BindGroupLayoutEntry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2943},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":803,"byte_end":814,"line_start":30,"line_end":30,"column_start":5,"column_end":16},"alias_span":null,"name":"BindingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1216},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":816,"byte_end":830,"line_start":30,"line_end":30,"column_start":18,"column_end":32},"alias_span":null,"name":"BlendComponent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1132},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":832,"byte_end":843,"line_start":30,"line_end":30,"column_start":34,"column_end":45},"alias_span":null,"name":"BlendFactor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1186},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":845,"byte_end":859,"line_start":30,"line_end":30,"column_start":47,"column_end":61},"alias_span":null,"name":"BlendOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1235},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":861,"byte_end":871,"line_start":30,"line_end":30,"column_start":63,"column_end":73},"alias_span":null,"name":"BlendState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":10},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":873,"byte_end":886,"line_start":30,"line_end":30,"column_start":75,"column_end":88},"alias_span":null,"name":"BufferAddress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2857},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":892,"byte_end":909,"line_start":31,"line_end":31,"column_start":5,"column_end":22},"alias_span":null,"name":"BufferBindingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":11},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":911,"byte_end":921,"line_start":31,"line_end":31,"column_start":24,"column_end":34},"alias_span":null,"name":"BufferSize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2234},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":923,"byte_end":935,"line_start":31,"line_end":31,"column_start":36,"column_end":48},"alias_span":null,"name":"BufferUsages","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2585},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":937,"byte_end":942,"line_start":31,"line_end":31,"column_start":50,"column_end":55},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1253},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":944,"byte_end":960,"line_start":31,"line_end":31,"column_start":57,"column_end":73},"alias_span":null,"name":"ColorTargetState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1784},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":962,"byte_end":973,"line_start":31,"line_end":31,"column_start":75,"column_end":86},"alias_span":null,"name":"ColorWrites","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2776},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":979,"byte_end":1002,"line_start":32,"line_end":32,"column_start":5,"column_end":28},"alias_span":null,"name":"CommandBufferDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2038},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1004,"byte_end":1019,"line_start":32,"line_end":32,"column_start":30,"column_end":45},"alias_span":null,"name":"CompareFunction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1929},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1021,"byte_end":1035,"line_start":32,"line_end":32,"column_start":47,"column_end":61},"alias_span":null,"name":"DepthBiasState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1944},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1037,"byte_end":1054,"line_start":32,"line_end":32,"column_start":63,"column_end":80},"alias_span":null,"name":"DepthStencilState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":951},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1056,"byte_end":1066,"line_start":32,"line_end":32,"column_start":82,"column_end":92},"alias_span":null,"name":"DeviceType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":742},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1072,"byte_end":1093,"line_start":33,"line_end":33,"column_start":5,"column_end":26},"alias_span":null,"name":"DownlevelCapabilities","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":764},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1095,"byte_end":1109,"line_start":33,"line_end":33,"column_start":28,"column_end":42},"alias_span":null,"name":"DownlevelFlags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":13},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1111,"byte_end":1124,"line_start":33,"line_end":33,"column_start":44,"column_end":57},"alias_span":null,"name":"DynamicOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2641},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1126,"byte_end":1134,"line_start":33,"line_end":33,"column_start":59,"column_end":67},"alias_span":null,"name":"Extent3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1322},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1136,"byte_end":1140,"line_start":33,"line_end":33,"column_start":69,"column_end":73},"alias_span":null,"name":"Face","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":419},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1142,"byte_end":1150,"line_start":33,"line_end":33,"column_start":75,"column_end":83},"alias_span":null,"name":"Features","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2738},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1152,"byte_end":1162,"line_start":33,"line_end":33,"column_start":85,"column_end":95},"alias_span":null,"name":"FilterMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1301},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1168,"byte_end":1177,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"alias_span":null,"name":"FrontFace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2846},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1179,"byte_end":1194,"line_start":34,"line_end":34,"column_start":16,"column_end":31},"alias_span":null,"name":"ImageDataLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3016},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1196,"byte_end":1217,"line_start":34,"line_end":34,"column_start":33,"column_end":54},"alias_span":null,"name":"ImageSubresourceRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1958},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1219,"byte_end":1230,"line_start":34,"line_end":34,"column_start":56,"column_end":67},"alias_span":null,"name":"IndexFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":681},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1232,"byte_end":1238,"line_start":34,"line_end":34,"column_start":69,"column_end":75},"alias_span":null,"name":"Limits","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1392},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1240,"byte_end":1256,"line_start":34,"line_end":34,"column_start":77,"column_end":93},"alias_span":null,"name":"MultisampleState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2622},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1262,"byte_end":1270,"line_start":35,"line_end":35,"column_start":5,"column_end":13},"alias_span":null,"name":"Origin3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3079},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1272,"byte_end":1295,"line_start":35,"line_end":35,"column_start":15,"column_end":38},"alias_span":null,"name":"PipelineStatisticsTypes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1343},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1297,"byte_end":1308,"line_start":35,"line_end":35,"column_start":40,"column_end":51},"alias_span":null,"name":"PolygonMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":248},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1310,"byte_end":1325,"line_start":35,"line_end":35,"column_start":53,"column_end":68},"alias_span":null,"name":"PowerPreference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2412},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1327,"byte_end":1338,"line_start":35,"line_end":35,"column_start":70,"column_end":81},"alias_span":null,"name":"PresentMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1367},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1340,"byte_end":1354,"line_start":35,"line_end":35,"column_start":83,"column_end":97},"alias_span":null,"name":"PrimitiveState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1271},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1360,"byte_end":1377,"line_start":36,"line_end":36,"column_start":5,"column_end":22},"alias_span":null,"name":"PrimitiveTopology","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2759},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1379,"byte_end":1396,"line_start":36,"line_end":36,"column_start":24,"column_end":41},"alias_span":null,"name":"PushConstantRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3066},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1398,"byte_end":1407,"line_start":36,"line_end":36,"column_start":43,"column_end":52},"alias_span":null,"name":"QueryType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2803},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1409,"byte_end":1433,"line_start":36,"line_end":36,"column_start":54,"column_end":78},"alias_span":null,"name":"RenderBundleDepthStencil","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2922},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1435,"byte_end":1453,"line_start":36,"line_end":36,"column_start":80,"column_end":98},"alias_span":null,"name":"SamplerBindingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3032},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1459,"byte_end":1477,"line_start":37,"line_end":37,"column_start":5,"column_end":23},"alias_span":null,"name":"SamplerBorderColor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":12},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1479,"byte_end":1493,"line_start":37,"line_end":37,"column_start":25,"column_end":39},"alias_span":null,"name":"ShaderLocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":926},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1495,"byte_end":1506,"line_start":37,"line_end":37,"column_start":41,"column_end":52},"alias_span":null,"name":"ShaderModel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":998},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1508,"byte_end":1520,"line_start":37,"line_end":37,"column_start":54,"column_end":66},"alias_span":null,"name":"ShaderStages","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2018},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1522,"byte_end":1538,"line_start":37,"line_end":37,"column_start":68,"column_end":84},"alias_span":null,"name":"StencilFaceState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1979},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1544,"byte_end":1560,"line_start":38,"line_end":38,"column_start":5,"column_end":21},"alias_span":null,"name":"StencilOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1908},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1562,"byte_end":1574,"line_start":38,"line_end":38,"column_start":23,"column_end":35},"alias_span":null,"name":"StencilState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2901},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1576,"byte_end":1596,"line_start":38,"line_end":38,"column_start":37,"column_end":57},"alias_span":null,"name":"StorageTextureAccess","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2552},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1598,"byte_end":1618,"line_start":38,"line_end":38,"column_start":59,"column_end":79},"alias_span":null,"name":"SurfaceConfiguration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2572},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1620,"byte_end":1633,"line_start":38,"line_end":38,"column_start":81,"column_end":94},"alias_span":null,"name":"SurfaceStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2690},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1639,"byte_end":1652,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"alias_span":null,"name":"TextureAspect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2601},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1654,"byte_end":1670,"line_start":39,"line_end":39,"column_start":20,"column_end":36},"alias_span":null,"name":"TextureDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1623},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1672,"byte_end":1685,"line_start":39,"line_end":39,"column_start":38,"column_end":51},"alias_span":null,"name":"TextureFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1411},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1687,"byte_end":1712,"line_start":39,"line_end":39,"column_start":53,"column_end":78},"alias_span":null,"name":"TextureFormatFeatureFlags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1518},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1718,"byte_end":1739,"line_start":40,"line_end":40,"column_start":5,"column_end":26},"alias_span":null,"name":"TextureFormatFeatures","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2877},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1741,"byte_end":1758,"line_start":40,"line_end":40,"column_start":28,"column_end":45},"alias_span":null,"name":"TextureSampleType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2445},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1760,"byte_end":1773,"line_start":40,"line_end":40,"column_start":47,"column_end":60},"alias_span":null,"name":"TextureUsages","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1105},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1775,"byte_end":1795,"line_start":40,"line_end":40,"column_start":62,"column_end":82},"alias_span":null,"name":"TextureViewDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2098},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1797,"byte_end":1812,"line_start":40,"line_end":40,"column_start":84,"column_end":99},"alias_span":null,"name":"VertexAttribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2117},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1818,"byte_end":1830,"line_start":41,"line_end":41,"column_start":5,"column_end":17},"alias_span":null,"name":"VertexFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2077},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1832,"byte_end":1846,"line_start":41,"line_end":41,"column_start":19,"column_end":33},"alias_span":null,"name":"VertexStepMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":16},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1848,"byte_end":1869,"line_start":41,"line_end":41,"column_start":35,"column_end":56},"alias_span":null,"name":"COPY_BUFFER_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":14},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1871,"byte_end":1899,"line_start":41,"line_end":41,"column_start":58,"column_end":86},"alias_span":null,"name":"COPY_BYTES_PER_ROW_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":17},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1905,"byte_end":1918,"line_start":42,"line_end":42,"column_start":5,"column_end":18},"alias_span":null,"name":"MAP_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":19},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1920,"byte_end":1943,"line_start":42,"line_end":42,"column_start":20,"column_end":43},"alias_span":null,"name":"PUSH_CONSTANT_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":15},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1945,"byte_end":1975,"line_start":42,"line_end":42,"column_start":45,"column_end":75},"alias_span":null,"name":"QUERY_RESOLVE_BUFFER_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":20},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":1977,"byte_end":1998,"line_start":42,"line_end":42,"column_start":77,"column_end":98},"alias_span":null,"name":"QUERY_SET_MAX_QUERIES","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":21},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":2004,"byte_end":2014,"line_start":43,"line_end":43,"column_start":5,"column_end":15},"alias_span":null,"name":"QUERY_SIZE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":18},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":2016,"byte_end":2039,"line_start":43,"line_end":43,"column_start":17,"column_end":40},"alias_span":null,"name":"VERTEX_STRIDE_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":391},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42225,"byte_end":42246,"line_start":1237,"line_end":1237,"column_start":14,"column_end":35},"alias_span":null,"name":"RequestAdapterOptionsBase","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":1896},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44305,"byte_end":44313,"line_start":1287,"line_end":1287,"column_start":14,"column_end":22},"alias_span":null,"name":"MaintainBase","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":2994},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55747,"byte_end":55762,"line_start":1553,"line_end":1553,"column_start":14,"column_end":29},"alias_span":null,"name":"ImageCopyBufferBase","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":3004},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56051,"byte_end":56067,"line_start":1560,"line_end":1560,"column_start":14,"column_end":30},"alias_span":null,"name":"ImageCopyTextureBase","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":0,"byte_end":132860,"line_start":1,"line_end":3651,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":443},{"krate":0,"index":677},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":770},{"krate":0,"index":773},{"krate":0,"index":776},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":803},{"krate":0,"index":806},{"krate":0,"index":809},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":878},{"krate":0,"index":881},{"krate":0,"index":884},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":1617},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1625},{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1630},{"krate":0,"index":969},{"krate":0,"index":982},{"krate":0,"index":997},{"krate":0,"index":1012},{"krate":0,"index":1632},{"krate":0,"index":1634},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":1133},{"krate":0,"index":1641},{"krate":0,"index":1644},{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1654},{"krate":0,"index":1658},{"krate":0,"index":1135},{"krate":0,"index":1660},{"krate":0,"index":1665},{"krate":0,"index":1667},{"krate":0,"index":1672},{"krate":0,"index":1674},{"krate":0,"index":1677},{"krate":0,"index":1680},{"krate":0,"index":1684},{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1691},{"krate":0,"index":1694},{"krate":0,"index":1141},{"krate":0,"index":1696},{"krate":0,"index":1699},{"krate":0,"index":1143},{"krate":0,"index":1701},{"krate":0,"index":1704},{"krate":0,"index":1145},{"krate":0,"index":1706},{"krate":0,"index":1709},{"krate":0,"index":1147},{"krate":0,"index":1711},{"krate":0,"index":1714},{"krate":0,"index":1149},{"krate":0,"index":1151},{"krate":0,"index":1156},{"krate":0,"index":1160},{"krate":0,"index":1716},{"krate":0,"index":1719},{"krate":0,"index":1164},{"krate":0,"index":1721},{"krate":0,"index":1724},{"krate":0,"index":1166},{"krate":0,"index":1168},{"krate":0,"index":1726},{"krate":0,"index":1729},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":1174},{"krate":0,"index":1736},{"krate":0,"index":1739},{"krate":0,"index":1176},{"krate":0,"index":1741},{"krate":0,"index":1745},{"krate":0,"index":1748},{"krate":0,"index":1752},{"krate":0,"index":1755},{"krate":0,"index":1761},{"krate":0,"index":1764},{"krate":0,"index":1767},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1183},{"krate":0,"index":1769},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":1800},{"krate":0,"index":1805},{"krate":0,"index":1808},{"krate":0,"index":1811},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1826},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1835},{"krate":0,"index":1837},{"krate":0,"index":1185},{"krate":0,"index":1841},{"krate":0,"index":1845},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1853},{"krate":0,"index":1857},{"krate":0,"index":1859},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1188},{"krate":0,"index":1868},{"krate":0,"index":1873},{"krate":0,"index":1876},{"krate":0,"index":1879},{"krate":0,"index":1884},{"krate":0,"index":1887},{"krate":0,"index":1191},{"krate":0,"index":1193},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1200},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1890},{"krate":0,"index":1900},{"krate":0,"index":1903},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1915},{"krate":0,"index":1920},{"krate":0,"index":1923},{"krate":0,"index":1926},{"krate":0,"index":1929},{"krate":0,"index":1943},{"krate":0,"index":1946},{"krate":0,"index":1949},{"krate":0,"index":1951},{"krate":0,"index":1214},{"krate":0,"index":1955},{"krate":0,"index":1959},{"krate":0,"index":1962},{"krate":0,"index":1965},{"krate":0,"index":1970},{"krate":0,"index":1973},{"krate":0,"index":1976},{"krate":0,"index":1982},{"krate":0,"index":1986},{"krate":0,"index":1990},{"krate":0,"index":1994},{"krate":0,"index":1999},{"krate":0,"index":2002},{"krate":0,"index":2005},{"krate":0,"index":2009},{"krate":0,"index":2011},{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2020},{"krate":0,"index":2025},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":2036},{"krate":0,"index":2039},{"krate":0,"index":2042},{"krate":0,"index":2052},{"krate":0,"index":2055},{"krate":0,"index":2058},{"krate":0,"index":2061},{"krate":0,"index":2064},{"krate":0,"index":2067},{"krate":0,"index":2070},{"krate":0,"index":2076},{"krate":0,"index":2079},{"krate":0,"index":1216},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":2082},{"krate":0,"index":2086},{"krate":0,"index":2089},{"krate":0,"index":2092},{"krate":0,"index":2099},{"krate":0,"index":2102},{"krate":0,"index":2105},{"krate":0,"index":2108},{"krate":0,"index":2110},{"krate":0,"index":2114},{"krate":0,"index":2116},{"krate":0,"index":2119},{"krate":0,"index":2123},{"krate":0,"index":2128},{"krate":0,"index":2130},{"krate":0,"index":2139},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2147},{"krate":0,"index":1226},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1252},{"krate":0,"index":1270},{"krate":0,"index":1301},{"krate":0,"index":2149},{"krate":0,"index":2151},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2159},{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2171},{"krate":0,"index":1306},{"krate":0,"index":1308},{"krate":0,"index":2173},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":1309},{"krate":0,"index":1312},{"krate":0,"index":2186},{"krate":0,"index":2190},{"krate":0,"index":2193},{"krate":0,"index":2198},{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1321},{"krate":0,"index":1323},{"krate":0,"index":1325},{"krate":0,"index":1327},{"krate":0,"index":1329},{"krate":0,"index":1331},{"krate":0,"index":1338},{"krate":0,"index":1344},{"krate":0,"index":1346},{"krate":0,"index":1353},{"krate":0,"index":1355},{"krate":0,"index":1357},{"krate":0,"index":1371},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1395},{"krate":0,"index":1399},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1431},{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":1449},{"krate":0,"index":1452},{"krate":0,"index":1458},{"krate":0,"index":1462},{"krate":0,"index":1465},{"krate":0,"index":1468},{"krate":0,"index":1479},{"krate":0,"index":1481},{"krate":0,"index":1483},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":2201},{"krate":0,"index":2207},{"krate":0,"index":1492},{"krate":0,"index":1494}],"decl_id":null,"docs":" A cross-platform graphics and compute library based on [WebGPU](https://gpuweb.github.io/gpuweb/).","sig":null,"attributes":[{"value":"/ A cross-platform graphics and compute library based on [WebGPU](https://gpuweb.github.io/gpuweb/).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":0,"byte_end":102,"line_start":1,"line_end":1,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":103,"byte_end":106,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ To start using the API, create an [`Instance`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":107,"byte_end":158,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":373,"byte_end":395,"line_start":7,"line_end":7,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":443},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":507},{"krate":0,"index":517},{"krate":0,"index":583},{"krate":0,"index":590},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":627},{"krate":0,"index":630},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":641},{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":664},{"krate":0,"index":668},{"krate":0,"index":672},{"krate":0,"index":675}],"decl_id":null,"docs":" Utility structures and functions.\n","sig":null,"attributes":[{"value":"/ Utility structures and functions.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":221468,"byte_end":221505,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":227149,"byte_end":227160,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"StagingBelt","qualname":"::util::belt::StagingBelt","value":"StagingBelt {  }","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496}],"decl_id":null,"docs":" Staging belt is a machine that uploads data.","sig":null,"attributes":[{"value":"/ Staging belt is a machine that uploads data.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":226518,"byte_end":226566,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":226567,"byte_end":226570,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Internally it uses a ring-buffer of staging buffers that are sub-allocated.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":226571,"byte_end":226650,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/ It has an advantage over [`Queue::write_buffer`] in a way that it returns a mutable slice,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":226651,"byte_end":226745,"line_start":17,"line_end":17,"column_start":1,"column_end":95}},{"value":"/ which you can fill to avoid an extra data copy.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":226746,"byte_end":226797,"line_start":18,"line_end":18,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":226798,"byte_end":226801,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Using a staging belt is slightly complicated, and generally goes as follows:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":226802,"byte_end":226882,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ - Write to buffers that need writing to using [`StagingBelt::write_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":226883,"byte_end":226963,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ - Call `finish`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":226964,"byte_end":226984,"line_start":22,"line_end":22,"column_start":1,"column_end":21}},{"value":"/ - Submit all command encoders used with `StagingBelt::write_buffer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":226985,"byte_end":227057,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ - Call `recall`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":227058,"byte_end":227077,"line_start":24,"line_end":24,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":227078,"byte_end":227081,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`Queue::write_buffer`]: crate::Queue::write_buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":227082,"byte_end":227137,"line_start":26,"line_end":26,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":227828,"byte_end":227831,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<StagingBelt>::new","value":"pub fn new(BufferAddress) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new staging belt.","sig":null,"attributes":[{"value":"/ Create a new staging belt.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":227579,"byte_end":227609,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":227614,"byte_end":227617,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The `chunk_size` is the unit of internal buffer allocation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":227622,"byte_end":227685,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ It's better when it's big, but ideally still 1-4 times less than","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":227690,"byte_end":227758,"line_start":43,"line_end":43,"column_start":5,"column_end":73}},{"value":"/ the total amount of data uploaded per submission.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":227763,"byte_end":227816,"line_start":44,"line_end":44,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":228445,"byte_end":228457,"line_start":62,"line_end":62,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<StagingBelt>::write_buffer","value":"pub fn write_buffer(&mut Self, &mut CommandEncoder, &Buffer, BufferAddress,\nBufferSize, &Device) -> BufferViewMut","parent":null,"children":[],"decl_id":null,"docs":" Allocate the staging belt slice of `size` to be uploaded into the `target` buffer\n at the specified offset.","sig":null,"attributes":[{"value":"/ Allocate the staging belt slice of `size` to be uploaded into the `target` buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":228143,"byte_end":228228,"line_start":57,"line_end":57,"column_start":5,"column_end":90}},{"value":"/ at the specified offset.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":228233,"byte_end":228261,"line_start":58,"line_end":58,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":228266,"byte_end":228269,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ The upload will be placed into the provided command encoder. This encoder","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":228274,"byte_end":228351,"line_start":60,"line_end":60,"column_start":5,"column_end":82}},{"value":"/ must be submitted after `finish` is called and before `recall` is called.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":228356,"byte_end":228433,"line_start":61,"line_end":61,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":230229,"byte_end":230235,"line_start":113,"line_end":113,"column_start":12,"column_end":18},"name":"finish","qualname":"<StagingBelt>::finish","value":"pub fn finish(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prepare currently mapped buffers for use in a submission.","sig":null,"attributes":[{"value":"/ Prepare currently mapped buffers for use in a submission.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":230017,"byte_end":230078,"line_start":109,"line_end":109,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":230083,"byte_end":230086,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ At this point, all the partially used staging buffers are closed until","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":230091,"byte_end":230165,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ the GPU is done copying the data from them.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":230170,"byte_end":230217,"line_start":112,"line_end":112,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":230573,"byte_end":230579,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"recall","qualname":"<StagingBelt>::recall","value":"pub fn recall(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Recall all of the closed buffers back to be reused.","sig":null,"attributes":[{"value":"/ Recall all of the closed buffers back to be reused.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":230400,"byte_end":230455,"line_start":120,"line_end":120,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":230460,"byte_end":230463,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This has to be called after the command encoders written to `write_buffer` are submitted!","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":230468,"byte_end":230561,"line_start":122,"line_end":122,"column_start":5,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":231809,"byte_end":231829,"line_start":5,"line_end":5,"column_start":12,"column_end":32},"name":"BufferInitDescriptor","qualname":"::util::device::BufferInitDescriptor","value":"BufferInitDescriptor { label, contents, usage }","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559}],"decl_id":null,"docs":" Describes a [Buffer](crate::Buffer) when allocating.\n","sig":null,"attributes":[{"value":"/ Describes a [Buffer](crate::Buffer) when allocating.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":231696,"byte_end":231752,"line_start":3,"line_end":3,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1557},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":231942,"byte_end":231947,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"label","qualname":"::util::device::BufferInitDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" Debug label of a buffer. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of a buffer. This will show up in graphics debuggers for easy identification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":231840,"byte_end":231933,"line_start":6,"line_end":6,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":1558},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232017,"byte_end":232025,"line_start":9,"line_end":9,"column_start":9,"column_end":17},"name":"contents","qualname":"::util::device::BufferInitDescriptor::contents","value":"&'a [u8]","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" Contents of a buffer on creation.\n","sig":null,"attributes":[{"value":"/ Contents of a buffer on creation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":231971,"byte_end":232008,"line_start":8,"line_end":8,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1559},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232167,"byte_end":232172,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"usage","qualname":"::util::device::BufferInitDescriptor::usage","value":"wgpu_types::BufferUsages","parent":{"krate":0,"index":1555},"children":[],"decl_id":null,"docs":" Usages of a buffer. If the buffer is used in any way that isn't specified here, the operation\n will panic.\n","sig":null,"attributes":[{"value":"/ Usages of a buffer. If the buffer is used in any way that isn't specified here, the operation","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232041,"byte_end":232138,"line_start":10,"line_end":10,"column_start":5,"column_end":102}},{"value":"/ will panic.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232143,"byte_end":232158,"line_start":11,"line_end":11,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232261,"byte_end":232270,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"DeviceExt","qualname":"::util::device::DeviceExt","value":"DeviceExt","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":513}],"decl_id":null,"docs":" Utility methods not meant to be in the main API.\n","sig":null,"attributes":[{"value":"/ Utility methods not meant to be in the main API.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232198,"byte_end":232250,"line_start":15,"line_end":15,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232350,"byte_end":232368,"line_start":18,"line_end":18,"column_start":8,"column_end":26},"name":"create_buffer_init","qualname":"::util::device::DeviceExt::create_buffer_init","value":"pub fn create_buffer_init(&Self, &BufferInitDescriptor) -> crate::Buffer","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Creates a [Buffer](crate::Buffer) with data to initialize it.\n","sig":null,"attributes":[{"value":"/ Creates a [Buffer](crate::Buffer) with data to initialize it.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232277,"byte_end":232342,"line_start":17,"line_end":17,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232993,"byte_end":233017,"line_start":32,"line_end":32,"column_start":8,"column_end":32},"name":"create_texture_with_data","qualname":"::util::device::DeviceExt::create_texture_with_data","value":"pub fn create_texture_with_data(&Self, &crate::Queue,\n&crate::TextureDescriptor, &[u8]) -> crate::Texture","parent":{"krate":0,"index":511},"children":[],"decl_id":null,"docs":" Upload an entire texture and its mipmaps from a source buffer.","sig":null,"attributes":[{"value":"/ Upload an entire texture and its mipmaps from a source buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232428,"byte_end":232494,"line_start":20,"line_end":20,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232499,"byte_end":232502,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Expects all mipmaps to be tightly packed in the data buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232507,"byte_end":232571,"line_start":22,"line_end":22,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232576,"byte_end":232579,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If the texture is a 2DArray texture, uploads each layer in order, expecting","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232584,"byte_end":232663,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/ each layer and its mips to be tightly packed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232668,"byte_end":232717,"line_start":25,"line_end":25,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232722,"byte_end":232725,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232730,"byte_end":232742,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/ Layer0Mip0 Layer0Mip1 Layer0Mip2 ... Layer1Mip0 Layer1Mip1 Layer1Mip2 ...","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232747,"byte_end":232824,"line_start":28,"line_end":28,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232829,"byte_end":232832,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Implicitly adds the `COPY_DST` usage if it is not present in the descriptor,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232837,"byte_end":232917,"line_start":30,"line_end":30,"column_start":5,"column_end":85}},{"value":"/ as it is required to be able to upload the data to the gpu.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":232922,"byte_end":232985,"line_start":31,"line_end":31,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":237967,"byte_end":237980,"line_start":8,"line_end":8,"column_start":11,"column_end":24},"name":"RenderEncoder","qualname":"::util::encoder::RenderEncoder","value":"RenderEncoder<'a>","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560}],"decl_id":null,"docs":" Methods shared by [`RenderPass`] and [`RenderBundleEncoder`].\n","sig":null,"attributes":[{"value":"/ Methods shared by [`RenderPass`] and [`RenderBundleEncoder`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":237891,"byte_end":237956,"line_start":7,"line_end":7,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238291,"byte_end":238305,"line_start":13,"line_end":13,"column_start":8,"column_end":22},"name":"set_bind_group","qualname":"::util::encoder::RenderEncoder::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when any `draw()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":237991,"byte_end":238073,"line_start":9,"line_end":9,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when any `draw()` function is called must match the layout of this bind group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238078,"byte_end":238183,"line_start":10,"line_end":10,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238188,"byte_end":238191,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in order of their declaration.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238196,"byte_end":238283,"line_start":12,"line_end":12,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238520,"byte_end":238532,"line_start":18,"line_end":18,"column_start":8,"column_end":20},"name":"set_pipeline","qualname":"::util::encoder::RenderEncoder::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a RenderPipeline)","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" Sets the active render pipeline.","sig":null,"attributes":[{"value":"/ Sets the active render pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238389,"byte_end":238425,"line_start":15,"line_end":15,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238430,"byte_end":238433,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will exhibit the behavior defined by `pipeline`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238438,"byte_end":238512,"line_start":17,"line_end":17,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238783,"byte_end":238799,"line_start":24,"line_end":24,"column_start":8,"column_end":24},"name":"set_index_buffer","qualname":"::util::encoder::RenderEncoder::set_index_buffer","value":"pub fn set_index_buffer(&mut Self, BufferSlice, IndexFormat)","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" Sets the active index buffer.","sig":null,"attributes":[{"value":"/ Sets the active index buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238580,"byte_end":238613,"line_start":20,"line_end":20,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238618,"byte_end":238621,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw_indexed`](RenderEncoder::draw_indexed) on this [`RenderEncoder`] will","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238626,"byte_end":238726,"line_start":22,"line_end":22,"column_start":5,"column_end":105}},{"value":"/ use `buffer` as the source index buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238731,"byte_end":238775,"line_start":23,"line_end":23,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239313,"byte_end":239330,"line_start":36,"line_end":36,"column_start":8,"column_end":25},"name":"set_vertex_buffer","qualname":"::util::encoder::RenderEncoder::set_vertex_buffer","value":"pub fn set_vertex_buffer(&mut Self, u32, BufferSlice)","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" Assign a vertex buffer to a slot.","sig":null,"attributes":[{"value":"/ Assign a vertex buffer to a slot.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238875,"byte_end":238912,"line_start":26,"line_end":26,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238917,"byte_end":238920,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw`] and [`draw_indexed`] on this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238925,"byte_end":238986,"line_start":28,"line_end":28,"column_start":5,"column_end":66}},{"value":"/ [`RenderEncoder`] will use `buffer` as one of the source vertex buffers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":238991,"byte_end":239067,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239072,"byte_end":239075,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The `slot` refers to the index of the matching descriptor in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239080,"byte_end":239144,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/ [VertexState::buffers](crate::VertexState::buffers).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239149,"byte_end":239205,"line_start":32,"line_end":32,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239210,"byte_end":239213,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ [`draw`]: RenderEncoder::draw","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239218,"byte_end":239251,"line_start":34,"line_end":34,"column_start":5,"column_end":38}},{"value":"/ [`draw_indexed`]: RenderEncoder::draw_indexed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239256,"byte_end":239305,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239548,"byte_end":239552,"line_start":41,"line_end":41,"column_start":8,"column_end":12},"name":"draw","qualname":"::util::encoder::RenderEncoder::draw","value":"pub fn draw(&mut Self, Range<u32>, Range<u32>)","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s).","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239390,"byte_end":239444,"line_start":38,"line_end":38,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239449,"byte_end":239452,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderEncoder::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239457,"byte_end":239540,"line_start":40,"line_end":40,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239899,"byte_end":239911,"line_start":47,"line_end":47,"column_start":8,"column_end":20},"name":"draw_indexed","qualname":"::util::encoder::RenderEncoder::draw_indexed","value":"pub fn draw_indexed(&mut Self, Range<u32>, i32, Range<u32>)","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239615,"byte_end":239704,"line_start":43,"line_end":43,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239709,"byte_end":239712,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderEncoder::set_index_buffer`], while the active","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239717,"byte_end":239814,"line_start":45,"line_end":45,"column_start":5,"column_end":102}},{"value":"/ vertex buffers can be set with [`RenderEncoder::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239819,"byte_end":239891,"line_start":46,"line_end":46,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":240317,"byte_end":240330,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"draw_indirect","qualname":"::util::encoder::RenderEncoder::draw_indirect","value":"pub fn draw_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":239991,"byte_end":240092,"line_start":49,"line_end":49,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":240097,"byte_end":240100,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderEncoder::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":240105,"byte_end":240188,"line_start":51,"line_end":51,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":240193,"byte_end":240196,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` must conform to [`DrawIndirect`](crate::util::DrawIndirect).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":240201,"byte_end":240309,"line_start":53,"line_end":53,"column_start":5,"column_end":113}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":240884,"byte_end":240905,"line_start":63,"line_end":63,"column_start":8,"column_end":29},"name":"draw_indexed_indirect","qualname":"::util::encoder::RenderEncoder::draw_indexed_indirect","value":"pub fn draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":240409,"byte_end":240498,"line_start":56,"line_end":56,"column_start":5,"column_end":94}},{"value":"/ based on the contents of the `indirect_buffer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":240503,"byte_end":240554,"line_start":57,"line_end":57,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":240559,"byte_end":240562,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderEncoder::set_index_buffer`], while the active","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":240567,"byte_end":240664,"line_start":59,"line_end":59,"column_start":5,"column_end":102}},{"value":"/ vertex buffers can be set with [`RenderEncoder::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":240669,"byte_end":240741,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":240746,"byte_end":240749,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` must conform to [`DrawIndexedIndirect`](crate::util::DrawIndexedIndirect).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":240754,"byte_end":240876,"line_start":62,"line_end":62,"column_start":5,"column_end":127}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":242338,"byte_end":242356,"line_start":99,"line_end":99,"column_start":8,"column_end":26},"name":"set_push_constants","qualname":"::util::encoder::RenderEncoder::set_push_constants","value":"pub fn set_push_constants(&mut Self, wgt::ShaderStages, u32, &[u8])","parent":{"krate":0,"index":550},"children":[],"decl_id":null,"docs":" [`wgt::Features::PUSH_CONSTANTS`] must be enabled on the device in order to call this function.","sig":null,"attributes":[{"value":"/ [`wgt::Features::PUSH_CONSTANTS`] must be enabled on the device in order to call this function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241015,"byte_end":241114,"line_start":69,"line_end":69,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241119,"byte_end":241122,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Set push constant data.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241127,"byte_end":241154,"line_start":71,"line_end":71,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241159,"byte_end":241162,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Offset is measured in bytes, but must be a multiple of [`wgt::PUSH_CONSTANT_ALIGNMENT`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241167,"byte_end":241259,"line_start":73,"line_end":73,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241264,"byte_end":241267,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Data size must be a multiple of 4 and must be aligned to the 4s, so we take an array of u32.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241272,"byte_end":241368,"line_start":75,"line_end":75,"column_start":5,"column_end":101}},{"value":"/ For example, with an offset of 4 and an array of `[u32; 3]`, that will write to the range","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241373,"byte_end":241466,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ of 4..16.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241471,"byte_end":241484,"line_start":77,"line_end":77,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241489,"byte_end":241492,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ For each byte in the range of push constant data written, the union of the stages of all push constant","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241497,"byte_end":241603,"line_start":79,"line_end":79,"column_start":5,"column_end":111}},{"value":"/ ranges that covers that byte must be exactly `stages`. There's no good way of explaining this simply,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241608,"byte_end":241713,"line_start":80,"line_end":80,"column_start":5,"column_end":110}},{"value":"/ so here are some examples:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241718,"byte_end":241748,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241753,"byte_end":241756,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241761,"byte_end":241772,"line_start":83,"line_end":83,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241777,"byte_end":241802,"line_start":84,"line_end":84,"column_start":5,"column_end":30}},{"value":"/ - 0..4 Vertex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241807,"byte_end":241824,"line_start":85,"line_end":85,"column_start":5,"column_end":22}},{"value":"/ - 4..8 Fragment","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241829,"byte_end":241848,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241853,"byte_end":241860,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241865,"byte_end":241868,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in two set_push_constants calls. First for the `Vertex` range, second for the `Fragment` range.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":241873,"byte_end":242002,"line_start":89,"line_end":89,"column_start":5,"column_end":134}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":242007,"byte_end":242010,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":242015,"byte_end":242026,"line_start":91,"line_end":91,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":242031,"byte_end":242056,"line_start":92,"line_end":92,"column_start":5,"column_end":30}},{"value":"/ - 0..8  Vertex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":242061,"byte_end":242079,"line_start":93,"line_end":93,"column_start":5,"column_end":23}},{"value":"/ - 4..12 Fragment","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":242084,"byte_end":242104,"line_start":94,"line_end":94,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":242109,"byte_end":242116,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":242121,"byte_end":242124,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in three set_push_constants calls. First for the `Vertex` only range 0..4, second","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":242129,"byte_end":242244,"line_start":97,"line_end":97,"column_start":5,"column_end":120}},{"value":"/ for the `Vertex | Fragment` range 4..8, third for the `Fragment` range 8..12.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":242249,"byte_end":242330,"line_start":98,"line_end":98,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":1581},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246208,"byte_end":246220,"line_start":4,"line_end":4,"column_start":12,"column_end":24},"name":"DrawIndirect","qualname":"::util::indirect::DrawIndirect","value":"DrawIndirect { vertex_count, instance_count, base_vertex, base_instance }","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585}],"decl_id":null,"docs":" The structure expected in `indirect_buffer` for [`RenderEncoder::draw_indirect`](crate::util::RenderEncoder::draw_indirect).\n","sig":null,"attributes":[{"value":"/ The structure expected in `indirect_buffer` for [`RenderEncoder::draw_indirect`](crate::util::RenderEncoder::draw_indirect).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246018,"byte_end":246146,"line_start":1,"line_end":1,"column_start":1,"column_end":129}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246147,"byte_end":246157,"line_start":2,"line_end":2,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1582},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246271,"byte_end":246283,"line_start":6,"line_end":6,"column_start":9,"column_end":21},"name":"vertex_count","qualname":"::util::indirect::DrawIndirect::vertex_count","value":"u32","parent":{"krate":0,"index":1581},"children":[],"decl_id":null,"docs":" The number of vertices to draw.\n","sig":null,"attributes":[{"value":"/ The number of vertices to draw.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246227,"byte_end":246262,"line_start":5,"line_end":5,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1583},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246339,"byte_end":246353,"line_start":8,"line_end":8,"column_start":9,"column_end":23},"name":"instance_count","qualname":"::util::indirect::DrawIndirect::instance_count","value":"u32","parent":{"krate":0,"index":1581},"children":[],"decl_id":null,"docs":" The number of instances to draw.\n","sig":null,"attributes":[{"value":"/ The number of instances to draw.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246294,"byte_end":246330,"line_start":7,"line_end":7,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1584},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246415,"byte_end":246426,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"name":"base_vertex","qualname":"::util::indirect::DrawIndirect::base_vertex","value":"u32","parent":{"krate":0,"index":1581},"children":[],"decl_id":null,"docs":" The Index of the first vertex to draw.\n","sig":null,"attributes":[{"value":"/ The Index of the first vertex to draw.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246364,"byte_end":246406,"line_start":9,"line_end":9,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1585},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246616,"byte_end":246629,"line_start":13,"line_end":13,"column_start":9,"column_end":22},"name":"base_instance","qualname":"::util::indirect::DrawIndirect::base_instance","value":"u32","parent":{"krate":0,"index":1581},"children":[],"decl_id":null,"docs":" The instance ID of the first instance to draw.\n Has to be 0, unless [`Features::INDIRECT_FIRST_INSTANCE`](crate::Features::INDIRECT_FIRST_INSTANCE) is enabled.\n","sig":null,"attributes":[{"value":"/ The instance ID of the first instance to draw.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246437,"byte_end":246487,"line_start":11,"line_end":11,"column_start":5,"column_end":55}},{"value":"/ Has to be 0, unless [`Features::INDIRECT_FIRST_INSTANCE`](crate::Features::INDIRECT_FIRST_INSTANCE) is enabled.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246492,"byte_end":246607,"line_start":12,"line_end":12,"column_start":5,"column_end":120}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246778,"byte_end":246786,"line_start":18,"line_end":18,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<DrawIndirect>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes representation of the struct, ready to be written in a [`Buffer`](crate::Buffer).\n","sig":null,"attributes":[{"value":"/ Returns the bytes representation of the struct, ready to be written in a [`Buffer`](crate::Buffer).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246663,"byte_end":246766,"line_start":17,"line_end":17,"column_start":5,"column_end":108}}]},{"kind":"Struct","id":{"krate":0,"index":1593},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247214,"byte_end":247233,"line_start":31,"line_end":31,"column_start":12,"column_end":31},"name":"DrawIndexedIndirect","qualname":"::util::indirect::DrawIndexedIndirect","value":"DrawIndexedIndirect { vertex_count, instance_count, base_index, vertex_offset, base_instance }","parent":null,"children":[{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598}],"decl_id":null,"docs":" The structure expected in `indirect_buffer` for [`RenderEncoder::draw_indexed_indirect`](crate::util::RenderEncoder::draw_indexed_indirect).\n","sig":null,"attributes":[{"value":"/ The structure expected in `indirect_buffer` for [`RenderEncoder::draw_indexed_indirect`](crate::util::RenderEncoder::draw_indexed_indirect).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247008,"byte_end":247152,"line_start":28,"line_end":28,"column_start":1,"column_end":145}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247153,"byte_end":247163,"line_start":29,"line_end":29,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1594},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247284,"byte_end":247296,"line_start":33,"line_end":33,"column_start":9,"column_end":21},"name":"vertex_count","qualname":"::util::indirect::DrawIndexedIndirect::vertex_count","value":"u32","parent":{"krate":0,"index":1593},"children":[],"decl_id":null,"docs":" The number of vertices to draw.\n","sig":null,"attributes":[{"value":"/ The number of vertices to draw.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247240,"byte_end":247275,"line_start":32,"line_end":32,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1595},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247352,"byte_end":247366,"line_start":35,"line_end":35,"column_start":9,"column_end":23},"name":"instance_count","qualname":"::util::indirect::DrawIndexedIndirect::instance_count","value":"u32","parent":{"krate":0,"index":1593},"children":[],"decl_id":null,"docs":" The number of instances to draw.\n","sig":null,"attributes":[{"value":"/ The number of instances to draw.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247307,"byte_end":247343,"line_start":34,"line_end":34,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1596},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247429,"byte_end":247439,"line_start":37,"line_end":37,"column_start":9,"column_end":19},"name":"base_index","qualname":"::util::indirect::DrawIndexedIndirect::base_index","value":"u32","parent":{"krate":0,"index":1593},"children":[],"decl_id":null,"docs":" The base index within the index buffer.\n","sig":null,"attributes":[{"value":"/ The base index within the index buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247377,"byte_end":247420,"line_start":36,"line_end":36,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1597},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247538,"byte_end":247551,"line_start":39,"line_end":39,"column_start":9,"column_end":22},"name":"vertex_offset","qualname":"::util::indirect::DrawIndexedIndirect::vertex_offset","value":"i32","parent":{"krate":0,"index":1593},"children":[],"decl_id":null,"docs":" The value added to the vertex index before indexing into the vertex buffer.\n","sig":null,"attributes":[{"value":"/ The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247450,"byte_end":247529,"line_start":38,"line_end":38,"column_start":5,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":1598},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247741,"byte_end":247754,"line_start":42,"line_end":42,"column_start":9,"column_end":22},"name":"base_instance","qualname":"::util::indirect::DrawIndexedIndirect::base_instance","value":"u32","parent":{"krate":0,"index":1593},"children":[],"decl_id":null,"docs":" The instance ID of the first instance to draw.\n Has to be 0, unless [`Features::INDIRECT_FIRST_INSTANCE`](crate::Features::INDIRECT_FIRST_INSTANCE) is enabled.\n","sig":null,"attributes":[{"value":"/ The instance ID of the first instance to draw.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247562,"byte_end":247612,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/ Has to be 0, unless [`Features::INDIRECT_FIRST_INSTANCE`](crate::Features::INDIRECT_FIRST_INSTANCE) is enabled.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247617,"byte_end":247732,"line_start":41,"line_end":41,"column_start":5,"column_end":120}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247910,"byte_end":247918,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<DrawIndexedIndirect>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes representation of the struct, ready to be written in a [`Buffer`](crate::Buffer).\n","sig":null,"attributes":[{"value":"/ Returns the bytes representation of the struct, ready to be written in a [`Buffer`](crate::Buffer).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247795,"byte_end":247898,"line_start":46,"line_end":46,"column_start":5,"column_end":108}}]},{"kind":"Struct","id":{"krate":0,"index":1606},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248433,"byte_end":248449,"line_start":62,"line_end":62,"column_start":12,"column_end":28},"name":"DispatchIndirect","qualname":"::util::indirect::DispatchIndirect","value":"DispatchIndirect { x, y, z }","parent":null,"children":[{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1609}],"decl_id":null,"docs":" The structure expected in `indirect_buffer` for [`ComputePass::dispatch_workgroups_indirect`](crate::ComputePass::dispatch_workgroups_indirect).","sig":null,"attributes":[{"value":"/ The structure expected in `indirect_buffer` for [`ComputePass::dispatch_workgroups_indirect`](crate::ComputePass::dispatch_workgroups_indirect).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248140,"byte_end":248288,"line_start":57,"line_end":57,"column_start":1,"column_end":149}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248289,"byte_end":248292,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ x, y and z denote the number of work groups to dispatch in each dimension.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248293,"byte_end":248371,"line_start":59,"line_end":59,"column_start":1,"column_end":79}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248372,"byte_end":248382,"line_start":60,"line_end":60,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1607},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248510,"byte_end":248511,"line_start":64,"line_end":64,"column_start":9,"column_end":10},"name":"x","qualname":"::util::indirect::DispatchIndirect::x","value":"u32","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" The number of work groups in X dimension.\n","sig":null,"attributes":[{"value":"/ The number of work groups in X dimension.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248456,"byte_end":248501,"line_start":63,"line_end":63,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1608},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248576,"byte_end":248577,"line_start":66,"line_end":66,"column_start":9,"column_end":10},"name":"y","qualname":"::util::indirect::DispatchIndirect::y","value":"u32","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" The number of work groups in Y dimension.\n","sig":null,"attributes":[{"value":"/ The number of work groups in Y dimension.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248522,"byte_end":248567,"line_start":65,"line_end":65,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248642,"byte_end":248643,"line_start":68,"line_end":68,"column_start":9,"column_end":10},"name":"z","qualname":"::util::indirect::DispatchIndirect::z","value":"u32","parent":{"krate":0,"index":1606},"children":[],"decl_id":null,"docs":" The number of work groups in Z dimension.\n","sig":null,"attributes":[{"value":"/ The number of work groups in Z dimension.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248588,"byte_end":248633,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248796,"byte_end":248804,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<DispatchIndirect>::as_bytes","value":"pub fn as_bytes(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the bytes representation of the struct, ready to be written in a [`Buffer`](crate::Buffer).\n","sig":null,"attributes":[{"value":"/ Returns the bytes representation of the struct, ready to be written in a [`Buffer`](crate::Buffer).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248681,"byte_end":248784,"line_start":72,"line_end":72,"column_start":5,"column_end":108}}]},{"kind":"Function","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\init.rs","byte_start":249609,"byte_end":249630,"line_start":14,"line_end":14,"column_start":8,"column_end":29},"name":"backend_bits_from_env","qualname":"::util::init::backend_bits_from_env","value":"pub fn backend_bits_from_env() -> Option<Backends>","parent":null,"children":[],"decl_id":null,"docs":" Get a set of backend bits from the environment variable WGPU_BACKEND.\n","sig":null,"attributes":[{"value":"/ Get a set of backend bits from the environment variable WGPU_BACKEND.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\init.rs","byte_start":249528,"byte_end":249601,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\init.rs","byte_start":249903,"byte_end":249928,"line_start":24,"line_end":24,"column_start":8,"column_end":33},"name":"power_preference_from_env","qualname":"::util::init::power_preference_from_env","value":"pub fn power_preference_from_env() -> Option<PowerPreference>","parent":null,"children":[],"decl_id":null,"docs":" Get a power preference from the environment variable WGPU_POWER_PREF\n","sig":null,"attributes":[{"value":"/ Get a power preference from the environment variable WGPU_POWER_PREF","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\init.rs","byte_start":249823,"byte_end":249895,"line_start":23,"line_end":23,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\init.rs","byte_start":250395,"byte_end":250422,"line_start":40,"line_end":40,"column_start":8,"column_end":35},"name":"initialize_adapter_from_env","qualname":"::util::init::initialize_adapter_from_env","value":"pub fn initialize_adapter_from_env(&Instance, Backends) -> Option<Adapter>","parent":null,"children":[],"decl_id":null,"docs":" Initialize the adapter obeying the WGPU_ADAPTER_NAME environment variable.\n","sig":null,"attributes":[{"value":"/ Initialize the adapter obeying the WGPU_ADAPTER_NAME environment variable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\init.rs","byte_start":250273,"byte_end":250351,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\init.rs","byte_start":250352,"byte_end":250387,"line_start":39,"line_end":39,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\init.rs","byte_start":251416,"byte_end":251454,"line_start":71,"line_end":71,"column_start":14,"column_end":52},"name":"initialize_adapter_from_env_or_default","qualname":"::util::init::initialize_adapter_from_env_or_default","value":"pub async fn initialize_adapter_from_env_or_default<'_,\n'_>(&'_ Instance, wgt::Backends, Option<&'_ Surface>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Initialize the adapter obeying the WGPU_ADAPTER_NAME environment variable and if it doesn't exist fall back on a default adapter.\n","sig":null,"attributes":[{"value":"/ Initialize the adapter obeying the WGPU_ADAPTER_NAME environment variable and if it doesn't exist fall back on a default adapter.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\init.rs","byte_start":251269,"byte_end":251402,"line_start":70,"line_end":70,"column_start":1,"column_end":134}}]},{"kind":"Function","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":222482,"byte_end":222496,"line_start":41,"line_end":41,"column_start":8,"column_end":22},"name":"make_spirv_raw","qualname":"::util::make_spirv_raw","value":"pub fn make_spirv_raw(&[u8]) -> Cow<, [u32]>","parent":null,"children":[],"decl_id":null,"docs":" Version of make_spirv intended for use with [`Device::create_shader_module_spirv`].\n Returns raw slice instead of ShaderSource.","sig":null,"attributes":[{"value":"/ Version of make_spirv intended for use with [`Device::create_shader_module_spirv`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":222250,"byte_end":222337,"line_start":37,"line_end":37,"column_start":1,"column_end":88}},{"value":"/ Returns raw slice instead of ShaderSource.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":222338,"byte_end":222384,"line_start":38,"line_end":38,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":222385,"byte_end":222388,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ [`Device::create_shader_module_spirv`]: crate::Device::create_shader_module_spirv","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":222389,"byte_end":222474,"line_start":40,"line_end":40,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":223552,"byte_end":223566,"line_start":74,"line_end":74,"column_start":12,"column_end":26},"name":"DownloadBuffer","qualname":"::util::DownloadBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" CPU accessible buffer used to download data back from the GPU.\n","sig":null,"attributes":[{"value":"/ CPU accessible buffer used to download data back from the GPU.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":223474,"byte_end":223540,"line_start":73,"line_end":73,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":223702,"byte_end":223713,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<DownloadBuffer>::read_buffer","value":"pub fn read_buffer<impl FnOnce(Result<Self, super::BufferAsyncError>) + Send + 'static: FnOnce(Result<Self,\nsuper::BufferAsyncError>) -> () + Send +\n'static>(&super::Device, &super::Queue, &super::BufferSlice,\nimpl FnOnce(Result<Self, super::BufferAsyncError>) + Send + 'static)","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously read the contents of a buffer.\n","sig":null,"attributes":[{"value":"/ Asynchronously read the contents of a buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":223641,"byte_end":223690,"line_start":77,"line_end":77,"column_start":5,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225782,"byte_end":225790,"line_start":144,"line_end":144,"column_start":8,"column_end":16},"name":"align_to","qualname":"::util::align_to","value":"pub fn align_to<T>(T, T) -> T where T: Add<Output = T> + Copy + Default +\nPartialEq<T> + Rem<Output = T> + Sub<Output = T>","parent":null,"children":[],"decl_id":null,"docs":"\n Aligns a `value` to an `alignment`.","sig":null,"attributes":[{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225351,"byte_end":225354,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ Aligns a `value` to an `alignment`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225355,"byte_end":225394,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225395,"byte_end":225398,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ Returns the first number greater than or equal to `value` that is also a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225399,"byte_end":225475,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/ multiple of `alignment`. If `value` is already a multiple of `alignment`,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225476,"byte_end":225553,"line_start":132,"line_end":132,"column_start":1,"column_end":78}},{"value":"/ `value` will be returned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225554,"byte_end":225583,"line_start":133,"line_end":133,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225584,"byte_end":225587,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225588,"byte_end":225602,"line_start":135,"line_end":135,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225603,"byte_end":225606,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225607,"byte_end":225614,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # use wgpu::util::align_to;","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225615,"byte_end":225646,"line_start":138,"line_end":138,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(align_to(253, 16), 256);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225647,"byte_end":225686,"line_start":139,"line_end":139,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(align_to(256, 16), 256);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225687,"byte_end":225726,"line_start":140,"line_end":140,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(align_to(0, 16), 0);","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225727,"byte_end":225762,"line_start":141,"line_end":141,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225763,"byte_end":225770,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225771,"byte_end":225774,"line_start":143,"line_end":143,"column_start":1,"column_end":4}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1618},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":2262,"byte_end":2273,"line_start":52,"line_end":52,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::ErrorFilter::OutOfMemory","value":"ErrorFilter::OutOfMemory","parent":{"krate":0,"index":1617},"children":[],"decl_id":null,"docs":" Catch only out-of-memory errors.\n","sig":null,"attributes":[{"value":"/ Catch only out-of-memory errors.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":2221,"byte_end":2257,"line_start":51,"line_end":51,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1620},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":2317,"byte_end":2327,"line_start":54,"line_end":54,"column_start":5,"column_end":15},"name":"Validation","qualname":"::ErrorFilter::Validation","value":"ErrorFilter::Validation","parent":{"krate":0,"index":1617},"children":[],"decl_id":null,"docs":" Catch only validation errors.\n","sig":null,"attributes":[{"value":"/ Catch only validation errors.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":2279,"byte_end":2312,"line_start":53,"line_end":53,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1617},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":2203,"byte_end":2214,"line_start":50,"line_end":50,"column_start":10,"column_end":21},"name":"ErrorFilter","qualname":"::ErrorFilter","value":"pub enum ErrorFilter { OutOfMemory, Validation, }","parent":null,"children":[{"krate":0,"index":1618},{"krate":0,"index":1620}],"decl_id":null,"docs":" Filter for error scopes.\n","sig":null,"attributes":[{"value":"/ Filter for error scopes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":2112,"byte_end":2140,"line_start":48,"line_end":48,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1013},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6091,"byte_end":6100,"line_start":167,"line_end":167,"column_start":10,"column_end":19},"name":"AdapterId","qualname":"::Context::AdapterId","value":"type AdapterId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1014},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6142,"byte_end":6150,"line_start":168,"line_end":168,"column_start":10,"column_end":18},"name":"DeviceId","qualname":"::Context::DeviceId","value":"type DeviceId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1015},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6192,"byte_end":6199,"line_start":169,"line_end":169,"column_start":10,"column_end":17},"name":"QueueId","qualname":"::Context::QueueId","value":"type QueueId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1016},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6241,"byte_end":6255,"line_start":170,"line_end":170,"column_start":10,"column_end":24},"name":"ShaderModuleId","qualname":"::Context::ShaderModuleId","value":"type ShaderModuleId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1017},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6297,"byte_end":6314,"line_start":171,"line_end":171,"column_start":10,"column_end":27},"name":"BindGroupLayoutId","qualname":"::Context::BindGroupLayoutId","value":"type BindGroupLayoutId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1018},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6356,"byte_end":6367,"line_start":172,"line_end":172,"column_start":10,"column_end":21},"name":"BindGroupId","qualname":"::Context::BindGroupId","value":"type BindGroupId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1019},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6409,"byte_end":6422,"line_start":173,"line_end":173,"column_start":10,"column_end":23},"name":"TextureViewId","qualname":"::Context::TextureViewId","value":"type TextureViewId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1020},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6464,"byte_end":6473,"line_start":174,"line_end":174,"column_start":10,"column_end":19},"name":"SamplerId","qualname":"::Context::SamplerId","value":"type SamplerId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1021},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6515,"byte_end":6523,"line_start":175,"line_end":175,"column_start":10,"column_end":18},"name":"BufferId","qualname":"::Context::BufferId","value":"type BufferId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1022},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6565,"byte_end":6574,"line_start":176,"line_end":176,"column_start":10,"column_end":19},"name":"TextureId","qualname":"::Context::TextureId","value":"type TextureId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1023},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6616,"byte_end":6626,"line_start":177,"line_end":177,"column_start":10,"column_end":20},"name":"QuerySetId","qualname":"::Context::QuerySetId","value":"type QuerySetId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1024},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6668,"byte_end":6684,"line_start":178,"line_end":178,"column_start":10,"column_end":26},"name":"PipelineLayoutId","qualname":"::Context::PipelineLayoutId","value":"type PipelineLayoutId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1025},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6726,"byte_end":6742,"line_start":179,"line_end":179,"column_start":10,"column_end":26},"name":"RenderPipelineId","qualname":"::Context::RenderPipelineId","value":"type RenderPipelineId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1026},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6784,"byte_end":6801,"line_start":180,"line_end":180,"column_start":10,"column_end":27},"name":"ComputePipelineId","qualname":"::Context::ComputePipelineId","value":"type ComputePipelineId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1027},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6843,"byte_end":6859,"line_start":181,"line_end":181,"column_start":10,"column_end":26},"name":"CommandEncoderId","qualname":"::Context::CommandEncoderId","value":"type CommandEncoderId: Debug;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1028},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6877,"byte_end":6890,"line_start":182,"line_end":182,"column_start":10,"column_end":23},"name":"ComputePassId","qualname":"::Context::ComputePassId","value":"type ComputePassId: Debug + ComputePassInner<Self>;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1029},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6933,"byte_end":6945,"line_start":183,"line_end":183,"column_start":10,"column_end":22},"name":"RenderPassId","qualname":"::Context::RenderPassId","value":"type RenderPassId: Debug + RenderPassInner<Self>;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1030},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6987,"byte_end":7002,"line_start":184,"line_end":184,"column_start":10,"column_end":25},"name":"CommandBufferId","qualname":"::Context::CommandBufferId","value":"type CommandBufferId: Debug + Send + Sync;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1031},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":7034,"byte_end":7055,"line_start":185,"line_end":185,"column_start":10,"column_end":31},"name":"RenderBundleEncoderId","qualname":"::Context::RenderBundleEncoderId","value":"type RenderBundleEncoderId: Debug + RenderInner<Self>;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1032},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":7093,"byte_end":7107,"line_start":186,"line_end":186,"column_start":10,"column_end":24},"name":"RenderBundleId","qualname":"::Context::RenderBundleId","value":"type RenderBundleId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1033},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":7149,"byte_end":7158,"line_start":187,"line_end":187,"column_start":10,"column_end":19},"name":"SurfaceId","qualname":"::Context::SurfaceId","value":"type SurfaceId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1034},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":7201,"byte_end":7220,"line_start":189,"line_end":189,"column_start":10,"column_end":29},"name":"SurfaceOutputDetail","qualname":"::Context::SurfaceOutputDetail","value":"type SurfaceOutputDetail: Send;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1035},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":7237,"byte_end":7252,"line_start":190,"line_end":190,"column_start":10,"column_end":25},"name":"SubmissionIndex","qualname":"::Context::SubmissionIndex","value":"type SubmissionIndex: Debug + Copy + Clone + Send + 'static;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1036},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":7303,"byte_end":7323,"line_start":192,"line_end":192,"column_start":10,"column_end":30},"name":"RequestAdapterFuture","qualname":"::Context::RequestAdapterFuture","value":"type RequestAdapterFuture: Future<Output = Option<Self::AdapterId>> + Send;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1037},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":7383,"byte_end":7402,"line_start":193,"line_end":193,"column_start":10,"column_end":29},"name":"RequestDeviceFuture","qualname":"::Context::RequestDeviceFuture","value":"type RequestDeviceFuture: Future<Output = Result<(Self::DeviceId, Self::QueueId), RequestDeviceError>>\n        + Send;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1038},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":7506,"byte_end":7525,"line_start":195,"line_end":195,"column_start":10,"column_end":29},"name":"PopErrorScopeFuture","qualname":"::Context::PopErrorScopeFuture","value":"type PopErrorScopeFuture: Future<Output = Option<Error>> + Send;","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1632},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19665,"byte_end":19673,"line_start":546,"line_end":546,"column_start":12,"column_end":20},"name":"Instance","qualname":"::Instance","value":"Instance {  }","parent":null,"children":[{"krate":0,"index":1633}],"decl_id":null,"docs":" Context for all other wgpu objects. Instance of wgpu.","sig":null,"attributes":[{"value":"/ Context for all other wgpu objects. Instance of wgpu.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19328,"byte_end":19385,"line_start":537,"line_end":537,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19386,"byte_end":19389,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ This is the first thing you create when using wgpu.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19390,"byte_end":19445,"line_start":539,"line_end":539,"column_start":1,"column_end":56}},{"value":"/ Its primary use is to create [`Adapter`]s and [`Surface`]s.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19446,"byte_end":19509,"line_start":540,"line_end":540,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19510,"byte_end":19513,"line_start":541,"line_end":541,"column_start":1,"column_end":4}},{"value":"/ Does not have to be kept alive.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19514,"byte_end":19549,"line_start":542,"line_end":542,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19550,"byte_end":19553,"line_start":543,"line_end":543,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPU`](https://gpuweb.github.io/gpuweb/#gpu-interface).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19554,"byte_end":19636,"line_start":544,"line_end":544,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":1636},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20060,"byte_end":20067,"line_start":559,"line_end":559,"column_start":12,"column_end":19},"name":"Adapter","qualname":"::Adapter","value":"Adapter {  }","parent":null,"children":[{"krate":0,"index":1637},{"krate":0,"index":1638}],"decl_id":null,"docs":" Handle to a physical graphics and/or compute device.","sig":null,"attributes":[{"value":"/ Handle to a physical graphics and/or compute device.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19700,"byte_end":19756,"line_start":550,"line_end":550,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19757,"byte_end":19760,"line_start":551,"line_end":551,"column_start":1,"column_end":4}},{"value":"/ Adapters can be used to open a connection to the corresponding [`Device`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19761,"byte_end":19838,"line_start":552,"line_end":552,"column_start":1,"column_end":78}},{"value":"/ on the host system by using [`Adapter::request_device`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19839,"byte_end":19899,"line_start":553,"line_end":553,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19900,"byte_end":19903,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ Does not have to be kept alive.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19904,"byte_end":19939,"line_start":555,"line_end":555,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19940,"byte_end":19943,"line_start":556,"line_end":556,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUAdapter`](https://gpuweb.github.io/gpuweb/#gpu-adapter).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":19944,"byte_end":20031,"line_start":557,"line_end":557,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":1641},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20689,"byte_end":20695,"line_start":581,"line_end":581,"column_start":12,"column_end":18},"name":"Device","qualname":"::Device","value":"Device {  }","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1643}],"decl_id":null,"docs":" Open connection to a graphics and/or compute device.","sig":null,"attributes":[{"value":"/ Open connection to a graphics and/or compute device.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20279,"byte_end":20335,"line_start":572,"line_end":572,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20336,"byte_end":20339,"line_start":573,"line_end":573,"column_start":1,"column_end":4}},{"value":"/ Responsible for the creation of most rendering and compute resources.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20340,"byte_end":20413,"line_start":574,"line_end":574,"column_start":1,"column_end":74}},{"value":"/ These are then used in commands, which are submitted to a [`Queue`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20414,"byte_end":20486,"line_start":575,"line_end":575,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20487,"byte_end":20490,"line_start":576,"line_end":576,"column_start":1,"column_end":4}},{"value":"/ A device may be requested from an adapter with [`Adapter::request_device`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20491,"byte_end":20570,"line_start":577,"line_end":577,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20571,"byte_end":20574,"line_start":578,"line_end":578,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUDevice`](https://gpuweb.github.io/gpuweb/#gpu-device).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20575,"byte_end":20660,"line_start":579,"line_end":579,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":1646},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20967,"byte_end":20982,"line_start":590,"line_end":590,"column_start":12,"column_end":27},"name":"SubmissionIndex","qualname":"::SubmissionIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Identifier for a particular call to [`Queue::submit`]. Can be used\n as part of an argument to [`Device::poll`] to block for a particular\n submission to finish.\n","sig":null,"attributes":[{"value":"/ Identifier for a particular call to [`Queue::submit`]. Can be used","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20756,"byte_end":20826,"line_start":586,"line_end":586,"column_start":1,"column_end":71}},{"value":"/ as part of an argument to [`Device::poll`] to block for a particular","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20827,"byte_end":20899,"line_start":587,"line_end":587,"column_start":1,"column_end":73}},{"value":"/ submission to finish.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20900,"byte_end":20925,"line_start":588,"line_end":588,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1660},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23038,"byte_end":23044,"line_start":658,"line_end":658,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":1661},{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1664}],"decl_id":null,"docs":" Handle to a GPU-accessible buffer.","sig":null,"attributes":[{"value":"/ Handle to a GPU-accessible buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":22749,"byte_end":22787,"line_start":651,"line_end":651,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":22788,"byte_end":22791,"line_start":652,"line_end":652,"column_start":1,"column_end":4}},{"value":"/ Created with [`Device::create_buffer`] or","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":22792,"byte_end":22837,"line_start":653,"line_end":653,"column_start":1,"column_end":46}},{"value":"/ [`DeviceExt::create_buffer_init`](util::DeviceExt::create_buffer_init).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":22838,"byte_end":22913,"line_start":654,"line_end":654,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":22914,"byte_end":22917,"line_start":655,"line_end":655,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUBuffer`](https://gpuweb.github.io/gpuweb/#buffer-interface).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":22918,"byte_end":23009,"line_start":656,"line_end":656,"column_start":1,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":1667},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23361,"byte_end":23372,"line_start":671,"line_end":671,"column_start":12,"column_end":23},"name":"BufferSlice","qualname":"::BufferSlice","value":"BufferSlice {  }","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671}],"decl_id":null,"docs":" Slice into a [`Buffer`].","sig":null,"attributes":[{"value":"/ Slice into a [`Buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23166,"byte_end":23194,"line_start":665,"line_end":665,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23195,"byte_end":23198,"line_start":666,"line_end":666,"column_start":1,"column_end":4}},{"value":"/ Created by calling [`Buffer::slice`]. To use the whole buffer, call with unbounded slice:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23199,"byte_end":23292,"line_start":667,"line_end":667,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23293,"byte_end":23296,"line_start":668,"line_end":668,"column_start":1,"column_end":4}},{"value":"/ `buffer.slice(..)`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23297,"byte_end":23319,"line_start":669,"line_end":669,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1680},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23684,"byte_end":23691,"line_start":683,"line_end":683,"column_start":12,"column_end":19},"name":"Texture","qualname":"::Texture","value":"Texture {  }","parent":null,"children":[{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683}],"decl_id":null,"docs":" Handle to a texture on the GPU.","sig":null,"attributes":[{"value":"/ Handle to a texture on the GPU.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23463,"byte_end":23498,"line_start":677,"line_end":677,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23499,"byte_end":23502,"line_start":678,"line_end":678,"column_start":1,"column_end":4}},{"value":"/ It can be created with [`Device::create_texture`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23503,"byte_end":23557,"line_start":679,"line_end":679,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23558,"byte_end":23561,"line_start":680,"line_end":680,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUTexture`](https://gpuweb.github.io/gpuweb/#texture-interface).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23562,"byte_end":23655,"line_start":681,"line_end":681,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":1686},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24055,"byte_end":24066,"line_start":696,"line_end":696,"column_start":12,"column_end":23},"name":"TextureView","qualname":"::TextureView","value":"TextureView {  }","parent":null,"children":[{"krate":0,"index":1687},{"krate":0,"index":1688}],"decl_id":null,"docs":" Handle to a texture view.","sig":null,"attributes":[{"value":"/ Handle to a texture view.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23770,"byte_end":23799,"line_start":689,"line_end":689,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23800,"byte_end":23803,"line_start":690,"line_end":690,"column_start":1,"column_end":4}},{"value":"/ A `TextureView` object describes a texture and associated metadata needed by a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23804,"byte_end":23886,"line_start":691,"line_end":691,"column_start":1,"column_end":83}},{"value":"/ [`RenderPipeline`] or [`BindGroup`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23887,"byte_end":23927,"line_start":692,"line_end":692,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23928,"byte_end":23931,"line_start":693,"line_end":693,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUTextureView`](https://gpuweb.github.io/gpuweb/#gputextureview).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":23932,"byte_end":24026,"line_start":694,"line_end":694,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":1691},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24609,"byte_end":24616,"line_start":711,"line_end":711,"column_start":12,"column_end":19},"name":"Sampler","qualname":"::Sampler","value":"Sampler {  }","parent":null,"children":[{"krate":0,"index":1692},{"krate":0,"index":1693}],"decl_id":null,"docs":" Handle to a sampler.","sig":null,"attributes":[{"value":"/ Handle to a sampler.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24132,"byte_end":24156,"line_start":701,"line_end":701,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24157,"byte_end":24160,"line_start":702,"line_end":702,"column_start":1,"column_end":4}},{"value":"/ A `Sampler` object defines how a pipeline will sample from a [`TextureView`]. Samplers define","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24161,"byte_end":24258,"line_start":703,"line_end":703,"column_start":1,"column_end":98}},{"value":"/ image filters (including anisotropy) and address (wrapping) modes, among other things. See","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24259,"byte_end":24353,"line_start":704,"line_end":704,"column_start":1,"column_end":95}},{"value":"/ the documentation for [`SamplerDescriptor`] for more information.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24354,"byte_end":24423,"line_start":705,"line_end":705,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24424,"byte_end":24427,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ It can be created with [`Device::create_sampler`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24428,"byte_end":24482,"line_start":707,"line_end":707,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24483,"byte_end":24486,"line_start":708,"line_end":708,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUSampler`](https://gpuweb.github.io/gpuweb/#sampler-interface).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24487,"byte_end":24580,"line_start":709,"line_end":709,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":1696},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25100,"byte_end":25107,"line_start":729,"line_end":729,"column_start":12,"column_end":19},"name":"Surface","qualname":"::Surface","value":"Surface {  }","parent":null,"children":[{"krate":0,"index":1697},{"krate":0,"index":1698}],"decl_id":null,"docs":" Handle to a presentable surface.","sig":null,"attributes":[{"value":"/ Handle to a presentable surface.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24829,"byte_end":24865,"line_start":724,"line_end":724,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24866,"byte_end":24869,"line_start":725,"line_end":725,"column_start":1,"column_end":4}},{"value":"/ A `Surface` represents a platform-specific surface (e.g. a window) onto which rendered images may","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24870,"byte_end":24971,"line_start":726,"line_end":726,"column_start":1,"column_end":102}},{"value":"/ be presented. A `Surface` may be created with the unsafe function [`Instance::create_surface`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24972,"byte_end":25071,"line_start":727,"line_end":727,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":1701},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25955,"byte_end":25970,"line_start":754,"line_end":754,"column_start":12,"column_end":27},"name":"BindGroupLayout","qualname":"::BindGroupLayout","value":"BindGroupLayout {  }","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1703}],"decl_id":null,"docs":" Handle to a binding group layout.","sig":null,"attributes":[{"value":"/ Handle to a binding group layout.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25319,"byte_end":25356,"line_start":742,"line_end":742,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25357,"byte_end":25360,"line_start":743,"line_end":743,"column_start":1,"column_end":4}},{"value":"/ A `BindGroupLayout` is a handle to the GPU-side layout of a binding group. It can be used to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25361,"byte_end":25457,"line_start":744,"line_end":744,"column_start":1,"column_end":97}},{"value":"/ create a [`BindGroupDescriptor`] object, which in turn can be used to create a [`BindGroup`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25458,"byte_end":25554,"line_start":745,"line_end":745,"column_start":1,"column_end":97}},{"value":"/ object with [`Device::create_bind_group`]. A series of `BindGroupLayout`s can also be used to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25555,"byte_end":25652,"line_start":746,"line_end":746,"column_start":1,"column_end":98}},{"value":"/ create a [`PipelineLayoutDescriptor`], which can be used to create a [`PipelineLayout`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25653,"byte_end":25745,"line_start":747,"line_end":747,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25746,"byte_end":25749,"line_start":748,"line_end":748,"column_start":1,"column_end":4}},{"value":"/ It can be created with [`Device::create_bind_group_layout`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25750,"byte_end":25814,"line_start":749,"line_end":749,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25815,"byte_end":25818,"line_start":750,"line_end":750,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUBindGroupLayout`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25819,"byte_end":25868,"line_start":751,"line_end":751,"column_start":1,"column_end":50}},{"value":"/ https://gpuweb.github.io/gpuweb/#gpubindgrouplayout).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25869,"byte_end":25926,"line_start":752,"line_end":752,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1706},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26698,"byte_end":26707,"line_start":776,"line_end":776,"column_start":12,"column_end":21},"name":"BindGroup","qualname":"::BindGroup","value":"BindGroup {  }","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1708}],"decl_id":null,"docs":" Handle to a binding group.","sig":null,"attributes":[{"value":"/ Handle to a binding group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26209,"byte_end":26239,"line_start":767,"line_end":767,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26240,"byte_end":26243,"line_start":768,"line_end":768,"column_start":1,"column_end":4}},{"value":"/ A `BindGroup` represents the set of resources bound to the bindings described by a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26244,"byte_end":26330,"line_start":769,"line_end":769,"column_start":1,"column_end":87}},{"value":"/ [`BindGroupLayout`]. It can be created with [`Device::create_bind_group`]. A `BindGroup` can","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26331,"byte_end":26427,"line_start":770,"line_end":770,"column_start":1,"column_end":97}},{"value":"/ be bound to a particular [`RenderPass`] with [`RenderPass::set_bind_group`], or to a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26428,"byte_end":26516,"line_start":771,"line_end":771,"column_start":1,"column_end":89}},{"value":"/ [`ComputePass`] with [`ComputePass::set_bind_group`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26517,"byte_end":26574,"line_start":772,"line_end":772,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26575,"byte_end":26578,"line_start":773,"line_end":773,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUBindGroup`](https://gpuweb.github.io/gpuweb/#gpubindgroup).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26579,"byte_end":26669,"line_start":774,"line_end":774,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":1711},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27391,"byte_end":27403,"line_start":798,"line_end":798,"column_start":12,"column_end":24},"name":"ShaderModule","qualname":"::ShaderModule","value":"ShaderModule {  }","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1713}],"decl_id":null,"docs":" Handle to a compiled shader module.","sig":null,"attributes":[{"value":"/ Handle to a compiled shader module.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26927,"byte_end":26966,"line_start":789,"line_end":789,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26967,"byte_end":26970,"line_start":790,"line_end":790,"column_start":1,"column_end":4}},{"value":"/ A `ShaderModule` represents a compiled shader module on the GPU. It can be created by passing","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26971,"byte_end":27068,"line_start":791,"line_end":791,"column_start":1,"column_end":98}},{"value":"/ source code to [`Device::create_shader_module`] or valid SPIR-V binary to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27069,"byte_end":27146,"line_start":792,"line_end":792,"column_start":1,"column_end":78}},{"value":"/ [`Device::create_shader_module_spirv`]. Shader modules are used to define programmable stages","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27147,"byte_end":27244,"line_start":793,"line_end":793,"column_start":1,"column_end":98}},{"value":"/ of a pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27245,"byte_end":27263,"line_start":794,"line_end":794,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27264,"byte_end":27267,"line_start":795,"line_end":795,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUShaderModule`](https://gpuweb.github.io/gpuweb/#shader-module).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27268,"byte_end":27362,"line_start":796,"line_end":796,"column_start":1,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":28691,"byte_end":28695,"line_start":839,"line_end":839,"column_start":5,"column_end":9},"name":"Wgsl","qualname":"::ShaderSource::Wgsl","value":"ShaderSource::Wgsl(Cow)","parent":{"krate":0,"index":1151},"children":[],"decl_id":null,"docs":" WGSL module as a string slice.\n","sig":null,"attributes":[{"value":"/ WGSL module as a string slice.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":28652,"byte_end":28686,"line_start":838,"line_end":838,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27858,"byte_end":27870,"line_start":818,"line_end":818,"column_start":10,"column_end":22},"name":"ShaderSource","qualname":"::ShaderSource","value":"pub enum ShaderSource<'a> { Wgsl(Cow), }","parent":null,"children":[{"krate":0,"index":1153}],"decl_id":null,"docs":" Source of a shader module.","sig":null,"attributes":[{"value":"/ Source of a shader module.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27632,"byte_end":27662,"line_start":811,"line_end":811,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27663,"byte_end":27666,"line_start":812,"line_end":812,"column_start":1,"column_end":4}},{"value":"/ The source will be parsed and validated.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27667,"byte_end":27711,"line_start":813,"line_end":813,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27712,"byte_end":27715,"line_start":814,"line_end":814,"column_start":1,"column_end":4}},{"value":"/ Any necessary shader translation (e.g. from WGSL to SPIR-V or vice versa)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27716,"byte_end":27793,"line_start":815,"line_end":815,"column_start":1,"column_end":78}},{"value":"/ will be done internally by wgpu.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27794,"byte_end":27830,"line_start":816,"line_end":816,"column_start":1,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27831,"byte_end":27848,"line_start":817,"line_end":817,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29047,"byte_end":29069,"line_start":850,"line_end":850,"column_start":12,"column_end":34},"name":"ShaderModuleDescriptor","qualname":"::ShaderModuleDescriptor","value":"ShaderModuleDescriptor { label, source }","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1159}],"decl_id":null,"docs":" Descriptor for use with [`Device::create_shader_module`].","sig":null,"attributes":[{"value":"/ Descriptor for use with [`Device::create_shader_module`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":28840,"byte_end":28901,"line_start":846,"line_end":846,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":28902,"byte_end":28905,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUShaderModuleDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":28906,"byte_end":28962,"line_start":848,"line_end":848,"column_start":1,"column_end":57}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpushadermoduledescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":28963,"byte_end":29035,"line_start":849,"line_end":849,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29191,"byte_end":29196,"line_start":852,"line_end":852,"column_start":9,"column_end":14},"name":"label","qualname":"::ShaderModuleDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Debug label of the shader module. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the shader module. This will show up in graphics debuggers for easy identification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29080,"byte_end":29182,"line_start":851,"line_end":851,"column_start":5,"column_end":107}}]},{"kind":"Field","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29253,"byte_end":29259,"line_start":854,"line_end":854,"column_start":9,"column_end":15},"name":"source","qualname":"::ShaderModuleDescriptor::source","value":"ShaderSource<'a>","parent":{"krate":0,"index":1156},"children":[],"decl_id":null,"docs":" Source code for the shader.\n","sig":null,"attributes":[{"value":"/ Source code for the shader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29213,"byte_end":29244,"line_start":853,"line_end":853,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29352,"byte_end":29379,"line_start":858,"line_end":858,"column_start":12,"column_end":39},"name":"ShaderModuleDescriptorSpirV","qualname":"::ShaderModuleDescriptorSpirV","value":"ShaderModuleDescriptorSpirV { label, source }","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1163}],"decl_id":null,"docs":" Descriptor for a shader module given by SPIR-V binary.\n","sig":null,"attributes":[{"value":"/ Descriptor for a shader module given by SPIR-V binary.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29282,"byte_end":29340,"line_start":857,"line_end":857,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1162},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29501,"byte_end":29506,"line_start":860,"line_end":860,"column_start":9,"column_end":14},"name":"label","qualname":"::ShaderModuleDescriptorSpirV::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1160},"children":[],"decl_id":null,"docs":" Debug label of the shader module. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the shader module. This will show up in graphics debuggers for easy identification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29390,"byte_end":29492,"line_start":859,"line_end":859,"column_start":5,"column_end":107}}]},{"kind":"Field","id":{"krate":0,"index":1163},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29572,"byte_end":29578,"line_start":862,"line_end":862,"column_start":9,"column_end":15},"name":"source","qualname":"::ShaderModuleDescriptorSpirV::source","value":"std::borrow::Cow<'a, [u32]>","parent":{"krate":0,"index":1160},"children":[],"decl_id":null,"docs":" Binary SPIR-V data, in 4-byte words.\n","sig":null,"attributes":[{"value":"/ Binary SPIR-V data, in 4-byte words.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29523,"byte_end":29563,"line_start":861,"line_end":861,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1716},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29916,"byte_end":29930,"line_start":872,"line_end":872,"column_start":12,"column_end":26},"name":"PipelineLayout","qualname":"::PipelineLayout","value":"PipelineLayout {  }","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718}],"decl_id":null,"docs":" Handle to a pipeline layout.","sig":null,"attributes":[{"value":"/ Handle to a pipeline layout.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29599,"byte_end":29631,"line_start":865,"line_end":865,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29632,"byte_end":29635,"line_start":866,"line_end":866,"column_start":1,"column_end":4}},{"value":"/ A `PipelineLayout` object describes the available binding groups of a pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29636,"byte_end":29719,"line_start":867,"line_end":867,"column_start":1,"column_end":84}},{"value":"/ It can be created with [`Device::create_pipeline_layout`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29720,"byte_end":29782,"line_start":868,"line_end":868,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29783,"byte_end":29786,"line_start":869,"line_end":869,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUPipelineLayout`](https://gpuweb.github.io/gpuweb/#gpupipelinelayout).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":29787,"byte_end":29887,"line_start":870,"line_end":870,"column_start":1,"column_end":101}}]},{"kind":"Struct","id":{"krate":0,"index":1721},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30525,"byte_end":30539,"line_start":892,"line_end":892,"column_start":12,"column_end":26},"name":"RenderPipeline","qualname":"::RenderPipeline","value":"RenderPipeline {  }","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723}],"decl_id":null,"docs":" Handle to a rendering (graphics) pipeline.","sig":null,"attributes":[{"value":"/ Handle to a rendering (graphics) pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30165,"byte_end":30211,"line_start":885,"line_end":885,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30212,"byte_end":30215,"line_start":886,"line_end":886,"column_start":1,"column_end":4}},{"value":"/ A `RenderPipeline` object represents a graphics pipeline and its stages, bindings, vertex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30216,"byte_end":30309,"line_start":887,"line_end":887,"column_start":1,"column_end":94}},{"value":"/ buffers and targets. It can be created with [`Device::create_render_pipeline`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30310,"byte_end":30393,"line_start":888,"line_end":888,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30394,"byte_end":30397,"line_start":889,"line_end":889,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPURenderPipeline`](https://gpuweb.github.io/gpuweb/#render-pipeline).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30398,"byte_end":30496,"line_start":890,"line_end":890,"column_start":1,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30882,"byte_end":30903,"line_start":907,"line_end":907,"column_start":12,"column_end":33},"name":"get_bind_group_layout","qualname":"<RenderPipeline>::get_bind_group_layout","value":"pub fn get_bind_group_layout(&Self, u32) -> BindGroupLayout","parent":null,"children":[],"decl_id":null,"docs":" Get an object representing the bind group layout at a given index.\n","sig":null,"attributes":[{"value":"/ Get an object representing the bind group layout at a given index.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30800,"byte_end":30870,"line_start":906,"line_end":906,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1726},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":31503,"byte_end":31518,"line_start":925,"line_end":925,"column_start":12,"column_end":27},"name":"ComputePipeline","qualname":"::ComputePipeline","value":"ComputePipeline {  }","parent":null,"children":[{"krate":0,"index":1727},{"krate":0,"index":1728}],"decl_id":null,"docs":" Handle to a compute pipeline.","sig":null,"attributes":[{"value":"/ Handle to a compute pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":31178,"byte_end":31211,"line_start":918,"line_end":918,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":31212,"byte_end":31215,"line_start":919,"line_end":919,"column_start":1,"column_end":4}},{"value":"/ A `ComputePipeline` object represents a compute pipeline and its single shader stage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":31216,"byte_end":31305,"line_start":920,"line_end":920,"column_start":1,"column_end":90}},{"value":"/ It can be created with [`Device::create_compute_pipeline`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":31306,"byte_end":31369,"line_start":921,"line_end":921,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":31370,"byte_end":31373,"line_start":922,"line_end":922,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUComputePipeline`](https://gpuweb.github.io/gpuweb/#compute-pipeline).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":31374,"byte_end":31474,"line_start":923,"line_end":923,"column_start":1,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":31865,"byte_end":31886,"line_start":940,"line_end":940,"column_start":12,"column_end":33},"name":"get_bind_group_layout","qualname":"<ComputePipeline>::get_bind_group_layout","value":"pub fn get_bind_group_layout(&Self, u32) -> BindGroupLayout","parent":null,"children":[],"decl_id":null,"docs":" Get an object representing the bind group layout at a given index.\n","sig":null,"attributes":[{"value":"/ Get an object representing the bind group layout at a given index.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":31783,"byte_end":31853,"line_start":939,"line_end":939,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1731},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":32609,"byte_end":32622,"line_start":959,"line_end":959,"column_start":12,"column_end":25},"name":"CommandBuffer","qualname":"::CommandBuffer","value":"CommandBuffer {  }","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1733}],"decl_id":null,"docs":" Handle to a command buffer on the GPU.","sig":null,"attributes":[{"value":"/ Handle to a command buffer on the GPU.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":32162,"byte_end":32204,"line_start":951,"line_end":951,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":32205,"byte_end":32208,"line_start":952,"line_end":952,"column_start":1,"column_end":4}},{"value":"/ A `CommandBuffer` represents a complete sequence of commands that may be submitted to a command","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":32209,"byte_end":32308,"line_start":953,"line_end":953,"column_start":1,"column_end":100}},{"value":"/ queue with [`Queue::submit`]. A `CommandBuffer` is obtained by recording a series of commands to","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":32309,"byte_end":32409,"line_start":954,"line_end":954,"column_start":1,"column_end":101}},{"value":"/ a [`CommandEncoder`] and then calling [`CommandEncoder::finish`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":32410,"byte_end":32479,"line_start":955,"line_end":955,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":32480,"byte_end":32483,"line_start":956,"line_end":956,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUCommandBuffer`](https://gpuweb.github.io/gpuweb/#command-buffer).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":32484,"byte_end":32580,"line_start":957,"line_end":957,"column_start":1,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":1736},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33396,"byte_end":33410,"line_start":984,"line_end":984,"column_start":12,"column_end":26},"name":"CommandEncoder","qualname":"::CommandEncoder","value":"CommandEncoder {  }","parent":null,"children":[{"krate":0,"index":1737},{"krate":0,"index":1738}],"decl_id":null,"docs":" Encodes a series of GPU operations.","sig":null,"attributes":[{"value":"/ Encodes a series of GPU operations.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":32918,"byte_end":32957,"line_start":974,"line_end":974,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":32958,"byte_end":32961,"line_start":975,"line_end":975,"column_start":1,"column_end":4}},{"value":"/ A command encoder can record [`RenderPass`]es, [`ComputePass`]es,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":32962,"byte_end":33031,"line_start":976,"line_end":976,"column_start":1,"column_end":70}},{"value":"/ and transfer operations between driver-managed resources like [`Buffer`]s and [`Texture`]s.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33032,"byte_end":33127,"line_start":977,"line_end":977,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33128,"byte_end":33131,"line_start":978,"line_end":978,"column_start":1,"column_end":4}},{"value":"/ When finished recording, call [`CommandEncoder::finish`] to obtain a [`CommandBuffer`] which may","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33132,"byte_end":33232,"line_start":979,"line_end":979,"column_start":1,"column_end":101}},{"value":"/ be submitted for execution.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33233,"byte_end":33264,"line_start":980,"line_end":980,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33265,"byte_end":33268,"line_start":981,"line_end":981,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUCommandEncoder`](https://gpuweb.github.io/gpuweb/#command-encoder).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33269,"byte_end":33367,"line_start":982,"line_end":982,"column_start":1,"column_end":99}}]},{"kind":"Struct","id":{"krate":0,"index":1741},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33970,"byte_end":33980,"line_start":1006,"line_end":1006,"column_start":12,"column_end":22},"name":"RenderPass","qualname":"::RenderPass","value":"RenderPass {  }","parent":null,"children":[{"krate":0,"index":1743},{"krate":0,"index":1744}],"decl_id":null,"docs":" In-progress recording of a render pass.","sig":null,"attributes":[{"value":"/ In-progress recording of a render pass.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33713,"byte_end":33756,"line_start":999,"line_end":999,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33757,"byte_end":33760,"line_start":1000,"line_end":1000,"column_start":1,"column_end":4}},{"value":"/ It can be created with [`CommandEncoder::begin_render_pass`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33761,"byte_end":33826,"line_start":1001,"line_end":1001,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33827,"byte_end":33830,"line_start":1002,"line_end":1002,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPURenderPassEncoder`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33831,"byte_end":33882,"line_start":1003,"line_end":1003,"column_start":1,"column_end":52}},{"value":"/ https://gpuweb.github.io/gpuweb/#render-pass-encoder).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33883,"byte_end":33941,"line_start":1004,"line_end":1004,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1748},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34325,"byte_end":34336,"line_start":1018,"line_end":1018,"column_start":12,"column_end":23},"name":"ComputePass","qualname":"::ComputePass","value":"ComputePass {  }","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751}],"decl_id":null,"docs":" In-progress recording of a compute pass.","sig":null,"attributes":[{"value":"/ In-progress recording of a compute pass.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34064,"byte_end":34108,"line_start":1011,"line_end":1011,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34109,"byte_end":34112,"line_start":1012,"line_end":1012,"column_start":1,"column_end":4}},{"value":"/ It can be created with [`CommandEncoder::begin_compute_pass`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34113,"byte_end":34179,"line_start":1013,"line_end":1013,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34180,"byte_end":34183,"line_start":1014,"line_end":1014,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUComputePassEncoder`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34184,"byte_end":34236,"line_start":1015,"line_end":1015,"column_start":1,"column_end":53}},{"value":"/ https://gpuweb.github.io/gpuweb/#compute-pass-encoder).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34237,"byte_end":34296,"line_start":1016,"line_end":1016,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1755},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34993,"byte_end":35012,"line_start":1035,"line_end":1035,"column_start":12,"column_end":31},"name":"RenderBundleEncoder","qualname":"::RenderBundleEncoder","value":"RenderBundleEncoder {  }","parent":null,"children":[{"krate":0,"index":1757},{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760}],"decl_id":null,"docs":" Encodes a series of GPU operations into a reusable \"render bundle\".","sig":null,"attributes":[{"value":"/ Encodes a series of GPU operations into a reusable \"render bundle\".","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34421,"byte_end":34492,"line_start":1023,"line_end":1023,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34493,"byte_end":34496,"line_start":1024,"line_end":1024,"column_start":1,"column_end":4}},{"value":"/ It only supports a handful of render commands, but it makes them reusable.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34497,"byte_end":34575,"line_start":1025,"line_end":1025,"column_start":1,"column_end":79}},{"value":"/ It can be created with [`Device::create_render_bundle_encoder`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34576,"byte_end":34644,"line_start":1026,"line_end":1026,"column_start":1,"column_end":69}},{"value":"/ It can be executed onto a [`CommandEncoder`] using [`RenderPass::execute_bundles`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34645,"byte_end":34732,"line_start":1027,"line_end":1027,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34733,"byte_end":34736,"line_start":1028,"line_end":1028,"column_start":1,"column_end":4}},{"value":"/ Executing a [`RenderBundle`] is often more efficient than issuing the underlying commands","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34737,"byte_end":34830,"line_start":1029,"line_end":1029,"column_start":1,"column_end":94}},{"value":"/ manually.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34831,"byte_end":34844,"line_start":1030,"line_end":1030,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34845,"byte_end":34848,"line_start":1031,"line_end":1031,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPURenderBundleEncoder`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34849,"byte_end":34902,"line_start":1032,"line_end":1032,"column_start":1,"column_end":54}},{"value":"/ https://gpuweb.github.io/gpuweb/#gpurenderbundleencoder).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":34903,"byte_end":34964,"line_start":1033,"line_end":1033,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":1764},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":35776,"byte_end":35788,"line_start":1054,"line_end":1054,"column_start":12,"column_end":24},"name":"RenderBundle","qualname":"::RenderBundle","value":"RenderBundle {  }","parent":null,"children":[{"krate":0,"index":1765},{"krate":0,"index":1766}],"decl_id":null,"docs":" Pre-prepared reusable bundle of GPU operations.","sig":null,"attributes":[{"value":"/ Pre-prepared reusable bundle of GPU operations.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":35265,"byte_end":35316,"line_start":1044,"line_end":1044,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":35317,"byte_end":35320,"line_start":1045,"line_end":1045,"column_start":1,"column_end":4}},{"value":"/ It only supports a handful of render commands, but it makes them reusable. Executing a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":35321,"byte_end":35411,"line_start":1046,"line_end":1046,"column_start":1,"column_end":91}},{"value":"/ [`RenderBundle`] is often more efficient than issuing the underlying commands manually.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":35412,"byte_end":35503,"line_start":1047,"line_end":1047,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":35504,"byte_end":35507,"line_start":1048,"line_end":1048,"column_start":1,"column_end":4}},{"value":"/ It can be created by use of a [`RenderBundleEncoder`], and executed onto a [`CommandEncoder`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":35508,"byte_end":35605,"line_start":1049,"line_end":1049,"column_start":1,"column_end":98}},{"value":"/ using [`RenderPass::execute_bundles`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":35606,"byte_end":35648,"line_start":1050,"line_end":1050,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":35649,"byte_end":35652,"line_start":1051,"line_end":1051,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPURenderBundle`](https://gpuweb.github.io/gpuweb/#render-bundle).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":35653,"byte_end":35747,"line_start":1052,"line_end":1052,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36206,"byte_end":36214,"line_start":1072,"line_end":1072,"column_start":12,"column_end":20},"name":"QuerySet","qualname":"::QuerySet","value":"QuerySet {  }","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"decl_id":null,"docs":" Handle to a query set.","sig":null,"attributes":[{"value":"/ Handle to a query set.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36017,"byte_end":36043,"line_start":1067,"line_end":1067,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36044,"byte_end":36047,"line_start":1068,"line_end":1068,"column_start":1,"column_end":4}},{"value":"/ It can be created with [`Device::create_query_set`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36048,"byte_end":36104,"line_start":1069,"line_end":1069,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36105,"byte_end":36108,"line_start":1070,"line_end":1070,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUQuerySet`](https://gpuweb.github.io/gpuweb/#queryset).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36109,"byte_end":36194,"line_start":1071,"line_end":1071,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":1769},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36859,"byte_end":36864,"line_start":1093,"line_end":1093,"column_start":12,"column_end":17},"name":"Queue","qualname":"::Queue","value":"Queue {  }","parent":null,"children":[{"krate":0,"index":1770},{"krate":0,"index":1771}],"decl_id":null,"docs":" Handle to a command queue on a device.","sig":null,"attributes":[{"value":"/ Handle to a command queue on a device.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36431,"byte_end":36473,"line_start":1085,"line_end":1085,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36474,"byte_end":36477,"line_start":1086,"line_end":1086,"column_start":1,"column_end":4}},{"value":"/ A `Queue` executes recorded [`CommandBuffer`] objects and provides convenience methods","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36478,"byte_end":36568,"line_start":1087,"line_end":1087,"column_start":1,"column_end":91}},{"value":"/ for writing to [buffers](Queue::write_buffer) and [textures](Queue::write_texture).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36569,"byte_end":36656,"line_start":1088,"line_end":1088,"column_start":1,"column_end":88}},{"value":"/ It can be created along with a [`Device`] by calling [`Adapter::request_device`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36657,"byte_end":36742,"line_start":1089,"line_end":1089,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36743,"byte_end":36746,"line_start":1090,"line_end":1090,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUQueue`](https://gpuweb.github.io/gpuweb/#gpu-queue).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36747,"byte_end":36830,"line_start":1091,"line_end":1091,"column_start":1,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1776},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37374,"byte_end":37380,"line_start":1109,"line_end":1109,"column_start":5,"column_end":11},"name":"Buffer","qualname":"::BindingResource::Buffer","value":"BindingResource::Buffer(BufferBinding)","parent":{"krate":0,"index":1774},"children":[],"decl_id":null,"docs":" Binding is backed by a buffer.","sig":null,"attributes":[{"value":"/ Binding is backed by a buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37170,"byte_end":37204,"line_start":1105,"line_end":1105,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37209,"byte_end":37212,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BufferBindingType::Uniform`] and [`wgt::BufferBindingType::Storage`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37217,"byte_end":37311,"line_start":1107,"line_end":1107,"column_start":5,"column_end":99}},{"value":"/ with [`BindGroupLayoutEntry::count`] set to None.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37316,"byte_end":37369,"line_start":1108,"line_end":1108,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1779},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37710,"byte_end":37721,"line_start":1116,"line_end":1116,"column_start":5,"column_end":16},"name":"BufferArray","qualname":"::BindingResource::BufferArray","value":"BindingResource::BufferArray(&'a [BufferBinding])","parent":{"krate":0,"index":1774},"children":[],"decl_id":null,"docs":" Binding is backed by an array of buffers.","sig":null,"attributes":[{"value":"/ Binding is backed by an array of buffers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37405,"byte_end":37450,"line_start":1110,"line_end":1110,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37455,"byte_end":37458,"line_start":1111,"line_end":1111,"column_start":5,"column_end":8}},{"value":"/ [`Features::BUFFER_BINDING_ARRAY`] must be supported to use this feature.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37463,"byte_end":37540,"line_start":1112,"line_end":1112,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37545,"byte_end":37548,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BufferBindingType::Uniform`] and [`wgt::BufferBindingType::Storage`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37553,"byte_end":37647,"line_start":1114,"line_end":1114,"column_start":5,"column_end":99}},{"value":"/ with [`BindGroupLayoutEntry::count`] set to Some.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37652,"byte_end":37705,"line_start":1115,"line_end":1115,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1782},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37893,"byte_end":37900,"line_start":1120,"line_end":1120,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::BindingResource::Sampler","value":"BindingResource::Sampler(&'a Sampler)","parent":{"krate":0,"index":1774},"children":[],"decl_id":null,"docs":" Binding is a sampler.","sig":null,"attributes":[{"value":"/ Binding is a sampler.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37752,"byte_end":37777,"line_start":1117,"line_end":1117,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37782,"byte_end":37785,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BindingType::Sampler`] with [`BindGroupLayoutEntry::count`] set to None.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37790,"byte_end":37888,"line_start":1119,"line_end":1119,"column_start":5,"column_end":103}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38180,"byte_end":38192,"line_start":1127,"line_end":1127,"column_start":5,"column_end":17},"name":"SamplerArray","qualname":"::BindingResource::SamplerArray","value":"BindingResource::SamplerArray(&'a [&'a Sampler])","parent":{"krate":0,"index":1774},"children":[],"decl_id":null,"docs":" Binding is backed by an array of samplers.","sig":null,"attributes":[{"value":"/ Binding is backed by an array of samplers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37919,"byte_end":37965,"line_start":1121,"line_end":1121,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37970,"byte_end":37973,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ [`Features::TEXTURE_BINDING_ARRAY`] must be supported to use this feature.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37978,"byte_end":38056,"line_start":1123,"line_end":1123,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38061,"byte_end":38064,"line_start":1124,"line_end":1124,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BindingType::Sampler`] with [`BindGroupLayoutEntry::count`] set","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38069,"byte_end":38158,"line_start":1125,"line_end":1125,"column_start":5,"column_end":94}},{"value":"/ to Some.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38163,"byte_end":38175,"line_start":1126,"line_end":1126,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1788},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38417,"byte_end":38428,"line_start":1132,"line_end":1132,"column_start":5,"column_end":16},"name":"TextureView","qualname":"::BindingResource::TextureView","value":"BindingResource::TextureView(&'a TextureView)","parent":{"krate":0,"index":1774},"children":[],"decl_id":null,"docs":" Binding is backed by a texture.","sig":null,"attributes":[{"value":"/ Binding is backed by a texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38217,"byte_end":38252,"line_start":1128,"line_end":1128,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38257,"byte_end":38260,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BindingType::Texture`] and [`wgt::BindingType::StorageTexture`] with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38265,"byte_end":38359,"line_start":1130,"line_end":1130,"column_start":5,"column_end":99}},{"value":"/ [`BindGroupLayoutEntry::count`] set to None.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38364,"byte_end":38412,"line_start":1131,"line_end":1131,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1791},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38753,"byte_end":38769,"line_start":1139,"line_end":1139,"column_start":5,"column_end":21},"name":"TextureViewArray","qualname":"::BindingResource::TextureViewArray","value":"BindingResource::TextureViewArray(&'a [&'a TextureView])","parent":{"krate":0,"index":1774},"children":[],"decl_id":null,"docs":" Binding is backed by an array of textures.","sig":null,"attributes":[{"value":"/ Binding is backed by an array of textures.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38451,"byte_end":38497,"line_start":1133,"line_end":1133,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38502,"byte_end":38505,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ [`Features::TEXTURE_BINDING_ARRAY`] must be supported to use this feature.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38510,"byte_end":38588,"line_start":1135,"line_end":1135,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38593,"byte_end":38596,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BindingType::Texture`] and [`wgt::BindingType::StorageTexture`] with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38601,"byte_end":38695,"line_start":1137,"line_end":1137,"column_start":5,"column_end":99}},{"value":"/ [`BindGroupLayoutEntry::count`] set to Some.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38700,"byte_end":38748,"line_start":1138,"line_end":1138,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":1774},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37144,"byte_end":37159,"line_start":1104,"line_end":1104,"column_start":10,"column_end":25},"name":"BindingResource","qualname":"::BindingResource","value":"pub enum BindingResource<'a> {\n    Buffer(BufferBinding),\n    BufferArray(&'a [BufferBinding]),\n    Sampler(&'a Sampler),\n    SamplerArray(&'a [&'a Sampler]),\n    TextureView(&'a TextureView),\n    TextureViewArray(&'a [&'a TextureView]),\n}","parent":null,"children":[{"krate":0,"index":1776},{"krate":0,"index":1779},{"krate":0,"index":1782},{"krate":0,"index":1785},{"krate":0,"index":1788},{"krate":0,"index":1791}],"decl_id":null,"docs":" Resource that can be bound to a pipeline.","sig":null,"attributes":[{"value":"/ Resource that can be bound to a pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36924,"byte_end":36969,"line_start":1098,"line_end":1098,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36970,"byte_end":36973,"line_start":1099,"line_end":1099,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUBindingResource`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36974,"byte_end":37023,"line_start":1100,"line_end":1100,"column_start":1,"column_end":50}},{"value":"/ https://gpuweb.github.io/gpuweb/#typedefdef-gpubindingresource).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37024,"byte_end":37092,"line_start":1101,"line_end":1101,"column_start":1,"column_end":69}},{"value":"non_exhaustive","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":37093,"byte_end":37110,"line_start":1102,"line_end":1102,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38995,"byte_end":39008,"line_start":1147,"line_end":1147,"column_start":12,"column_end":25},"name":"BufferBinding","qualname":"::BufferBinding","value":"BufferBinding { buffer, offset, size }","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803},{"krate":0,"index":1804}],"decl_id":null,"docs":" Describes the segment of a buffer to bind.","sig":null,"attributes":[{"value":"/ Describes the segment of a buffer to bind.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38797,"byte_end":38843,"line_start":1142,"line_end":1142,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38844,"byte_end":38847,"line_start":1143,"line_end":1143,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUBufferBinding`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38848,"byte_end":38895,"line_start":1144,"line_end":1144,"column_start":1,"column_end":48}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpubufferbinding).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":38896,"byte_end":38959,"line_start":1145,"line_end":1145,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39051,"byte_end":39057,"line_start":1149,"line_end":1149,"column_start":9,"column_end":15},"name":"buffer","qualname":"::BufferBinding::buffer","value":"&'a Buffer","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" The buffer to bind.\n","sig":null,"attributes":[{"value":"/ The buffer to bind.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39019,"byte_end":39042,"line_start":1148,"line_end":1148,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1803},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39421,"byte_end":39427,"line_start":1155,"line_end":1155,"column_start":9,"column_end":15},"name":"offset","qualname":"::BufferBinding::offset","value":"u64","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Base offset of the buffer. For bindings with `dynamic == true`, this offset\n will be added to the dynamic offset provided in [`RenderPass::set_bind_group`].","sig":null,"attributes":[{"value":"/ Base offset of the buffer. For bindings with `dynamic == true`, this offset","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39075,"byte_end":39154,"line_start":1150,"line_end":1150,"column_start":5,"column_end":84}},{"value":"/ will be added to the dynamic offset provided in [`RenderPass::set_bind_group`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39159,"byte_end":39242,"line_start":1151,"line_end":1151,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39247,"byte_end":39250,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ The offset has to be aligned to [`Limits::min_uniform_buffer_offset_alignment`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39255,"byte_end":39338,"line_start":1153,"line_end":1153,"column_start":5,"column_end":88}},{"value":"/ or [`Limits::min_storage_buffer_offset_alignment`] appropriately.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39343,"byte_end":39412,"line_start":1154,"line_end":1154,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1804},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39525,"byte_end":39529,"line_start":1157,"line_end":1157,"column_start":9,"column_end":13},"name":"size","qualname":"::BufferBinding::size","value":"std::option::Option<std::num::NonZeroU64>","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":" Size of the binding, or `None` for using the rest of the buffer.\n","sig":null,"attributes":[{"value":"/ Size of the binding, or `None` for using the rest of the buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39448,"byte_end":39516,"line_start":1156,"line_end":1156,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40048,"byte_end":40053,"line_start":1170,"line_end":1170,"column_start":5,"column_end":10},"name":"Clear","qualname":"::LoadOp::Clear","value":"LoadOp::Clear(V)","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":" Clear with a specified value.\n","sig":null,"attributes":[{"value":"/ Clear with a specified value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40010,"byte_end":40043,"line_start":1169,"line_end":1169,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1816},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40088,"byte_end":40092,"line_start":1172,"line_end":1172,"column_start":5,"column_end":9},"name":"Load","qualname":"::LoadOp::Load","value":"LoadOp::Load","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":" Load from memory.\n","sig":null,"attributes":[{"value":"/ Load from memory.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40062,"byte_end":40083,"line_start":1171,"line_end":1171,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39994,"byte_end":40000,"line_start":1168,"line_end":1168,"column_start":10,"column_end":16},"name":"LoadOp","qualname":"::LoadOp","value":"pub enum LoadOp<V> { Clear(V), Load, }","parent":null,"children":[{"krate":0,"index":1813},{"krate":0,"index":1816}],"decl_id":null,"docs":" Operation to perform to the output attachment at the start of a renderpass.","sig":null,"attributes":[{"value":"/ Operation to perform to the output attachment at the start of a renderpass.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39554,"byte_end":39633,"line_start":1160,"line_end":1160,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39634,"byte_end":39637,"line_start":1161,"line_end":1161,"column_start":1,"column_end":4}},{"value":"/ The render target must be cleared at least once before its content is loaded.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39638,"byte_end":39719,"line_start":1162,"line_end":1162,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39720,"byte_end":39723,"line_start":1163,"line_end":1163,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPULoadOp`](https://gpuweb.github.io/gpuweb/#enumdef-gpuloadop).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":39724,"byte_end":39816,"line_start":1164,"line_end":1164,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":1841},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40457,"byte_end":40467,"line_start":1185,"line_end":1185,"column_start":12,"column_end":22},"name":"Operations","qualname":"::Operations","value":"Operations { load, store }","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844}],"decl_id":null,"docs":" Pair of load and store operations for an attachment aspect.\n","sig":null,"attributes":[{"value":"/ Pair of load and store operations for an attachment aspect.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40214,"byte_end":40277,"line_start":1181,"line_end":1181,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":1843},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40538,"byte_end":40542,"line_start":1187,"line_end":1187,"column_start":9,"column_end":13},"name":"load","qualname":"::Operations::load","value":"LoadOp<V>","parent":{"krate":0,"index":1841},"children":[],"decl_id":null,"docs":" How data should be read through this attachment.\n","sig":null,"attributes":[{"value":"/ How data should be read through this attachment.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40477,"byte_end":40529,"line_start":1186,"line_end":1186,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1844},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40628,"byte_end":40633,"line_start":1189,"line_end":1189,"column_start":9,"column_end":14},"name":"store","qualname":"::Operations::store","value":"bool","parent":{"krate":0,"index":1841},"children":[],"decl_id":null,"docs":" Whether data will be written to through this attachment.\n","sig":null,"attributes":[{"value":"/ Whether data will be written to through this attachment.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40559,"byte_end":40619,"line_start":1188,"line_end":1188,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1868},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41070,"byte_end":41095,"line_start":1208,"line_end":1208,"column_start":12,"column_end":37},"name":"RenderPassColorAttachment","qualname":"::RenderPassColorAttachment","value":"RenderPassColorAttachment { view, resolve_target, ops }","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872}],"decl_id":null,"docs":" Describes a color attachment to a [`RenderPass`].","sig":null,"attributes":[{"value":"/ Describes a color attachment to a [`RenderPass`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40813,"byte_end":40866,"line_start":1201,"line_end":1201,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40867,"byte_end":40870,"line_start":1202,"line_end":1202,"column_start":1,"column_end":4}},{"value":"/ For use with [`RenderPassDescriptor`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40871,"byte_end":40913,"line_start":1203,"line_end":1203,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40914,"byte_end":40917,"line_start":1204,"line_end":1204,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPURenderPassColorAttachment`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40918,"byte_end":40977,"line_start":1205,"line_end":1205,"column_start":1,"column_end":60}},{"value":"/ https://gpuweb.github.io/gpuweb/#color-attachments).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40978,"byte_end":41034,"line_start":1206,"line_end":1206,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1870},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41154,"byte_end":41158,"line_start":1210,"line_end":1210,"column_start":9,"column_end":13},"name":"view","qualname":"::RenderPassColorAttachment::view","value":"&'tex TextureView","parent":{"krate":0,"index":1868},"children":[],"decl_id":null,"docs":" The view to use as an attachment.\n","sig":null,"attributes":[{"value":"/ The view to use as an attachment.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41108,"byte_end":41145,"line_start":1209,"line_end":1209,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1871},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41268,"byte_end":41282,"line_start":1212,"line_end":1212,"column_start":9,"column_end":23},"name":"resolve_target","qualname":"::RenderPassColorAttachment::resolve_target","value":"std::option::Option<&'tex TextureView>","parent":{"krate":0,"index":1868},"children":[],"decl_id":null,"docs":" The view that will receive the resolved output if multisampling is used.\n","sig":null,"attributes":[{"value":"/ The view that will receive the resolved output if multisampling is used.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41183,"byte_end":41259,"line_start":1211,"line_end":1211,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1872},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41387,"byte_end":41390,"line_start":1214,"line_end":1214,"column_start":9,"column_end":12},"name":"ops","qualname":"::RenderPassColorAttachment::ops","value":"Operations<wgpu_types::Color>","parent":{"krate":0,"index":1868},"children":[],"decl_id":null,"docs":" What operations will be performed on this color attachment.\n","sig":null,"attributes":[{"value":"/ What operations will be performed on this color attachment.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41315,"byte_end":41378,"line_start":1213,"line_end":1213,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1879},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41694,"byte_end":41726,"line_start":1224,"line_end":1224,"column_start":12,"column_end":44},"name":"RenderPassDepthStencilAttachment","qualname":"::RenderPassDepthStencilAttachment","value":"RenderPassDepthStencilAttachment { view, depth_ops, stencil_ops }","parent":null,"children":[{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1883}],"decl_id":null,"docs":" Describes a depth/stencil attachment to a [`RenderPass`].","sig":null,"attributes":[{"value":"/ Describes a depth/stencil attachment to a [`RenderPass`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41414,"byte_end":41475,"line_start":1217,"line_end":1217,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41476,"byte_end":41479,"line_start":1218,"line_end":1218,"column_start":1,"column_end":4}},{"value":"/ For use with [`RenderPassDescriptor`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41480,"byte_end":41522,"line_start":1219,"line_end":1219,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41523,"byte_end":41526,"line_start":1220,"line_end":1220,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPURenderPassDepthStencilAttachment`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41527,"byte_end":41593,"line_start":1221,"line_end":1221,"column_start":1,"column_end":67}},{"value":"/ https://gpuweb.github.io/gpuweb/#depth-stencil-attachments).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41594,"byte_end":41658,"line_start":1222,"line_end":1222,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1881},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41785,"byte_end":41789,"line_start":1226,"line_end":1226,"column_start":9,"column_end":13},"name":"view","qualname":"::RenderPassDepthStencilAttachment::view","value":"&'tex TextureView","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":" The view to use as an attachment.\n","sig":null,"attributes":[{"value":"/ The view to use as an attachment.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41739,"byte_end":41776,"line_start":1225,"line_end":1225,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1882},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41897,"byte_end":41906,"line_start":1228,"line_end":1228,"column_start":9,"column_end":18},"name":"depth_ops","qualname":"::RenderPassDepthStencilAttachment::depth_ops","value":"std::option::Option<Operations<f32>>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":" What operations will be performed on the depth part of the attachment.\n","sig":null,"attributes":[{"value":"/ What operations will be performed on the depth part of the attachment.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41814,"byte_end":41888,"line_start":1227,"line_end":1227,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1883},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42022,"byte_end":42033,"line_start":1230,"line_end":1230,"column_start":9,"column_end":20},"name":"stencil_ops","qualname":"::RenderPassDepthStencilAttachment::stencil_ops","value":"std::option::Option<Operations<u32>>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":" What operations will be performed on the stencil part of the attachment.\n","sig":null,"attributes":[{"value":"/ What operations will be performed on the stencil part of the attachment.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":41937,"byte_end":42013,"line_start":1229,"line_end":1229,"column_start":5,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42183,"byte_end":42188,"line_start":1236,"line_end":1236,"column_start":10,"column_end":15},"name":"Label","qualname":"::Label","value":"Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Object debugging label.\n","sig":null,"attributes":[{"value":"/ Object debugging label.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42146,"byte_end":42173,"line_start":1235,"line_end":1235,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1196},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42534,"byte_end":42555,"line_start":1244,"line_end":1244,"column_start":10,"column_end":31},"name":"RequestAdapterOptions","qualname":"::RequestAdapterOptions","value":"RequestAdapterOptionsBase<&'a Surface>","parent":null,"children":[],"decl_id":null,"docs":" Additional information required when requesting an adapter.","sig":null,"attributes":[{"value":"/ Additional information required when requesting an adapter.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42277,"byte_end":42340,"line_start":1238,"line_end":1238,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42341,"byte_end":42344,"line_start":1239,"line_end":1239,"column_start":1,"column_end":4}},{"value":"/ For use with [`Instance::request_adapter`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42345,"byte_end":42392,"line_start":1240,"line_end":1240,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42393,"byte_end":42396,"line_start":1241,"line_end":1241,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPURequestAdapterOptions`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42397,"byte_end":42452,"line_start":1242,"line_end":1242,"column_start":1,"column_end":56}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpurequestadapteroptions).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42453,"byte_end":42524,"line_start":1243,"line_end":1243,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":1198},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42811,"byte_end":42827,"line_start":1251,"line_end":1251,"column_start":10,"column_end":26},"name":"DeviceDescriptor","qualname":"::DeviceDescriptor","value":"wgt::DeviceDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`Device`].","sig":null,"attributes":[{"value":"/ Describes a [`Device`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42602,"byte_end":42629,"line_start":1245,"line_end":1245,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42630,"byte_end":42633,"line_start":1246,"line_end":1246,"column_start":1,"column_end":4}},{"value":"/ For use with [`Adapter::request_device`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42634,"byte_end":42679,"line_start":1247,"line_end":1247,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42680,"byte_end":42683,"line_start":1248,"line_end":1248,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUDeviceDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42684,"byte_end":42734,"line_start":1249,"line_end":1249,"column_start":1,"column_end":51}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpudevicedescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42735,"byte_end":42801,"line_start":1250,"line_end":1250,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":1200},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43075,"byte_end":43091,"line_start":1258,"line_end":1258,"column_start":10,"column_end":26},"name":"BufferDescriptor","qualname":"::BufferDescriptor","value":"wgt::BufferDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`Buffer`].","sig":null,"attributes":[{"value":"/ Describes a [`Buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42868,"byte_end":42895,"line_start":1252,"line_end":1252,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42896,"byte_end":42899,"line_start":1253,"line_end":1253,"column_start":1,"column_end":4}},{"value":"/ For use with [`Device::create_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42900,"byte_end":42943,"line_start":1254,"line_end":1254,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42944,"byte_end":42947,"line_start":1255,"line_end":1255,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUBufferDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42948,"byte_end":42998,"line_start":1256,"line_end":1256,"column_start":1,"column_end":51}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpubufferdescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":42999,"byte_end":43065,"line_start":1257,"line_end":1257,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":1202},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43372,"byte_end":43396,"line_start":1265,"line_end":1265,"column_start":10,"column_end":34},"name":"CommandEncoderDescriptor","qualname":"::CommandEncoderDescriptor","value":"wgt::CommandEncoderDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`CommandEncoder`].","sig":null,"attributes":[{"value":"/ Describes a [`CommandEncoder`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43132,"byte_end":43167,"line_start":1259,"line_end":1259,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43168,"byte_end":43171,"line_start":1260,"line_end":1260,"column_start":1,"column_end":4}},{"value":"/ For use with [`Device::create_command_encoder`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43172,"byte_end":43224,"line_start":1261,"line_end":1261,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43225,"byte_end":43228,"line_start":1262,"line_end":1262,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUCommandEncoderDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43229,"byte_end":43287,"line_start":1263,"line_end":1263,"column_start":1,"column_end":59}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpucommandencoderdescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43288,"byte_end":43362,"line_start":1264,"line_end":1264,"column_start":1,"column_end":75}}]},{"kind":"Type","id":{"krate":0,"index":1204},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43676,"byte_end":43698,"line_start":1272,"line_end":1272,"column_start":10,"column_end":32},"name":"RenderBundleDescriptor","qualname":"::RenderBundleDescriptor","value":"wgt::RenderBundleDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`RenderBundle`].","sig":null,"attributes":[{"value":"/ Describes a [`RenderBundle`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43445,"byte_end":43478,"line_start":1266,"line_end":1266,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43479,"byte_end":43482,"line_start":1267,"line_end":1267,"column_start":1,"column_end":4}},{"value":"/ For use with [`RenderBundleEncoder::finish`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43483,"byte_end":43532,"line_start":1268,"line_end":1268,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43533,"byte_end":43536,"line_start":1269,"line_end":1269,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPURenderBundleDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43537,"byte_end":43593,"line_start":1270,"line_end":1270,"column_start":1,"column_end":57}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpurenderbundledescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43594,"byte_end":43666,"line_start":1271,"line_end":1271,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":1206},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43956,"byte_end":43973,"line_start":1279,"line_end":1279,"column_start":10,"column_end":27},"name":"TextureDescriptor","qualname":"::TextureDescriptor","value":"wgt::TextureDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`Texture`].","sig":null,"attributes":[{"value":"/ Describes a [`Texture`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43745,"byte_end":43773,"line_start":1273,"line_end":1273,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43774,"byte_end":43777,"line_start":1274,"line_end":1274,"column_start":1,"column_end":4}},{"value":"/ For use with [`Device::create_texture`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43778,"byte_end":43822,"line_start":1275,"line_end":1275,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43823,"byte_end":43826,"line_start":1276,"line_end":1276,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUTextureDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43827,"byte_end":43878,"line_start":1277,"line_end":1277,"column_start":1,"column_end":52}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gputexturedescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":43879,"byte_end":43946,"line_start":1278,"line_end":1278,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1208},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44231,"byte_end":44249,"line_start":1286,"line_end":1286,"column_start":10,"column_end":28},"name":"QuerySetDescriptor","qualname":"::QuerySetDescriptor","value":"wgt::QuerySetDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`QuerySet`].","sig":null,"attributes":[{"value":"/ Describes a [`QuerySet`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44015,"byte_end":44044,"line_start":1280,"line_end":1280,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44045,"byte_end":44048,"line_start":1281,"line_end":1281,"column_start":1,"column_end":4}},{"value":"/ For use with [`Device::create_query_set`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44049,"byte_end":44095,"line_start":1282,"line_end":1282,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44096,"byte_end":44099,"line_start":1283,"line_end":1283,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUQuerySetDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44100,"byte_end":44152,"line_start":1284,"line_end":1284,"column_start":1,"column_end":53}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpuquerysetdescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44153,"byte_end":44221,"line_start":1285,"line_end":1285,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":1213},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44410,"byte_end":44418,"line_start":1289,"line_end":1289,"column_start":10,"column_end":18},"name":"Maintain","qualname":"::Maintain","value":"wgt::Maintain<SubmissionIndex>","parent":null,"children":[],"decl_id":null,"docs":" Passed to [`Device::poll`] to control how and if it should block.\n","sig":null,"attributes":[{"value":"/ Passed to [`Device::poll`] to control how and if it should block.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44331,"byte_end":44400,"line_start":1288,"line_end":1288,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1890},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44721,"byte_end":44742,"line_start":1298,"line_end":1298,"column_start":12,"column_end":33},"name":"TextureViewDescriptor","qualname":"::TextureViewDescriptor","value":"TextureViewDescriptor { label, format, dimension, aspect, base_mip_level, mip_level_count, base_array_layer, array_layer_count }","parent":null,"children":[{"krate":0,"index":1892},{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897},{"krate":0,"index":1898},{"krate":0,"index":1899}],"decl_id":null,"docs":" Describes a [`TextureView`].","sig":null,"attributes":[{"value":"/ Describes a [`TextureView`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44454,"byte_end":44486,"line_start":1291,"line_end":1291,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44487,"byte_end":44490,"line_start":1292,"line_end":1292,"column_start":1,"column_end":4}},{"value":"/ For use with [`Texture::create_view`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44491,"byte_end":44533,"line_start":1293,"line_end":1293,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44534,"byte_end":44537,"line_start":1294,"line_end":1294,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUTextureViewDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44538,"byte_end":44593,"line_start":1295,"line_end":1295,"column_start":1,"column_end":56}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gputextureviewdescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44594,"byte_end":44665,"line_start":1296,"line_end":1296,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":1892},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44863,"byte_end":44868,"line_start":1300,"line_end":1300,"column_start":9,"column_end":14},"name":"label","qualname":"::TextureViewDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1890},"children":[],"decl_id":null,"docs":" Debug label of the texture view. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the texture view. This will show up in graphics debuggers for easy identification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44753,"byte_end":44854,"line_start":1299,"line_end":1299,"column_start":5,"column_end":106}}]},{"kind":"Field","id":{"krate":0,"index":1893},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45000,"byte_end":45006,"line_start":1302,"line_end":1302,"column_start":9,"column_end":15},"name":"format","qualname":"::TextureViewDescriptor::format","value":"std::option::Option<wgpu_types::TextureFormat>","parent":{"krate":0,"index":1890},"children":[],"decl_id":null,"docs":" Format of the texture view. At this time, it must be the same as the underlying format of the texture.\n","sig":null,"attributes":[{"value":"/ Format of the texture view. At this time, it must be the same as the underlying format of the texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":44885,"byte_end":44991,"line_start":1301,"line_end":1301,"column_start":5,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":1894},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45234,"byte_end":45243,"line_start":1305,"line_end":1305,"column_start":9,"column_end":18},"name":"dimension","qualname":"::TextureViewDescriptor::dimension","value":"std::option::Option<wgpu_types::TextureViewDimension>","parent":{"krate":0,"index":1890},"children":[],"decl_id":null,"docs":" The dimension of the texture view. For 1D textures, this must be `1D`. For 2D textures it must be one of\n `D2`, `D2Array`, `Cube`, and `CubeArray`. For 3D textures it must be `3D`\n","sig":null,"attributes":[{"value":"/ The dimension of the texture view. For 1D textures, this must be `1D`. For 2D textures it must be one of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45035,"byte_end":45143,"line_start":1303,"line_end":1303,"column_start":5,"column_end":113}},{"value":"/ `D2`, `D2Array`, `Cube`, and `CubeArray`. For 3D textures it must be `3D`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45148,"byte_end":45225,"line_start":1304,"line_end":1304,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1895},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45361,"byte_end":45367,"line_start":1307,"line_end":1307,"column_start":9,"column_end":15},"name":"aspect","qualname":"::TextureViewDescriptor::aspect","value":"wgpu_types::TextureAspect","parent":{"krate":0,"index":1890},"children":[],"decl_id":null,"docs":" Aspect of the texture. Color textures must be [`TextureAspect::All`].\n","sig":null,"attributes":[{"value":"/ Aspect of the texture. Color textures must be [`TextureAspect::All`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45279,"byte_end":45352,"line_start":1306,"line_end":1306,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1896},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45416,"byte_end":45430,"line_start":1309,"line_end":1309,"column_start":9,"column_end":23},"name":"base_mip_level","qualname":"::TextureViewDescriptor::base_mip_level","value":"u32","parent":{"krate":0,"index":1890},"children":[],"decl_id":null,"docs":" Base mip level.\n","sig":null,"attributes":[{"value":"/ Base mip level.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45388,"byte_end":45407,"line_start":1308,"line_end":1308,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1897},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45673,"byte_end":45688,"line_start":1313,"line_end":1313,"column_start":9,"column_end":24},"name":"mip_level_count","qualname":"::TextureViewDescriptor::mip_level_count","value":"std::option::Option<std::num::NonZeroU32>","parent":{"krate":0,"index":1890},"children":[],"decl_id":null,"docs":" Mip level count.\n If `Some(count)`, `base_mip_level + count` must be less or equal to underlying texture mip count.\n If `None`, considered to include the rest of the mipmap levels, but at least 1 in total.\n","sig":null,"attributes":[{"value":"/ Mip level count.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45441,"byte_end":45461,"line_start":1310,"line_end":1310,"column_start":5,"column_end":25}},{"value":"/ If `Some(count)`, `base_mip_level + count` must be less or equal to underlying texture mip count.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45466,"byte_end":45567,"line_start":1311,"line_end":1311,"column_start":5,"column_end":106}},{"value":"/ If `None`, considered to include the rest of the mipmap levels, but at least 1 in total.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45572,"byte_end":45664,"line_start":1312,"line_end":1312,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":1898},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45744,"byte_end":45760,"line_start":1315,"line_end":1315,"column_start":9,"column_end":25},"name":"base_array_layer","qualname":"::TextureViewDescriptor::base_array_layer","value":"u32","parent":{"krate":0,"index":1890},"children":[],"decl_id":null,"docs":" Base array layer.\n","sig":null,"attributes":[{"value":"/ Base array layer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45714,"byte_end":45735,"line_start":1314,"line_end":1314,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1899},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45998,"byte_end":46015,"line_start":1319,"line_end":1319,"column_start":9,"column_end":26},"name":"array_layer_count","qualname":"::TextureViewDescriptor::array_layer_count","value":"std::option::Option<std::num::NonZeroU32>","parent":{"krate":0,"index":1890},"children":[],"decl_id":null,"docs":" Layer count.\n If `Some(count)`, `base_array_layer + count` must be less or equal to the underlying array count.\n If `None`, considered to include the rest of the array layers, but at least 1 in total.\n","sig":null,"attributes":[{"value":"/ Layer count.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45771,"byte_end":45787,"line_start":1316,"line_end":1316,"column_start":5,"column_end":21}},{"value":"/ If `Some(count)`, `base_array_layer + count` must be less or equal to the underlying array count.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45792,"byte_end":45893,"line_start":1317,"line_end":1317,"column_start":5,"column_end":106}},{"value":"/ If `None`, considered to include the rest of the array layers, but at least 1 in total.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":45898,"byte_end":45989,"line_start":1318,"line_end":1318,"column_start":5,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":1915},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46315,"byte_end":46339,"line_start":1329,"line_end":1329,"column_start":12,"column_end":36},"name":"PipelineLayoutDescriptor","qualname":"::PipelineLayoutDescriptor","value":"PipelineLayoutDescriptor { label, bind_group_layouts, push_constant_ranges }","parent":null,"children":[{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919}],"decl_id":null,"docs":" Describes a [`PipelineLayout`].","sig":null,"attributes":[{"value":"/ Describes a [`PipelineLayout`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46040,"byte_end":46075,"line_start":1322,"line_end":1322,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46076,"byte_end":46079,"line_start":1323,"line_end":1323,"column_start":1,"column_end":4}},{"value":"/ For use with [`Device::create_pipeline_layout`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46080,"byte_end":46132,"line_start":1324,"line_end":1324,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46133,"byte_end":46136,"line_start":1325,"line_end":1325,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUPipelineLayoutDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46137,"byte_end":46195,"line_start":1326,"line_end":1326,"column_start":1,"column_end":59}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpupipelinelayoutdescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46196,"byte_end":46270,"line_start":1327,"line_end":1327,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1917},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46463,"byte_end":46468,"line_start":1331,"line_end":1331,"column_start":9,"column_end":14},"name":"label","qualname":"::PipelineLayoutDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1915},"children":[],"decl_id":null,"docs":" Debug label of the pipeline layout. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the pipeline layout. This will show up in graphics debuggers for easy identification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46350,"byte_end":46454,"line_start":1330,"line_end":1330,"column_start":5,"column_end":109}}]},{"kind":"Field","id":{"krate":0,"index":1918},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46665,"byte_end":46683,"line_start":1334,"line_end":1334,"column_start":9,"column_end":27},"name":"bind_group_layouts","qualname":"::PipelineLayoutDescriptor::bind_group_layouts","value":"&'a [&'a BindGroupLayout]","parent":{"krate":0,"index":1915},"children":[],"decl_id":null,"docs":" Bind groups that this pipeline uses. The first entry will provide all the bindings for\n \"set = 0\", second entry will provide all the bindings for \"set = 1\" etc.\n","sig":null,"attributes":[{"value":"/ Bind groups that this pipeline uses. The first entry will provide all the bindings for","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46485,"byte_end":46575,"line_start":1332,"line_end":1332,"column_start":5,"column_end":95}},{"value":"/ \"set = 0\", second entry will provide all the bindings for \"set = 1\" etc.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46580,"byte_end":46656,"line_start":1333,"line_end":1333,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1919},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47045,"byte_end":47065,"line_start":1340,"line_end":1340,"column_start":9,"column_end":29},"name":"push_constant_ranges","qualname":"::PipelineLayoutDescriptor::push_constant_ranges","value":"&'a [wgpu_types::PushConstantRange]","parent":{"krate":0,"index":1915},"children":[],"decl_id":null,"docs":" Set of push constant ranges this pipeline uses. Each shader stage that uses push constants\n must define the range in push constant memory that corresponds to its single `layout(push_constant)`\n uniform block.","sig":null,"attributes":[{"value":"/ Set of push constant ranges this pipeline uses. Each shader stage that uses push constants","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46716,"byte_end":46810,"line_start":1335,"line_end":1335,"column_start":5,"column_end":99}},{"value":"/ must define the range in push constant memory that corresponds to its single `layout(push_constant)`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46815,"byte_end":46919,"line_start":1336,"line_end":1336,"column_start":5,"column_end":109}},{"value":"/ uniform block.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46924,"byte_end":46942,"line_start":1337,"line_end":1337,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46947,"byte_end":46950,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ If this array is non-empty, the [`Features::PUSH_CONSTANTS`] must be enabled.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":46955,"byte_end":47036,"line_start":1339,"line_end":1339,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":1929},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47343,"byte_end":47360,"line_start":1350,"line_end":1350,"column_start":12,"column_end":29},"name":"SamplerDescriptor","qualname":"::SamplerDescriptor","value":"SamplerDescriptor { label, address_mode_u, address_mode_v, address_mode_w, mag_filter, min_filter, mipmap_filter, lod_min_clamp, lod_max_clamp, compare, anisotropy_clamp, border_color }","parent":null,"children":[{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1942}],"decl_id":null,"docs":" Describes a [`Sampler`].","sig":null,"attributes":[{"value":"/ Describes a [`Sampler`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47095,"byte_end":47123,"line_start":1343,"line_end":1343,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47124,"byte_end":47127,"line_start":1344,"line_end":1344,"column_start":1,"column_end":4}},{"value":"/ For use with [`Device::create_sampler`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47128,"byte_end":47172,"line_start":1345,"line_end":1345,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47173,"byte_end":47176,"line_start":1346,"line_end":1346,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUSamplerDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47177,"byte_end":47228,"line_start":1347,"line_end":1347,"column_start":1,"column_end":52}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpusamplerdescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47229,"byte_end":47296,"line_start":1348,"line_end":1348,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":1931},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47476,"byte_end":47481,"line_start":1352,"line_end":1352,"column_start":9,"column_end":14},"name":"label","qualname":"::SamplerDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" Debug label of the sampler. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the sampler. This will show up in graphics debuggers for easy identification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47371,"byte_end":47467,"line_start":1351,"line_end":1351,"column_start":5,"column_end":101}}]},{"kind":"Field","id":{"krate":0,"index":1932},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47578,"byte_end":47592,"line_start":1354,"line_end":1354,"column_start":9,"column_end":23},"name":"address_mode_u","qualname":"::SamplerDescriptor::address_mode_u","value":"wgpu_types::AddressMode","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" How to deal with out of bounds accesses in the u (i.e. x) direction\n","sig":null,"attributes":[{"value":"/ How to deal with out of bounds accesses in the u (i.e. x) direction","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47498,"byte_end":47569,"line_start":1353,"line_end":1353,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1933},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47691,"byte_end":47705,"line_start":1356,"line_end":1356,"column_start":9,"column_end":23},"name":"address_mode_v","qualname":"::SamplerDescriptor::address_mode_v","value":"wgpu_types::AddressMode","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" How to deal with out of bounds accesses in the v (i.e. y) direction\n","sig":null,"attributes":[{"value":"/ How to deal with out of bounds accesses in the v (i.e. y) direction","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47611,"byte_end":47682,"line_start":1355,"line_end":1355,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1934},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47804,"byte_end":47818,"line_start":1358,"line_end":1358,"column_start":9,"column_end":23},"name":"address_mode_w","qualname":"::SamplerDescriptor::address_mode_w","value":"wgpu_types::AddressMode","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" How to deal with out of bounds accesses in the w (i.e. z) direction\n","sig":null,"attributes":[{"value":"/ How to deal with out of bounds accesses in the w (i.e. z) direction","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47724,"byte_end":47795,"line_start":1357,"line_end":1357,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1935},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47919,"byte_end":47929,"line_start":1360,"line_end":1360,"column_start":9,"column_end":19},"name":"mag_filter","qualname":"::SamplerDescriptor::mag_filter","value":"wgpu_types::FilterMode","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" How to filter the texture when it needs to be magnified (made larger)\n","sig":null,"attributes":[{"value":"/ How to filter the texture when it needs to be magnified (made larger)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47837,"byte_end":47910,"line_start":1359,"line_end":1359,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1936},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48029,"byte_end":48039,"line_start":1362,"line_end":1362,"column_start":9,"column_end":19},"name":"min_filter","qualname":"::SamplerDescriptor::min_filter","value":"wgpu_types::FilterMode","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" How to filter the texture when it needs to be minified (made smaller)\n","sig":null,"attributes":[{"value":"/ How to filter the texture when it needs to be minified (made smaller)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":47947,"byte_end":48020,"line_start":1361,"line_end":1361,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1937},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48106,"byte_end":48119,"line_start":1364,"line_end":1364,"column_start":9,"column_end":22},"name":"mipmap_filter","qualname":"::SamplerDescriptor::mipmap_filter","value":"wgpu_types::FilterMode","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" How to filter between mip map levels\n","sig":null,"attributes":[{"value":"/ How to filter between mip map levels","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48057,"byte_end":48097,"line_start":1363,"line_end":1363,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1938},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48197,"byte_end":48210,"line_start":1366,"line_end":1366,"column_start":9,"column_end":22},"name":"lod_min_clamp","qualname":"::SamplerDescriptor::lod_min_clamp","value":"f32","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" Minimum level of detail (i.e. mip level) to use\n","sig":null,"attributes":[{"value":"/ Minimum level of detail (i.e. mip level) to use","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48137,"byte_end":48188,"line_start":1365,"line_end":1365,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1939},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48281,"byte_end":48294,"line_start":1368,"line_end":1368,"column_start":9,"column_end":22},"name":"lod_max_clamp","qualname":"::SamplerDescriptor::lod_max_clamp","value":"f32","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" Maximum level of detail (i.e. mip level) to use\n","sig":null,"attributes":[{"value":"/ Maximum level of detail (i.e. mip level) to use","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48221,"byte_end":48272,"line_start":1367,"line_end":1367,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1940},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48403,"byte_end":48410,"line_start":1370,"line_end":1370,"column_start":9,"column_end":16},"name":"compare","qualname":"::SamplerDescriptor::compare","value":"std::option::Option<wgpu_types::CompareFunction>","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" If this is enabled, this is a comparison sampler using the given comparison function.\n","sig":null,"attributes":[{"value":"/ If this is enabled, this is a comparison sampler using the given comparison function.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48305,"byte_end":48394,"line_start":1369,"line_end":1369,"column_start":5,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":1941},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48487,"byte_end":48503,"line_start":1372,"line_end":1372,"column_start":9,"column_end":25},"name":"anisotropy_clamp","qualname":"::SamplerDescriptor::anisotropy_clamp","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" Valid values: 1, 2, 4, 8, and 16.\n","sig":null,"attributes":[{"value":"/ Valid values: 1, 2, 4, 8, and 16.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48441,"byte_end":48478,"line_start":1371,"line_end":1371,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1942},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48612,"byte_end":48624,"line_start":1374,"line_end":1374,"column_start":9,"column_end":21},"name":"border_color","qualname":"::SamplerDescriptor::border_color","value":"std::option::Option<wgpu_types::SamplerBorderColor>","parent":{"krate":0,"index":1929},"children":[],"decl_id":null,"docs":" Border color to use when address_mode is [`AddressMode::ClampToBorder`]\n","sig":null,"attributes":[{"value":"/ Border color to use when address_mode is [`AddressMode::ClampToBorder`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48528,"byte_end":48603,"line_start":1373,"line_end":1373,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1955},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49496,"byte_end":49510,"line_start":1402,"line_end":1402,"column_start":12,"column_end":26},"name":"BindGroupEntry","qualname":"::BindGroupEntry","value":"BindGroupEntry { binding, resource }","parent":null,"children":[{"krate":0,"index":1957},{"krate":0,"index":1958}],"decl_id":null,"docs":" An element of a [`BindGroupDescriptor`], consisting of a bindable resource\n and the slot to bind it to.","sig":null,"attributes":[{"value":"/ An element of a [`BindGroupDescriptor`], consisting of a bindable resource","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49232,"byte_end":49310,"line_start":1396,"line_end":1396,"column_start":1,"column_end":79}},{"value":"/ and the slot to bind it to.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49311,"byte_end":49342,"line_start":1397,"line_end":1397,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49343,"byte_end":49346,"line_start":1398,"line_end":1398,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUBindGroupEntry`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49347,"byte_end":49395,"line_start":1399,"line_end":1399,"column_start":1,"column_end":49}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpubindgroupentry).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49396,"byte_end":49460,"line_start":1400,"line_end":1400,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1957},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49671,"byte_end":49678,"line_start":1405,"line_end":1405,"column_start":9,"column_end":16},"name":"binding","qualname":"::BindGroupEntry::binding","value":"u32","parent":{"krate":0,"index":1955},"children":[],"decl_id":null,"docs":" Slot for which binding provides resource. Corresponds to an entry of the same\n binding index in the [`BindGroupLayoutDescriptor`].\n","sig":null,"attributes":[{"value":"/ Slot for which binding provides resource. Corresponds to an entry of the same","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49521,"byte_end":49602,"line_start":1403,"line_end":1403,"column_start":5,"column_end":86}},{"value":"/ binding index in the [`BindGroupLayoutDescriptor`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49607,"byte_end":49662,"line_start":1404,"line_end":1404,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1958},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49735,"byte_end":49743,"line_start":1407,"line_end":1407,"column_start":9,"column_end":17},"name":"resource","qualname":"::BindGroupEntry::resource","value":"BindingResource<'a>","parent":{"krate":0,"index":1955},"children":[],"decl_id":null,"docs":" Resource to attach to the binding\n","sig":null,"attributes":[{"value":"/ Resource to attach to the binding","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49689,"byte_end":49726,"line_start":1406,"line_end":1406,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1965},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50049,"byte_end":50068,"line_start":1417,"line_end":1417,"column_start":12,"column_end":31},"name":"BindGroupDescriptor","qualname":"::BindGroupDescriptor","value":"BindGroupDescriptor { label, layout, entries }","parent":null,"children":[{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969}],"decl_id":null,"docs":" Describes a group of bindings and the resources to be bound.","sig":null,"attributes":[{"value":"/ Describes a group of bindings and the resources to be bound.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49769,"byte_end":49833,"line_start":1410,"line_end":1410,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49834,"byte_end":49837,"line_start":1411,"line_end":1411,"column_start":1,"column_end":4}},{"value":"/ For use with [`Device::create_bind_group`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49838,"byte_end":49885,"line_start":1412,"line_end":1412,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49886,"byte_end":49889,"line_start":1413,"line_end":1413,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUBindGroupDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49890,"byte_end":49943,"line_start":1414,"line_end":1414,"column_start":1,"column_end":54}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpubindgroupdescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":49944,"byte_end":50013,"line_start":1415,"line_end":1415,"column_start":1,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1967},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50187,"byte_end":50192,"line_start":1419,"line_end":1419,"column_start":9,"column_end":14},"name":"label","qualname":"::BindGroupDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1965},"children":[],"decl_id":null,"docs":" Debug label of the bind group. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the bind group. This will show up in graphics debuggers for easy identification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50079,"byte_end":50178,"line_start":1418,"line_end":1418,"column_start":5,"column_end":104}}]},{"kind":"Field","id":{"krate":0,"index":1968},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50282,"byte_end":50288,"line_start":1421,"line_end":1421,"column_start":9,"column_end":15},"name":"layout","qualname":"::BindGroupDescriptor::layout","value":"&'a BindGroupLayout","parent":{"krate":0,"index":1965},"children":[],"decl_id":null,"docs":" The [`BindGroupLayout`] that corresponds to this bind group.\n","sig":null,"attributes":[{"value":"/ The [`BindGroupLayout`] that corresponds to this bind group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50209,"byte_end":50273,"line_start":1420,"line_end":1420,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1969},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50369,"byte_end":50376,"line_start":1423,"line_end":1423,"column_start":9,"column_end":16},"name":"entries","qualname":"::BindGroupDescriptor::entries","value":"&'a [BindGroupEntry<'a>]","parent":{"krate":0,"index":1965},"children":[],"decl_id":null,"docs":" The resources to bind to this bind group.\n","sig":null,"attributes":[{"value":"/ The resources to bind to this bind group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50315,"byte_end":50360,"line_start":1422,"line_end":1422,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1976},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50859,"byte_end":50879,"line_start":1436,"line_end":1436,"column_start":12,"column_end":32},"name":"RenderPassDescriptor","qualname":"::RenderPassDescriptor","value":"RenderPassDescriptor { label, color_attachments, depth_stencil_attachment }","parent":null,"children":[{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981}],"decl_id":null,"docs":" Describes the attachments of a render pass.","sig":null,"attributes":[{"value":"/ Describes the attachments of a render pass.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50407,"byte_end":50454,"line_start":1426,"line_end":1426,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50455,"byte_end":50458,"line_start":1427,"line_end":1427,"column_start":1,"column_end":4}},{"value":"/ For use with [`CommandEncoder::begin_render_pass`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50459,"byte_end":50514,"line_start":1428,"line_end":1428,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50515,"byte_end":50518,"line_start":1429,"line_end":1429,"column_start":1,"column_end":4}},{"value":"/ Note: separate lifetimes are needed because the texture views (`'tex`)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50519,"byte_end":50593,"line_start":1430,"line_end":1430,"column_start":1,"column_end":75}},{"value":"/ have to live as long as the pass is recorded, while everything else (`'desc`) doesn't.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50594,"byte_end":50684,"line_start":1431,"line_end":1431,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50685,"byte_end":50688,"line_start":1432,"line_end":1432,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPURenderPassDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50689,"byte_end":50743,"line_start":1433,"line_end":1433,"column_start":1,"column_end":55}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpurenderpassdescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50744,"byte_end":50814,"line_start":1434,"line_end":1434,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1979},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51008,"byte_end":51013,"line_start":1438,"line_end":1438,"column_start":9,"column_end":14},"name":"label","qualname":"::RenderPassDescriptor::label","value":"std::option::Option<&'desc str>","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" Debug label of the render pass. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the render pass. This will show up in graphics debuggers for easy identification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":50899,"byte_end":50999,"line_start":1437,"line_end":1437,"column_start":5,"column_end":105}}]},{"kind":"Field","id":{"krate":0,"index":1980},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51087,"byte_end":51104,"line_start":1440,"line_end":1440,"column_start":9,"column_end":26},"name":"color_attachments","qualname":"::RenderPassDescriptor::color_attachments","value":"&'desc [std::option::Option<RenderPassColorAttachment<'tex>>]","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" The color attachments of the render pass.\n","sig":null,"attributes":[{"value":"/ The color attachments of the render pass.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51033,"byte_end":51078,"line_start":1439,"line_end":1439,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1981},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51233,"byte_end":51257,"line_start":1442,"line_end":1442,"column_start":9,"column_end":33},"name":"depth_stencil_attachment","qualname":"::RenderPassDescriptor::depth_stencil_attachment","value":"std::option::Option<RenderPassDepthStencilAttachment<'tex>>","parent":{"krate":0,"index":1976},"children":[],"decl_id":null,"docs":" The depth and stencil attachment of the render pass, if any.\n","sig":null,"attributes":[{"value":"/ The depth and stencil attachment of the render pass, if any.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51160,"byte_end":51224,"line_start":1441,"line_end":1441,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1994},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51582,"byte_end":51600,"line_start":1452,"line_end":1452,"column_start":12,"column_end":30},"name":"VertexBufferLayout","qualname":"::VertexBufferLayout","value":"VertexBufferLayout { array_stride, step_mode, attributes }","parent":null,"children":[{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998}],"decl_id":null,"docs":" Describes how the vertex buffer is interpreted.","sig":null,"attributes":[{"value":"/ Describes how the vertex buffer is interpreted.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51310,"byte_end":51361,"line_start":1445,"line_end":1445,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51362,"byte_end":51365,"line_start":1446,"line_end":1446,"column_start":1,"column_end":4}},{"value":"/ For use in [`VertexState`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51366,"byte_end":51397,"line_start":1447,"line_end":1447,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51398,"byte_end":51401,"line_start":1448,"line_end":1448,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUVertexBufferLayout`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51402,"byte_end":51454,"line_start":1449,"line_end":1449,"column_start":1,"column_end":53}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpurenderpassdescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51455,"byte_end":51525,"line_start":1450,"line_end":1450,"column_start":1,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51678,"byte_end":51690,"line_start":1454,"line_end":1454,"column_start":9,"column_end":21},"name":"array_stride","qualname":"::VertexBufferLayout::array_stride","value":"u64","parent":{"krate":0,"index":1994},"children":[],"decl_id":null,"docs":" The stride, in bytes, between elements of this buffer.\n","sig":null,"attributes":[{"value":"/ The stride, in bytes, between elements of this buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51611,"byte_end":51669,"line_start":1453,"line_end":1453,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1997},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51774,"byte_end":51783,"line_start":1456,"line_end":1456,"column_start":9,"column_end":18},"name":"step_mode","qualname":"::VertexBufferLayout::step_mode","value":"wgpu_types::VertexStepMode","parent":{"krate":0,"index":1994},"children":[],"decl_id":null,"docs":" How often this vertex buffer is \"stepped\" forward.\n","sig":null,"attributes":[{"value":"/ How often this vertex buffer is \"stepped\" forward.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51711,"byte_end":51765,"line_start":1455,"line_end":1455,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1998},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51872,"byte_end":51882,"line_start":1458,"line_end":1458,"column_start":9,"column_end":19},"name":"attributes","qualname":"::VertexBufferLayout::attributes","value":"&'a [wgpu_types::VertexAttribute]","parent":{"krate":0,"index":1994},"children":[],"decl_id":null,"docs":" The list of attributes which comprise a single vertex.\n","sig":null,"attributes":[{"value":"/ The list of attributes which comprise a single vertex.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51805,"byte_end":51863,"line_start":1457,"line_end":1457,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2020},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52164,"byte_end":52175,"line_start":1468,"line_end":1468,"column_start":12,"column_end":23},"name":"VertexState","qualname":"::VertexState","value":"VertexState { module, entry_point, buffers }","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2024}],"decl_id":null,"docs":" Describes the vertex processing in a render pipeline.","sig":null,"attributes":[{"value":"/ Describes the vertex processing in a render pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51910,"byte_end":51967,"line_start":1461,"line_end":1461,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51968,"byte_end":51971,"line_start":1462,"line_end":1462,"column_start":1,"column_end":4}},{"value":"/ For use in [`RenderPipelineDescriptor`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":51972,"byte_end":52016,"line_start":1463,"line_end":1463,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52017,"byte_end":52020,"line_start":1464,"line_end":1464,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUVertexState`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52021,"byte_end":52066,"line_start":1465,"line_end":1465,"column_start":1,"column_end":46}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpuvertexstate).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52067,"byte_end":52128,"line_start":1466,"line_end":1466,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":2022},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52241,"byte_end":52247,"line_start":1470,"line_end":1470,"column_start":9,"column_end":15},"name":"module","qualname":"::VertexState::module","value":"&'a ShaderModule","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" The compiled shader module for this stage.\n","sig":null,"attributes":[{"value":"/ The compiled shader module for this stage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52186,"byte_end":52232,"line_start":1469,"line_end":1469,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2023},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52416,"byte_end":52427,"line_start":1473,"line_end":1473,"column_start":9,"column_end":20},"name":"entry_point","qualname":"::VertexState::entry_point","value":"&'a str","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" The name of the entry point in the compiled shader. There must be a function that returns\n void with this name in the shader.\n","sig":null,"attributes":[{"value":"/ The name of the entry point in the compiled shader. There must be a function that returns","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52271,"byte_end":52364,"line_start":1471,"line_end":1471,"column_start":5,"column_end":98}},{"value":"/ void with this name in the shader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52369,"byte_end":52407,"line_start":1472,"line_end":1472,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2024},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52512,"byte_end":52519,"line_start":1475,"line_end":1475,"column_start":9,"column_end":16},"name":"buffers","qualname":"::VertexState::buffers","value":"&'a [VertexBufferLayout<'a>]","parent":{"krate":0,"index":2020},"children":[],"decl_id":null,"docs":" The format of any vertex buffers used with this pipeline.\n","sig":null,"attributes":[{"value":"/ The format of any vertex buffers used with this pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52442,"byte_end":52503,"line_start":1474,"line_end":1474,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52814,"byte_end":52827,"line_start":1485,"line_end":1485,"column_start":12,"column_end":25},"name":"FragmentState","qualname":"::FragmentState","value":"FragmentState { module, entry_point, targets }","parent":null,"children":[{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035}],"decl_id":null,"docs":" Describes the fragment processing in a render pipeline.","sig":null,"attributes":[{"value":"/ Describes the fragment processing in a render pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52554,"byte_end":52613,"line_start":1478,"line_end":1478,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52614,"byte_end":52617,"line_start":1479,"line_end":1479,"column_start":1,"column_end":4}},{"value":"/ For use in [`RenderPipelineDescriptor`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52618,"byte_end":52662,"line_start":1480,"line_end":1480,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52663,"byte_end":52666,"line_start":1481,"line_end":1481,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUFragmentState`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52667,"byte_end":52714,"line_start":1482,"line_end":1482,"column_start":1,"column_end":48}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpufragmentstate).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52715,"byte_end":52778,"line_start":1483,"line_end":1483,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2033},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52893,"byte_end":52899,"line_start":1487,"line_end":1487,"column_start":9,"column_end":15},"name":"module","qualname":"::FragmentState::module","value":"&'a ShaderModule","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" The compiled shader module for this stage.\n","sig":null,"attributes":[{"value":"/ The compiled shader module for this stage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52838,"byte_end":52884,"line_start":1486,"line_end":1486,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2034},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53068,"byte_end":53079,"line_start":1490,"line_end":1490,"column_start":9,"column_end":20},"name":"entry_point","qualname":"::FragmentState::entry_point","value":"&'a str","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" The name of the entry point in the compiled shader. There must be a function that returns\n void with this name in the shader.\n","sig":null,"attributes":[{"value":"/ The name of the entry point in the compiled shader. There must be a function that returns","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":52923,"byte_end":53016,"line_start":1488,"line_end":1488,"column_start":5,"column_end":98}},{"value":"/ void with this name in the shader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53021,"byte_end":53059,"line_start":1489,"line_end":1489,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2035},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53145,"byte_end":53152,"line_start":1492,"line_end":1492,"column_start":9,"column_end":16},"name":"targets","qualname":"::FragmentState::targets","value":"&'a [std::option::Option<wgpu_types::ColorTargetState>]","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" The color state of the render targets.\n","sig":null,"attributes":[{"value":"/ The color state of the render targets.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53094,"byte_end":53136,"line_start":1491,"line_end":1491,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2042},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53463,"byte_end":53487,"line_start":1502,"line_end":1502,"column_start":12,"column_end":36},"name":"RenderPipelineDescriptor","qualname":"::RenderPipelineDescriptor","value":"RenderPipelineDescriptor { label, layout, vertex, primitive, depth_stencil, multisample, fragment, multiview }","parent":null,"children":[{"krate":0,"index":2044},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2051}],"decl_id":null,"docs":" Describes a render (graphics) pipeline.","sig":null,"attributes":[{"value":"/ Describes a render (graphics) pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53189,"byte_end":53232,"line_start":1495,"line_end":1495,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53233,"byte_end":53236,"line_start":1496,"line_end":1496,"column_start":1,"column_end":4}},{"value":"/ For use with [`Device::create_render_pipeline`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53237,"byte_end":53289,"line_start":1497,"line_end":1497,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53290,"byte_end":53293,"line_start":1498,"line_end":1498,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPURenderPipelineDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53294,"byte_end":53352,"line_start":1499,"line_end":1499,"column_start":1,"column_end":59}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpurenderpipelinedescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53353,"byte_end":53427,"line_start":1500,"line_end":1500,"column_start":1,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":2044},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53604,"byte_end":53609,"line_start":1504,"line_end":1504,"column_start":9,"column_end":14},"name":"label","qualname":"::RenderPipelineDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":" Debug label of the pipeline. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the pipeline. This will show up in graphics debuggers for easy identification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53498,"byte_end":53595,"line_start":1503,"line_end":1503,"column_start":5,"column_end":102}}]},{"kind":"Field","id":{"krate":0,"index":2045},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53683,"byte_end":53689,"line_start":1506,"line_end":1506,"column_start":9,"column_end":15},"name":"layout","qualname":"::RenderPipelineDescriptor::layout","value":"std::option::Option<&'a PipelineLayout>","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":" The layout of bind groups for this pipeline.\n","sig":null,"attributes":[{"value":"/ The layout of bind groups for this pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53626,"byte_end":53674,"line_start":1505,"line_end":1505,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2046},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53809,"byte_end":53815,"line_start":1508,"line_end":1508,"column_start":9,"column_end":15},"name":"vertex","qualname":"::RenderPipelineDescriptor::vertex","value":"VertexState<'a>","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":" The compiled vertex stage, its entry point, and the input buffers layout.\n","sig":null,"attributes":[{"value":"/ The compiled vertex stage, its entry point, and the input buffers layout.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53723,"byte_end":53800,"line_start":1507,"line_end":1507,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":2047},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53932,"byte_end":53941,"line_start":1510,"line_end":1510,"column_start":9,"column_end":18},"name":"primitive","qualname":"::RenderPipelineDescriptor::primitive","value":"wgpu_types::PrimitiveState","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":" The properties of the pipeline at the primitive assembly and rasterization level.\n","sig":null,"attributes":[{"value":"/ The properties of the pipeline at the primitive assembly and rasterization level.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53838,"byte_end":53923,"line_start":1509,"line_end":1509,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":2048},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54063,"byte_end":54076,"line_start":1512,"line_end":1512,"column_start":9,"column_end":22},"name":"depth_stencil","qualname":"::RenderPipelineDescriptor::depth_stencil","value":"std::option::Option<wgpu_types::DepthStencilState>","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":" The effect of draw calls on the depth and stencil aspects of the output target, if any.\n","sig":null,"attributes":[{"value":"/ The effect of draw calls on the depth and stencil aspects of the output target, if any.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":53963,"byte_end":54054,"line_start":1511,"line_end":1511,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":2049},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54168,"byte_end":54179,"line_start":1514,"line_end":1514,"column_start":9,"column_end":20},"name":"multisample","qualname":"::RenderPipelineDescriptor::multisample","value":"wgpu_types::MultisampleState","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":" The multi-sampling properties of the pipeline.\n","sig":null,"attributes":[{"value":"/ The multi-sampling properties of the pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54109,"byte_end":54159,"line_start":1513,"line_end":1513,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2050},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54284,"byte_end":54292,"line_start":1516,"line_end":1516,"column_start":9,"column_end":17},"name":"fragment","qualname":"::RenderPipelineDescriptor::fragment","value":"std::option::Option<FragmentState<'a>>","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":" The compiled fragment stage, its entry point, and the color targets.\n","sig":null,"attributes":[{"value":"/ The compiled fragment stage, its entry point, and the color targets.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54203,"byte_end":54275,"line_start":1515,"line_end":1515,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2051},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54468,"byte_end":54477,"line_start":1519,"line_end":1519,"column_start":9,"column_end":18},"name":"multiview","qualname":"::RenderPipelineDescriptor::multiview","value":"std::option::Option<std::num::NonZeroU32>","parent":{"krate":0,"index":2042},"children":[],"decl_id":null,"docs":" If the pipeline will be used with a multiview render pass, this indicates how many array\n layers the attachments will have.\n","sig":null,"attributes":[{"value":"/ If the pipeline will be used with a multiview render pass, this indicates how many array","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54325,"byte_end":54417,"line_start":1517,"line_end":1517,"column_start":5,"column_end":97}},{"value":"/ layers the attachments will have.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54422,"byte_end":54459,"line_start":1518,"line_end":1518,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":2058},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54788,"byte_end":54809,"line_start":1529,"line_end":1529,"column_start":12,"column_end":33},"name":"ComputePassDescriptor","qualname":"::ComputePassDescriptor","value":"ComputePassDescriptor { label }","parent":null,"children":[{"krate":0,"index":2060}],"decl_id":null,"docs":" Describes the attachments of a compute pass.","sig":null,"attributes":[{"value":"/ Describes the attachments of a compute pass.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54502,"byte_end":54550,"line_start":1522,"line_end":1522,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54551,"byte_end":54554,"line_start":1523,"line_end":1523,"column_start":1,"column_end":4}},{"value":"/ For use with [`CommandEncoder::begin_compute_pass`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54555,"byte_end":54611,"line_start":1524,"line_end":1524,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54612,"byte_end":54615,"line_start":1525,"line_end":1525,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUComputePassDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54616,"byte_end":54671,"line_start":1526,"line_end":1526,"column_start":1,"column_end":56}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpucomputepassdescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54672,"byte_end":54743,"line_start":1527,"line_end":1527,"column_start":1,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":2060},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54930,"byte_end":54935,"line_start":1531,"line_end":1531,"column_start":9,"column_end":14},"name":"label","qualname":"::ComputePassDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":2058},"children":[],"decl_id":null,"docs":" Debug label of the compute pass. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the compute pass. This will show up in graphics debuggers for easy identification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54820,"byte_end":54921,"line_start":1530,"line_end":1530,"column_start":5,"column_end":106}}]},{"kind":"Struct","id":{"krate":0,"index":2070},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55218,"byte_end":55243,"line_start":1541,"line_end":1541,"column_start":12,"column_end":37},"name":"ComputePipelineDescriptor","qualname":"::ComputePipelineDescriptor","value":"ComputePipelineDescriptor { label, layout, module, entry_point }","parent":null,"children":[{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075}],"decl_id":null,"docs":" Describes a compute pipeline.","sig":null,"attributes":[{"value":"/ Describes a compute pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54951,"byte_end":54984,"line_start":1534,"line_end":1534,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54985,"byte_end":54988,"line_start":1535,"line_end":1535,"column_start":1,"column_end":4}},{"value":"/ For use with [`Device::create_compute_pipeline`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":54989,"byte_end":55042,"line_start":1536,"line_end":1536,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55043,"byte_end":55046,"line_start":1537,"line_end":1537,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUComputePipelineDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55047,"byte_end":55106,"line_start":1538,"line_end":1538,"column_start":1,"column_end":60}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpucomputepipelinedescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55107,"byte_end":55182,"line_start":1539,"line_end":1539,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2072},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55360,"byte_end":55365,"line_start":1543,"line_end":1543,"column_start":9,"column_end":14},"name":"label","qualname":"::ComputePipelineDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":" Debug label of the pipeline. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the pipeline. This will show up in graphics debuggers for easy identification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55254,"byte_end":55351,"line_start":1542,"line_end":1542,"column_start":5,"column_end":102}}]},{"kind":"Field","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55439,"byte_end":55445,"line_start":1545,"line_end":1545,"column_start":9,"column_end":15},"name":"layout","qualname":"::ComputePipelineDescriptor::layout","value":"std::option::Option<&'a PipelineLayout>","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":" The layout of bind groups for this pipeline.\n","sig":null,"attributes":[{"value":"/ The layout of bind groups for this pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55382,"byte_end":55430,"line_start":1544,"line_end":1544,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55534,"byte_end":55540,"line_start":1547,"line_end":1547,"column_start":9,"column_end":15},"name":"module","qualname":"::ComputePipelineDescriptor::module","value":"&'a ShaderModule","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":" The compiled shader module for this stage.\n","sig":null,"attributes":[{"value":"/ The compiled shader module for this stage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55479,"byte_end":55525,"line_start":1546,"line_end":1546,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55709,"byte_end":55720,"line_start":1550,"line_end":1550,"column_start":9,"column_end":20},"name":"entry_point","qualname":"::ComputePipelineDescriptor::entry_point","value":"&'a str","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":" The name of the entry point in the compiled shader. There must be a function that returns\n void with this name in the shader.\n","sig":null,"attributes":[{"value":"/ The name of the entry point in the compiled shader. There must be a function that returns","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55564,"byte_end":55657,"line_start":1548,"line_end":1548,"column_start":5,"column_end":98}},{"value":"/ void with this name in the shader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55662,"byte_end":55700,"line_start":1549,"line_end":1549,"column_start":5,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":1219},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55982,"byte_end":55997,"line_start":1558,"line_end":1558,"column_start":10,"column_end":25},"name":"ImageCopyBuffer","qualname":"::ImageCopyBuffer","value":"ImageCopyBufferBase<&'a Buffer>","parent":null,"children":[],"decl_id":null,"docs":" View of a buffer which can be used to copy to/from a texture.","sig":null,"attributes":[{"value":"/ View of a buffer which can be used to copy to/from a texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55787,"byte_end":55852,"line_start":1554,"line_end":1554,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55853,"byte_end":55856,"line_start":1555,"line_end":1555,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUImageCopyBuffer`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55857,"byte_end":55906,"line_start":1556,"line_end":1556,"column_start":1,"column_end":50}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpuimagecopybuffer).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":55907,"byte_end":55972,"line_start":1557,"line_end":1557,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1224},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56298,"byte_end":56314,"line_start":1565,"line_end":1565,"column_start":10,"column_end":26},"name":"ImageCopyTexture","qualname":"::ImageCopyTexture","value":"ImageCopyTextureBase<&'a Texture>","parent":null,"children":[],"decl_id":null,"docs":" View of a texture which can be used to copy to/from a buffer/texture.","sig":null,"attributes":[{"value":"/ View of a texture which can be used to copy to/from a buffer/texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56093,"byte_end":56166,"line_start":1561,"line_end":1561,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56167,"byte_end":56170,"line_start":1562,"line_end":1562,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUImageCopyTexture`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56171,"byte_end":56221,"line_start":1563,"line_end":1563,"column_start":1,"column_end":51}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpuimagecopytexture).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56222,"byte_end":56288,"line_start":1564,"line_end":1564,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2082},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56628,"byte_end":56653,"line_start":1574,"line_end":1574,"column_start":12,"column_end":37},"name":"BindGroupLayoutDescriptor","qualname":"::BindGroupLayoutDescriptor","value":"BindGroupLayoutDescriptor { label, entries }","parent":null,"children":[{"krate":0,"index":2084},{"krate":0,"index":2085}],"decl_id":null,"docs":" Describes a [`BindGroupLayout`].","sig":null,"attributes":[{"value":"/ Describes a [`BindGroupLayout`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56357,"byte_end":56393,"line_start":1567,"line_end":1567,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56394,"byte_end":56397,"line_start":1568,"line_end":1568,"column_start":1,"column_end":4}},{"value":"/ For use with [`Device::create_bind_group_layout`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56398,"byte_end":56452,"line_start":1569,"line_end":1569,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56453,"byte_end":56456,"line_start":1570,"line_end":1570,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPUBindGroupLayoutDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56457,"byte_end":56516,"line_start":1571,"line_end":1571,"column_start":1,"column_end":60}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpubindgrouplayoutdescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56517,"byte_end":56592,"line_start":1572,"line_end":1572,"column_start":1,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2084},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56779,"byte_end":56784,"line_start":1576,"line_end":1576,"column_start":9,"column_end":14},"name":"label","qualname":"::BindGroupLayoutDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Debug label of the bind group layout. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the bind group layout. This will show up in graphics debuggers for easy identification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56664,"byte_end":56770,"line_start":1575,"line_end":1575,"column_start":5,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":2085},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56855,"byte_end":56862,"line_start":1579,"line_end":1579,"column_start":9,"column_end":16},"name":"entries","qualname":"::BindGroupLayoutDescriptor::entries","value":"&'a [wgpu_types::BindGroupLayoutEntry]","parent":{"krate":0,"index":2082},"children":[],"decl_id":null,"docs":" Array of entries in this BindGroupLayout\n","sig":null,"attributes":[{"value":"/ Array of entries in this BindGroupLayout","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56802,"byte_end":56846,"line_start":1578,"line_end":1578,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2092},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":57212,"byte_end":57241,"line_start":1589,"line_end":1589,"column_start":12,"column_end":41},"name":"RenderBundleEncoderDescriptor","qualname":"::RenderBundleEncoderDescriptor","value":"RenderBundleEncoderDescriptor { label, color_formats, depth_stencil, sample_count, multiview }","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098}],"decl_id":null,"docs":" Describes a [`RenderBundleEncoder`].","sig":null,"attributes":[{"value":"/ Describes a [`RenderBundleEncoder`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56895,"byte_end":56935,"line_start":1582,"line_end":1582,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56936,"byte_end":56939,"line_start":1583,"line_end":1583,"column_start":1,"column_end":4}},{"value":"/ For use with [`Device::create_render_bundle_encoder`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56940,"byte_end":56998,"line_start":1584,"line_end":1584,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":56999,"byte_end":57002,"line_start":1585,"line_end":1585,"column_start":1,"column_end":4}},{"value":"/ Corresponds to [WebGPU `GPURenderBundleEncoderDescriptor`](","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":57003,"byte_end":57066,"line_start":1586,"line_end":1586,"column_start":1,"column_end":64}},{"value":"/ https://gpuweb.github.io/gpuweb/#dictdef-gpurenderbundleencoderdescriptor).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":57067,"byte_end":57146,"line_start":1587,"line_end":1587,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":2094},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":57371,"byte_end":57376,"line_start":1591,"line_end":1591,"column_start":9,"column_end":14},"name":"label","qualname":"::RenderBundleEncoderDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":2092},"children":[],"decl_id":null,"docs":" Debug label of the render bundle encoder. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the render bundle encoder. This will show up in graphics debuggers for easy identification.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":57252,"byte_end":57362,"line_start":1590,"line_end":1590,"column_start":5,"column_end":115}}]},{"kind":"Field","id":{"krate":0,"index":2095},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":57608,"byte_end":57621,"line_start":1594,"line_end":1594,"column_start":9,"column_end":22},"name":"color_formats","qualname":"::RenderBundleEncoderDescriptor::color_formats","value":"&'a [std::option::Option<wgpu_types::TextureFormat>]","parent":{"krate":0,"index":2092},"children":[],"decl_id":null,"docs":" The formats of the color attachments that this render bundle is capable to rendering to. This\n must match the formats of the color attachments in the renderpass this render bundle is executed in.\n","sig":null,"attributes":[{"value":"/ The formats of the color attachments that this render bundle is capable to rendering to. This","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":57393,"byte_end":57490,"line_start":1592,"line_end":1592,"column_start":5,"column_end":102}},{"value":"/ must match the formats of the color attachments in the renderpass this render bundle is executed in.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":57495,"byte_end":57599,"line_start":1593,"line_end":1593,"column_start":5,"column_end":109}}]},{"kind":"Field","id":{"krate":0,"index":2096},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":57872,"byte_end":57885,"line_start":1597,"line_end":1597,"column_start":9,"column_end":22},"name":"depth_stencil","qualname":"::RenderBundleEncoderDescriptor::depth_stencil","value":"std::option::Option<wgpu_types::RenderBundleDepthStencil>","parent":{"krate":0,"index":2092},"children":[],"decl_id":null,"docs":" Information about the depth attachment that this render bundle is capable to rendering to. This\n must match the format of the depth attachments in the renderpass this render bundle is executed in.\n","sig":null,"attributes":[{"value":"/ Information about the depth attachment that this render bundle is capable to rendering to. This","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":57656,"byte_end":57755,"line_start":1595,"line_end":1595,"column_start":5,"column_end":104}},{"value":"/ must match the format of the depth attachments in the renderpass this render bundle is executed in.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":57760,"byte_end":57863,"line_start":1596,"line_end":1596,"column_start":5,"column_end":108}}]},{"kind":"Field","id":{"krate":0,"index":2097},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58071,"byte_end":58083,"line_start":1600,"line_end":1600,"column_start":9,"column_end":21},"name":"sample_count","qualname":"::RenderBundleEncoderDescriptor::sample_count","value":"u32","parent":{"krate":0,"index":2092},"children":[],"decl_id":null,"docs":" Sample count this render bundle is capable of rendering to. This must match the pipelines and\n the renderpasses it is used in.\n","sig":null,"attributes":[{"value":"/ Sample count this render bundle is capable of rendering to. This must match the pipelines and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":57925,"byte_end":58022,"line_start":1598,"line_end":1598,"column_start":5,"column_end":102}},{"value":"/ the renderpasses it is used in.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58027,"byte_end":58062,"line_start":1599,"line_end":1599,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2098},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58205,"byte_end":58214,"line_start":1602,"line_end":1602,"column_start":9,"column_end":18},"name":"multiview","qualname":"::RenderBundleEncoderDescriptor::multiview","value":"std::option::Option<std::num::NonZeroU32>","parent":{"krate":0,"index":2092},"children":[],"decl_id":null,"docs":" If this render bundle will rendering to multiple array layers in the attachments at the same time.\n","sig":null,"attributes":[{"value":"/ If this render bundle will rendering to multiple array layers in the attachments at the same time.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58094,"byte_end":58196,"line_start":1601,"line_end":1601,"column_start":5,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":2123},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58381,"byte_end":58395,"line_start":1608,"line_end":1608,"column_start":12,"column_end":26},"name":"SurfaceTexture","qualname":"::SurfaceTexture","value":"SurfaceTexture { texture, suboptimal }","parent":null,"children":[{"krate":0,"index":2124},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127}],"decl_id":null,"docs":" Surface texture that can be rendered to.\n Result of a successful call to [`Surface::get_current_texture`].\n","sig":null,"attributes":[{"value":"/ Surface texture that can be rendered to.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58239,"byte_end":58283,"line_start":1605,"line_end":1605,"column_start":1,"column_end":45}},{"value":"/ Result of a successful call to [`Surface::get_current_texture`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58284,"byte_end":58352,"line_start":1606,"line_end":1606,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2124},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58444,"byte_end":58451,"line_start":1610,"line_end":1610,"column_start":9,"column_end":16},"name":"texture","qualname":"::SurfaceTexture::texture","value":"Texture","parent":{"krate":0,"index":2123},"children":[],"decl_id":null,"docs":" Accessible view of the frame.\n","sig":null,"attributes":[{"value":"/ Accessible view of the frame.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58402,"byte_end":58435,"line_start":1609,"line_end":1609,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2125},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58598,"byte_end":58608,"line_start":1613,"line_end":1613,"column_start":9,"column_end":19},"name":"suboptimal","qualname":"::SurfaceTexture::suboptimal","value":"bool","parent":{"krate":0,"index":2123},"children":[],"decl_id":null,"docs":" `true` if the acquired buffer can still be used for rendering,\n but should be recreated for maximum performance.\n","sig":null,"attributes":[{"value":"/ `true` if the acquired buffer can still be used for rendering,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58466,"byte_end":58532,"line_start":1611,"line_end":1611,"column_start":5,"column_end":71}},{"value":"/ but should be recreated for maximum performance.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58537,"byte_end":58589,"line_start":1612,"line_end":1612,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2131},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58902,"byte_end":58909,"line_start":1622,"line_end":1622,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::SurfaceError::Timeout","value":"SurfaceError::Timeout","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":" A timeout was encountered while trying to acquire the next frame.\n","sig":null,"attributes":[{"value":"/ A timeout was encountered while trying to acquire the next frame.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58828,"byte_end":58897,"line_start":1621,"line_end":1621,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2133},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59005,"byte_end":59013,"line_start":1624,"line_end":1624,"column_start":5,"column_end":13},"name":"Outdated","qualname":"::SurfaceError::Outdated","value":"SurfaceError::Outdated","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":" The underlying surface has changed, and therefore the swap chain must be updated.\n","sig":null,"attributes":[{"value":"/ The underlying surface has changed, and therefore the swap chain must be updated.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58915,"byte_end":59000,"line_start":1623,"line_end":1623,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2135},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59083,"byte_end":59087,"line_start":1626,"line_end":1626,"column_start":5,"column_end":9},"name":"Lost","qualname":"::SurfaceError::Lost","value":"SurfaceError::Lost","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":" The swap chain has been lost and needs to be recreated.\n","sig":null,"attributes":[{"value":"/ The swap chain has been lost and needs to be recreated.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59019,"byte_end":59078,"line_start":1625,"line_end":1625,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2137},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59155,"byte_end":59166,"line_start":1628,"line_end":1628,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::SurfaceError::OutOfMemory","value":"SurfaceError::OutOfMemory","parent":{"krate":0,"index":2130},"children":[],"decl_id":null,"docs":" There is no more memory left to allocate a new frame.\n","sig":null,"attributes":[{"value":"/ There is no more memory left to allocate a new frame.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59093,"byte_end":59150,"line_start":1627,"line_end":1627,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":2130},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58809,"byte_end":58821,"line_start":1620,"line_end":1620,"column_start":10,"column_end":22},"name":"SurfaceError","qualname":"::SurfaceError","value":"pub enum SurfaceError { Timeout, Outdated, Lost, OutOfMemory, }","parent":null,"children":[{"krate":0,"index":2131},{"krate":0,"index":2133},{"krate":0,"index":2135},{"krate":0,"index":2137}],"decl_id":null,"docs":" Result of an unsuccessful call to [`Surface::get_current_texture`].\n","sig":null,"attributes":[{"value":"/ Result of an unsuccessful call to [`Surface::get_current_texture`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":58689,"byte_end":58760,"line_start":1618,"line_end":1618,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59973,"byte_end":59976,"line_start":1651,"line_end":1651,"column_start":12,"column_end":15},"name":"new","qualname":"<Instance>::new","value":"pub fn new(Backends) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an new instance of wgpu.","sig":null,"attributes":[{"value":"/ Create an new instance of wgpu.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59777,"byte_end":59812,"line_start":1645,"line_end":1645,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59817,"byte_end":59820,"line_start":1646,"line_end":1646,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59825,"byte_end":59840,"line_start":1647,"line_end":1647,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59845,"byte_end":59848,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ - `backends` - Controls from which [backends][Backends] wgpu will choose","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59853,"byte_end":59929,"line_start":1649,"line_end":1649,"column_start":5,"column_end":81}},{"value":"/   during instantiation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59934,"byte_end":59961,"line_start":1650,"line_end":1650,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60426,"byte_end":60434,"line_start":1667,"line_end":1667,"column_start":19,"column_end":27},"name":"from_hal","qualname":"<Instance>::from_hal","value":"pub unsafe fn from_hal<A: wgc::hub::HalApi>(A::Instance) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an new instance of wgpu from a wgpu-hal instance.","sig":null,"attributes":[{"value":"/ Create an new instance of wgpu from a wgpu-hal instance.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60093,"byte_end":60153,"line_start":1657,"line_end":1657,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60158,"byte_end":60161,"line_start":1658,"line_end":1658,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60166,"byte_end":60181,"line_start":1659,"line_end":1659,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60186,"byte_end":60189,"line_start":1660,"line_end":1660,"column_start":5,"column_end":8}},{"value":"/ - `hal_instance` - wgpu-hal instance.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60194,"byte_end":60235,"line_start":1661,"line_end":1661,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60240,"byte_end":60243,"line_start":1662,"line_end":1662,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60248,"byte_end":60260,"line_start":1663,"line_end":1663,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60265,"byte_end":60268,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ Refer to the creation of wgpu-hal Instance for every backend.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60273,"byte_end":60338,"line_start":1665,"line_end":1665,"column_start":5,"column_end":70}},{"value":"cfg(any(not(target_arch = \"wasm32\"), feature = \"emscripten\"))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60343,"byte_end":60407,"line_start":1666,"line_end":1666,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60964,"byte_end":60970,"line_start":1680,"line_end":1680,"column_start":19,"column_end":25},"name":"as_hal","qualname":"<Instance>::as_hal","value":"pub unsafe fn as_hal<A: wgc::hub::HalApi, F: FnOnce(Option<&A::Instance>) ->\nR, R>(&Self, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner hal Instance using a callback. The hal instance will be `None` if the\n backend type argument does not match with this wgpu Instance","sig":null,"attributes":[{"value":"/ Returns the inner hal Instance using a callback. The hal instance will be `None` if the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60601,"byte_end":60692,"line_start":1673,"line_end":1673,"column_start":5,"column_end":96}},{"value":"/ backend type argument does not match with this wgpu Instance","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60697,"byte_end":60761,"line_start":1674,"line_end":1674,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60766,"byte_end":60769,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60774,"byte_end":60786,"line_start":1676,"line_end":1676,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60791,"byte_end":60794,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ - The raw handle obtained from the hal Instance must not be manually destroyed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60799,"byte_end":60881,"line_start":1678,"line_end":1678,"column_start":5,"column_end":87}},{"value":"cfg(any(not(target_arch = \"wasm32\"), feature = \"webgl\"))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":60886,"byte_end":60945,"line_start":1679,"line_end":1679,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61505,"byte_end":61514,"line_start":1698,"line_end":1698,"column_start":19,"column_end":28},"name":"from_core","qualname":"<Instance>::from_core","value":"pub unsafe fn from_core(wgc::instance::Instance) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an new instance of wgpu from a wgpu-core instance.","sig":null,"attributes":[{"value":"/ Create an new instance of wgpu from a wgpu-core instance.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61191,"byte_end":61252,"line_start":1688,"line_end":1688,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61257,"byte_end":61260,"line_start":1689,"line_end":1689,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61265,"byte_end":61280,"line_start":1690,"line_end":1690,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61285,"byte_end":61288,"line_start":1691,"line_end":1691,"column_start":5,"column_end":8}},{"value":"/ - `core_instance` - wgpu-core instance.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61293,"byte_end":61336,"line_start":1692,"line_end":1692,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61341,"byte_end":61344,"line_start":1693,"line_end":1693,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61349,"byte_end":61361,"line_start":1694,"line_end":1694,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61366,"byte_end":61369,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ Refer to the creation of wgpu-core Instance.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61374,"byte_end":61422,"line_start":1696,"line_end":1696,"column_start":5,"column_end":53}},{"value":"cfg(any(not(target_arch = \"wasm32\"), feature = \"webgl\"))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61427,"byte_end":61486,"line_start":1697,"line_end":1697,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61928,"byte_end":61946,"line_start":1710,"line_end":1710,"column_start":12,"column_end":30},"name":"enumerate_adapters","qualname":"<Instance>::enumerate_adapters","value":"pub fn enumerate_adapters(&Self, Backends) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Retrieves all available [`Adapter`]s that match the given [`Backends`].","sig":null,"attributes":[{"value":"/ Retrieves all available [`Adapter`]s that match the given [`Backends`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61670,"byte_end":61745,"line_start":1704,"line_end":1704,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61750,"byte_end":61753,"line_start":1705,"line_end":1705,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61758,"byte_end":61773,"line_start":1706,"line_end":1706,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61778,"byte_end":61781,"line_start":1707,"line_end":1707,"column_start":5,"column_end":8}},{"value":"/ - `backends` - Backends from which to enumerate adapters.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61786,"byte_end":61847,"line_start":1708,"line_end":1708,"column_start":5,"column_end":66}},{"value":"cfg(any(not(target_arch = \"wasm32\"), feature = \"emscripten\"))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":61852,"byte_end":61916,"line_start":1709,"line_end":1709,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":62561,"byte_end":62576,"line_start":1726,"line_end":1726,"column_start":12,"column_end":27},"name":"request_adapter","qualname":"<Instance>::request_adapter","value":"pub fn request_adapter(&Self, &RequestAdapterOptions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an [`Adapter`] which matches the given [`RequestAdapterOptions`].","sig":null,"attributes":[{"value":"/ Retrieves an [`Adapter`] which matches the given [`RequestAdapterOptions`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":62283,"byte_end":62362,"line_start":1721,"line_end":1721,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":62367,"byte_end":62370,"line_start":1722,"line_end":1722,"column_start":5,"column_end":8}},{"value":"/ Some options are \"soft\", so treated as non-mandatory. Others are \"hard\".","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":62375,"byte_end":62451,"line_start":1723,"line_end":1723,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":62456,"byte_end":62459,"line_start":1724,"line_end":1724,"column_start":5,"column_end":8}},{"value":"/ If no adapters are found that suffice all the \"hard\" options, `None` is returned.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":62464,"byte_end":62549,"line_start":1725,"line_end":1725,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":63149,"byte_end":63172,"line_start":1741,"line_end":1741,"column_start":19,"column_end":42},"name":"create_adapter_from_hal","qualname":"<Instance>::create_adapter_from_hal","value":"pub unsafe fn create_adapter_from_hal<A: wgc::hub::HalApi>(&Self,\nhal::ExposedAdapter<A>) -> Adapter","parent":null,"children":[],"decl_id":null,"docs":" Converts a wgpu-hal `ExposedAdapter` to a wgpu [`Adapter`].","sig":null,"attributes":[{"value":"/ Converts a wgpu-hal `ExposedAdapter` to a wgpu [`Adapter`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":62891,"byte_end":62954,"line_start":1735,"line_end":1735,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":62959,"byte_end":62962,"line_start":1736,"line_end":1736,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":62967,"byte_end":62979,"line_start":1737,"line_end":1737,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":62984,"byte_end":62987,"line_start":1738,"line_end":1738,"column_start":5,"column_end":8}},{"value":"/ `hal_adapter` must be created from this instance internal handle.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":62992,"byte_end":63061,"line_start":1739,"line_end":1739,"column_start":5,"column_end":74}},{"value":"cfg(any(not(target_arch = \"wasm32\"), feature = \"emscripten\"))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":63066,"byte_end":63130,"line_start":1740,"line_end":1740,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":63748,"byte_end":63762,"line_start":1757,"line_end":1757,"column_start":19,"column_end":33},"name":"create_surface","qualname":"<Instance>::create_surface","value":"pub unsafe fn create_surface<W: raw_window_handle::HasRawWindowHandle>(&Self,\n&W) -> Surface","parent":null,"children":[],"decl_id":null,"docs":" Creates a surface from a raw window handle.","sig":null,"attributes":[{"value":"/ Creates a surface from a raw window handle.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":63429,"byte_end":63476,"line_start":1750,"line_end":1750,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":63481,"byte_end":63484,"line_start":1751,"line_end":1751,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":63489,"byte_end":63501,"line_start":1752,"line_end":1752,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":63506,"byte_end":63509,"line_start":1753,"line_end":1753,"column_start":5,"column_end":8}},{"value":"/ - Raw Window Handle must be a valid object to create a surface upon and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":63514,"byte_end":63589,"line_start":1754,"line_end":1754,"column_start":5,"column_end":80}},{"value":"/   must remain valid for the lifetime of the returned surface.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":63594,"byte_end":63659,"line_start":1755,"line_end":1755,"column_start":5,"column_end":70}},{"value":"/ - If not called on the main thread, metal backend will panic.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":63664,"byte_end":63729,"line_start":1756,"line_end":1756,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":64650,"byte_end":64676,"line_start":1786,"line_end":1786,"column_start":19,"column_end":45},"name":"create_surface_from_visual","qualname":"<Instance>::create_surface_from_visual","value":"pub unsafe fn create_surface_from_visual(&Self, *mut std::ffi::c_void)\n-> Surface","parent":null,"children":[],"decl_id":null,"docs":" Creates a surface from `IDCompositionVisual`.","sig":null,"attributes":[{"value":"/ Creates a surface from `IDCompositionVisual`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":64436,"byte_end":64485,"line_start":1780,"line_end":1780,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":64490,"byte_end":64493,"line_start":1781,"line_end":1781,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":64498,"byte_end":64510,"line_start":1782,"line_end":1782,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":64515,"byte_end":64518,"line_start":1783,"line_end":1783,"column_start":5,"column_end":8}},{"value":"/ - visual must be a valid IDCompositionVisual to create a surface upon.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":64523,"byte_end":64597,"line_start":1784,"line_end":1784,"column_start":5,"column_end":79}},{"value":"cfg(target_os = \"windows\")","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":64602,"byte_end":64631,"line_start":1785,"line_end":1785,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66654,"byte_end":66662,"line_start":1837,"line_end":1837,"column_start":12,"column_end":20},"name":"poll_all","qualname":"<Instance>::poll_all","value":"pub fn poll_all(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Polls all devices.","sig":null,"attributes":[{"value":"/ Polls all devices.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":65853,"byte_end":65875,"line_start":1821,"line_end":1821,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":65880,"byte_end":65883,"line_start":1822,"line_end":1822,"column_start":5,"column_end":8}},{"value":"/ If `force_wait` is true and this is not running on the web, then this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":65888,"byte_end":65961,"line_start":1823,"line_end":1823,"column_start":5,"column_end":78}},{"value":"/ function will block until all in-flight buffers have been mapped and","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":65966,"byte_end":66038,"line_start":1824,"line_end":1824,"column_start":5,"column_end":77}},{"value":"/ all submitted commands have finished execution.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66043,"byte_end":66094,"line_start":1825,"line_end":1825,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66099,"byte_end":66102,"line_start":1826,"line_end":1826,"column_start":5,"column_end":8}},{"value":"/ Return `true` if all devices' queues are empty, or `false` if there are","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66107,"byte_end":66182,"line_start":1827,"line_end":1827,"column_start":5,"column_end":80}},{"value":"/ queue submissions still in flight. (Note that, unless access to all","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66187,"byte_end":66258,"line_start":1828,"line_end":1828,"column_start":5,"column_end":76}},{"value":"/ [`Queue`s] associated with this [`Instance`] is coordinated somehow,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66263,"byte_end":66335,"line_start":1829,"line_end":1829,"column_start":5,"column_end":77}},{"value":"/ this information could be out of date by the time the caller receives","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66340,"byte_end":66413,"line_start":1830,"line_end":1830,"column_start":5,"column_end":78}},{"value":"/ it. `Queue`s can be shared between threads, and other threads could","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66418,"byte_end":66489,"line_start":1831,"line_end":1831,"column_start":5,"column_end":76}},{"value":"/ submit new work at any time.)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66494,"byte_end":66527,"line_start":1832,"line_end":1832,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66532,"byte_end":66535,"line_start":1833,"line_end":1833,"column_start":5,"column_end":8}},{"value":"/ On the web, this is a no-op. `Device`s are automatically polled.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66540,"byte_end":66608,"line_start":1834,"line_end":1834,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66613,"byte_end":66616,"line_start":1835,"line_end":1835,"column_start":5,"column_end":8}},{"value":"/ [`Queue`s]: Queue","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66621,"byte_end":66642,"line_start":1836,"line_end":1836,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66877,"byte_end":66892,"line_start":1843,"line_end":1843,"column_start":12,"column_end":27},"name":"generate_report","qualname":"<Instance>::generate_report","value":"pub fn generate_report(&Self) -> wgc::hub::GlobalReport","parent":null,"children":[],"decl_id":null,"docs":" Generates memory report.\n","sig":null,"attributes":[{"value":"/ Generates memory report.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66768,"byte_end":66796,"line_start":1841,"line_end":1841,"column_start":5,"column_end":33}},{"value":"cfg(any(not(target_arch = \"wasm32\"), feature = \"emscripten\"))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66801,"byte_end":66865,"line_start":1842,"line_end":1842,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67760,"byte_end":67774,"line_start":1865,"line_end":1865,"column_start":12,"column_end":26},"name":"request_device","qualname":"<Adapter>::request_device","value":"pub fn request_device(&Self, &DeviceDescriptor, Option<&std::path::Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Requests a connection to a physical device, creating a logical device.","sig":null,"attributes":[{"value":"/ Requests a connection to a physical device, creating a logical device.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66995,"byte_end":67069,"line_start":1849,"line_end":1849,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67074,"byte_end":67077,"line_start":1850,"line_end":1850,"column_start":5,"column_end":8}},{"value":"/ Returns the [`Device`] together with a [`Queue`] that executes command buffers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67082,"byte_end":67165,"line_start":1851,"line_end":1851,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67170,"byte_end":67173,"line_start":1852,"line_end":1852,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67178,"byte_end":67193,"line_start":1853,"line_end":1853,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67198,"byte_end":67201,"line_start":1854,"line_end":1854,"column_start":5,"column_end":8}},{"value":"/ - `desc` - Description of the features and limits requested from the given device.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67206,"byte_end":67292,"line_start":1855,"line_end":1855,"column_start":5,"column_end":91}},{"value":"/ - `trace_path` - Can be used for API call tracing, if that feature is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67297,"byte_end":67370,"line_start":1856,"line_end":1856,"column_start":5,"column_end":78}},{"value":"/   enabled in `wgpu-core`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67375,"byte_end":67404,"line_start":1857,"line_end":1857,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67409,"byte_end":67412,"line_start":1858,"line_end":1858,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67417,"byte_end":67429,"line_start":1859,"line_end":1859,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67434,"byte_end":67437,"line_start":1860,"line_end":1860,"column_start":5,"column_end":8}},{"value":"/ - Features specified by `desc` are not supported by this adapter.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67442,"byte_end":67511,"line_start":1861,"line_end":1861,"column_start":5,"column_end":74}},{"value":"/ - Unsafe features were requested but not enabled when requesting the adapter.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67516,"byte_end":67597,"line_start":1862,"line_end":1862,"column_start":5,"column_end":86}},{"value":"/ - Limits requested exceed the values provided by the adapter.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67602,"byte_end":67667,"line_start":1863,"line_end":1863,"column_start":5,"column_end":70}},{"value":"/ - Adapter does not support all features wgpu requires to safely operate.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":67672,"byte_end":67748,"line_start":1864,"line_end":1864,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1257},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":68852,"byte_end":68874,"line_start":1895,"line_end":1895,"column_start":19,"column_end":41},"name":"create_device_from_hal","qualname":"<Adapter>::create_device_from_hal","value":"pub unsafe fn create_device_from_hal<A: wgc::hub::HalApi>(&Self,\nhal::OpenDevice<A>, &DeviceDescriptor, Option<&std::path::Path>)\n-> Result<(Device, Queue), RequestDeviceError>","parent":null,"children":[],"decl_id":null,"docs":" Create a wgpu [`Device`] and [`Queue`] from a wgpu-hal `OpenDevice`","sig":null,"attributes":[{"value":"/ Create a wgpu [`Device`] and [`Queue`] from a wgpu-hal `OpenDevice`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":68517,"byte_end":68588,"line_start":1888,"line_end":1888,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":68593,"byte_end":68596,"line_start":1889,"line_end":1889,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":68601,"byte_end":68613,"line_start":1890,"line_end":1890,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":68618,"byte_end":68621,"line_start":1891,"line_end":1891,"column_start":5,"column_end":8}},{"value":"/ - `hal_device` must be created from this adapter internal handle.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":68626,"byte_end":68695,"line_start":1892,"line_end":1892,"column_start":5,"column_end":74}},{"value":"/ - `desc.features` must be a subset of `hal_device` features.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":68700,"byte_end":68764,"line_start":1893,"line_end":1893,"column_start":5,"column_end":69}},{"value":"cfg(any(not(target_arch = \"wasm32\"), feature = \"emscripten\"))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":68769,"byte_end":68833,"line_start":1894,"line_end":1894,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":69964,"byte_end":69970,"line_start":1925,"line_end":1925,"column_start":19,"column_end":25},"name":"as_hal","qualname":"<Adapter>::as_hal","value":"pub unsafe fn as_hal<A: wgc::hub::HalApi, F: FnOnce(Option<&A::Adapter>) -> R,\nR>(&Self, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner hal Adapter using a callback. The hal adapter will be `None` if the\n backend type argument does not match with this wgpu Adapter","sig":null,"attributes":[{"value":"/ Returns the inner hal Adapter using a callback. The hal adapter will be `None` if the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":69605,"byte_end":69694,"line_start":1918,"line_end":1918,"column_start":5,"column_end":94}},{"value":"/ backend type argument does not match with this wgpu Adapter","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":69699,"byte_end":69762,"line_start":1919,"line_end":1919,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":69767,"byte_end":69770,"line_start":1920,"line_end":1920,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":69775,"byte_end":69787,"line_start":1921,"line_end":1921,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":69792,"byte_end":69795,"line_start":1922,"line_end":1922,"column_start":5,"column_end":8}},{"value":"/ - The raw handle obtained from the hal Adapter must not be manually destroyed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":69800,"byte_end":69881,"line_start":1923,"line_end":1923,"column_start":5,"column_end":86}},{"value":"cfg(any(not(target_arch = \"wasm32\"), feature = \"webgl\"))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":69886,"byte_end":69945,"line_start":1924,"line_end":1924,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":70275,"byte_end":70295,"line_start":1934,"line_end":1934,"column_start":12,"column_end":32},"name":"is_surface_supported","qualname":"<Adapter>::is_surface_supported","value":"pub fn is_surface_supported(&Self, &Surface) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this adapter may present to the passed surface.\n","sig":null,"attributes":[{"value":"/ Returns whether this adapter may present to the passed surface.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":70196,"byte_end":70263,"line_start":1933,"line_end":1933,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":70614,"byte_end":70622,"line_start":1942,"line_end":1942,"column_start":12,"column_end":20},"name":"features","qualname":"<Adapter>::features","value":"pub fn features(&Self) -> Features","parent":null,"children":[],"decl_id":null,"docs":" List all features that are supported with this adapter.","sig":null,"attributes":[{"value":"/ List all features that are supported with this adapter.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":70428,"byte_end":70487,"line_start":1938,"line_end":1938,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":70492,"byte_end":70495,"line_start":1939,"line_end":1939,"column_start":5,"column_end":8}},{"value":"/ Features must be explicitly requested in [`Adapter::request_device`] in order","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":70500,"byte_end":70581,"line_start":1940,"line_end":1940,"column_start":5,"column_end":86}},{"value":"/ to use them.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":70586,"byte_end":70602,"line_start":1941,"line_end":1941,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":70927,"byte_end":70933,"line_start":1950,"line_end":1950,"column_start":12,"column_end":18},"name":"limits","qualname":"<Adapter>::limits","value":"pub fn limits(&Self) -> Limits","parent":null,"children":[],"decl_id":null,"docs":" List the \"best\" limits that are supported by this adapter.","sig":null,"attributes":[{"value":"/ List the \"best\" limits that are supported by this adapter.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":70715,"byte_end":70777,"line_start":1946,"line_end":1946,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":70782,"byte_end":70785,"line_start":1947,"line_end":1947,"column_start":5,"column_end":8}},{"value":"/ Limits must be explicitly requested in [`Adapter::request_device`] to set","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":70790,"byte_end":70867,"line_start":1948,"line_end":1948,"column_start":5,"column_end":82}},{"value":"/ the values that you are allowed to use.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":70872,"byte_end":70915,"line_start":1949,"line_end":1949,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1267},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":71072,"byte_end":71080,"line_start":1955,"line_end":1955,"column_start":12,"column_end":20},"name":"get_info","qualname":"<Adapter>::get_info","value":"pub fn get_info(&Self) -> AdapterInfo","parent":null,"children":[],"decl_id":null,"docs":" Get info about the adapter itself.\n","sig":null,"attributes":[{"value":"/ Get info about the adapter itself.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":71022,"byte_end":71060,"line_start":1954,"line_end":1954,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":71226,"byte_end":71252,"line_start":1960,"line_end":1960,"column_start":12,"column_end":38},"name":"get_downlevel_capabilities","qualname":"<Adapter>::get_downlevel_capabilities","value":"pub fn get_downlevel_capabilities(&Self) -> DownlevelCapabilities","parent":null,"children":[],"decl_id":null,"docs":" Get info about the adapter itself.\n","sig":null,"attributes":[{"value":"/ Get info about the adapter itself.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":71176,"byte_end":71214,"line_start":1959,"line_end":1959,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":71680,"byte_end":71707,"line_start":1968,"line_end":1968,"column_start":12,"column_end":39},"name":"get_texture_format_features","qualname":"<Adapter>::get_texture_format_features","value":"pub fn get_texture_format_features(&Self, TextureFormat)\n-> TextureFormatFeatures","parent":null,"children":[],"decl_id":null,"docs":" Returns the features supported for a given texture format by this adapter.","sig":null,"attributes":[{"value":"/ Returns the features supported for a given texture format by this adapter.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":71372,"byte_end":71450,"line_start":1964,"line_end":1964,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":71455,"byte_end":71458,"line_start":1965,"line_end":1965,"column_start":5,"column_end":8}},{"value":"/ Note that the WebGPU spec further restricts the available usages/features.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":71463,"byte_end":71541,"line_start":1966,"line_end":1966,"column_start":5,"column_end":83}},{"value":"/ To disable these restrictions on a device, request the [`Features::TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES`] feature.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":71546,"byte_end":71668,"line_start":1967,"line_end":1967,"column_start":5,"column_end":127}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72409,"byte_end":72413,"line_start":1983,"line_end":1983,"column_start":12,"column_end":16},"name":"poll","qualname":"<Device>::poll","value":"pub fn poll(&Self, Maintain) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check for resource cleanups and mapping callbacks.","sig":null,"attributes":[{"value":"/ Check for resource cleanups and mapping callbacks.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":71879,"byte_end":71933,"line_start":1974,"line_end":1974,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":71938,"byte_end":71941,"line_start":1975,"line_end":1975,"column_start":5,"column_end":8}},{"value":"/ Return `true` if the queue is empty, or `false` if there are more queue","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":71946,"byte_end":72021,"line_start":1976,"line_end":1976,"column_start":5,"column_end":80}},{"value":"/ submissions still in flight. (Note that, unless access to the [`Queue`] is","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72026,"byte_end":72104,"line_start":1977,"line_end":1977,"column_start":5,"column_end":83}},{"value":"/ coordinated somehow, this information could be out of date by the time","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72109,"byte_end":72183,"line_start":1978,"line_end":1978,"column_start":5,"column_end":79}},{"value":"/ the caller receives it. `Queue`s can be shared between threads, so","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72188,"byte_end":72258,"line_start":1979,"line_end":1979,"column_start":5,"column_end":75}},{"value":"/ other threads could submit new work at any time.)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72263,"byte_end":72316,"line_start":1980,"line_end":1980,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72321,"byte_end":72324,"line_start":1981,"line_end":1981,"column_start":5,"column_end":8}},{"value":"/ On the web, this is a no-op. `Device`s are automatically polled.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72329,"byte_end":72397,"line_start":1982,"line_end":1982,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72664,"byte_end":72672,"line_start":1990,"line_end":1990,"column_start":12,"column_end":20},"name":"features","qualname":"<Device>::features","value":"pub fn features(&Self) -> Features","parent":null,"children":[],"decl_id":null,"docs":" List all features that may be used with this device.","sig":null,"attributes":[{"value":"/ List all features that may be used with this device.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72527,"byte_end":72583,"line_start":1987,"line_end":1987,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72588,"byte_end":72591,"line_start":1988,"line_end":1988,"column_start":5,"column_end":8}},{"value":"/ Functions may panic if you use unsupported features.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72596,"byte_end":72652,"line_start":1989,"line_end":1989,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72905,"byte_end":72911,"line_start":1997,"line_end":1997,"column_start":12,"column_end":18},"name":"limits","qualname":"<Device>::limits","value":"pub fn limits(&Self) -> Limits","parent":null,"children":[],"decl_id":null,"docs":" List all limits that were requested of this device.","sig":null,"attributes":[{"value":"/ List all limits that were requested of this device.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72764,"byte_end":72819,"line_start":1994,"line_end":1994,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72824,"byte_end":72827,"line_start":1995,"line_end":1995,"column_start":5,"column_end":8}},{"value":"/ If any of these limits are exceeded, functions may panic.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72832,"byte_end":72893,"line_start":1996,"line_end":1996,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":73078,"byte_end":73098,"line_start":2002,"line_end":2002,"column_start":12,"column_end":32},"name":"create_shader_module","qualname":"<Device>::create_shader_module","value":"pub fn create_shader_module(&Self, ShaderModuleDescriptor) -> ShaderModule","parent":null,"children":[],"decl_id":null,"docs":" Creates a shader module from either SPIR-V or WGSL source code.\n","sig":null,"attributes":[{"value":"/ Creates a shader module from either SPIR-V or WGSL source code.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":72999,"byte_end":73066,"line_start":2001,"line_end":2001,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":73998,"byte_end":74028,"line_start":2024,"line_end":2024,"column_start":19,"column_end":49},"name":"create_shader_module_unchecked","qualname":"<Device>::create_shader_module_unchecked","value":"pub unsafe fn create_shader_module_unchecked(&Self, ShaderModuleDescriptor)\n-> ShaderModule","parent":null,"children":[],"decl_id":null,"docs":" Creates a shader module from either SPIR-V or WGSL source code without runtime checks.","sig":null,"attributes":[{"value":"/ Creates a shader module from either SPIR-V or WGSL source code without runtime checks.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":73442,"byte_end":73532,"line_start":2014,"line_end":2014,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":73537,"byte_end":73540,"line_start":2015,"line_end":2015,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":73545,"byte_end":73557,"line_start":2016,"line_end":2016,"column_start":5,"column_end":17}},{"value":"/ In contrast with [`create_shader_module`](Self::create_shader_module) this function","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":73562,"byte_end":73649,"line_start":2017,"line_end":2017,"column_start":5,"column_end":92}},{"value":"/ creates a shader module without runtime checks which allows shaders to perform","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":73654,"byte_end":73736,"line_start":2018,"line_end":2018,"column_start":5,"column_end":87}},{"value":"/ operations which can lead to undefined behavior like indexing out of bounds, thus it's","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":73741,"byte_end":73831,"line_start":2019,"line_end":2019,"column_start":5,"column_end":95}},{"value":"/ the caller responsibility to pass a shader which doesn't perform any of this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":73836,"byte_end":73916,"line_start":2020,"line_end":2020,"column_start":5,"column_end":85}},{"value":"/ operations.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":73921,"byte_end":73936,"line_start":2021,"line_end":2021,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":73941,"byte_end":73944,"line_start":2022,"line_end":2022,"column_start":5,"column_end":8}},{"value":"/ This has no effect on web.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":73949,"byte_end":73979,"line_start":2023,"line_end":2023,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":74778,"byte_end":74804,"line_start":2047,"line_end":2047,"column_start":19,"column_end":45},"name":"create_shader_module_spirv","qualname":"<Device>::create_shader_module_spirv","value":"pub unsafe fn create_shader_module_spirv(&Self, &ShaderModuleDescriptorSpirV)\n-> ShaderModule","parent":null,"children":[],"decl_id":null,"docs":" Creates a shader module from SPIR-V binary directly.","sig":null,"attributes":[{"value":"/ Creates a shader module from SPIR-V binary directly.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":74401,"byte_end":74457,"line_start":2039,"line_end":2039,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":74462,"byte_end":74465,"line_start":2040,"line_end":2040,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":74470,"byte_end":74482,"line_start":2041,"line_end":2041,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":74487,"byte_end":74490,"line_start":2042,"line_end":2042,"column_start":5,"column_end":8}},{"value":"/ This function passes binary data to the backend as-is and can potentially result in a","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":74495,"byte_end":74584,"line_start":2043,"line_end":2043,"column_start":5,"column_end":94}},{"value":"/ driver crash or bogus behaviour. No attempt is made to ensure that data is valid SPIR-V.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":74589,"byte_end":74681,"line_start":2044,"line_end":2044,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":74686,"byte_end":74689,"line_start":2045,"line_end":2045,"column_start":5,"column_end":8}},{"value":"/ See also [`include_spirv_raw!`] and [`util::make_spirv_raw`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":74694,"byte_end":74759,"line_start":2046,"line_end":2046,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":75125,"byte_end":75147,"line_start":2058,"line_end":2058,"column_start":12,"column_end":34},"name":"create_command_encoder","qualname":"<Device>::create_command_encoder","value":"pub fn create_command_encoder(&Self, &CommandEncoderDescriptor)\n-> CommandEncoder","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty [`CommandEncoder`].\n","sig":null,"attributes":[{"value":"/ Creates an empty [`CommandEncoder`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":75073,"byte_end":75113,"line_start":2057,"line_end":2057,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":75516,"byte_end":75544,"line_start":2070,"line_end":2070,"column_start":12,"column_end":40},"name":"create_render_bundle_encoder","qualname":"<Device>::create_render_bundle_encoder","value":"pub fn create_render_bundle_encoder(&Self, &RenderBundleEncoderDescriptor)\n-> RenderBundleEncoder","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty [`RenderBundleEncoder`].\n","sig":null,"attributes":[{"value":"/ Creates an empty [`RenderBundleEncoder`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":75459,"byte_end":75504,"line_start":2069,"line_end":2069,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":75938,"byte_end":75955,"line_start":2083,"line_end":2083,"column_start":12,"column_end":29},"name":"create_bind_group","qualname":"<Device>::create_bind_group","value":"pub fn create_bind_group(&Self, &BindGroupDescriptor) -> BindGroup","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`BindGroup`].\n","sig":null,"attributes":[{"value":"/ Creates a new [`BindGroup`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":75894,"byte_end":75926,"line_start":2082,"line_end":2082,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":76224,"byte_end":76248,"line_start":2091,"line_end":2091,"column_start":12,"column_end":36},"name":"create_bind_group_layout","qualname":"<Device>::create_bind_group_layout","value":"pub fn create_bind_group_layout(&Self, &BindGroupLayoutDescriptor)\n-> BindGroupLayout","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`BindGroupLayout`].\n","sig":null,"attributes":[{"value":"/ Creates a [`BindGroupLayout`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":76178,"byte_end":76212,"line_start":2090,"line_end":2090,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":76541,"byte_end":76563,"line_start":2099,"line_end":2099,"column_start":12,"column_end":34},"name":"create_pipeline_layout","qualname":"<Device>::create_pipeline_layout","value":"pub fn create_pipeline_layout(&Self, &PipelineLayoutDescriptor)\n-> PipelineLayout","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`PipelineLayout`].\n","sig":null,"attributes":[{"value":"/ Creates a [`PipelineLayout`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":76496,"byte_end":76529,"line_start":2098,"line_end":2098,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":76851,"byte_end":76873,"line_start":2107,"line_end":2107,"column_start":12,"column_end":34},"name":"create_render_pipeline","qualname":"<Device>::create_render_pipeline","value":"pub fn create_render_pipeline(&Self, &RenderPipelineDescriptor)\n-> RenderPipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`RenderPipeline`].\n","sig":null,"attributes":[{"value":"/ Creates a [`RenderPipeline`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":76806,"byte_end":76839,"line_start":2106,"line_end":2106,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":77162,"byte_end":77185,"line_start":2115,"line_end":2115,"column_start":12,"column_end":35},"name":"create_compute_pipeline","qualname":"<Device>::create_compute_pipeline","value":"pub fn create_compute_pipeline(&Self, &ComputePipelineDescriptor)\n-> ComputePipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`ComputePipeline`].\n","sig":null,"attributes":[{"value":"/ Creates a [`ComputePipeline`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":77116,"byte_end":77150,"line_start":2114,"line_end":2114,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":77469,"byte_end":77482,"line_start":2123,"line_end":2123,"column_start":12,"column_end":25},"name":"create_buffer","qualname":"<Device>::create_buffer","value":"pub fn create_buffer(&Self, &BufferDescriptor) -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Buffer`].\n","sig":null,"attributes":[{"value":"/ Creates a [`Buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":77432,"byte_end":77457,"line_start":2122,"line_end":2122,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":78042,"byte_end":78056,"line_start":2139,"line_end":2139,"column_start":12,"column_end":26},"name":"create_texture","qualname":"<Device>::create_texture","value":"pub fn create_texture(&Self, &TextureDescriptor) -> Texture","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Texture`].","sig":null,"attributes":[{"value":"/ Creates a new [`Texture`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":77932,"byte_end":77962,"line_start":2136,"line_end":2136,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":77967,"byte_end":77970,"line_start":2137,"line_end":2137,"column_start":5,"column_end":8}},{"value":"/ `desc` specifies the general format of the texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":77975,"byte_end":78030,"line_start":2138,"line_end":2138,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":78641,"byte_end":78664,"line_start":2155,"line_end":2155,"column_start":19,"column_end":42},"name":"create_texture_from_hal","qualname":"<Device>::create_texture_from_hal","value":"pub unsafe fn create_texture_from_hal<A: wgc::hub::HalApi>(&Self, A::Texture,\n&TextureDescriptor) -> Texture","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Texture`] from a wgpu-hal Texture.","sig":null,"attributes":[{"value":"/ Creates a [`Texture`] from a wgpu-hal Texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":78295,"byte_end":78345,"line_start":2147,"line_end":2147,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":78350,"byte_end":78353,"line_start":2148,"line_end":2148,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":78358,"byte_end":78370,"line_start":2149,"line_end":2149,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":78375,"byte_end":78378,"line_start":2150,"line_end":2150,"column_start":5,"column_end":8}},{"value":"/ - `hal_texture` must be created from this device internal handle","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":78383,"byte_end":78451,"line_start":2151,"line_end":2151,"column_start":5,"column_end":73}},{"value":"/ - `hal_texture` must be created respecting `desc`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":78456,"byte_end":78509,"line_start":2152,"line_end":2152,"column_start":5,"column_end":58}},{"value":"/ - `hal_texture` must be initialized","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":78514,"byte_end":78553,"line_start":2153,"line_end":2153,"column_start":5,"column_end":44}},{"value":"cfg(any(not(target_arch = \"wasm32\"), feature = \"emscripten\"))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":78558,"byte_end":78622,"line_start":2154,"line_end":2154,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":79126,"byte_end":79140,"line_start":2172,"line_end":2172,"column_start":12,"column_end":26},"name":"create_sampler","qualname":"<Device>::create_sampler","value":"pub fn create_sampler(&Self, &SamplerDescriptor) -> Sampler","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Sampler`].","sig":null,"attributes":[{"value":"/ Creates a new [`Sampler`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":79022,"byte_end":79052,"line_start":2169,"line_end":2169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":79057,"byte_end":79060,"line_start":2170,"line_end":2170,"column_start":5,"column_end":8}},{"value":"/ `desc` specifies the behavior of the sampler.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":79065,"byte_end":79114,"line_start":2171,"line_end":2171,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":79397,"byte_end":79413,"line_start":2180,"line_end":2180,"column_start":12,"column_end":28},"name":"create_query_set","qualname":"<Device>::create_query_set","value":"pub fn create_query_set(&Self, &QuerySetDescriptor) -> QuerySet","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`QuerySet`].\n","sig":null,"attributes":[{"value":"/ Creates a new [`QuerySet`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":79354,"byte_end":79385,"line_start":2179,"line_end":2179,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":79711,"byte_end":79730,"line_start":2188,"line_end":2188,"column_start":12,"column_end":31},"name":"on_uncaptured_error","qualname":"<Device>::on_uncaptured_error","value":"pub fn on_uncaptured_error<impl UncapturedErrorHandler: UncapturedErrorHandler>(&Self,\nimpl UncapturedErrorHandler)","parent":null,"children":[],"decl_id":null,"docs":" Set a callback for errors that are not handled in error scopes.\n","sig":null,"attributes":[{"value":"/ Set a callback for errors that are not handled in error scopes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":79632,"byte_end":79699,"line_start":2187,"line_end":2187,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":79893,"byte_end":79909,"line_start":2193,"line_end":2193,"column_start":12,"column_end":28},"name":"push_error_scope","qualname":"<Device>::push_error_scope","value":"pub fn push_error_scope(&Self, ErrorFilter)","parent":null,"children":[],"decl_id":null,"docs":" Push an error scope.\n","sig":null,"attributes":[{"value":"/ Push an error scope.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":79857,"byte_end":79881,"line_start":2192,"line_end":2192,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":80050,"byte_end":80065,"line_start":2198,"line_end":2198,"column_start":12,"column_end":27},"name":"pop_error_scope","qualname":"<Device>::pop_error_scope","value":"pub fn pop_error_scope(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Pop an error scope.\n","sig":null,"attributes":[{"value":"/ Pop an error scope.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":80015,"byte_end":80038,"line_start":2197,"line_end":2197,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":80223,"byte_end":80236,"line_start":2203,"line_end":2203,"column_start":12,"column_end":25},"name":"start_capture","qualname":"<Device>::start_capture","value":"pub fn start_capture(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Starts frame capture.\n","sig":null,"attributes":[{"value":"/ Starts frame capture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":80186,"byte_end":80211,"line_start":2202,"line_end":2202,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":80357,"byte_end":80369,"line_start":2208,"line_end":2208,"column_start":12,"column_end":24},"name":"stop_capture","qualname":"<Device>::stop_capture","value":"pub fn stop_capture(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops frame capture.\n","sig":null,"attributes":[{"value":"/ Stops frame capture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":80321,"byte_end":80345,"line_start":2207,"line_end":2207,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":80813,"byte_end":80819,"line_start":2219,"line_end":2219,"column_start":19,"column_end":25},"name":"as_hal","qualname":"<Device>::as_hal","value":"pub unsafe fn as_hal<A: wgc::hub::HalApi, F: FnOnce(Option<&A::Device>) -> R,\nR>(&Self, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner hal Device using a callback. The hal device will be `None` if the\n backend type argument does not match with this wgpu Device","sig":null,"attributes":[{"value":"/ Returns the inner hal Device using a callback. The hal device will be `None` if the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":80453,"byte_end":80540,"line_start":2212,"line_end":2212,"column_start":5,"column_end":92}},{"value":"/ backend type argument does not match with this wgpu Device","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":80545,"byte_end":80607,"line_start":2213,"line_end":2213,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":80612,"byte_end":80615,"line_start":2214,"line_end":2214,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":80620,"byte_end":80632,"line_start":2215,"line_end":2215,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":80637,"byte_end":80640,"line_start":2216,"line_end":2216,"column_start":5,"column_end":8}},{"value":"/ - The raw handle obtained from the hal Device must not be manually destroyed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":80645,"byte_end":80725,"line_start":2217,"line_end":2217,"column_start":5,"column_end":85}},{"value":"cfg(any(not(target_arch = \"wasm32\"), feature = \"emscripten\"))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":80730,"byte_end":80794,"line_start":2218,"line_end":2218,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":2149},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81271,"byte_end":81289,"line_start":2238,"line_end":2238,"column_start":12,"column_end":30},"name":"RequestDeviceError","qualname":"::RequestDeviceError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Requesting a device failed.\n","sig":null,"attributes":[{"value":"/ Requesting a device failed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81189,"byte_end":81220,"line_start":2236,"line_end":2236,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2161},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81609,"byte_end":81625,"line_start":2250,"line_end":2250,"column_start":12,"column_end":28},"name":"BufferAsyncError","qualname":"::BufferAsyncError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error occurred when trying to async map a buffer.\n","sig":null,"attributes":[{"value":"/ Error occurred when trying to async map a buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81505,"byte_end":81558,"line_start":2248,"line_end":2248,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2174},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81980,"byte_end":81984,"line_start":2264,"line_end":2264,"column_start":5,"column_end":9},"name":"Read","qualname":"::MapMode::Read","value":"MapMode::Read","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Map only for reading\n","sig":null,"attributes":[{"value":"/ Map only for reading","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81951,"byte_end":81975,"line_start":2263,"line_end":2263,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2176},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":82019,"byte_end":82024,"line_start":2266,"line_end":2266,"column_start":5,"column_end":10},"name":"Write","qualname":"::MapMode::Write","value":"MapMode::Write","parent":{"krate":0,"index":2173},"children":[],"decl_id":null,"docs":" Map only for writing\n","sig":null,"attributes":[{"value":"/ Map only for writing","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81990,"byte_end":82014,"line_start":2265,"line_end":2265,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":2173},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81937,"byte_end":81944,"line_start":2262,"line_end":2262,"column_start":10,"column_end":17},"name":"MapMode","qualname":"::MapMode","value":"pub enum MapMode { Read, Write, }","parent":null,"children":[{"krate":0,"index":2174},{"krate":0,"index":2176}],"decl_id":null,"docs":" Type of buffer mapping.\n","sig":null,"attributes":[{"value":"/ Type of buffer mapping.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81859,"byte_end":81886,"line_start":2260,"line_end":2260,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2186},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":83630,"byte_end":83640,"line_start":2321,"line_end":2321,"column_start":12,"column_end":22},"name":"BufferView","qualname":"::BufferView","value":"BufferView {  }","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2189}],"decl_id":null,"docs":" Read only view into a mapped buffer.\n","sig":null,"attributes":[{"value":"/ Read only view into a mapped buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":83561,"byte_end":83601,"line_start":2319,"line_end":2319,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2193},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":83775,"byte_end":83788,"line_start":2328,"line_end":2328,"column_start":12,"column_end":25},"name":"BufferViewMut","qualname":"::BufferViewMut","value":"BufferViewMut {  }","parent":null,"children":[{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197}],"decl_id":null,"docs":" Write only view into mapped buffer.\n","sig":null,"attributes":[{"value":"/ Write only view into mapped buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":83707,"byte_end":83746,"line_start":2326,"line_end":2326,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":85160,"byte_end":85177,"line_start":2395,"line_end":2395,"column_start":12,"column_end":29},"name":"as_entire_binding","qualname":"<Buffer>::as_entire_binding","value":"pub fn as_entire_binding(&Self) -> BindingResource","parent":null,"children":[],"decl_id":null,"docs":" Return the binding view of the entire buffer.\n","sig":null,"attributes":[{"value":"/ Return the binding view of the entire buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":85099,"byte_end":85148,"line_start":2394,"line_end":2394,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":85343,"byte_end":85367,"line_start":2400,"line_end":2400,"column_start":12,"column_end":36},"name":"as_entire_buffer_binding","qualname":"<Buffer>::as_entire_buffer_binding","value":"pub fn as_entire_buffer_binding(&Self) -> BufferBinding","parent":null,"children":[],"decl_id":null,"docs":" Return the binding view of the entire buffer.\n","sig":null,"attributes":[{"value":"/ Return the binding view of the entire buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":85282,"byte_end":85331,"line_start":2399,"line_end":2399,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":85714,"byte_end":85719,"line_start":2410,"line_end":2410,"column_start":12,"column_end":17},"name":"slice","qualname":"<Buffer>::slice","value":"pub fn slice<S: RangeBounds<BufferAddress>>(&Self, S) -> BufferSlice","parent":null,"children":[],"decl_id":null,"docs":" Use only a portion of this Buffer for a given operation. Choosing a range with no end\n will use the rest of the buffer. Using a totally unbounded range will use the entire buffer.\n","sig":null,"attributes":[{"value":"/ Use only a portion of this Buffer for a given operation. Choosing a range with no end","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":85512,"byte_end":85601,"line_start":2408,"line_end":2408,"column_start":5,"column_end":94}},{"value":"/ will use the rest of the buffer. Using a totally unbounded range will use the entire buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":85606,"byte_end":85702,"line_start":2409,"line_end":2409,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":86044,"byte_end":86049,"line_start":2420,"line_end":2420,"column_start":12,"column_end":17},"name":"unmap","qualname":"<Buffer>::unmap","value":"pub fn unmap(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flushes any pending write operations and unmaps the buffer from host memory.\n","sig":null,"attributes":[{"value":"/ Flushes any pending write operations and unmaps the buffer from host memory.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":85952,"byte_end":86032,"line_start":2419,"line_end":2419,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":86244,"byte_end":86251,"line_start":2426,"line_end":2426,"column_start":12,"column_end":19},"name":"destroy","qualname":"<Buffer>::destroy","value":"pub fn destroy(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the associated native resources as soon as possible.\n","sig":null,"attributes":[{"value":"/ Destroy the associated native resources as soon as possible.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":86168,"byte_end":86232,"line_start":2425,"line_end":2425,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":87065,"byte_end":87074,"line_start":2441,"line_end":2441,"column_start":12,"column_end":21},"name":"map_async","qualname":"<BufferSlice>::map_async","value":"pub fn map_async<impl FnOnce(Result<(), BufferAsyncError>) + Send + 'static: FnOnce(Result<(),\nBufferAsyncError>) -> () + Send +\n'static>(&Self, MapMode,\nimpl FnOnce(Result<(), BufferAsyncError>) + Send + 'static)","parent":null,"children":[],"decl_id":null,"docs":" Map the buffer. Buffer is ready to map once the callback is called.","sig":null,"attributes":[{"value":"/ Map the buffer. Buffer is ready to map once the callback is called.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":86360,"byte_end":86431,"line_start":2432,"line_end":2432,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":86436,"byte_end":86439,"line_start":2433,"line_end":2433,"column_start":5,"column_end":8}},{"value":"/ For the callback to complete, either `queue.submit(..)`, `instance.poll_all(..)`, or `device.poll(..)`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":86444,"byte_end":86550,"line_start":2434,"line_end":2434,"column_start":5,"column_end":111}},{"value":"/ must be called elsewhere in the runtime, possibly integrated into an event loop or run on a separate thread.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":86555,"byte_end":86667,"line_start":2435,"line_end":2435,"column_start":5,"column_end":117}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":86672,"byte_end":86675,"line_start":2436,"line_end":2436,"column_start":5,"column_end":8}},{"value":"/ The callback will be called on the thread that first calls the above functions after the gpu work","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":86680,"byte_end":86781,"line_start":2437,"line_end":2437,"column_start":5,"column_end":106}},{"value":"/ has completed. There are no restrictions on the code you can run in the callback, however on native the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":86786,"byte_end":86893,"line_start":2438,"line_end":2438,"column_start":5,"column_end":112}},{"value":"/ call to the function will not complete until the callback returns, so prefer keeping callbacks short","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":86898,"byte_end":87002,"line_start":2439,"line_end":2439,"column_start":5,"column_end":109}},{"value":"/ and used to set flags, send messages, etc.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":87007,"byte_end":87053,"line_start":2440,"line_end":2440,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":87981,"byte_end":87997,"line_start":2470,"line_end":2470,"column_start":12,"column_end":28},"name":"get_mapped_range","qualname":"<BufferSlice>::get_mapped_range","value":"pub fn get_mapped_range(&Self) -> BufferView","parent":null,"children":[],"decl_id":null,"docs":" Synchronously and immediately map a buffer for reading. If the buffer is not immediately mappable\n through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.\n","sig":null,"attributes":[{"value":"/ Synchronously and immediately map a buffer for reading. If the buffer is not immediately mappable","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":87768,"byte_end":87869,"line_start":2468,"line_end":2468,"column_start":5,"column_end":106}},{"value":"/ through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":87874,"byte_end":87969,"line_start":2469,"line_end":2469,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":88527,"byte_end":88547,"line_start":2482,"line_end":2482,"column_start":12,"column_end":32},"name":"get_mapped_range_mut","qualname":"<BufferSlice>::get_mapped_range_mut","value":"pub fn get_mapped_range_mut(&Self) -> BufferViewMut","parent":null,"children":[],"decl_id":null,"docs":" Synchronously and immediately map a buffer for writing. If the buffer is not immediately mappable\n through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.\n","sig":null,"attributes":[{"value":"/ Synchronously and immediately map a buffer for writing. If the buffer is not immediately mappable","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":88314,"byte_end":88415,"line_start":2480,"line_end":2480,"column_start":5,"column_end":106}},{"value":"/ through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":88420,"byte_end":88515,"line_start":2481,"line_end":2481,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":89507,"byte_end":89513,"line_start":2513,"line_end":2513,"column_start":19,"column_end":25},"name":"as_hal","qualname":"<Texture>::as_hal","value":"pub unsafe fn as_hal<A: wgc::hub::HalApi, F: FnOnce(Option<&A::Texture>) ->\n()>(&Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner hal Texture using a callback. The hal texture will be `None` if the\n backend type argument does not match with this wgpu Texture","sig":null,"attributes":[{"value":"/ Returns the inner hal Texture using a callback. The hal texture will be `None` if the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":89143,"byte_end":89232,"line_start":2506,"line_end":2506,"column_start":5,"column_end":94}},{"value":"/ backend type argument does not match with this wgpu Texture","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":89237,"byte_end":89300,"line_start":2507,"line_end":2507,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":89305,"byte_end":89308,"line_start":2508,"line_end":2508,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":89313,"byte_end":89325,"line_start":2509,"line_end":2509,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":89330,"byte_end":89333,"line_start":2510,"line_end":2510,"column_start":5,"column_end":8}},{"value":"/ - The raw handle obtained from the hal Texture must not be manually destroyed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":89338,"byte_end":89419,"line_start":2511,"line_end":2511,"column_start":5,"column_end":86}},{"value":"cfg(any(not(target_arch = \"wasm32\"), feature = \"emscripten\"))","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":89424,"byte_end":89488,"line_start":2512,"line_end":2512,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":89771,"byte_end":89782,"line_start":2522,"line_end":2522,"column_start":12,"column_end":23},"name":"create_view","qualname":"<Texture>::create_view","value":"pub fn create_view(&Self, &TextureViewDescriptor) -> TextureView","parent":null,"children":[],"decl_id":null,"docs":" Creates a view of this texture.\n","sig":null,"attributes":[{"value":"/ Creates a view of this texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":89724,"byte_end":89759,"line_start":2521,"line_end":2521,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":90082,"byte_end":90089,"line_start":2530,"line_end":2530,"column_start":12,"column_end":19},"name":"destroy","qualname":"<Texture>::destroy","value":"pub fn destroy(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the associated native resources as soon as possible.\n","sig":null,"attributes":[{"value":"/ Destroy the associated native resources as soon as possible.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":90006,"byte_end":90070,"line_start":2529,"line_end":2529,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":90244,"byte_end":90257,"line_start":2535,"line_end":2535,"column_start":12,"column_end":25},"name":"as_image_copy","qualname":"<Texture>::as_image_copy","value":"pub fn as_image_copy(&Self) -> ImageCopyTexture","parent":null,"children":[],"decl_id":null,"docs":" Make an `ImageCopyTexture` representing the whole texture.\n","sig":null,"attributes":[{"value":"/ Make an `ImageCopyTexture` representing the whole texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":90170,"byte_end":90232,"line_start":2534,"line_end":2534,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":90916,"byte_end":90922,"line_start":2563,"line_end":2563,"column_start":12,"column_end":18},"name":"finish","qualname":"<CommandEncoder>::finish","value":"pub fn finish(Self) -> CommandBuffer","parent":null,"children":[],"decl_id":null,"docs":" Finishes recording and returns a [`CommandBuffer`] that can be submitted for execution.\n","sig":null,"attributes":[{"value":"/ Finishes recording and returns a [`CommandBuffer`] that can be submitted for execution.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":90813,"byte_end":90904,"line_start":2562,"line_end":2562,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":91336,"byte_end":91353,"line_start":2576,"line_end":2576,"column_start":12,"column_end":29},"name":"begin_render_pass","qualname":"<CommandEncoder>::begin_render_pass","value":"pub fn begin_render_pass<'pass>(&'pass mut Self, &RenderPassDescriptor)\n-> RenderPass","parent":null,"children":[],"decl_id":null,"docs":" Begins recording of a render pass.","sig":null,"attributes":[{"value":"/ Begins recording of a render pass.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":91188,"byte_end":91226,"line_start":2573,"line_end":2573,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":91231,"byte_end":91234,"line_start":2574,"line_end":2574,"column_start":5,"column_end":8}},{"value":"/ This function returns a [`RenderPass`] object which records a single render pass.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":91239,"byte_end":91324,"line_start":2575,"line_end":2575,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":91813,"byte_end":91831,"line_start":2590,"line_end":2590,"column_start":12,"column_end":30},"name":"begin_compute_pass","qualname":"<CommandEncoder>::begin_compute_pass","value":"pub fn begin_compute_pass(&mut Self, &ComputePassDescriptor) -> ComputePass","parent":null,"children":[],"decl_id":null,"docs":" Begins recording of a compute pass.","sig":null,"attributes":[{"value":"/ Begins recording of a compute pass.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":91662,"byte_end":91701,"line_start":2587,"line_end":2587,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":91706,"byte_end":91709,"line_start":2588,"line_end":2588,"column_start":5,"column_end":8}},{"value":"/ This function returns a [`ComputePass`] object which records a single compute pass.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":91714,"byte_end":91801,"line_start":2589,"line_end":2589,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92335,"byte_end":92356,"line_start":2605,"line_end":2605,"column_start":12,"column_end":33},"name":"copy_buffer_to_buffer","qualname":"<CommandEncoder>::copy_buffer_to_buffer","value":"pub fn copy_buffer_to_buffer(&mut Self, &Buffer, BufferAddress, &Buffer,\nBufferAddress, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from one buffer to another.","sig":null,"attributes":[{"value":"/ Copy data from one buffer to another.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92090,"byte_end":92131,"line_start":2598,"line_end":2598,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92136,"byte_end":92139,"line_start":2599,"line_end":2599,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92144,"byte_end":92156,"line_start":2600,"line_end":2600,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92161,"byte_end":92164,"line_start":2601,"line_end":2601,"column_start":5,"column_end":8}},{"value":"/ - Buffer offsets or copy size not a multiple of [`COPY_BUFFER_ALIGNMENT`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92169,"byte_end":92247,"line_start":2602,"line_end":2602,"column_start":5,"column_end":83}},{"value":"/ - Copy would overrun buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92252,"byte_end":92284,"line_start":2603,"line_end":2603,"column_start":5,"column_end":37}},{"value":"/ - Copy within the same buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92289,"byte_end":92323,"line_start":2604,"line_end":2604,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":93089,"byte_end":93111,"line_start":2631,"line_end":2631,"column_start":12,"column_end":34},"name":"copy_buffer_to_texture","qualname":"<CommandEncoder>::copy_buffer_to_texture","value":"pub fn copy_buffer_to_texture(&mut Self, ImageCopyBuffer, ImageCopyTexture,\nExtent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from a buffer to a texture.","sig":null,"attributes":[{"value":"/ Copy data from a buffer to a texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92835,"byte_end":92876,"line_start":2624,"line_end":2624,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92881,"byte_end":92884,"line_start":2625,"line_end":2625,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92889,"byte_end":92901,"line_start":2626,"line_end":2626,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92906,"byte_end":92909,"line_start":2627,"line_end":2627,"column_start":5,"column_end":8}},{"value":"/ - Copy would overrun buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92914,"byte_end":92946,"line_start":2628,"line_end":2628,"column_start":5,"column_end":37}},{"value":"/ - Copy would overrun texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92951,"byte_end":92984,"line_start":2629,"line_end":2629,"column_start":5,"column_end":38}},{"value":"/ - `source.layout.bytes_per_row` isn't divisible by [`COPY_BYTES_PER_ROW_ALIGNMENT`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":92989,"byte_end":93077,"line_start":2630,"line_end":2630,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":93709,"byte_end":93731,"line_start":2653,"line_end":2653,"column_start":12,"column_end":34},"name":"copy_texture_to_buffer","qualname":"<CommandEncoder>::copy_texture_to_buffer","value":"pub fn copy_texture_to_buffer(&mut Self, ImageCopyTexture, ImageCopyBuffer,\nExtent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from a texture to a buffer.","sig":null,"attributes":[{"value":"/ Copy data from a texture to a buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":93455,"byte_end":93496,"line_start":2646,"line_end":2646,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":93501,"byte_end":93504,"line_start":2647,"line_end":2647,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":93509,"byte_end":93521,"line_start":2648,"line_end":2648,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":93526,"byte_end":93529,"line_start":2649,"line_end":2649,"column_start":5,"column_end":8}},{"value":"/ - Copy would overrun buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":93534,"byte_end":93566,"line_start":2650,"line_end":2650,"column_start":5,"column_end":37}},{"value":"/ - Copy would overrun texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":93571,"byte_end":93604,"line_start":2651,"line_end":2651,"column_start":5,"column_end":38}},{"value":"/ - `source.layout.bytes_per_row` isn't divisible by [`COPY_BYTES_PER_ROW_ALIGNMENT`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":93609,"byte_end":93697,"line_start":2652,"line_end":2652,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94338,"byte_end":94361,"line_start":2675,"line_end":2675,"column_start":12,"column_end":35},"name":"copy_texture_to_texture","qualname":"<CommandEncoder>::copy_texture_to_texture","value":"pub fn copy_texture_to_texture(&mut Self, ImageCopyTexture, ImageCopyTexture,\nExtent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from one texture to another.","sig":null,"attributes":[{"value":"/ Copy data from one texture to another.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94075,"byte_end":94117,"line_start":2668,"line_end":2668,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94122,"byte_end":94125,"line_start":2669,"line_end":2669,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94130,"byte_end":94142,"line_start":2670,"line_end":2670,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94147,"byte_end":94150,"line_start":2671,"line_end":2671,"column_start":5,"column_end":8}},{"value":"/ - Textures are not the same type","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94155,"byte_end":94191,"line_start":2672,"line_end":2672,"column_start":5,"column_end":41}},{"value":"/ - If a depth texture, or a multisampled texture, the entire texture must be copied","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94196,"byte_end":94282,"line_start":2673,"line_end":2673,"column_start":5,"column_end":91}},{"value":"/ - Copy would overrun either texture","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94287,"byte_end":94326,"line_start":2674,"line_end":2674,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":95233,"byte_end":95246,"line_start":2703,"line_end":2703,"column_start":12,"column_end":25},"name":"clear_texture","qualname":"<CommandEncoder>::clear_texture","value":"pub fn clear_texture(&mut Self, &Texture, &ImageSubresourceRange)","parent":null,"children":[],"decl_id":null,"docs":" Clears texture to zero.","sig":null,"attributes":[{"value":"/ Clears texture to zero.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94707,"byte_end":94734,"line_start":2690,"line_end":2690,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94739,"byte_end":94742,"line_start":2691,"line_end":2691,"column_start":5,"column_end":8}},{"value":"/ Note that unlike with clear_buffer, `COPY_DST` usage is not required.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94747,"byte_end":94820,"line_start":2692,"line_end":2692,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94825,"byte_end":94828,"line_start":2693,"line_end":2693,"column_start":5,"column_end":8}},{"value":"/ # Implementation notes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94833,"byte_end":94859,"line_start":2694,"line_end":2694,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94864,"byte_end":94867,"line_start":2695,"line_end":2695,"column_start":5,"column_end":8}},{"value":"/ - implemented either via buffer copies and render/depth target clear, path depends on texture usages","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94872,"byte_end":94976,"line_start":2696,"line_end":2696,"column_start":5,"column_end":109}},{"value":"/ - behaves like texture zero init, but is performed immediately (clearing is *not* delayed via marking it as uninitialized)","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":94981,"byte_end":95107,"line_start":2697,"line_end":2697,"column_start":5,"column_end":131}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":95112,"byte_end":95115,"line_start":2698,"line_end":2698,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":95120,"byte_end":95132,"line_start":2699,"line_end":2699,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":95137,"byte_end":95140,"line_start":2700,"line_end":2700,"column_start":5,"column_end":8}},{"value":"/ - `CLEAR_TEXTURE` extension not enabled","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":95145,"byte_end":95188,"line_start":2701,"line_end":2701,"column_start":5,"column_end":48}},{"value":"/ - Range is out of bounds","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":95193,"byte_end":95221,"line_start":2702,"line_end":2702,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":95664,"byte_end":95676,"line_start":2718,"line_end":2718,"column_start":12,"column_end":24},"name":"clear_buffer","qualname":"<CommandEncoder>::clear_buffer","value":"pub fn clear_buffer(&mut Self, &Buffer, BufferAddress, Option<BufferSize>)","parent":null,"children":[],"decl_id":null,"docs":" Clears buffer to zero.","sig":null,"attributes":[{"value":"/ Clears buffer to zero.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":95511,"byte_end":95537,"line_start":2712,"line_end":2712,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":95542,"byte_end":95545,"line_start":2713,"line_end":2713,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":95550,"byte_end":95562,"line_start":2714,"line_end":2714,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":95567,"byte_end":95570,"line_start":2715,"line_end":2715,"column_start":5,"column_end":8}},{"value":"/ - Buffer does not have `COPY_DST` usage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":95575,"byte_end":95619,"line_start":2716,"line_end":2716,"column_start":5,"column_end":49}},{"value":"/ - Range it out of bounds","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":95624,"byte_end":95652,"line_start":2717,"line_end":2717,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":96026,"byte_end":96045,"line_start":2734,"line_end":2734,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<CommandEncoder>::insert_debug_marker","value":"pub fn insert_debug_marker(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":95989,"byte_end":96014,"line_start":2733,"line_end":2733,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":96283,"byte_end":96299,"line_start":2740,"line_end":2740,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<CommandEncoder>::push_debug_group","value":"pub fn push_debug_group(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":96208,"byte_end":96271,"line_start":2739,"line_end":2739,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":96523,"byte_end":96538,"line_start":2746,"line_end":2746,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<CommandEncoder>::pop_debug_group","value":"pub fn pop_debug_group(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":96459,"byte_end":96511,"line_start":2745,"line_end":2745,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":97216,"byte_end":97231,"line_start":2761,"line_end":2761,"column_start":12,"column_end":27},"name":"write_timestamp","qualname":"<CommandEncoder>::write_timestamp","value":"pub fn write_timestamp(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Issue a timestamp command at this point in the queue.\n The timestamp will be written to the specified query set, at the specified index.","sig":null,"attributes":[{"value":"/ Issue a timestamp command at this point in the queue.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":96799,"byte_end":96856,"line_start":2754,"line_end":2754,"column_start":5,"column_end":62}},{"value":"/ The timestamp will be written to the specified query set, at the specified index.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":96861,"byte_end":96946,"line_start":2755,"line_end":2755,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":96951,"byte_end":96954,"line_start":2756,"line_end":2756,"column_start":5,"column_end":8}},{"value":"/ Must be multiplied by [`Queue::get_timestamp_period`] to get","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":96959,"byte_end":97023,"line_start":2757,"line_end":2757,"column_start":5,"column_end":69}},{"value":"/ the value in nanoseconds. Absolute values have no meaning,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":97028,"byte_end":97090,"line_start":2758,"line_end":2758,"column_start":5,"column_end":67}},{"value":"/ but timestamps can be subtracted to get the time it takes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":97095,"byte_end":97156,"line_start":2759,"line_end":2759,"column_start":5,"column_end":66}},{"value":"/ for a string of operations to complete.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":97161,"byte_end":97204,"line_start":2760,"line_end":2760,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":97848,"byte_end":97865,"line_start":2776,"line_end":2776,"column_start":12,"column_end":29},"name":"resolve_query_set","qualname":"<CommandEncoder>::resolve_query_set","value":"pub fn resolve_query_set(&mut Self, &QuerySet, Range<u32>, &Buffer,\nBufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Resolve a query set, writing the results into the supplied destination buffer.","sig":null,"attributes":[{"value":"/ Resolve a query set, writing the results into the supplied destination buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":97640,"byte_end":97722,"line_start":2773,"line_end":2773,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":97727,"byte_end":97730,"line_start":2774,"line_end":2774,"column_start":5,"column_end":8}},{"value":"/ Queries may be between 8 and 40 bytes each. See [`PipelineStatisticsTypes`] for more information.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":97735,"byte_end":97836,"line_start":2775,"line_end":2775,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":98823,"byte_end":98837,"line_start":2802,"line_end":2802,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<RenderPass>::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when any `draw()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":98366,"byte_end":98448,"line_start":2796,"line_end":2796,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when any `draw()` function is called must match the layout of this bind group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":98453,"byte_end":98558,"line_start":2797,"line_end":2797,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":98563,"byte_end":98566,"line_start":2798,"line_end":2798,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in binding order.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":98571,"byte_end":98645,"line_start":2799,"line_end":2799,"column_start":5,"column_end":79}},{"value":"/ These offsets have to be aligned to [`Limits::min_uniform_buffer_offset_alignment`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":98650,"byte_end":98737,"line_start":2800,"line_end":2800,"column_start":5,"column_end":92}},{"value":"/ or [`Limits::min_storage_buffer_offset_alignment`] appropriately.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":98742,"byte_end":98811,"line_start":2801,"line_end":2801,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":99184,"byte_end":99196,"line_start":2814,"line_end":2814,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<RenderPass>::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a RenderPipeline)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active render pipeline.","sig":null,"attributes":[{"value":"/ Sets the active render pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":99049,"byte_end":99085,"line_start":2811,"line_end":2811,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":99090,"byte_end":99093,"line_start":2812,"line_end":2812,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will exhibit the behavior defined by `pipeline`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":99098,"byte_end":99172,"line_start":2813,"line_end":2813,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":99460,"byte_end":99478,"line_start":2821,"line_end":2821,"column_start":12,"column_end":30},"name":"set_blend_constant","qualname":"<RenderPass>::set_blend_constant","value":"pub fn set_blend_constant(&mut Self, Color)","parent":null,"children":[],"decl_id":null,"docs":" Sets the blend color as used by some of the blending modes.","sig":null,"attributes":[{"value":"/ Sets the blend color as used by some of the blending modes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":99313,"byte_end":99376,"line_start":2818,"line_end":2818,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":99381,"byte_end":99384,"line_start":2819,"line_end":2819,"column_start":5,"column_end":8}},{"value":"/ Subsequent blending tests will test against this value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":99389,"byte_end":99448,"line_start":2820,"line_end":2820,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":99760,"byte_end":99776,"line_start":2829,"line_end":2829,"column_start":12,"column_end":28},"name":"set_index_buffer","qualname":"<RenderPass>::set_index_buffer","value":"pub fn set_index_buffer(&mut Self, BufferSlice, IndexFormat)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active index buffer.","sig":null,"attributes":[{"value":"/ Sets the active index buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":99559,"byte_end":99592,"line_start":2825,"line_end":2825,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":99597,"byte_end":99600,"line_start":2826,"line_end":2826,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw_indexed`](RenderPass::draw_indexed) on this [`RenderPass`] will","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":99605,"byte_end":99699,"line_start":2827,"line_end":2827,"column_start":5,"column_end":99}},{"value":"/ use `buffer` as the source index buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":99704,"byte_end":99748,"line_start":2828,"line_end":2828,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100467,"byte_end":100484,"line_start":2849,"line_end":2849,"column_start":12,"column_end":29},"name":"set_vertex_buffer","qualname":"<RenderPass>::set_vertex_buffer","value":"pub fn set_vertex_buffer(&mut Self, u32, BufferSlice)","parent":null,"children":[],"decl_id":null,"docs":" Assign a vertex buffer to a slot.","sig":null,"attributes":[{"value":"/ Assign a vertex buffer to a slot.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100061,"byte_end":100098,"line_start":2839,"line_end":2839,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100103,"byte_end":100106,"line_start":2840,"line_end":2840,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw`] and [`draw_indexed`] on this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100111,"byte_end":100172,"line_start":2841,"line_end":2841,"column_start":5,"column_end":66}},{"value":"/ [`RenderPass`] will use `buffer` as one of the source vertex buffers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100177,"byte_end":100250,"line_start":2842,"line_end":2842,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100255,"byte_end":100258,"line_start":2843,"line_end":2843,"column_start":5,"column_end":8}},{"value":"/ The `slot` refers to the index of the matching descriptor in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100263,"byte_end":100327,"line_start":2844,"line_end":2844,"column_start":5,"column_end":69}},{"value":"/ [`VertexState::buffers`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100332,"byte_end":100361,"line_start":2845,"line_end":2845,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100366,"byte_end":100369,"line_start":2846,"line_end":2846,"column_start":5,"column_end":8}},{"value":"/ [`draw`]: RenderPass::draw","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100374,"byte_end":100404,"line_start":2847,"line_end":2847,"column_start":5,"column_end":35}},{"value":"/ [`draw_indexed`]: RenderPass::draw_indexed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100409,"byte_end":100455,"line_start":2848,"line_end":2848,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100882,"byte_end":100898,"line_start":2862,"line_end":2862,"column_start":12,"column_end":28},"name":"set_scissor_rect","qualname":"<RenderPass>::set_scissor_rect","value":"pub fn set_scissor_rect(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the scissor region.","sig":null,"attributes":[{"value":"/ Sets the scissor region.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100746,"byte_end":100774,"line_start":2859,"line_end":2859,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100779,"byte_end":100782,"line_start":2860,"line_end":2860,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will discard any fragments that fall outside this region.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":100787,"byte_end":100870,"line_start":2861,"line_end":2861,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101138,"byte_end":101150,"line_start":2869,"line_end":2869,"column_start":12,"column_end":24},"name":"set_viewport","qualname":"<RenderPass>::set_viewport","value":"pub fn set_viewport(&mut Self, f32, f32, f32, f32, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the viewport region.","sig":null,"attributes":[{"value":"/ Sets the viewport region.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101019,"byte_end":101048,"line_start":2866,"line_end":2866,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101053,"byte_end":101056,"line_start":2867,"line_end":2867,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will draw any fragments in this region.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101061,"byte_end":101126,"line_start":2868,"line_end":2868,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101417,"byte_end":101438,"line_start":2876,"line_end":2876,"column_start":12,"column_end":33},"name":"set_stencil_reference","qualname":"<RenderPass>::set_stencil_reference","value":"pub fn set_stencil_reference(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the stencil reference.","sig":null,"attributes":[{"value":"/ Sets the stencil reference.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101303,"byte_end":101334,"line_start":2873,"line_end":2873,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101339,"byte_end":101342,"line_start":2874,"line_end":2874,"column_start":5,"column_end":8}},{"value":"/ Subsequent stencil tests will test against this value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101347,"byte_end":101405,"line_start":2875,"line_end":2875,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101688,"byte_end":101692,"line_start":2883,"line_end":2883,"column_start":12,"column_end":16},"name":"draw","qualname":"<RenderPass>::draw","value":"pub fn draw(&mut Self, Range<u32>, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s).","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101529,"byte_end":101583,"line_start":2880,"line_end":2880,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101588,"byte_end":101591,"line_start":2881,"line_end":2881,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101596,"byte_end":101676,"line_start":2882,"line_end":2882,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101860,"byte_end":101879,"line_start":2888,"line_end":2888,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<RenderPass>::insert_debug_marker","value":"pub fn insert_debug_marker(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101823,"byte_end":101848,"line_start":2887,"line_end":2887,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":102036,"byte_end":102052,"line_start":2893,"line_end":2893,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<RenderPass>::push_debug_group","value":"pub fn push_debug_group(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":101961,"byte_end":102024,"line_start":2892,"line_end":2892,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":102195,"byte_end":102210,"line_start":2898,"line_end":2898,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<RenderPass>::pop_debug_group","value":"pub fn pop_debug_group(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":102131,"byte_end":102183,"line_start":2897,"line_end":2897,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":102552,"byte_end":102564,"line_start":2906,"line_end":2906,"column_start":12,"column_end":24},"name":"draw_indexed","qualname":"<RenderPass>::draw_indexed","value":"pub fn draw_indexed(&mut Self, Range<u32>, i32, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":102270,"byte_end":102359,"line_start":2902,"line_end":2902,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":102364,"byte_end":102367,"line_start":2903,"line_end":2903,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":102372,"byte_end":102466,"line_start":2904,"line_end":2904,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":102471,"byte_end":102540,"line_start":2905,"line_end":2905,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":103060,"byte_end":103073,"line_start":2915,"line_end":2915,"column_start":12,"column_end":25},"name":"draw_indirect","qualname":"<RenderPass>::draw_indirect","value":"pub fn draw_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":102733,"byte_end":102834,"line_start":2910,"line_end":2910,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":102839,"byte_end":102842,"line_start":2911,"line_end":2911,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":102847,"byte_end":102927,"line_start":2912,"line_end":2912,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":102932,"byte_end":102935,"line_start":2913,"line_end":2913,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` must conform to [`DrawIndirect`](crate::util::DrawIndirect).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":102940,"byte_end":103048,"line_start":2914,"line_end":2914,"column_start":5,"column_end":113}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":103701,"byte_end":103722,"line_start":2926,"line_end":2926,"column_start":12,"column_end":33},"name":"draw_indexed_indirect","qualname":"<RenderPass>::draw_indexed_indirect","value":"pub fn draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":103228,"byte_end":103317,"line_start":2919,"line_end":2919,"column_start":5,"column_end":94}},{"value":"/ based on the contents of the `indirect_buffer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":103322,"byte_end":103373,"line_start":2920,"line_end":2920,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":103378,"byte_end":103381,"line_start":2921,"line_end":2921,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":103386,"byte_end":103480,"line_start":2922,"line_end":2922,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":103485,"byte_end":103554,"line_start":2923,"line_end":2923,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":103559,"byte_end":103562,"line_start":2924,"line_end":2924,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` must conform to [`DrawIndexedIndirect`](crate::util::DrawIndexedIndirect).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":103567,"byte_end":103689,"line_start":2925,"line_end":2925,"column_start":5,"column_end":127}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":104059,"byte_end":104074,"line_start":2937,"line_end":2937,"column_start":12,"column_end":27},"name":"execute_bundles","qualname":"<RenderPass>::execute_bundles","value":"pub fn execute_bundles<I: IntoIterator<Item = &'a RenderBundle>>(&mut Self, I)","parent":null,"children":[],"decl_id":null,"docs":" Execute a [render bundle][RenderBundle], which is a set of pre-recorded commands\n that can be run together.\n","sig":null,"attributes":[{"value":"/ Execute a [render bundle][RenderBundle], which is a set of pre-recorded commands","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":103929,"byte_end":104013,"line_start":2935,"line_end":2935,"column_start":5,"column_end":89}},{"value":"/ that can be run together.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":104018,"byte_end":104047,"line_start":2936,"line_end":2936,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":104833,"byte_end":104852,"line_start":2953,"line_end":2953,"column_start":12,"column_end":31},"name":"multi_draw_indirect","qualname":"<RenderPass>::multi_draw_indirect","value":"pub fn multi_draw_indirect(&mut Self, &'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.\n `count` draw calls are issued.","sig":null,"attributes":[{"value":"/ Dispatches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":104380,"byte_end":104495,"line_start":2945,"line_end":2945,"column_start":5,"column_end":120}},{"value":"/ `count` draw calls are issued.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":104500,"byte_end":104534,"line_start":2946,"line_end":2946,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":104539,"byte_end":104542,"line_start":2947,"line_end":2947,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":104547,"byte_end":104627,"line_start":2948,"line_end":2948,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":104632,"byte_end":104635,"line_start":2949,"line_end":2949,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` must conform to [`DrawIndirect`](crate::util::DrawIndirect).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":104640,"byte_end":104748,"line_start":2950,"line_end":2950,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":104753,"byte_end":104756,"line_start":2951,"line_end":2951,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":104761,"byte_end":104821,"line_start":2952,"line_end":2952,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":105666,"byte_end":105693,"line_start":2972,"line_end":2972,"column_start":12,"column_end":39},"name":"multi_draw_indexed_indirect","qualname":"<RenderPass>::multi_draw_indexed_indirect","value":"pub fn multi_draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches multiple draw calls from the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`. `count` draw calls are issued.","sig":null,"attributes":[{"value":"/ Dispatches multiple draw calls from the active index buffer and the active vertex buffers,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":105084,"byte_end":105178,"line_start":2963,"line_end":2963,"column_start":5,"column_end":99}},{"value":"/ based on the contents of the `indirect_buffer`. `count` draw calls are issued.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":105183,"byte_end":105265,"line_start":2964,"line_end":2964,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":105270,"byte_end":105273,"line_start":2965,"line_end":2965,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":105278,"byte_end":105372,"line_start":2966,"line_end":2966,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":105377,"byte_end":105446,"line_start":2967,"line_end":2967,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":105451,"byte_end":105454,"line_start":2968,"line_end":2968,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` must conform to [`DrawIndexedIndirect`](crate::util::DrawIndexedIndirect).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":105459,"byte_end":105581,"line_start":2969,"line_end":2969,"column_start":5,"column_end":127}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":105586,"byte_end":105589,"line_start":2970,"line_end":2970,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":105594,"byte_end":105654,"line_start":2971,"line_end":2971,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106997,"byte_end":107022,"line_start":3005,"line_end":3005,"column_start":12,"column_end":37},"name":"multi_draw_indirect_count","qualname":"<RenderPass>::multi_draw_indirect_count","value":"pub fn multi_draw_indirect_count(&mut Self, &'a Buffer, BufferAddress,\n&'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Disptaches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.\n The count buffer is read to determine how many draws to issue.","sig":null,"attributes":[{"value":"/ Disptaches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106069,"byte_end":106184,"line_start":2985,"line_end":2985,"column_start":5,"column_end":120}},{"value":"/ The count buffer is read to determine how many draws to issue.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106189,"byte_end":106255,"line_start":2986,"line_end":2986,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106260,"byte_end":106263,"line_start":2987,"line_end":2987,"column_start":5,"column_end":8}},{"value":"/ The indirect buffer must be long enough to account for `max_count` draws, however only `count` will","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106268,"byte_end":106371,"line_start":2988,"line_end":2988,"column_start":5,"column_end":108}},{"value":"/ draws will be read. If `count` is greater than `max_count`, `max_count` will be used.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106376,"byte_end":106465,"line_start":2989,"line_end":2989,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106470,"byte_end":106473,"line_start":2990,"line_end":2990,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106478,"byte_end":106558,"line_start":2991,"line_end":2991,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106563,"byte_end":106566,"line_start":2992,"line_end":2992,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` must conform to [`DrawIndirect`](crate::util::DrawIndirect).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106571,"byte_end":106679,"line_start":2993,"line_end":2993,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106684,"byte_end":106687,"line_start":2994,"line_end":2994,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106692,"byte_end":106752,"line_start":2995,"line_end":2995,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106757,"byte_end":106760,"line_start":2996,"line_end":2996,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `count_buffer` is the following:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106765,"byte_end":106827,"line_start":2997,"line_end":2997,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106832,"byte_end":106835,"line_start":2998,"line_end":2998,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106840,"byte_end":106851,"line_start":2999,"line_end":2999,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106856,"byte_end":106870,"line_start":3000,"line_end":3000,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirectCount {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106875,"byte_end":106905,"line_start":3001,"line_end":3001,"column_start":5,"column_end":35}},{"value":"/     count: u32, // Number of draw calls to issue.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106910,"byte_end":106963,"line_start":3002,"line_end":3002,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106968,"byte_end":106973,"line_start":3003,"line_end":3003,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106978,"byte_end":106985,"line_start":3004,"line_end":3004,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108501,"byte_end":108534,"line_start":3044,"line_end":3044,"column_start":12,"column_end":45},"name":"multi_draw_indexed_indirect_count","qualname":"<RenderPass>::multi_draw_indexed_indirect_count","value":"pub fn multi_draw_indexed_indirect_count(&mut Self, &'a Buffer, BufferAddress,\n&'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches multiple draw calls from the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`. The count buffer is read to determine how many draws to issue.","sig":null,"attributes":[{"value":"/ Dispatches multiple draw calls from the active index buffer and the active vertex buffers,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":107429,"byte_end":107523,"line_start":3022,"line_end":3022,"column_start":5,"column_end":99}},{"value":"/ based on the contents of the `indirect_buffer`. The count buffer is read to determine how many draws to issue.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":107528,"byte_end":107642,"line_start":3023,"line_end":3023,"column_start":5,"column_end":119}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":107647,"byte_end":107650,"line_start":3024,"line_end":3024,"column_start":5,"column_end":8}},{"value":"/ The indirect buffer must be long enough to account for `max_count` draws, however only `count` will","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":107655,"byte_end":107758,"line_start":3025,"line_end":3025,"column_start":5,"column_end":108}},{"value":"/ draws will be read. If `count` is greater than `max_count`, `max_count` will be used.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":107763,"byte_end":107852,"line_start":3026,"line_end":3026,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":107857,"byte_end":107860,"line_start":3027,"line_end":3027,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":107865,"byte_end":107959,"line_start":3028,"line_end":3028,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":107964,"byte_end":108033,"line_start":3029,"line_end":3029,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108038,"byte_end":108041,"line_start":3030,"line_end":3030,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108046,"byte_end":108049,"line_start":3031,"line_end":3031,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` must conform to [`DrawIndexedIndirect`](crate::util::DrawIndexedIndirect).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108054,"byte_end":108176,"line_start":3032,"line_end":3032,"column_start":5,"column_end":127}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108181,"byte_end":108184,"line_start":3033,"line_end":3033,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108189,"byte_end":108249,"line_start":3034,"line_end":3034,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108254,"byte_end":108257,"line_start":3035,"line_end":3035,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `count_buffer` is the following:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108262,"byte_end":108324,"line_start":3036,"line_end":3036,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108329,"byte_end":108332,"line_start":3037,"line_end":3037,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108337,"byte_end":108348,"line_start":3038,"line_end":3038,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108353,"byte_end":108367,"line_start":3039,"line_end":3039,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirectCount {","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108372,"byte_end":108409,"line_start":3040,"line_end":3040,"column_start":5,"column_end":42}},{"value":"/     count: u32, // Number of draw calls to issue.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108414,"byte_end":108467,"line_start":3041,"line_end":3041,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108472,"byte_end":108477,"line_start":3042,"line_end":3042,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":108482,"byte_end":108489,"line_start":3043,"line_end":3043,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":111216,"byte_end":111234,"line_start":3104,"line_end":3104,"column_start":12,"column_end":30},"name":"set_push_constants","qualname":"<RenderPass>::set_push_constants","value":"pub fn set_push_constants(&mut Self, ShaderStages, u32, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set push constant data for subsequent draw calls.","sig":null,"attributes":[{"value":"/ Set push constant data for subsequent draw calls.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109074,"byte_end":109127,"line_start":3064,"line_end":3064,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109132,"byte_end":109135,"line_start":3065,"line_end":3065,"column_start":5,"column_end":8}},{"value":"/ Write the bytes in `data` at offset `offset` within push constant","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109140,"byte_end":109209,"line_start":3066,"line_end":3066,"column_start":5,"column_end":74}},{"value":"/ storage, all of which are accessible by all the pipeline stages in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109214,"byte_end":109284,"line_start":3067,"line_end":3067,"column_start":5,"column_end":75}},{"value":"/ `stages`, and no others.  Both `offset` and the length of `data` must be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109289,"byte_end":109365,"line_start":3068,"line_end":3068,"column_start":5,"column_end":81}},{"value":"/ multiples of [`PUSH_CONSTANT_ALIGNMENT`], which is always 4.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109370,"byte_end":109434,"line_start":3069,"line_end":3069,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109439,"byte_end":109442,"line_start":3070,"line_end":3070,"column_start":5,"column_end":8}},{"value":"/ For example, if `offset` is `4` and `data` is eight bytes long, this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109447,"byte_end":109519,"line_start":3071,"line_end":3071,"column_start":5,"column_end":77}},{"value":"/ call will write `data` to bytes `4..12` of push constant storage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109524,"byte_end":109593,"line_start":3072,"line_end":3072,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109598,"byte_end":109601,"line_start":3073,"line_end":3073,"column_start":5,"column_end":8}},{"value":"/ # Stage matching","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109606,"byte_end":109626,"line_start":3074,"line_end":3074,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109631,"byte_end":109634,"line_start":3075,"line_end":3075,"column_start":5,"column_end":8}},{"value":"/ Every byte in the affected range of push constant storage must be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109639,"byte_end":109708,"line_start":3076,"line_end":3076,"column_start":5,"column_end":74}},{"value":"/ accessible to exactly the same set of pipeline stages, which must match","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109713,"byte_end":109788,"line_start":3077,"line_end":3077,"column_start":5,"column_end":80}},{"value":"/ `stages`. If there are two bytes of storage that are accessible by","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109793,"byte_end":109863,"line_start":3078,"line_end":3078,"column_start":5,"column_end":75}},{"value":"/ different sets of pipeline stages - say, one is accessible by fragment","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109868,"byte_end":109942,"line_start":3079,"line_end":3079,"column_start":5,"column_end":79}},{"value":"/ shaders, and the other is accessible by both fragment shaders and vertex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109947,"byte_end":110023,"line_start":3080,"line_end":3080,"column_start":5,"column_end":81}},{"value":"/ shaders - then no single `set_push_constants` call may affect both of","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110028,"byte_end":110101,"line_start":3081,"line_end":3081,"column_start":5,"column_end":78}},{"value":"/ them; to write both, you must make multiple calls, each with the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110106,"byte_end":110174,"line_start":3082,"line_end":3082,"column_start":5,"column_end":73}},{"value":"/ appropriate `stages` value.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110179,"byte_end":110210,"line_start":3083,"line_end":3083,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110215,"byte_end":110218,"line_start":3084,"line_end":3084,"column_start":5,"column_end":8}},{"value":"/ Which pipeline stages may access a given byte is determined by the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110223,"byte_end":110293,"line_start":3085,"line_end":3085,"column_start":5,"column_end":75}},{"value":"/ pipeline's [`PushConstant`] global variable and (if it is a struct) its","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110298,"byte_end":110373,"line_start":3086,"line_end":3086,"column_start":5,"column_end":80}},{"value":"/ members' offsets.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110378,"byte_end":110399,"line_start":3087,"line_end":3087,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110404,"byte_end":110407,"line_start":3088,"line_end":3088,"column_start":5,"column_end":8}},{"value":"/ For example, suppose you have twelve bytes of push constant storage,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110412,"byte_end":110484,"line_start":3089,"line_end":3089,"column_start":5,"column_end":77}},{"value":"/ where bytes `0..8` are accessed by the vertex shader, and bytes `4..12`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110489,"byte_end":110564,"line_start":3090,"line_end":3090,"column_start":5,"column_end":80}},{"value":"/ are accessed by the fragment shader. This means there are three byte","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110569,"byte_end":110641,"line_start":3091,"line_end":3091,"column_start":5,"column_end":77}},{"value":"/ ranges each accessed by a different set of stages:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110646,"byte_end":110700,"line_start":3092,"line_end":3092,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110705,"byte_end":110708,"line_start":3093,"line_end":3093,"column_start":5,"column_end":8}},{"value":"/ - Bytes `0..4` are accessed only by the fragment shader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110713,"byte_end":110773,"line_start":3094,"line_end":3094,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110778,"byte_end":110781,"line_start":3095,"line_end":3095,"column_start":5,"column_end":8}},{"value":"/ - Bytes `4..8` are accessed by both the fragment shader and the vertex shader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110786,"byte_end":110868,"line_start":3096,"line_end":3096,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110873,"byte_end":110876,"line_start":3097,"line_end":3097,"column_start":5,"column_end":8}},{"value":"/ - Bytes `8..12 are accessed only by the vertex shader.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110881,"byte_end":110939,"line_start":3098,"line_end":3098,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110944,"byte_end":110947,"line_start":3099,"line_end":3099,"column_start":5,"column_end":8}},{"value":"/ To write all twelve bytes requires three `set_push_constants` calls, one","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":110952,"byte_end":111028,"line_start":3100,"line_end":3100,"column_start":5,"column_end":81}},{"value":"/ for each range, each passing the matching `stages` mask.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":111033,"byte_end":111093,"line_start":3101,"line_end":3101,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":111098,"byte_end":111101,"line_start":3102,"line_end":3102,"column_start":5,"column_end":8}},{"value":"/ [`PushConstant`]: https://docs.rs/naga/latest/naga/enum.StorageClass.html#variant.PushConstant","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":111106,"byte_end":111204,"line_start":3103,"line_end":3103,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":111922,"byte_end":111937,"line_start":3118,"line_end":3118,"column_start":12,"column_end":27},"name":"write_timestamp","qualname":"<RenderPass>::write_timestamp","value":"pub fn write_timestamp(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Issue a timestamp command at this point in the queue. The\n timestamp will be written to the specified query set, at the specified index.","sig":null,"attributes":[{"value":"/ Issue a timestamp command at this point in the queue. The","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":111505,"byte_end":111566,"line_start":3111,"line_end":3111,"column_start":5,"column_end":66}},{"value":"/ timestamp will be written to the specified query set, at the specified index.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":111571,"byte_end":111652,"line_start":3112,"line_end":3112,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":111657,"byte_end":111660,"line_start":3113,"line_end":3113,"column_start":5,"column_end":8}},{"value":"/ Must be multiplied by [`Queue::get_timestamp_period`] to get","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":111665,"byte_end":111729,"line_start":3114,"line_end":3114,"column_start":5,"column_end":69}},{"value":"/ the value in nanoseconds. Absolute values have no meaning,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":111734,"byte_end":111796,"line_start":3115,"line_end":3115,"column_start":5,"column_end":67}},{"value":"/ but timestamps can be subtracted to get the time it takes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":111801,"byte_end":111862,"line_start":3116,"line_end":3116,"column_start":5,"column_end":66}},{"value":"/ for a string of operations to complete.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":111867,"byte_end":111910,"line_start":3117,"line_end":3117,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":112377,"byte_end":112408,"line_start":3127,"line_end":3127,"column_start":12,"column_end":43},"name":"begin_pipeline_statistics_query","qualname":"<RenderPass>::begin_pipeline_statistics_query","value":"pub fn begin_pipeline_statistics_query(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Start a pipeline statistics query on this render pass. It can be ended with\n `end_pipeline_statistics_query`. Pipeline statistics queries may not be nested.\n","sig":null,"attributes":[{"value":"/ Start a pipeline statistics query on this render pass. It can be ended with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":112198,"byte_end":112277,"line_start":3125,"line_end":3125,"column_start":5,"column_end":84}},{"value":"/ `end_pipeline_statistics_query`. Pipeline statistics queries may not be nested.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":112282,"byte_end":112365,"line_start":3126,"line_end":3126,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":112746,"byte_end":112775,"line_start":3134,"line_end":3134,"column_start":12,"column_end":41},"name":"end_pipeline_statistics_query","qualname":"<RenderPass>::end_pipeline_statistics_query","value":"pub fn end_pipeline_statistics_query(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" End the pipeline statistics query on this render pass. It can be started with\n `begin_pipeline_statistics_query`. Pipeline statistics queries may not be nested.\n","sig":null,"attributes":[{"value":"/ End the pipeline statistics query on this render pass. It can be started with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":112563,"byte_end":112644,"line_start":3132,"line_end":3132,"column_start":5,"column_end":86}},{"value":"/ `begin_pipeline_statistics_query`. Pipeline statistics queries may not be nested.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":112649,"byte_end":112734,"line_start":3133,"line_end":3133,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":113642,"byte_end":113656,"line_start":3157,"line_end":3157,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<ComputePass>::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when the `dispatch()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":113177,"byte_end":113259,"line_start":3151,"line_end":3151,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when the `dispatch()` function is called must match the layout of this bind group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":113264,"byte_end":113373,"line_start":3152,"line_end":3152,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":113378,"byte_end":113381,"line_start":3153,"line_end":3153,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in the binding order.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":113386,"byte_end":113464,"line_start":3154,"line_end":3154,"column_start":5,"column_end":83}},{"value":"/ These offsets have to be aligned to [`Limits::min_uniform_buffer_offset_alignment`]","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":113469,"byte_end":113556,"line_start":3155,"line_end":3155,"column_start":5,"column_end":92}},{"value":"/ or [`Limits::min_storage_buffer_offset_alignment`] appropriately.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":113561,"byte_end":113630,"line_start":3156,"line_end":3156,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":113923,"byte_end":113935,"line_start":3167,"line_end":3167,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<ComputePass>::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a ComputePipeline)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active compute pipeline.\n","sig":null,"attributes":[{"value":"/ Sets the active compute pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":113874,"byte_end":113911,"line_start":3166,"line_end":3166,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":114096,"byte_end":114115,"line_start":3172,"line_end":3172,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<ComputePass>::insert_debug_marker","value":"pub fn insert_debug_marker(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":114059,"byte_end":114084,"line_start":3171,"line_end":3171,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":114272,"byte_end":114288,"line_start":3177,"line_end":3177,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<ComputePass>::push_debug_group","value":"pub fn push_debug_group(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":114197,"byte_end":114260,"line_start":3176,"line_end":3176,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":114431,"byte_end":114446,"line_start":3182,"line_end":3182,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<ComputePass>::pop_debug_group","value":"pub fn pop_debug_group(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":114367,"byte_end":114419,"line_start":3181,"line_end":3181,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":114654,"byte_end":114673,"line_start":3189,"line_end":3189,"column_start":12,"column_end":31},"name":"dispatch_workgroups","qualname":"<ComputePass>::dispatch_workgroups","value":"pub fn dispatch_workgroups(&mut Self, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches compute work operations.","sig":null,"attributes":[{"value":"/ Dispatches compute work operations.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":114506,"byte_end":114545,"line_start":3186,"line_end":3186,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":114550,"byte_end":114553,"line_start":3187,"line_end":3187,"column_start":5,"column_end":8}},{"value":"/ `x`, `y` and `z` denote the number of work groups to dispatch in each dimension.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":114558,"byte_end":114642,"line_start":3188,"line_end":3188,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":115020,"byte_end":115048,"line_start":3196,"line_end":3196,"column_start":12,"column_end":40},"name":"dispatch_workgroups_indirect","qualname":"<ComputePass>::dispatch_workgroups_indirect","value":"pub fn dispatch_workgroups_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches compute work operations, based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Dispatches compute work operations, based on the contents of the `indirect_buffer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":114792,"byte_end":114879,"line_start":3193,"line_end":3193,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":114884,"byte_end":114887,"line_start":3194,"line_end":3194,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` must conform to [`DispatchIndirect`](crate::util::DispatchIndirect).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":114892,"byte_end":115008,"line_start":3195,"line_end":3195,"column_start":5,"column_end":121}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":115890,"byte_end":115908,"line_start":3219,"line_end":3219,"column_start":12,"column_end":30},"name":"set_push_constants","qualname":"<ComputePass>::set_push_constants","value":"pub fn set_push_constants(&mut Self, u32, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set push constant data for subsequent dispatch calls.","sig":null,"attributes":[{"value":"/ Set push constant data for subsequent dispatch calls.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":115446,"byte_end":115503,"line_start":3211,"line_end":3211,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":115508,"byte_end":115511,"line_start":3212,"line_end":3212,"column_start":5,"column_end":8}},{"value":"/ Write the bytes in `data` at offset `offset` within push constant","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":115516,"byte_end":115585,"line_start":3213,"line_end":3213,"column_start":5,"column_end":74}},{"value":"/ storage.  Both `offset` and the length of `data` must be","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":115590,"byte_end":115650,"line_start":3214,"line_end":3214,"column_start":5,"column_end":65}},{"value":"/ multiples of [`PUSH_CONSTANT_ALIGNMENT`], which is always 4.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":115655,"byte_end":115719,"line_start":3215,"line_end":3215,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":115724,"byte_end":115727,"line_start":3216,"line_end":3216,"column_start":5,"column_end":8}},{"value":"/ For example, if `offset` is `4` and `data` is eight bytes long, this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":115732,"byte_end":115804,"line_start":3217,"line_end":3217,"column_start":5,"column_end":77}},{"value":"/ call will write `data` to bytes `4..12` of push constant storage.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":115809,"byte_end":115878,"line_start":3218,"line_end":3218,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":116559,"byte_end":116574,"line_start":3232,"line_end":3232,"column_start":12,"column_end":27},"name":"write_timestamp","qualname":"<ComputePass>::write_timestamp","value":"pub fn write_timestamp(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Issue a timestamp command at this point in the queue. The timestamp will be written to the specified query set, at the specified index.","sig":null,"attributes":[{"value":"/ Issue a timestamp command at this point in the queue. The timestamp will be written to the specified query set, at the specified index.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":116150,"byte_end":116289,"line_start":3226,"line_end":3226,"column_start":5,"column_end":144}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":116294,"byte_end":116297,"line_start":3227,"line_end":3227,"column_start":5,"column_end":8}},{"value":"/ Must be multiplied by [`Queue::get_timestamp_period`] to get","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":116302,"byte_end":116366,"line_start":3228,"line_end":3228,"column_start":5,"column_end":69}},{"value":"/ the value in nanoseconds. Absolute values have no meaning,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":116371,"byte_end":116433,"line_start":3229,"line_end":3229,"column_start":5,"column_end":67}},{"value":"/ but timestamps can be subtracted to get the time it takes","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":116438,"byte_end":116499,"line_start":3230,"line_end":3230,"column_start":5,"column_end":66}},{"value":"/ for a string of operations to complete.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":116504,"byte_end":116547,"line_start":3231,"line_end":3231,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":117015,"byte_end":117046,"line_start":3241,"line_end":3241,"column_start":12,"column_end":43},"name":"begin_pipeline_statistics_query","qualname":"<ComputePass>::begin_pipeline_statistics_query","value":"pub fn begin_pipeline_statistics_query(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Start a pipeline statistics query on this render pass. It can be ended with\n `end_pipeline_statistics_query`. Pipeline statistics queries may not be nested.\n","sig":null,"attributes":[{"value":"/ Start a pipeline statistics query on this render pass. It can be ended with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":116836,"byte_end":116915,"line_start":3239,"line_end":3239,"column_start":5,"column_end":84}},{"value":"/ `end_pipeline_statistics_query`. Pipeline statistics queries may not be nested.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":116920,"byte_end":117003,"line_start":3240,"line_end":3240,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":117384,"byte_end":117413,"line_start":3248,"line_end":3248,"column_start":12,"column_end":41},"name":"end_pipeline_statistics_query","qualname":"<ComputePass>::end_pipeline_statistics_query","value":"pub fn end_pipeline_statistics_query(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" End the pipeline statistics query on this render pass. It can be started with\n `begin_pipeline_statistics_query`. Pipeline statistics queries may not be nested.\n","sig":null,"attributes":[{"value":"/ End the pipeline statistics query on this render pass. It can be started with","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":117201,"byte_end":117282,"line_start":3246,"line_end":3246,"column_start":5,"column_end":86}},{"value":"/ `begin_pipeline_statistics_query`. Pipeline statistics queries may not be nested.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":117287,"byte_end":117372,"line_start":3247,"line_end":3247,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":117935,"byte_end":117941,"line_start":3266,"line_end":3266,"column_start":12,"column_end":18},"name":"finish","qualname":"<RenderBundleEncoder>::finish","value":"pub fn finish(Self, &RenderBundleDescriptor) -> RenderBundle","parent":null,"children":[],"decl_id":null,"docs":" Finishes recording and returns a [`RenderBundle`] that can be executed in other render passes.\n","sig":null,"attributes":[{"value":"/ Finishes recording and returns a [`RenderBundle`] that can be executed in other render passes.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":117825,"byte_end":117923,"line_start":3265,"line_end":3265,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":118470,"byte_end":118484,"line_start":3277,"line_end":3277,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<RenderBundleEncoder>::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when any `draw()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":118175,"byte_end":118257,"line_start":3273,"line_end":3273,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when any `draw()` function is called must match the layout of this bind group.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":118262,"byte_end":118367,"line_start":3274,"line_end":3274,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":118372,"byte_end":118375,"line_start":3275,"line_end":3275,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in the binding order.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":118380,"byte_end":118458,"line_start":3276,"line_end":3276,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":118831,"byte_end":118843,"line_start":3289,"line_end":3289,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<RenderBundleEncoder>::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a RenderPipeline)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active render pipeline.","sig":null,"attributes":[{"value":"/ Sets the active render pipeline.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":118696,"byte_end":118732,"line_start":3286,"line_end":3286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":118737,"byte_end":118740,"line_start":3287,"line_end":3287,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will exhibit the behavior defined by `pipeline`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":118745,"byte_end":118819,"line_start":3288,"line_end":3288,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":119179,"byte_end":119195,"line_start":3297,"line_end":3297,"column_start":12,"column_end":28},"name":"set_index_buffer","qualname":"<RenderBundleEncoder>::set_index_buffer","value":"pub fn set_index_buffer(&mut Self, BufferSlice, IndexFormat)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active index buffer.","sig":null,"attributes":[{"value":"/ Sets the active index buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":118960,"byte_end":118993,"line_start":3293,"line_end":3293,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":118998,"byte_end":119001,"line_start":3294,"line_end":3294,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw_indexed`](RenderBundleEncoder::draw_indexed) on this [`RenderBundleEncoder`] will","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":119006,"byte_end":119118,"line_start":3295,"line_end":3295,"column_start":5,"column_end":117}},{"value":"/ use `buffer` as the source index buffer.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":119123,"byte_end":119167,"line_start":3296,"line_end":3296,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":119913,"byte_end":119930,"line_start":3317,"line_end":3317,"column_start":12,"column_end":29},"name":"set_vertex_buffer","qualname":"<RenderBundleEncoder>::set_vertex_buffer","value":"pub fn set_vertex_buffer(&mut Self, u32, BufferSlice)","parent":null,"children":[],"decl_id":null,"docs":" Assign a vertex buffer to a slot.","sig":null,"attributes":[{"value":"/ Assign a vertex buffer to a slot.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":119480,"byte_end":119517,"line_start":3307,"line_end":3307,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":119522,"byte_end":119525,"line_start":3308,"line_end":3308,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw`] and [`draw_indexed`] on this","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":119530,"byte_end":119591,"line_start":3309,"line_end":3309,"column_start":5,"column_end":66}},{"value":"/ [`RenderBundleEncoder`] will use `buffer` as one of the source vertex buffers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":119596,"byte_end":119678,"line_start":3310,"line_end":3310,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":119683,"byte_end":119686,"line_start":3311,"line_end":3311,"column_start":5,"column_end":8}},{"value":"/ The `slot` refers to the index of the matching descriptor in","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":119691,"byte_end":119755,"line_start":3312,"line_end":3312,"column_start":5,"column_end":69}},{"value":"/ [`VertexState::buffers`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":119760,"byte_end":119789,"line_start":3313,"line_end":3313,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":119794,"byte_end":119797,"line_start":3314,"line_end":3314,"column_start":5,"column_end":8}},{"value":"/ [`draw`]: RenderBundleEncoder::draw","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":119802,"byte_end":119841,"line_start":3315,"line_end":3315,"column_start":5,"column_end":44}},{"value":"/ [`draw_indexed`]: RenderBundleEncoder::draw_indexed","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":119846,"byte_end":119901,"line_start":3316,"line_end":3316,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":120360,"byte_end":120364,"line_start":3330,"line_end":3330,"column_start":12,"column_end":16},"name":"draw","qualname":"<RenderBundleEncoder>::draw","value":"pub fn draw(&mut Self, Range<u32>, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s).","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":120192,"byte_end":120246,"line_start":3327,"line_end":3327,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":120251,"byte_end":120254,"line_start":3328,"line_end":3328,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":120259,"byte_end":120348,"line_start":3329,"line_end":3329,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":120795,"byte_end":120807,"line_start":3338,"line_end":3338,"column_start":12,"column_end":24},"name":"draw_indexed","qualname":"<RenderBundleEncoder>::draw_indexed","value":"pub fn draw_indexed(&mut Self, Range<u32>, i32, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":120495,"byte_end":120584,"line_start":3334,"line_end":3334,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":120589,"byte_end":120592,"line_start":3335,"line_end":3335,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderBundleEncoder::set_index_buffer`], while the active","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":120597,"byte_end":120700,"line_start":3336,"line_end":3336,"column_start":5,"column_end":108}},{"value":"/ vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":120705,"byte_end":120783,"line_start":3337,"line_end":3337,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":121312,"byte_end":121325,"line_start":3347,"line_end":3347,"column_start":12,"column_end":25},"name":"draw_indirect","qualname":"<RenderBundleEncoder>::draw_indirect","value":"pub fn draw_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":120976,"byte_end":121077,"line_start":3342,"line_end":3342,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":121082,"byte_end":121085,"line_start":3343,"line_end":3343,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":121090,"byte_end":121179,"line_start":3344,"line_end":3344,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":121184,"byte_end":121187,"line_start":3345,"line_end":3345,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` must conform to [`DrawIndirect`](crate::util::DrawIndirect).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":121192,"byte_end":121300,"line_start":3346,"line_end":3346,"column_start":5,"column_end":113}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":121971,"byte_end":121992,"line_start":3358,"line_end":3358,"column_start":12,"column_end":33},"name":"draw_indexed_indirect","qualname":"<RenderBundleEncoder>::draw_indexed_indirect","value":"pub fn draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":121480,"byte_end":121569,"line_start":3351,"line_end":3351,"column_start":5,"column_end":94}},{"value":"/ based on the contents of the `indirect_buffer`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":121574,"byte_end":121625,"line_start":3352,"line_end":3352,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":121630,"byte_end":121633,"line_start":3353,"line_end":3353,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderBundleEncoder::set_index_buffer`], while the active","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":121638,"byte_end":121741,"line_start":3354,"line_end":3354,"column_start":5,"column_end":108}},{"value":"/ vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":121746,"byte_end":121824,"line_start":3355,"line_end":3355,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":121829,"byte_end":121832,"line_start":3356,"line_end":3356,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` must conform to [`DrawIndexedIndirect`](crate::util::DrawIndexedIndirect).","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":121837,"byte_end":121959,"line_start":3357,"line_end":3357,"column_start":5,"column_end":127}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123516,"byte_end":123534,"line_start":3398,"line_end":3398,"column_start":12,"column_end":30},"name":"set_push_constants","qualname":"<RenderBundleEncoder>::set_push_constants","value":"pub fn set_push_constants(&mut Self, ShaderStages, u32, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set push constant data.","sig":null,"attributes":[{"value":"/ Set push constant data.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122333,"byte_end":122360,"line_start":3370,"line_end":3370,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122365,"byte_end":122368,"line_start":3371,"line_end":3371,"column_start":5,"column_end":8}},{"value":"/ Offset is measured in bytes, but must be a multiple of [`PUSH_CONSTANT_ALIGNMENT`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122373,"byte_end":122460,"line_start":3372,"line_end":3372,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122465,"byte_end":122468,"line_start":3373,"line_end":3373,"column_start":5,"column_end":8}},{"value":"/ Data size must be a multiple of 4 and must have an alignment of 4.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122473,"byte_end":122543,"line_start":3374,"line_end":3374,"column_start":5,"column_end":75}},{"value":"/ For example, with an offset of 4 and an array of `[u8; 8]`, that will write to the range","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122548,"byte_end":122640,"line_start":3375,"line_end":3375,"column_start":5,"column_end":97}},{"value":"/ of 4..12.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122645,"byte_end":122658,"line_start":3376,"line_end":3376,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122663,"byte_end":122666,"line_start":3377,"line_end":3377,"column_start":5,"column_end":8}},{"value":"/ For each byte in the range of push constant data written, the union of the stages of all push constant","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122671,"byte_end":122777,"line_start":3378,"line_end":3378,"column_start":5,"column_end":111}},{"value":"/ ranges that covers that byte must be exactly `stages`. There's no good way of explaining this simply,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122782,"byte_end":122887,"line_start":3379,"line_end":3379,"column_start":5,"column_end":110}},{"value":"/ so here are some examples:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122892,"byte_end":122922,"line_start":3380,"line_end":3380,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122927,"byte_end":122930,"line_start":3381,"line_end":3381,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122935,"byte_end":122946,"line_start":3382,"line_end":3382,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122951,"byte_end":122976,"line_start":3383,"line_end":3383,"column_start":5,"column_end":30}},{"value":"/ - 0..4 Vertex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122981,"byte_end":122998,"line_start":3384,"line_end":3384,"column_start":5,"column_end":22}},{"value":"/ - 4..8 Fragment","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123003,"byte_end":123022,"line_start":3385,"line_end":3385,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123027,"byte_end":123034,"line_start":3386,"line_end":3386,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123039,"byte_end":123042,"line_start":3387,"line_end":3387,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in two set_push_constants calls. First for the `Vertex` range, second for the `Fragment` range.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123047,"byte_end":123176,"line_start":3388,"line_end":3388,"column_start":5,"column_end":134}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123181,"byte_end":123184,"line_start":3389,"line_end":3389,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123189,"byte_end":123200,"line_start":3390,"line_end":3390,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123205,"byte_end":123230,"line_start":3391,"line_end":3391,"column_start":5,"column_end":30}},{"value":"/ - 0..8  Vertex","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123235,"byte_end":123253,"line_start":3392,"line_end":3392,"column_start":5,"column_end":23}},{"value":"/ - 4..12 Fragment","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123258,"byte_end":123278,"line_start":3393,"line_end":3393,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123283,"byte_end":123290,"line_start":3394,"line_end":3394,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123295,"byte_end":123298,"line_start":3395,"line_end":3395,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in three set_push_constants calls. First for the `Vertex` only range 0..4, second","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123303,"byte_end":123418,"line_start":3396,"line_end":3396,"column_start":5,"column_end":120}},{"value":"/ for the `Vertex | Fragment` range 4..8, third for the `Fragment` range 8..12.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123423,"byte_end":123504,"line_start":3397,"line_end":3397,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123718,"byte_end":123738,"line_start":3404,"line_end":3404,"column_start":12,"column_end":32},"name":"QueueWriteBufferView","qualname":"::QueueWriteBufferView","value":"QueueWriteBufferView {  }","parent":null,"children":[{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457}],"decl_id":null,"docs":" A write-only view into a staging buffer\n","sig":null,"attributes":[{"value":"/ A write-only view into a staging buffer","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123663,"byte_end":123706,"line_start":3403,"line_end":3403,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":124859,"byte_end":124871,"line_start":3445,"line_end":3445,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Queue>::write_buffer","value":"pub fn write_buffer(&Self, &Buffer, BufferAddress, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Schedule a data write into `buffer` starting at `offset`.","sig":null,"attributes":[{"value":"/ Schedule a data write into `buffer` starting at `offset`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":124470,"byte_end":124531,"line_start":3438,"line_end":3438,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":124536,"byte_end":124539,"line_start":3439,"line_end":3439,"column_start":5,"column_end":8}},{"value":"/ This method is intended to have low performance costs.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":124544,"byte_end":124602,"line_start":3440,"line_end":3440,"column_start":5,"column_end":63}},{"value":"/ As such, the write is not immediately submitted, and instead enqueued","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":124607,"byte_end":124680,"line_start":3441,"line_end":3441,"column_start":5,"column_end":78}},{"value":"/ internally to happen at the start of the next `submit()` call.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":124685,"byte_end":124751,"line_start":3442,"line_end":3442,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":124756,"byte_end":124759,"line_start":3443,"line_end":3443,"column_start":5,"column_end":8}},{"value":"/ This method fails if `data` overruns the size of `buffer` starting at `offset`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":124764,"byte_end":124847,"line_start":3444,"line_end":3444,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":125596,"byte_end":125613,"line_start":3459,"line_end":3459,"column_start":12,"column_end":29},"name":"write_buffer_with","qualname":"<Queue>::write_buffer_with","value":"pub fn write_buffer_with<'a>(&'a Self, &'a Buffer, BufferAddress, BufferSize)\n-> QueueWriteBufferView","parent":null,"children":[],"decl_id":null,"docs":" Schedule a data write into `buffer` starting at `offset` via the returned [QueueWriteBufferView].","sig":null,"attributes":[{"value":"/ Schedule a data write into `buffer` starting at `offset` via the returned [QueueWriteBufferView].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":125033,"byte_end":125134,"line_start":3449,"line_end":3449,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":125139,"byte_end":125142,"line_start":3450,"line_end":3450,"column_start":5,"column_end":8}},{"value":"/ The returned value can be dereferenced to a `&mut [u8]`; dereferencing it to a `&[u8]` panics!","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":125147,"byte_end":125245,"line_start":3451,"line_end":3451,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":125250,"byte_end":125253,"line_start":3452,"line_end":3452,"column_start":5,"column_end":8}},{"value":"/ This method is intended to have low performance costs.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":125258,"byte_end":125316,"line_start":3453,"line_end":3453,"column_start":5,"column_end":63}},{"value":"/ As such, the write is not immediately submitted, and instead enqueued","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":125321,"byte_end":125394,"line_start":3454,"line_end":3454,"column_start":5,"column_end":78}},{"value":"/ internally to happen at the start of the next `submit()` call.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":125399,"byte_end":125465,"line_start":3455,"line_end":3455,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":125470,"byte_end":125473,"line_start":3456,"line_end":3456,"column_start":5,"column_end":8}},{"value":"/ This method fails if `size` is greater than the size of `buffer` starting at `offset`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":125478,"byte_end":125568,"line_start":3457,"line_end":3457,"column_start":5,"column_end":95}},{"value":"must_use","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":125573,"byte_end":125584,"line_start":3458,"line_end":3458,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":126490,"byte_end":126503,"line_start":3482,"line_end":3482,"column_start":12,"column_end":25},"name":"write_texture","qualname":"<Queue>::write_texture","value":"pub fn write_texture(&Self, ImageCopyTexture, &[u8], ImageDataLayout,\nExtent3d)","parent":null,"children":[],"decl_id":null,"docs":" Schedule a data write into `texture`.","sig":null,"attributes":[{"value":"/ Schedule a data write into `texture`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":126107,"byte_end":126148,"line_start":3475,"line_end":3475,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":126153,"byte_end":126156,"line_start":3476,"line_end":3476,"column_start":5,"column_end":8}},{"value":"/ This method is intended to have low performance costs.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":126161,"byte_end":126219,"line_start":3477,"line_end":3477,"column_start":5,"column_end":63}},{"value":"/ As such, the write is not immediately submitted, and instead enqueued","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":126224,"byte_end":126297,"line_start":3478,"line_end":3478,"column_start":5,"column_end":78}},{"value":"/ internally to happen at the start of the next `submit()` call.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":126302,"byte_end":126368,"line_start":3479,"line_end":3479,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":126373,"byte_end":126376,"line_start":3480,"line_end":3480,"column_start":5,"column_end":8}},{"value":"/ This method fails if `data` overruns the size of fragment of `texture` specified with `size`.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":126381,"byte_end":126478,"line_start":3481,"line_end":3481,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":126829,"byte_end":126835,"line_start":3493,"line_end":3493,"column_start":12,"column_end":18},"name":"submit","qualname":"<Queue>::submit","value":"pub fn submit<I: IntoIterator<Item = CommandBuffer>>(&Self, I)\n-> SubmissionIndex","parent":null,"children":[],"decl_id":null,"docs":" Submits a series of finished command buffers for execution.\n","sig":null,"attributes":[{"value":"/ Submits a series of finished command buffers for execution.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":126754,"byte_end":126817,"line_start":3492,"line_end":3492,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":127360,"byte_end":127380,"line_start":3511,"line_end":3511,"column_start":12,"column_end":32},"name":"get_timestamp_period","qualname":"<Queue>::get_timestamp_period","value":"pub fn get_timestamp_period(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Gets the amount of nanoseconds each tick of a timestamp query represents.","sig":null,"attributes":[{"value":"/ Gets the amount of nanoseconds each tick of a timestamp query represents.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":127204,"byte_end":127281,"line_start":3508,"line_end":3508,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":127286,"byte_end":127289,"line_start":3509,"line_end":3509,"column_start":5,"column_end":8}},{"value":"/ Returns zero if timestamp queries are unsupported.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":127294,"byte_end":127348,"line_start":3510,"line_end":3510,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":128337,"byte_end":128359,"line_start":3526,"line_end":3526,"column_start":12,"column_end":34},"name":"on_submitted_work_done","qualname":"<Queue>::on_submitted_work_done","value":"pub fn on_submitted_work_done<impl FnOnce() + Send + 'static: FnOnce() -> () +\nSend + 'static>(&Self, impl FnOnce() + Send + 'static)","parent":null,"children":[],"decl_id":null,"docs":" Registers a callback when the previous call to submit finishes running on the gpu. This callback\n being called implies that all mapped buffer callbacks attached to the same submission have also\n been called.","sig":null,"attributes":[{"value":"/ Registers a callback when the previous call to submit finishes running on the gpu. This callback","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":127478,"byte_end":127578,"line_start":3515,"line_end":3515,"column_start":5,"column_end":105}},{"value":"/ being called implies that all mapped buffer callbacks attached to the same submission have also","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":127583,"byte_end":127682,"line_start":3516,"line_end":3516,"column_start":5,"column_end":104}},{"value":"/ been called.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":127687,"byte_end":127703,"line_start":3517,"line_end":3517,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":127708,"byte_end":127711,"line_start":3518,"line_end":3518,"column_start":5,"column_end":8}},{"value":"/ For the callback to complete, either `queue.submit(..)`, `instance.poll_all(..)`, or `device.poll(..)`","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":127716,"byte_end":127822,"line_start":3519,"line_end":3519,"column_start":5,"column_end":111}},{"value":"/ must be called elsewhere in the runtime, possibly integrated into an event loop or run on a separate thread.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":127827,"byte_end":127939,"line_start":3520,"line_end":3520,"column_start":5,"column_end":117}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":127944,"byte_end":127947,"line_start":3521,"line_end":3521,"column_start":5,"column_end":8}},{"value":"/ The callback will be called on the thread that first calls the above functions after the gpu work","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":127952,"byte_end":128053,"line_start":3522,"line_end":3522,"column_start":5,"column_end":106}},{"value":"/ has completed. There are no restrictions on the code you can run in the callback, however on native the","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":128058,"byte_end":128165,"line_start":3523,"line_end":3523,"column_start":5,"column_end":112}},{"value":"/ call to the function will not complete until the callback returns, so prefer keeping callbacks short","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":128170,"byte_end":128274,"line_start":3524,"line_end":3524,"column_start":5,"column_end":109}},{"value":"/ and used to set flags, send messages, etc.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":128279,"byte_end":128325,"line_start":3525,"line_end":3525,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":128715,"byte_end":128722,"line_start":3535,"line_end":3535,"column_start":12,"column_end":19},"name":"present","qualname":"<SurfaceTexture>::present","value":"pub fn present(Self)","parent":null,"children":[],"decl_id":null,"docs":" Schedule this texture to be presented on the owning surface.","sig":null,"attributes":[{"value":"/ Schedule this texture to be presented on the owning surface.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":128538,"byte_end":128602,"line_start":3532,"line_end":3532,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":128607,"byte_end":128610,"line_start":3533,"line_end":3533,"column_start":5,"column_end":8}},{"value":"/ Needs to be called after any work on the texture is scheduled via [`Queue::submit`].","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":128615,"byte_end":128703,"line_start":3534,"line_end":3534,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":129428,"byte_end":129449,"line_start":3558,"line_end":3558,"column_start":12,"column_end":33},"name":"get_supported_formats","qualname":"<Surface>::get_supported_formats","value":"pub fn get_supported_formats(&Self, &Adapter) -> Vec<TextureFormat>","parent":null,"children":[],"decl_id":null,"docs":" Returns a vec of supported texture formats to use for the [`Surface`] with this adapter.\n Note: The first format in the vector is preferred","sig":null,"attributes":[{"value":"/ Returns a vec of supported texture formats to use for the [`Surface`] with this adapter.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":129177,"byte_end":129269,"line_start":3554,"line_end":3554,"column_start":5,"column_end":97}},{"value":"/ Note: The first format in the vector is preferred","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":129274,"byte_end":129327,"line_start":3555,"line_end":3555,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":129332,"byte_end":129335,"line_start":3556,"line_end":3556,"column_start":5,"column_end":8}},{"value":"/ Returns an empty vector if the surface is incompatible with the adapter.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":129340,"byte_end":129416,"line_start":3557,"line_end":3557,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":129793,"byte_end":129812,"line_start":3565,"line_end":3565,"column_start":12,"column_end":31},"name":"get_supported_modes","qualname":"<Surface>::get_supported_modes","value":"pub fn get_supported_modes(&Self, &Adapter) -> Vec<PresentMode>","parent":null,"children":[],"decl_id":null,"docs":" Returns a vec of supported presentation modes to use for the [`Surface`] with this adapter.","sig":null,"attributes":[{"value":"/ Returns a vec of supported presentation modes to use for the [`Surface`] with this adapter.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":129597,"byte_end":129692,"line_start":3562,"line_end":3562,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":129697,"byte_end":129700,"line_start":3563,"line_end":3563,"column_start":5,"column_end":8}},{"value":"/ Returns an empty vector if the surface is incompatible with the adapter.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":129705,"byte_end":129781,"line_start":3564,"line_end":3564,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130190,"byte_end":130199,"line_start":3575,"line_end":3575,"column_start":12,"column_end":21},"name":"configure","qualname":"<Surface>::configure","value":"pub fn configure(&Self, &Device, &SurfaceConfiguration)","parent":null,"children":[],"decl_id":null,"docs":" Initializes [`Surface`] for presentation.","sig":null,"attributes":[{"value":"/ Initializes [`Surface`] for presentation.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":129956,"byte_end":130001,"line_start":3569,"line_end":3569,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130006,"byte_end":130009,"line_start":3570,"line_end":3570,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130014,"byte_end":130026,"line_start":3571,"line_end":3571,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130031,"byte_end":130034,"line_start":3572,"line_end":3572,"column_start":5,"column_end":8}},{"value":"/ - A old [`SurfaceTexture`] is still alive referencing an old surface.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130039,"byte_end":130112,"line_start":3573,"line_end":3573,"column_start":5,"column_end":78}},{"value":"/ - Texture format requested is unsupported on the surface.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130117,"byte_end":130178,"line_start":3574,"line_end":3574,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130821,"byte_end":130840,"line_start":3587,"line_end":3587,"column_start":12,"column_end":31},"name":"get_current_texture","qualname":"<Surface>::get_current_texture","value":"pub fn get_current_texture(&Self) -> Result<SurfaceTexture, SurfaceError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next texture to be presented by the swapchain for drawing.","sig":null,"attributes":[{"value":"/ Returns the next texture to be presented by the swapchain for drawing.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130349,"byte_end":130423,"line_start":3579,"line_end":3579,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130428,"byte_end":130431,"line_start":3580,"line_end":3580,"column_start":5,"column_end":8}},{"value":"/ In order to present the [`SurfaceTexture`] returned by this method,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130436,"byte_end":130507,"line_start":3581,"line_end":3581,"column_start":5,"column_end":76}},{"value":"/ first a [`Queue::submit`] needs to be done with some work rendering to this texture.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130512,"byte_end":130600,"line_start":3582,"line_end":3582,"column_start":5,"column_end":93}},{"value":"/ Then [`SurfaceTexture::present`] needs to be called.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130605,"byte_end":130661,"line_start":3583,"line_end":3583,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130666,"byte_end":130669,"line_start":3584,"line_end":3584,"column_start":5,"column_end":8}},{"value":"/ If a SurfaceTexture referencing this surface is alive when the swapchain is recreated,","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130674,"byte_end":130764,"line_start":3585,"line_end":3585,"column_start":5,"column_end":95}},{"value":"/ recreating the swapchain will panic.","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":130769,"byte_end":130809,"line_start":3586,"line_end":3586,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":1489},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":131805,"byte_end":131827,"line_start":3615,"line_end":3615,"column_start":11,"column_end":33},"name":"UncapturedErrorHandler","qualname":"::UncapturedErrorHandler","value":"UncapturedErrorHandler: Fn(Error) -> () + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Type for the callback of uncaptured error handler\n","sig":null,"attributes":[{"value":"/ Type for the callback of uncaptured error handler","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":131741,"byte_end":131794,"line_start":3614,"line_end":3614,"column_start":1,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":2202},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":132017,"byte_end":132028,"line_start":3622,"line_end":3622,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::Error::OutOfMemory","value":"Error::OutOfMemory { source }","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" Out of memory error\n","sig":null,"attributes":[{"value":"/ Out of memory error","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":131989,"byte_end":132012,"line_start":3621,"line_end":3621,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":2204},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":132169,"byte_end":132179,"line_start":3627,"line_end":3627,"column_start":5,"column_end":15},"name":"Validation","qualname":"::Error::Validation","value":"Error::Validation { source, description }","parent":{"krate":0,"index":2201},"children":[],"decl_id":null,"docs":" Validation error, signifying a bug in code or data\n","sig":null,"attributes":[{"value":"/ Validation error, signifying a bug in code or data","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":132110,"byte_end":132164,"line_start":3626,"line_end":3626,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":2201},"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":131977,"byte_end":131982,"line_start":3620,"line_end":3620,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    OutOfMemory {\n            source: Box<dyn error::Error + Send + 'static>,\n        },\n    Validation {\n            source: Box<dyn error::Error + Send + 'static>,\n            description: String,\n        },\n}","parent":null,"children":[{"krate":0,"index":2202},{"krate":0,"index":2204}],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":131936,"byte_end":131950,"line_start":3618,"line_end":3618,"column_start":1,"column_end":15}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":137827,"byte_end":137834,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":137909,"byte_end":137916,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":138064,"byte_end":138071,"line_start":41,"line_end":41,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":146804,"byte_end":146815,"line_start":311,"line_end":311,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":149468,"byte_end":149478,"line_start":390,"line_end":390,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":154155,"byte_end":154165,"line_start":529,"line_end":529,"column_start":60,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":156626,"byte_end":156645,"line_start":600,"line_end":600,"column_start":56,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":162958,"byte_end":162965,"line_start":811,"line_end":811,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":324},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":339},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":216785,"byte_end":216797,"line_start":2352,"line_end":2352,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":217639,"byte_end":217651,"line_start":2383,"line_end":2383,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":218062,"byte_end":218078,"line_start":2400,"line_end":2400,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":218233,"byte_end":218249,"line_start":2408,"line_end":2408,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":218495,"byte_end":218512,"line_start":2421,"line_end":2421,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":218537,"byte_end":218554,"line_start":2422,"line_end":2422,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":218598,"byte_end":218615,"line_start":2424,"line_end":2424,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":218850,"byte_end":218867,"line_start":2434,"line_end":2434,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":227561,"byte_end":227572,"line_start":39,"line_end":39,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":231120,"byte_end":231131,"line_start":143,"line_end":143,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":233180,"byte_end":233186,"line_start":40,"line_end":40,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":242456,"byte_end":242466,"line_start":102,"line_end":102,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":244147,"byte_end":244166,"line_start":153,"line_end":153,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246644,"byte_end":246656,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247769,"byte_end":247788,"line_start":45,"line_end":45,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248658,"byte_end":248674,"line_start":71,"line_end":71,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":223620,"byte_end":223634,"line_start":76,"line_end":76,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225216,"byte_end":225230,"line_start":121,"line_end":121,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20143,"byte_end":20150,"line_start":564,"line_end":564,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":21328,"byte_end":21338,"line_start":601,"line_end":601,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24692,"byte_end":24699,"line_start":716,"line_end":716,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25183,"byte_end":25190,"line_start":734,"line_end":734,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26054,"byte_end":26069,"line_start":759,"line_end":759,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26785,"byte_end":26794,"line_start":781,"line_end":781,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27484,"byte_end":27496,"line_start":803,"line_end":803,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30013,"byte_end":30027,"line_start":877,"line_end":877,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30622,"byte_end":30636,"line_start":897,"line_end":897,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30779,"byte_end":30793,"line_start":905,"line_end":905,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":31602,"byte_end":31617,"line_start":930,"line_end":930,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":31761,"byte_end":31776,"line_start":938,"line_end":938,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":32712,"byte_end":32725,"line_start":964,"line_end":964,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33501,"byte_end":33515,"line_start":989,"line_end":989,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":35869,"byte_end":35881,"line_start":1059,"line_end":1059,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36291,"byte_end":36299,"line_start":1077,"line_end":1077,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40126,"byte_end":40132,"line_start":1175,"line_end":1175,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40673,"byte_end":40683,"line_start":1192,"line_end":1192,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48674,"byte_end":48691,"line_start":1377,"line_end":1377,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1215}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59188,"byte_end":59200,"line_start":1631,"line_end":1631,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1227}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59740,"byte_end":59752,"line_start":1642,"line_end":1642,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59762,"byte_end":59770,"line_start":1644,"line_end":1644,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1241},{"krate":0,"index":1245},{"krate":0,"index":1247},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66981,"byte_end":66988,"line_start":1848,"line_end":1848,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1253},{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1268},{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":71866,"byte_end":71872,"line_start":1973,"line_end":1973,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81054,"byte_end":81060,"line_start":2228,"line_end":2228,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81309,"byte_end":81327,"line_start":2240,"line_end":2240,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81482,"byte_end":81500,"line_start":2246,"line_end":2246,"column_start":23,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81645,"byte_end":81661,"line_start":2252,"line_end":2252,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81838,"byte_end":81854,"line_start":2258,"line_end":2258,"column_start":23,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":83900,"byte_end":83910,"line_start":2334,"line_end":2334,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":84033,"byte_end":84046,"line_start":2342,"line_end":2342,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1319},{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":84331,"byte_end":84344,"line_start":2355,"line_end":2355,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":84462,"byte_end":84472,"line_start":2361,"line_end":2361,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1324}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":84567,"byte_end":84580,"line_start":2367,"line_end":2367,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":84680,"byte_end":84690,"line_start":2373,"line_end":2373,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":84886,"byte_end":84899,"line_start":2383,"line_end":2383,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":85086,"byte_end":85092,"line_start":2393,"line_end":2393,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1336},{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":86338,"byte_end":86349,"line_start":2431,"line_end":2431,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":88989,"byte_end":88995,"line_start":2497,"line_end":2497,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":89129,"byte_end":89136,"line_start":2505,"line_end":2505,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":90476,"byte_end":90483,"line_start":2545,"line_end":2545,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1354}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":90641,"byte_end":90652,"line_start":2553,"line_end":2553,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":90792,"byte_end":90806,"line_start":2561,"line_end":2561,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":96778,"byte_end":96792,"line_start":2753,"line_end":2753,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1372}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":97619,"byte_end":97633,"line_start":2772,"line_end":2772,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1374}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":98345,"byte_end":98355,"line_start":2795,"line_end":2795,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":104359,"byte_end":104369,"line_start":2944,"line_end":2944,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106048,"byte_end":106058,"line_start":2984,"line_end":2984,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1401},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109053,"byte_end":109063,"line_start":3063,"line_end":3063,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":111484,"byte_end":111494,"line_start":3110,"line_end":3110,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":112177,"byte_end":112187,"line_start":3124,"line_end":3124,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":112865,"byte_end":112875,"line_start":3139,"line_end":3139,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":113155,"byte_end":113166,"line_start":3150,"line_end":3150,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":115424,"byte_end":115435,"line_start":3210,"line_end":3210,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":116128,"byte_end":116139,"line_start":3225,"line_end":3225,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":116814,"byte_end":116825,"line_start":3238,"line_end":3238,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1433},{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":117503,"byte_end":117514,"line_start":3253,"line_end":3253,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":117795,"byte_end":117814,"line_start":3264,"line_end":3264,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122303,"byte_end":122322,"line_start":3369,"line_end":3369,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1451}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123879,"byte_end":123899,"line_start":3411,"line_end":3411,"column_start":30,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1460},{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":124066,"byte_end":124086,"line_start":3419,"line_end":3419,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":124195,"byte_end":124215,"line_start":3425,"line_end":3425,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":124458,"byte_end":124463,"line_start":3437,"line_end":3437,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1476},{"krate":0,"index":1477}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":128517,"byte_end":128531,"line_start":3531,"line_end":3531,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":128879,"byte_end":128893,"line_start":3541,"line_end":3541,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":129163,"byte_end":129170,"line_start":3553,"line_end":3553,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":131894,"byte_end":131895,"line_start":3616,"line_end":3616,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":132323,"byte_end":132328,"line_start":3635,"line_end":3635,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":132591,"byte_end":132596,"line_start":3644,"line_end":3644,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1495}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":418,"byte_end":422,"line_start":10,"line_end":10,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":443}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":137827,"byte_end":137834,"line_start":29,"line_end":29,"column_start":15,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":126},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":137909,"byte_end":137916,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":126},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":138064,"byte_end":138071,"line_start":41,"line_end":41,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":146804,"byte_end":146815,"line_start":311,"line_end":311,"column_start":61,"column_end":72},"kind":{"Impl":{"id":3}},"from":{"krate":24,"index":794},"to":{"krate":0,"index":969}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":149468,"byte_end":149478,"line_start":390,"line_end":390,"column_start":56,"column_end":66},"kind":{"Impl":{"id":4}},"from":{"krate":24,"index":1334},"to":{"krate":0,"index":982}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":154155,"byte_end":154165,"line_start":529,"line_end":529,"column_start":60,"column_end":70},"kind":{"Impl":{"id":5}},"from":{"krate":24,"index":1334},"to":{"krate":0,"index":997}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":156626,"byte_end":156645,"line_start":600,"line_end":600,"column_start":56,"column_end":75},"kind":{"Impl":{"id":6}},"from":{"krate":24,"index":5418},"to":{"krate":0,"index":982}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":162958,"byte_end":162965,"line_start":811,"line_end":811,"column_start":25,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":126},"to":{"krate":0,"index":1012}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":216785,"byte_end":216797,"line_start":2352,"line_end":2352,"column_start":6,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":217639,"byte_end":217651,"line_start":2383,"line_end":2383,"column_start":21,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":218062,"byte_end":218078,"line_start":2400,"line_end":2400,"column_start":26,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1545},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":218233,"byte_end":218249,"line_start":2408,"line_end":2408,"column_start":29,"column_end":45},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1545},"to":{"krate":2,"index":3255}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":218495,"byte_end":218512,"line_start":2421,"line_end":2421,"column_start":22,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1550},"to":{"krate":2,"index":3024}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":218537,"byte_end":218554,"line_start":2422,"line_end":2422,"column_start":22,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1550},"to":{"krate":2,"index":3036}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":218598,"byte_end":218615,"line_start":2424,"line_end":2424,"column_start":40,"column_end":57},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1550},"to":{"krate":0,"index":1312}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\backend\\direct.rs","byte_start":218850,"byte_end":218867,"line_start":2434,"line_end":2434,"column_start":15,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1550},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":227561,"byte_end":227572,"line_start":39,"line_end":39,"column_start":6,"column_end":17},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\belt.rs","byte_start":231120,"byte_end":231131,"line_start":143,"line_end":143,"column_start":21,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":490},"to":{"krate":2,"index":9602}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\device.rs","byte_start":233180,"byte_end":233186,"line_start":40,"line_end":40,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1641},"to":{"krate":0,"index":511}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":242456,"byte_end":242466,"line_start":102,"line_end":102,"column_start":32,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1741},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\encoder.rs","byte_start":244147,"byte_end":244166,"line_start":153,"line_end":153,"column_start":32,"column_end":51},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1755},"to":{"krate":0,"index":550}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":246644,"byte_end":246656,"line_start":16,"line_end":16,"column_start":6,"column_end":18},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":247769,"byte_end":247788,"line_start":45,"line_end":45,"column_start":6,"column_end":25},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\indirect.rs","byte_start":248658,"byte_end":248674,"line_start":71,"line_end":71,"column_start":6,"column_end":22},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":223620,"byte_end":223634,"line_start":76,"line_end":76,"column_start":6,"column_end":20},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":664},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\util\\mod.rs","byte_start":225216,"byte_end":225230,"line_start":121,"line_end":121,"column_start":26,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":664},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":5164,"byte_end":5175,"line_start":141,"line_end":141,"column_start":38,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":982},"to":{"krate":0,"index":997}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6052,"byte_end":6057,"line_start":166,"line_end":166,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":9602},"to":{"krate":0,"index":1012}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6060,"byte_end":6064,"line_start":166,"line_end":166,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":1012}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6067,"byte_end":6072,"line_start":166,"line_end":166,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":1012}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":6075,"byte_end":6079,"line_start":166,"line_end":166,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":1012}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":20143,"byte_end":20150,"line_start":564,"line_end":564,"column_start":15,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1636},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":21328,"byte_end":21338,"line_start":601,"line_end":601,"column_start":6,"column_end":16},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":24692,"byte_end":24699,"line_start":716,"line_end":716,"column_start":15,"column_end":22},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1691},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":25183,"byte_end":25190,"line_start":734,"line_end":734,"column_start":15,"column_end":22},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1696},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26054,"byte_end":26069,"line_start":759,"line_end":759,"column_start":15,"column_end":30},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1701},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":26785,"byte_end":26794,"line_start":781,"line_end":781,"column_start":15,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1706},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":27484,"byte_end":27496,"line_start":803,"line_end":803,"column_start":15,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1711},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30013,"byte_end":30027,"line_start":877,"line_end":877,"column_start":15,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1716},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30622,"byte_end":30636,"line_start":897,"line_end":897,"column_start":15,"column_end":29},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1721},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":30779,"byte_end":30793,"line_start":905,"line_end":905,"column_start":6,"column_end":20},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1721},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":31602,"byte_end":31617,"line_start":930,"line_end":930,"column_start":15,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1726},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":31761,"byte_end":31776,"line_start":938,"line_end":938,"column_start":6,"column_end":21},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":32712,"byte_end":32725,"line_start":964,"line_end":964,"column_start":15,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1731},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":33501,"byte_end":33515,"line_start":989,"line_end":989,"column_start":15,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1736},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":35869,"byte_end":35881,"line_start":1059,"line_end":1059,"column_start":15,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1764},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":36291,"byte_end":36299,"line_start":1077,"line_end":1077,"column_start":15,"column_end":23},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1180},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40126,"byte_end":40132,"line_start":1175,"line_end":1175,"column_start":30,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1811},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":40673,"byte_end":40683,"line_start":1192,"line_end":1192,"column_start":30,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1841},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":48674,"byte_end":48691,"line_start":1377,"line_end":1377,"column_start":18,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1929},"to":{"krate":2,"index":3002}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59188,"byte_end":59200,"line_start":1631,"line_end":1631,"column_start":18,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2130},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59740,"byte_end":59752,"line_start":1642,"line_end":1642,"column_start":23,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2130},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":59762,"byte_end":59770,"line_start":1644,"line_end":1644,"column_start":6,"column_end":14},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1632},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":66981,"byte_end":66988,"line_start":1848,"line_end":1848,"column_start":6,"column_end":13},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":71866,"byte_end":71872,"line_start":1973,"line_end":1973,"column_start":6,"column_end":12},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81054,"byte_end":81060,"line_start":2228,"line_end":2228,"column_start":15,"column_end":21},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1641},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81309,"byte_end":81327,"line_start":2240,"line_end":2240,"column_start":18,"column_end":36},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2149},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81482,"byte_end":81500,"line_start":2246,"line_end":2246,"column_start":23,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2149},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81645,"byte_end":81661,"line_start":2252,"line_end":2252,"column_start":18,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2161},"to":{"krate":2,"index":9609}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":81838,"byte_end":81854,"line_start":2258,"line_end":2258,"column_start":23,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2161},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":83900,"byte_end":83910,"line_start":2334,"line_end":2334,"column_start":26,"column_end":36},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2186},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":84033,"byte_end":84046,"line_start":2342,"line_end":2342,"column_start":26,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2193},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":84331,"byte_end":84344,"line_start":2355,"line_end":2355,"column_start":29,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2193},"to":{"krate":2,"index":3255}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":84462,"byte_end":84472,"line_start":2361,"line_end":2361,"column_start":22,"column_end":32},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2186},"to":{"krate":2,"index":2921}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":84567,"byte_end":84580,"line_start":2367,"line_end":2367,"column_start":22,"column_end":35},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2193},"to":{"krate":2,"index":2924}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":84680,"byte_end":84690,"line_start":2373,"line_end":2373,"column_start":15,"column_end":25},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2186},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":84886,"byte_end":84899,"line_start":2383,"line_end":2383,"column_start":15,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2193},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":85086,"byte_end":85092,"line_start":2393,"line_end":2393,"column_start":6,"column_end":12},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":86338,"byte_end":86349,"line_start":2431,"line_end":2431,"column_start":10,"column_end":21},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":88989,"byte_end":88995,"line_start":2497,"line_end":2497,"column_start":15,"column_end":21},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1660},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":89129,"byte_end":89136,"line_start":2505,"line_end":2505,"column_start":6,"column_end":13},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":90476,"byte_end":90483,"line_start":2545,"line_end":2545,"column_start":15,"column_end":22},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1680},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":90641,"byte_end":90652,"line_start":2553,"line_end":2553,"column_start":15,"column_end":26},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1686},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":90792,"byte_end":90806,"line_start":2561,"line_end":2561,"column_start":6,"column_end":20},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":96778,"byte_end":96792,"line_start":2753,"line_end":2753,"column_start":6,"column_end":20},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":97619,"byte_end":97633,"line_start":2772,"line_end":2772,"column_start":6,"column_end":20},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":98345,"byte_end":98355,"line_start":2795,"line_end":2795,"column_start":10,"column_end":20},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":104359,"byte_end":104369,"line_start":2944,"line_end":2944,"column_start":10,"column_end":20},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":106048,"byte_end":106058,"line_start":2984,"line_end":2984,"column_start":10,"column_end":20},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":109053,"byte_end":109063,"line_start":3063,"line_end":3063,"column_start":10,"column_end":20},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":111484,"byte_end":111494,"line_start":3110,"line_end":3110,"column_start":10,"column_end":20},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":112177,"byte_end":112187,"line_start":3124,"line_end":3124,"column_start":10,"column_end":20},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":112865,"byte_end":112875,"line_start":3139,"line_end":3139,"column_start":19,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1741},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":113155,"byte_end":113166,"line_start":3150,"line_end":3150,"column_start":10,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":115424,"byte_end":115435,"line_start":3210,"line_end":3210,"column_start":10,"column_end":21},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":116128,"byte_end":116139,"line_start":3225,"line_end":3225,"column_start":10,"column_end":21},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":116814,"byte_end":116825,"line_start":3238,"line_end":3238,"column_start":10,"column_end":21},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1748},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":117503,"byte_end":117514,"line_start":3253,"line_end":3253,"column_start":19,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1748},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":117795,"byte_end":117814,"line_start":3264,"line_end":3264,"column_start":10,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":122303,"byte_end":122322,"line_start":3369,"line_end":3369,"column_start":10,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":123879,"byte_end":123899,"line_start":3411,"line_end":3411,"column_start":30,"column_end":50},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":3242}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":124066,"byte_end":124086,"line_start":3419,"line_end":3419,"column_start":33,"column_end":53},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":3255}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":124195,"byte_end":124215,"line_start":3425,"line_end":3425,"column_start":19,"column_end":39},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1452},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":124458,"byte_end":124463,"line_start":3437,"line_end":3437,"column_start":6,"column_end":11},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":128517,"byte_end":128531,"line_start":3531,"line_end":3531,"column_start":6,"column_end":20},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":128879,"byte_end":128893,"line_start":3541,"line_end":3541,"column_start":15,"column_end":29},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2123},"to":{"krate":2,"index":3266}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":129163,"byte_end":129170,"line_start":3553,"line_end":3553,"column_start":6,"column_end":13},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":131829,"byte_end":131831,"line_start":3615,"line_end":3615,"column_start":35,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3269},"to":{"krate":0,"index":1489}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":131841,"byte_end":131845,"line_start":3615,"line_end":3615,"column_start":47,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":1489}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":131894,"byte_end":131895,"line_start":3616,"line_end":3616,"column_start":36,"column_end":37},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1491},"to":{"krate":0,"index":1489}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":132323,"byte_end":132328,"line_start":3635,"line_end":3635,"column_start":23,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2201},"to":{"krate":1,"index":2452}},{"span":{"file_name":"C:\\Users\\milla\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\wgpu-0.13.1\\src\\lib.rs","byte_start":132591,"byte_end":132596,"line_start":3644,"line_end":3644,"column_start":18,"column_end":23},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2201},"to":{"krate":2,"index":9609}}]}